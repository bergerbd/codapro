package de.bergerbd.codapro.niusb.driver;

import com.ochafik.lang.jnaerator.runtime.LibraryExtractor;
import com.ochafik.lang.jnaerator.runtime.MangledFunctionMapper;
import com.sun.jna.Callback;
import com.sun.jna.Native;
import com.sun.jna.NativeLibrary;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.ptr.NativeLongByReference;
import com.sun.jna.ptr.PointerByReference;
import com.sun.jna.win32.StdCallLibrary;

import de.bergerbd.codapro.niusb.api.FillMode;

import java.nio.ByteBuffer;
import java.nio.DoubleBuffer;
import java.nio.IntBuffer;

import javax.annotation.Generated;

/**
 * JNA Wrapper for library <b>de.bergerbd.niusb.driver</b><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
@Generated("JNAerator")
public interface DriverLibrary extends StdCallLibrary {
	public static final String JNA_LIBRARY_NAME = LibraryExtractor.getLibraryPath("nicaiu", true, DriverLibrary.class);
	public static final NativeLibrary JNA_NATIVE_LIB = NativeLibrary.getInstance(DriverLibrary.JNA_LIBRARY_NAME, MangledFunctionMapper.DEFAULT_OPTIONS);
	public static final DriverLibrary INSTANCE = (DriverLibrary)Native.loadLibrary(DriverLibrary.JNA_LIBRARY_NAME, DriverLibrary.class, MangledFunctionMapper.DEFAULT_OPTIONS);
	public static final int TRUE = (int)(1);
	public static final int FALSE = (int)(0);
	public static final int NULL = (int)(0);

        /*
	public static final int DAQmx_Buf_Input_BufSize = (int)0x186C;
	public static final int DAQmx_Buf_Input_OnbrdBufSize = (int)0x230A;
	public static final int DAQmx_Buf_Output_BufSize = (int)0x186D;
	public static final int DAQmx_Buf_Output_OnbrdBufSize = (int)0x230B;
	public static final int DAQmx_SelfCal_Supported = (int)0x1860;
	public static final int DAQmx_SelfCal_LastTemp = (int)0x1864;
	public static final int DAQmx_ExtCal_RecommendedInterval = (int)0x1868;
	public static final int DAQmx_ExtCal_LastTemp = (int)0x1867;
	public static final int DAQmx_Cal_UserDefinedInfo = (int)0x1861;
	public static final int DAQmx_Cal_UserDefinedInfo_MaxSize = (int)0x191C;
	public static final int DAQmx_Cal_DevTemp = (int)0x223B;
	public static final int DAQmx_Cal_AccConnectionCount = (int)0x2FEB;
	public static final int DAQmx_Cal_RecommendedAccConnectionCountLimit = (int)0x2FEC;
	public static final int DAQmx_AI_Max = (int)0x17DD;
	public static final int DAQmx_AI_Min = (int)0x17DE;
	public static final int DAQmx_AI_CustomScaleName = (int)0x17E0;
	public static final int DAQmx_AI_MeasType = (int)0x0695;
	public static final int DAQmx_AI_Voltage_Units = (int)0x1094;
	public static final int DAQmx_AI_Voltage_dBRef = (int)0x29B0;
	public static final int DAQmx_AI_Voltage_ACRMS_Units = (int)0x17E2;
	public static final int DAQmx_AI_Temp_Units = (int)0x1033;
	public static final int DAQmx_AI_Thrmcpl_Type = (int)0x1050;
	public static final int DAQmx_AI_Thrmcpl_ScaleType = (int)0x29D0;
	public static final int DAQmx_AI_Thrmcpl_CJCSrc = (int)0x1035;
	public static final int DAQmx_AI_Thrmcpl_CJCVal = (int)0x1036;
	public static final int DAQmx_AI_Thrmcpl_CJCChan = (int)0x1034;
	public static final int DAQmx_AI_RTD_Type = (int)0x1032;
	public static final int DAQmx_AI_RTD_R0 = (int)0x1030;
	public static final int DAQmx_AI_RTD_A = (int)0x1010;
	public static final int DAQmx_AI_RTD_B = (int)0x1011;
	public static final int DAQmx_AI_RTD_C = (int)0x1013;
	public static final int DAQmx_AI_Thrmstr_A = (int)0x18C9;
	public static final int DAQmx_AI_Thrmstr_B = (int)0x18CB;
	public static final int DAQmx_AI_Thrmstr_C = (int)0x18CA;
	public static final int DAQmx_AI_Thrmstr_R1 = (int)0x1061;
	public static final int DAQmx_AI_ForceReadFromChan = (int)0x18F8;
	public static final int DAQmx_AI_Current_Units = (int)0x0701;
	public static final int DAQmx_AI_Current_ACRMS_Units = (int)0x17E3;
	public static final int DAQmx_AI_Strain_Units = (int)0x0981;
	public static final int DAQmx_AI_StrainGage_ForceReadFromChan = (int)0x2FFA;
	public static final int DAQmx_AI_StrainGage_GageFactor = (int)0x0994;
	public static final int DAQmx_AI_StrainGage_PoissonRatio = (int)0x0998;
	public static final int DAQmx_AI_StrainGage_Cfg = (int)0x0982;
	public static final int DAQmx_AI_RosetteStrainGage_RosetteType = (int)0x2FFE;
	public static final int DAQmx_AI_RosetteStrainGage_Orientation = (int)0x2FFC;
	public static final int DAQmx_AI_RosetteStrainGage_StrainChans = (int)0x2FFB;
	public static final int DAQmx_AI_RosetteStrainGage_RosetteMeasType = (int)0x2FFD;
	public static final int DAQmx_AI_Resistance_Units = (int)0x0955;
	public static final int DAQmx_AI_Freq_Units = (int)0x0806;
	public static final int DAQmx_AI_Freq_ThreshVoltage = (int)0x0815;
	public static final int DAQmx_AI_Freq_Hyst = (int)0x0814;
	public static final int DAQmx_AI_LVDT_Units = (int)0x0910;
	public static final int DAQmx_AI_LVDT_Sensitivity = (int)0x0939;
	public static final int DAQmx_AI_LVDT_SensitivityUnits = (int)0x219A;
	public static final int DAQmx_AI_RVDT_Units = (int)0x0877;
	public static final int DAQmx_AI_RVDT_Sensitivity = (int)0x0903;
	public static final int DAQmx_AI_RVDT_SensitivityUnits = (int)0x219B;
	public static final int DAQmx_AI_EddyCurrentProxProbe_Units = (int)0x2AC0;
	public static final int DAQmx_AI_EddyCurrentProxProbe_Sensitivity = (int)0x2ABE;
	public static final int DAQmx_AI_EddyCurrentProxProbe_SensitivityUnits = (int)0x2ABF;
	public static final int DAQmx_AI_SoundPressure_MaxSoundPressureLvl = (int)0x223A;
	public static final int DAQmx_AI_SoundPressure_Units = (int)0x1528;
	public static final int DAQmx_AI_SoundPressure_dBRef = (int)0x29B1;
	public static final int DAQmx_AI_Microphone_Sensitivity = (int)0x1536;
	public static final int DAQmx_AI_Accel_Units = (int)0x0673;
	public static final int DAQmx_AI_Accel_dBRef = (int)0x29B2;
	public static final int DAQmx_AI_Accel_Sensitivity = (int)0x0692;
	public static final int DAQmx_AI_Accel_SensitivityUnits = (int)0x219C;
	public static final int DAQmx_AI_Velocity_Units = (int)0x2FF4;
	public static final int DAQmx_AI_Velocity_IEPESensor_dBRef = (int)0x2FF5;
	public static final int DAQmx_AI_Velocity_IEPESensor_Sensitivity = (int)0x2FF6;
	public static final int DAQmx_AI_Velocity_IEPESensor_SensitivityUnits = (int)0x2FF7;
	public static final int DAQmx_AI_Force_Units = (int)0x2F75;
	public static final int DAQmx_AI_Force_IEPESensor_Sensitivity = (int)0x2F81;
	public static final int DAQmx_AI_Force_IEPESensor_SensitivityUnits = (int)0x2F82;
	public static final int DAQmx_AI_Pressure_Units = (int)0x2F76;
	public static final int DAQmx_AI_Torque_Units = (int)0x2F77;
	public static final int DAQmx_AI_Bridge_Units = (int)0x2F92;
	public static final int DAQmx_AI_Bridge_ElectricalUnits = (int)0x2F87;
	public static final int DAQmx_AI_Bridge_PhysicalUnits = (int)0x2F88;
	public static final int DAQmx_AI_Bridge_ScaleType = (int)0x2F89;
	public static final int DAQmx_AI_Bridge_TwoPointLin_First_ElectricalVal = (int)0x2F8A;
	public static final int DAQmx_AI_Bridge_TwoPointLin_First_PhysicalVal = (int)0x2F8B;
	public static final int DAQmx_AI_Bridge_TwoPointLin_Second_ElectricalVal = (int)0x2F8C;
	public static final int DAQmx_AI_Bridge_TwoPointLin_Second_PhysicalVal = (int)0x2F8D;
	public static final int DAQmx_AI_Bridge_Table_ElectricalVals = (int)0x2F8E;
	public static final int DAQmx_AI_Bridge_Table_PhysicalVals = (int)0x2F8F;
	public static final int DAQmx_AI_Bridge_Poly_ForwardCoeff = (int)0x2F90;
	public static final int DAQmx_AI_Bridge_Poly_ReverseCoeff = (int)0x2F91;
	public static final int DAQmx_AI_Is_TEDS = (int)0x2983;
	public static final int DAQmx_AI_TEDS_Units = (int)0x21E0;
	public static final int DAQmx_AI_Coupling = (int)0x0064;
	public static final int DAQmx_AI_Impedance = (int)0x0062;
	public static final int DAQmx_AI_TermCfg = (int)0x1097;
	public static final int DAQmx_AI_InputSrc = (int)0x2198;
	public static final int DAQmx_AI_ResistanceCfg = (int)0x1881;
	public static final int DAQmx_AI_LeadWireResistance = (int)0x17EE;
	public static final int DAQmx_AI_Bridge_Cfg = (int)0x0087;
	public static final int DAQmx_AI_Bridge_NomResistance = (int)0x17EC;
	public static final int DAQmx_AI_Bridge_InitialVoltage = (int)0x17ED;
	public static final int DAQmx_AI_Bridge_InitialRatio = (int)0x2F86;
	public static final int DAQmx_AI_Bridge_ShuntCal_Enable = (int)0x0094;
	public static final int DAQmx_AI_Bridge_ShuntCal_Select = (int)0x21D5;
	public static final int DAQmx_AI_Bridge_ShuntCal_ShuntCalASrc = (int)0x30CA;
	public static final int DAQmx_AI_Bridge_ShuntCal_GainAdjust = (int)0x193F;
	public static final int DAQmx_AI_Bridge_ShuntCal_ShuntCalAResistance = (int)0x2F78;
	public static final int DAQmx_AI_Bridge_ShuntCal_ShuntCalAActualResistance = (int)0x2F79;
	public static final int DAQmx_AI_Bridge_ShuntCal_ShuntCalBResistance = (int)0x2F7A;
	public static final int DAQmx_AI_Bridge_ShuntCal_ShuntCalBActualResistance = (int)0x2F7B;
	public static final int DAQmx_AI_Bridge_Balance_CoarsePot = (int)0x17F1;
	public static final int DAQmx_AI_Bridge_Balance_FinePot = (int)0x18F4;
	public static final int DAQmx_AI_CurrentShunt_Loc = (int)0x17F2;
	public static final int DAQmx_AI_CurrentShunt_Resistance = (int)0x17F3;
	public static final int DAQmx_AI_Excit_Sense = (int)0x30FD;
	public static final int DAQmx_AI_Excit_Src = (int)0x17F4;
	public static final int DAQmx_AI_Excit_Val = (int)0x17F5;
	public static final int DAQmx_AI_Excit_UseForScaling = (int)0x17FC;
	public static final int DAQmx_AI_Excit_UseMultiplexed = (int)0x2180;
	public static final int DAQmx_AI_Excit_ActualVal = (int)0x1883;
	public static final int DAQmx_AI_Excit_DCorAC = (int)0x17FB;
	public static final int DAQmx_AI_Excit_VoltageOrCurrent = (int)0x17F6;
	public static final int DAQmx_AI_Excit_IdleOutputBehavior = (int)0x30B8;
	public static final int DAQmx_AI_ACExcit_Freq = (int)0x0101;
	public static final int DAQmx_AI_ACExcit_SyncEnable = (int)0x0102;
	public static final int DAQmx_AI_ACExcit_WireMode = (int)0x18CD;
	public static final int DAQmx_AI_OpenThrmcplDetectEnable = (int)0x2F72;
	public static final int DAQmx_AI_Thrmcpl_LeadOffsetVoltage = (int)0x2FB8;
	public static final int DAQmx_AI_Atten = (int)0x1801;
	public static final int DAQmx_AI_ProbeAtten = (int)0x2A88;
	public static final int DAQmx_AI_Lowpass_Enable = (int)0x1802;
	public static final int DAQmx_AI_Lowpass_CutoffFreq = (int)0x1803;
	public static final int DAQmx_AI_Lowpass_SwitchCap_ClkSrc = (int)0x1884;
	public static final int DAQmx_AI_Lowpass_SwitchCap_ExtClkFreq = (int)0x1885;
	public static final int DAQmx_AI_Lowpass_SwitchCap_ExtClkDiv = (int)0x1886;
	public static final int DAQmx_AI_Lowpass_SwitchCap_OutClkDiv = (int)0x1887;
	public static final int DAQmx_AI_DigFltr_Enable = (int)0x30BD;
	public static final int DAQmx_AI_DigFltr_Type = (int)0x30BE;
	public static final int DAQmx_AI_DigFltr_Response = (int)0x30BF;
	public static final int DAQmx_AI_DigFltr_Order = (int)0x30C0;
	public static final int DAQmx_AI_DigFltr_Lowpass_CutoffFreq = (int)0x30C1;
	public static final int DAQmx_AI_DigFltr_Highpass_CutoffFreq = (int)0x30C2;
	public static final int DAQmx_AI_DigFltr_Bandpass_CenterFreq = (int)0x30C3;
	public static final int DAQmx_AI_DigFltr_Bandpass_Width = (int)0x30C4;
	public static final int DAQmx_AI_DigFltr_Notch_CenterFreq = (int)0x30C5;
	public static final int DAQmx_AI_DigFltr_Notch_Width = (int)0x30C6;
	public static final int DAQmx_AI_DigFltr_Coeff = (int)0x30C7;
	public static final int DAQmx_AI_FilterDelay = (int)0x2FED;
	public static final int DAQmx_AI_FilterDelayUnits = (int)0x3071;
	public static final int DAQmx_AI_RemoveFilterDelay = (int)0x2FBD;
	public static final int DAQmx_AI_FilterDelayAdjustment = (int)0x3074;
	public static final int DAQmx_AI_AveragingWinSize = (int)0x2FEE;
	public static final int DAQmx_AI_ResolutionUnits = (int)0x1764;
	public static final int DAQmx_AI_Resolution = (int)0x1765;
	public static final int DAQmx_AI_RawSampSize = (int)0x22DA;
	public static final int DAQmx_AI_RawSampJustification = (int)0x0050;
	public static final int DAQmx_AI_ADCTimingMode = (int)0x29F9;
	public static final int DAQmx_AI_ADCCustomTimingMode = (int)0x2F6B;
	public static final int DAQmx_AI_Dither_Enable = (int)0x0068;
	public static final int DAQmx_AI_ChanCal_HasValidCalInfo = (int)0x2297;
	public static final int DAQmx_AI_ChanCal_EnableCal = (int)0x2298;
	public static final int DAQmx_AI_ChanCal_ApplyCalIfExp = (int)0x2299;
	public static final int DAQmx_AI_ChanCal_ScaleType = (int)0x229C;
	public static final int DAQmx_AI_ChanCal_Table_PreScaledVals = (int)0x229D;
	public static final int DAQmx_AI_ChanCal_Table_ScaledVals = (int)0x229E;
	public static final int DAQmx_AI_ChanCal_Poly_ForwardCoeff = (int)0x229F;
	public static final int DAQmx_AI_ChanCal_Poly_ReverseCoeff = (int)0x22A0;
	public static final int DAQmx_AI_ChanCal_OperatorName = (int)0x22A3;
	public static final int DAQmx_AI_ChanCal_Desc = (int)0x22A4;
	public static final int DAQmx_AI_ChanCal_Verif_RefVals = (int)0x22A1;
	public static final int DAQmx_AI_ChanCal_Verif_AcqVals = (int)0x22A2;
	public static final int DAQmx_AI_Rng_High = (int)0x1815;
	public static final int DAQmx_AI_Rng_Low = (int)0x1816;
	public static final int DAQmx_AI_DCOffset = (int)0x2A89;
	public static final int DAQmx_AI_Gain = (int)0x1818;
	public static final int DAQmx_AI_SampAndHold_Enable = (int)0x181A;
	public static final int DAQmx_AI_AutoZeroMode = (int)0x1760;
	public static final int DAQmx_AI_DataXferMech = (int)0x1821;
	public static final int DAQmx_AI_DataXferReqCond = (int)0x188B;
	public static final int DAQmx_AI_DataXferCustomThreshold = (int)0x230C;
	public static final int DAQmx_AI_UsbXferReqSize = (int)0x2A8E;
	public static final int DAQmx_AI_UsbXferReqCount = (int)0x3000;
	public static final int DAQmx_AI_MemMapEnable = (int)0x188C;
	public static final int DAQmx_AI_RawDataCompressionType = (int)0x22D8;
	public static final int DAQmx_AI_LossyLSBRemoval_CompressedSampSize = (int)0x22D9;
	public static final int DAQmx_AI_DevScalingCoeff = (int)0x1930;
	public static final int DAQmx_AI_EnhancedAliasRejectionEnable = (int)0x2294;
	public static final int DAQmx_AI_OpenChanDetectEnable = (int)0x30FF;
	public static final int DAQmx_AO_Max = (int)0x1186;
	public static final int DAQmx_AO_Min = (int)0x1187;
	public static final int DAQmx_AO_CustomScaleName = (int)0x1188;
	public static final int DAQmx_AO_OutputType = (int)0x1108;
	public static final int DAQmx_AO_Voltage_Units = (int)0x1184;
	public static final int DAQmx_AO_Voltage_CurrentLimit = (int)0x2A1D;
	public static final int DAQmx_AO_Current_Units = (int)0x1109;
	public static final int DAQmx_AO_FuncGen_Type = (int)0x2A18;
	public static final int DAQmx_AO_FuncGen_Freq = (int)0x2A19;
	public static final int DAQmx_AO_FuncGen_Amplitude = (int)0x2A1A;
	public static final int DAQmx_AO_FuncGen_Offset = (int)0x2A1B;
	public static final int DAQmx_AO_FuncGen_Square_DutyCycle = (int)0x2A1C;
	public static final int DAQmx_AO_FuncGen_ModulationType = (int)0x2A22;
	public static final int DAQmx_AO_FuncGen_FMDeviation = (int)0x2A23;
	public static final int DAQmx_AO_OutputImpedance = (int)0x1490;
	public static final int DAQmx_AO_LoadImpedance = (int)0x0121;
	public static final int DAQmx_AO_IdleOutputBehavior = (int)0x2240;
	public static final int DAQmx_AO_TermCfg = (int)0x188E;
	public static final int DAQmx_AO_ResolutionUnits = (int)0x182B;
	public static final int DAQmx_AO_Resolution = (int)0x182C;
	public static final int DAQmx_AO_DAC_Rng_High = (int)0x182E;
	public static final int DAQmx_AO_DAC_Rng_Low = (int)0x182D;
	public static final int DAQmx_AO_DAC_Ref_ConnToGnd = (int)0x0130;
	public static final int DAQmx_AO_DAC_Ref_AllowConnToGnd = (int)0x1830;
	public static final int DAQmx_AO_DAC_Ref_Src = (int)0x0132;
	public static final int DAQmx_AO_DAC_Ref_ExtSrc = (int)0x2252;
	public static final int DAQmx_AO_DAC_Ref_Val = (int)0x1832;
	public static final int DAQmx_AO_DAC_Offset_Src = (int)0x2253;
	public static final int DAQmx_AO_DAC_Offset_ExtSrc = (int)0x2254;
	public static final int DAQmx_AO_DAC_Offset_Val = (int)0x2255;
	public static final int DAQmx_AO_ReglitchEnable = (int)0x0133;
	public static final int DAQmx_AO_FilterDelay = (int)0x3075;
	public static final int DAQmx_AO_FilterDelayUnits = (int)0x3076;
	public static final int DAQmx_AO_FilterDelayAdjustment = (int)0x3072;
	public static final int DAQmx_AO_Gain = (int)0x0118;
	public static final int DAQmx_AO_UseOnlyOnBrdMem = (int)0x183A;
	public static final int DAQmx_AO_DataXferMech = (int)0x0134;
	public static final int DAQmx_AO_DataXferReqCond = (int)0x183C;
	public static final int DAQmx_AO_UsbXferReqSize = (int)0x2A8F;
	public static final int DAQmx_AO_UsbXferReqCount = (int)0x3001;
	public static final int DAQmx_AO_MemMapEnable = (int)0x188F;
	public static final int DAQmx_AO_DevScalingCoeff = (int)0x1931;
	public static final int DAQmx_AO_EnhancedImageRejectionEnable = (int)0x2241;
	public static final int DAQmx_DI_InvertLines = (int)0x0793;
	public static final int DAQmx_DI_NumLines = (int)0x2178;
	public static final int DAQmx_DI_DigFltr_Enable = (int)0x21D6;
	public static final int DAQmx_DI_DigFltr_MinPulseWidth = (int)0x21D7;
	public static final int DAQmx_DI_DigFltr_EnableBusMode = (int)0x2EFE;
	public static final int DAQmx_DI_DigFltr_TimebaseSrc = (int)0x2ED4;
	public static final int DAQmx_DI_DigFltr_TimebaseRate = (int)0x2ED5;
	public static final int DAQmx_DI_DigSync_Enable = (int)0x2ED6;
	public static final int DAQmx_DI_Tristate = (int)0x1890;
	public static final int DAQmx_DI_LogicFamily = (int)0x296D;
	public static final int DAQmx_DI_DataXferMech = (int)0x2263;
	public static final int DAQmx_DI_DataXferReqCond = (int)0x2264;
	public static final int DAQmx_DI_UsbXferReqSize = (int)0x2A90;
	public static final int DAQmx_DI_UsbXferReqCount = (int)0x3002;
	public static final int DAQmx_DI_MemMapEnable = (int)0x296A;
	public static final int DAQmx_DI_AcquireOn = (int)0x2966;
	public static final int DAQmx_DO_OutputDriveType = (int)0x1137;
	public static final int DAQmx_DO_InvertLines = (int)0x1133;
	public static final int DAQmx_DO_NumLines = (int)0x2179;
	public static final int DAQmx_DO_Tristate = (int)0x18F3;
	public static final int DAQmx_DO_LineStates_StartState = (int)0x2972;
	public static final int DAQmx_DO_LineStates_PausedState = (int)0x2967;
	public static final int DAQmx_DO_LineStates_DoneState = (int)0x2968;
	public static final int DAQmx_DO_LogicFamily = (int)0x296E;
	public static final int DAQmx_DO_Overcurrent_Limit = (int)0x2A85;
	public static final int DAQmx_DO_Overcurrent_AutoReenable = (int)0x2A86;
	public static final int DAQmx_DO_Overcurrent_ReenablePeriod = (int)0x2A87;
	public static final int DAQmx_DO_UseOnlyOnBrdMem = (int)0x2265;
	public static final int DAQmx_DO_DataXferMech = (int)0x2266;
	public static final int DAQmx_DO_DataXferReqCond = (int)0x2267;
	public static final int DAQmx_DO_UsbXferReqSize = (int)0x2A91;
	public static final int DAQmx_DO_UsbXferReqCount = (int)0x3003;
	public static final int DAQmx_DO_MemMapEnable = (int)0x296B;
	public static final int DAQmx_DO_GenerateOn = (int)0x2969;
	public static final int DAQmx_CI_Max = (int)0x189C;
	public static final int DAQmx_CI_Min = (int)0x189D;
	public static final int DAQmx_CI_CustomScaleName = (int)0x189E;
	public static final int DAQmx_CI_MeasType = (int)0x18A0;
	public static final int DAQmx_CI_Freq_Units = (int)0x18A1;
	public static final int DAQmx_CI_Freq_Term = (int)0x18A2;
	public static final int DAQmx_CI_Freq_TermCfg = (int)0x3097;
	public static final int DAQmx_CI_Freq_LogicLvlBehavior = (int)0x3098;
	public static final int DAQmx_CI_Freq_DigFltr_Enable = (int)0x21E7;
	public static final int DAQmx_CI_Freq_DigFltr_MinPulseWidth = (int)0x21E8;
	public static final int DAQmx_CI_Freq_DigFltr_TimebaseSrc = (int)0x21E9;
	public static final int DAQmx_CI_Freq_DigFltr_TimebaseRate = (int)0x21EA;
	public static final int DAQmx_CI_Freq_DigSync_Enable = (int)0x21EB;
	public static final int DAQmx_CI_Freq_StartingEdge = (int)0x0799;
	public static final int DAQmx_CI_Freq_MeasMeth = (int)0x0144;
	public static final int DAQmx_CI_Freq_EnableAveraging = (int)0x2ED0;
	public static final int DAQmx_CI_Freq_MeasTime = (int)0x0145;
	public static final int DAQmx_CI_Freq_Div = (int)0x0147;
	public static final int DAQmx_CI_Period_Units = (int)0x18A3;
	public static final int DAQmx_CI_Period_Term = (int)0x18A4;
	public static final int DAQmx_CI_Period_TermCfg = (int)0x3099;
	public static final int DAQmx_CI_Period_LogicLvlBehavior = (int)0x309A;
	public static final int DAQmx_CI_Period_DigFltr_Enable = (int)0x21EC;
	public static final int DAQmx_CI_Period_DigFltr_MinPulseWidth = (int)0x21ED;
	public static final int DAQmx_CI_Period_DigFltr_TimebaseSrc = (int)0x21EE;
	public static final int DAQmx_CI_Period_DigFltr_TimebaseRate = (int)0x21EF;
	public static final int DAQmx_CI_Period_DigSync_Enable = (int)0x21F0;
	public static final int DAQmx_CI_Period_StartingEdge = (int)0x0852;
	public static final int DAQmx_CI_Period_MeasMeth = (int)0x192C;
	public static final int DAQmx_CI_Period_EnableAveraging = (int)0x2ED1;
	public static final int DAQmx_CI_Period_MeasTime = (int)0x192D;
	public static final int DAQmx_CI_Period_Div = (int)0x192E;
	public static final int DAQmx_CI_CountEdges_Term = (int)0x18C7;
	public static final int DAQmx_CI_CountEdges_TermCfg = (int)0x309B;
	public static final int DAQmx_CI_CountEdges_LogicLvlBehavior = (int)0x309C;
	public static final int DAQmx_CI_CountEdges_DigFltr_Enable = (int)0x21F6;
	public static final int DAQmx_CI_CountEdges_DigFltr_MinPulseWidth = (int)0x21F7;
	public static final int DAQmx_CI_CountEdges_DigFltr_TimebaseSrc = (int)0x21F8;
	public static final int DAQmx_CI_CountEdges_DigFltr_TimebaseRate = (int)0x21F9;
	public static final int DAQmx_CI_CountEdges_DigSync_Enable = (int)0x21FA;
	public static final int DAQmx_CI_CountEdges_Dir = (int)0x0696;
	public static final int DAQmx_CI_CountEdges_DirTerm = (int)0x21E1;
	public static final int DAQmx_CI_CountEdges_CountDir_TermCfg = (int)0x309D;
	public static final int DAQmx_CI_CountEdges_CountDir_LogicLvlBehavior = (int)0x309E;
	public static final int DAQmx_CI_CountEdges_CountDir_DigFltr_Enable = (int)0x21F1;
	public static final int DAQmx_CI_CountEdges_CountDir_DigFltr_MinPulseWidth = (int)0x21F2;
	public static final int DAQmx_CI_CountEdges_CountDir_DigFltr_TimebaseSrc = (int)0x21F3;
	public static final int DAQmx_CI_CountEdges_CountDir_DigFltr_TimebaseRate = (int)0x21F4;
	public static final int DAQmx_CI_CountEdges_CountDir_DigSync_Enable = (int)0x21F5;
	public static final int DAQmx_CI_CountEdges_InitialCnt = (int)0x0698;
	public static final int DAQmx_CI_CountEdges_ActiveEdge = (int)0x0697;
	public static final int DAQmx_CI_CountEdges_CountReset_Enable = (int)0x2FAF;
	public static final int DAQmx_CI_CountEdges_CountReset_ResetCount = (int)0x2FB0;
	public static final int DAQmx_CI_CountEdges_CountReset_Term = (int)0x2FB1;
	public static final int DAQmx_CI_CountEdges_CountReset_TermCfg = (int)0x309F;
	public static final int DAQmx_CI_CountEdges_CountReset_LogicLvlBehavior = (int)0x30A0;
	public static final int DAQmx_CI_CountEdges_CountReset_DigFltr_Enable = (int)0x2FB3;
	public static final int DAQmx_CI_CountEdges_CountReset_DigFltr_MinPulseWidth = (int)0x2FB4;
	public static final int DAQmx_CI_CountEdges_CountReset_DigFltr_TimebaseSrc = (int)0x2FB5;
	public static final int DAQmx_CI_CountEdges_CountReset_DigFltr_TimebaseRate = (int)0x2FB6;
	public static final int DAQmx_CI_CountEdges_CountReset_DigSync_Enable = (int)0x2FB7;
	public static final int DAQmx_CI_CountEdges_CountReset_ActiveEdge = (int)0x2FB2;
	public static final int DAQmx_CI_CountEdges_Gate_Enable = (int)0x30ED;
	public static final int DAQmx_CI_CountEdges_Gate_Term = (int)0x30EE;
	public static final int DAQmx_CI_CountEdges_Gate_TermCfg = (int)0x30EF;
	public static final int DAQmx_CI_CountEdges_Gate_LogicLvlBehavior = (int)0x30F0;
	public static final int DAQmx_CI_CountEdges_Gate_DigFltrEnable = (int)0x30F1;
	public static final int DAQmx_CI_CountEdges_Gate_DigFltrMinPulseWidth = (int)0x30F2;
	public static final int DAQmx_CI_CountEdges_Gate_DigFltrTimebaseSrc = (int)0x30F3;
	public static final int DAQmx_CI_CountEdges_Gate_DigFltrTimebaseRate = (int)0x30F4;
	public static final int DAQmx_CI_CountEdges_GateWhen = (int)0x30F5;
	public static final int DAQmx_CI_DutyCycle_Term = (int)0x308D;
	public static final int DAQmx_CI_DutyCycle_TermCfg = (int)0x30A1;
	public static final int DAQmx_CI_DutyCycle_LogicLvlBehavior = (int)0x30A2;
	public static final int DAQmx_CI_DutyCycle_DigFltr_Enable = (int)0x308E;
	public static final int DAQmx_CI_DutyCycle_DigFltr_MinPulseWidth = (int)0x308F;
	public static final int DAQmx_CI_DutyCycle_DigFltr_TimebaseSrc = (int)0x3090;
	public static final int DAQmx_CI_DutyCycle_DigFltr_TimebaseRate = (int)0x3091;
	public static final int DAQmx_CI_DutyCycle_StartingEdge = (int)0x3092;
	public static final int DAQmx_CI_AngEncoder_Units = (int)0x18A6;
	public static final int DAQmx_CI_AngEncoder_PulsesPerRev = (int)0x0875;
	public static final int DAQmx_CI_AngEncoder_InitialAngle = (int)0x0881;
	public static final int DAQmx_CI_LinEncoder_Units = (int)0x18A9;
	public static final int DAQmx_CI_LinEncoder_DistPerPulse = (int)0x0911;
	public static final int DAQmx_CI_LinEncoder_InitialPos = (int)0x0915;
	public static final int DAQmx_CI_Encoder_DecodingType = (int)0x21E6;
	public static final int DAQmx_CI_Encoder_AInputTerm = (int)0x219D;
	public static final int DAQmx_CI_Encoder_AInputTermCfg = (int)0x30A3;
	public static final int DAQmx_CI_Encoder_AInputLogicLvlBehavior = (int)0x30A4;
	public static final int DAQmx_CI_Encoder_AInput_DigFltr_Enable = (int)0x21FB;
	public static final int DAQmx_CI_Encoder_AInput_DigFltr_MinPulseWidth = (int)0x21FC;
	public static final int DAQmx_CI_Encoder_AInput_DigFltr_TimebaseSrc = (int)0x21FD;
	public static final int DAQmx_CI_Encoder_AInput_DigFltr_TimebaseRate = (int)0x21FE;
	public static final int DAQmx_CI_Encoder_AInput_DigSync_Enable = (int)0x21FF;
	public static final int DAQmx_CI_Encoder_BInputTerm = (int)0x219E;
	public static final int DAQmx_CI_Encoder_BInputTermCfg = (int)0x30A5;
	public static final int DAQmx_CI_Encoder_BInputLogicLvlBehavior = (int)0x30A6;
	public static final int DAQmx_CI_Encoder_BInput_DigFltr_Enable = (int)0x2200;
	public static final int DAQmx_CI_Encoder_BInput_DigFltr_MinPulseWidth = (int)0x2201;
	public static final int DAQmx_CI_Encoder_BInput_DigFltr_TimebaseSrc = (int)0x2202;
	public static final int DAQmx_CI_Encoder_BInput_DigFltr_TimebaseRate = (int)0x2203;
	public static final int DAQmx_CI_Encoder_BInput_DigSync_Enable = (int)0x2204;
	public static final int DAQmx_CI_Encoder_ZInputTerm = (int)0x219F;
	public static final int DAQmx_CI_Encoder_ZInputTermCfg = (int)0x30A7;
	public static final int DAQmx_CI_Encoder_ZInputLogicLvlBehavior = (int)0x30A8;
	public static final int DAQmx_CI_Encoder_ZInput_DigFltr_Enable = (int)0x2205;
	public static final int DAQmx_CI_Encoder_ZInput_DigFltr_MinPulseWidth = (int)0x2206;
	public static final int DAQmx_CI_Encoder_ZInput_DigFltr_TimebaseSrc = (int)0x2207;
	public static final int DAQmx_CI_Encoder_ZInput_DigFltr_TimebaseRate = (int)0x2208;
	public static final int DAQmx_CI_Encoder_ZInput_DigSync_Enable = (int)0x2209;
	public static final int DAQmx_CI_Encoder_ZIndexEnable = (int)0x0890;
	public static final int DAQmx_CI_Encoder_ZIndexVal = (int)0x0888;
	public static final int DAQmx_CI_Encoder_ZIndexPhase = (int)0x0889;
	public static final int DAQmx_CI_PulseWidth_Units = (int)0x0823;
	public static final int DAQmx_CI_PulseWidth_Term = (int)0x18AA;
	public static final int DAQmx_CI_PulseWidth_TermCfg = (int)0x30A9;
	public static final int DAQmx_CI_PulseWidth_LogicLvlBehavior = (int)0x30AA;
	public static final int DAQmx_CI_PulseWidth_DigFltr_Enable = (int)0x220A;
	public static final int DAQmx_CI_PulseWidth_DigFltr_MinPulseWidth = (int)0x220B;
	public static final int DAQmx_CI_PulseWidth_DigFltr_TimebaseSrc = (int)0x220C;
	public static final int DAQmx_CI_PulseWidth_DigFltr_TimebaseRate = (int)0x220D;
	public static final int DAQmx_CI_PulseWidth_DigSync_Enable = (int)0x220E;
	public static final int DAQmx_CI_PulseWidth_StartingEdge = (int)0x0825;
	public static final int DAQmx_CI_Timestamp_Units = (int)0x22B3;
	public static final int DAQmx_CI_Timestamp_InitialSeconds = (int)0x22B4;
	public static final int DAQmx_CI_GPS_SyncMethod = (int)0x1092;
	public static final int DAQmx_CI_GPS_SyncSrc = (int)0x1093;
	public static final int DAQmx_CI_Velocity_AngEncoder_Units = (int)0x30D8;
	public static final int DAQmx_CI_Velocity_AngEncoder_PulsesPerRev = (int)0x30D9;
	public static final int DAQmx_CI_Velocity_LinEncoder_Units = (int)0x30DA;
	public static final int DAQmx_CI_Velocity_LinEncoder_DistPerPulse = (int)0x30DB;
	public static final int DAQmx_CI_Velocity_Encoder_DecodingType = (int)0x30DC;
	public static final int DAQmx_CI_Velocity_Encoder_AInputTerm = (int)0x30DD;
	public static final int DAQmx_CI_Velocity_Encoder_AInputTermCfg = (int)0x30DE;
	public static final int DAQmx_CI_Velocity_Encoder_AInputLogicLvlBehavior = (int)0x30DF;
	public static final int DAQmx_CI_Velocity_Encoder_AInputDigFltr_Enable = (int)0x30E0;
	public static final int DAQmx_CI_Velocity_Encoder_AInputDigFltr_MinPulseWidth = (int)0x30E1;
	public static final int DAQmx_CI_Velocity_Encoder_AInputDigFltr_TimebaseSrc = (int)0x30E2;
	public static final int DAQmx_CI_Velocity_Encoder_AInputDigFltr_TimebaseRate = (int)0x30E3;
	public static final int DAQmx_CI_Velocity_Encoder_BInputTerm = (int)0x30E4;
	public static final int DAQmx_CI_Velocity_Encoder_BInputTermCfg = (int)0x30E5;
	public static final int DAQmx_CI_Velocity_Encoder_BInputLogicLvlBehavior = (int)0x30E6;
	public static final int DAQmx_CI_Velocity_Encoder_BInputDigFltr_Enable = (int)0x30E7;
	public static final int DAQmx_CI_Velocity_Encoder_BInputDigFltr_MinPulseWidth = (int)0x30E8;
	public static final int DAQmx_CI_Velocity_Encoder_BInputDigFltr_TimebaseSrc = (int)0x30E9;
	public static final int DAQmx_CI_Velocity_Encoder_BInputDigFltr_TimebaseRate = (int)0x30EA;
	public static final int DAQmx_CI_Velocity_MeasTime = (int)0x30EB;
	public static final int DAQmx_CI_Velocity_Div = (int)0x30EC;
	public static final int DAQmx_CI_TwoEdgeSep_Units = (int)0x18AC;
	public static final int DAQmx_CI_TwoEdgeSep_FirstTerm = (int)0x18AD;
	public static final int DAQmx_CI_TwoEdgeSep_FirstTermCfg = (int)0x30AB;
	public static final int DAQmx_CI_TwoEdgeSep_FirstLogicLvlBehavior = (int)0x30AC;
	public static final int DAQmx_CI_TwoEdgeSep_First_DigFltr_Enable = (int)0x220F;
	public static final int DAQmx_CI_TwoEdgeSep_First_DigFltr_MinPulseWidth = (int)0x2210;
	public static final int DAQmx_CI_TwoEdgeSep_First_DigFltr_TimebaseSrc = (int)0x2211;
	public static final int DAQmx_CI_TwoEdgeSep_First_DigFltr_TimebaseRate = (int)0x2212;
	public static final int DAQmx_CI_TwoEdgeSep_First_DigSync_Enable = (int)0x2213;
	public static final int DAQmx_CI_TwoEdgeSep_FirstEdge = (int)0x0833;
	public static final int DAQmx_CI_TwoEdgeSep_SecondTerm = (int)0x18AE;
	public static final int DAQmx_CI_TwoEdgeSep_SecondTermCfg = (int)0x30AD;
	public static final int DAQmx_CI_TwoEdgeSep_SecondLogicLvlBehavior = (int)0x30AE;
	public static final int DAQmx_CI_TwoEdgeSep_Second_DigFltr_Enable = (int)0x2214;
	public static final int DAQmx_CI_TwoEdgeSep_Second_DigFltr_MinPulseWidth = (int)0x2215;
	public static final int DAQmx_CI_TwoEdgeSep_Second_DigFltr_TimebaseSrc = (int)0x2216;
	public static final int DAQmx_CI_TwoEdgeSep_Second_DigFltr_TimebaseRate = (int)0x2217;
	public static final int DAQmx_CI_TwoEdgeSep_Second_DigSync_Enable = (int)0x2218;
	public static final int DAQmx_CI_TwoEdgeSep_SecondEdge = (int)0x0834;
	public static final int DAQmx_CI_SemiPeriod_Units = (int)0x18AF;
	public static final int DAQmx_CI_SemiPeriod_Term = (int)0x18B0;
	public static final int DAQmx_CI_SemiPeriod_TermCfg = (int)0x30AF;
	public static final int DAQmx_CI_SemiPeriod_LogicLvlBehavior = (int)0x30B0;
	public static final int DAQmx_CI_SemiPeriod_DigFltr_Enable = (int)0x2219;
	public static final int DAQmx_CI_SemiPeriod_DigFltr_MinPulseWidth = (int)0x221A;
	public static final int DAQmx_CI_SemiPeriod_DigFltr_TimebaseSrc = (int)0x221B;
	public static final int DAQmx_CI_SemiPeriod_DigFltr_TimebaseRate = (int)0x221C;
	public static final int DAQmx_CI_SemiPeriod_DigSync_Enable = (int)0x221D;
	public static final int DAQmx_CI_SemiPeriod_StartingEdge = (int)0x22FE;
	public static final int DAQmx_CI_Pulse_Freq_Units = (int)0x2F0B;
	public static final int DAQmx_CI_Pulse_Freq_Term = (int)0x2F04;
	public static final int DAQmx_CI_Pulse_Freq_TermCfg = (int)0x30B1;
	public static final int DAQmx_CI_Pulse_Freq_LogicLvlBehavior = (int)0x30B2;
	public static final int DAQmx_CI_Pulse_Freq_DigFltr_Enable = (int)0x2F06;
	public static final int DAQmx_CI_Pulse_Freq_DigFltr_MinPulseWidth = (int)0x2F07;
	public static final int DAQmx_CI_Pulse_Freq_DigFltr_TimebaseSrc = (int)0x2F08;
	public static final int DAQmx_CI_Pulse_Freq_DigFltr_TimebaseRate = (int)0x2F09;
	public static final int DAQmx_CI_Pulse_Freq_DigSync_Enable = (int)0x2F0A;
	public static final int DAQmx_CI_Pulse_Freq_Start_Edge = (int)0x2F05;
	public static final int DAQmx_CI_Pulse_Time_Units = (int)0x2F13;
	public static final int DAQmx_CI_Pulse_Time_Term = (int)0x2F0C;
	public static final int DAQmx_CI_Pulse_Time_TermCfg = (int)0x30B3;
	public static final int DAQmx_CI_Pulse_Time_LogicLvlBehavior = (int)0x30B4;
	public static final int DAQmx_CI_Pulse_Time_DigFltr_Enable = (int)0x2F0E;
	public static final int DAQmx_CI_Pulse_Time_DigFltr_MinPulseWidth = (int)0x2F0F;
	public static final int DAQmx_CI_Pulse_Time_DigFltr_TimebaseSrc = (int)0x2F10;
	public static final int DAQmx_CI_Pulse_Time_DigFltr_TimebaseRate = (int)0x2F11;
	public static final int DAQmx_CI_Pulse_Time_DigSync_Enable = (int)0x2F12;
	public static final int DAQmx_CI_Pulse_Time_StartEdge = (int)0x2F0D;
	public static final int DAQmx_CI_Pulse_Ticks_Term = (int)0x2F14;
	public static final int DAQmx_CI_Pulse_Ticks_TermCfg = (int)0x30B5;
	public static final int DAQmx_CI_Pulse_Ticks_LogicLvlBehavior = (int)0x30B6;
	public static final int DAQmx_CI_Pulse_Ticks_DigFltr_Enable = (int)0x2F16;
	public static final int DAQmx_CI_Pulse_Ticks_DigFltr_MinPulseWidth = (int)0x2F17;
	public static final int DAQmx_CI_Pulse_Ticks_DigFltr_TimebaseSrc = (int)0x2F18;
	public static final int DAQmx_CI_Pulse_Ticks_DigFltr_TimebaseRate = (int)0x2F19;
	public static final int DAQmx_CI_Pulse_Ticks_DigSync_Enable = (int)0x2F1A;
	public static final int DAQmx_CI_Pulse_Ticks_StartEdge = (int)0x2F15;
	public static final int DAQmx_CI_CtrTimebaseSrc = (int)0x0143;
	public static final int DAQmx_CI_CtrTimebaseRate = (int)0x18B2;
	public static final int DAQmx_CI_CtrTimebaseActiveEdge = (int)0x0142;
	public static final int DAQmx_CI_CtrTimebase_DigFltr_Enable = (int)0x2271;
	public static final int DAQmx_CI_CtrTimebase_DigFltr_MinPulseWidth = (int)0x2272;
	public static final int DAQmx_CI_CtrTimebase_DigFltr_TimebaseSrc = (int)0x2273;
	public static final int DAQmx_CI_CtrTimebase_DigFltr_TimebaseRate = (int)0x2274;
	public static final int DAQmx_CI_CtrTimebase_DigSync_Enable = (int)0x2275;
	public static final int DAQmx_CI_ThreshVoltage = (int)0x30B7;
	public static final int DAQmx_CI_Count = (int)0x0148;
	public static final int DAQmx_CI_OutputState = (int)0x0149;
	public static final int DAQmx_CI_TCReached = (int)0x0150;
	public static final int DAQmx_CI_CtrTimebaseMasterTimebaseDiv = (int)0x18B3;
	public static final int DAQmx_CI_SampClkOverrunBehavior = (int)0x3093;
	public static final int DAQmx_CI_SampClkOverrunSentinelVal = (int)0x3094;
	public static final int DAQmx_CI_DataXferMech = (int)0x0200;
	public static final int DAQmx_CI_DataXferReqCond = (int)0x2EFB;
	public static final int DAQmx_CI_UsbXferReqSize = (int)0x2A92;
	public static final int DAQmx_CI_UsbXferReqCount = (int)0x3004;
	public static final int DAQmx_CI_MemMapEnable = (int)0x2ED2;
	public static final int DAQmx_CI_NumPossiblyInvalidSamps = (int)0x193C;
	public static final int DAQmx_CI_DupCountPrevent = (int)0x21AC;
	public static final int DAQmx_CI_Prescaler = (int)0x2239;
	public static final int DAQmx_CI_MaxMeasPeriod = (int)0x3095;
	public static final int DAQmx_CO_OutputType = (int)0x18B5;
	public static final int DAQmx_CO_Pulse_IdleState = (int)0x1170;
	public static final int DAQmx_CO_Pulse_Term = (int)0x18E1;
	public static final int DAQmx_CO_Pulse_Time_Units = (int)0x18D6;
	public static final int DAQmx_CO_Pulse_HighTime = (int)0x18BA;
	public static final int DAQmx_CO_Pulse_LowTime = (int)0x18BB;
	public static final int DAQmx_CO_Pulse_Time_InitialDelay = (int)0x18BC;
	public static final int DAQmx_CO_Pulse_DutyCyc = (int)0x1176;
	public static final int DAQmx_CO_Pulse_Freq_Units = (int)0x18D5;
	public static final int DAQmx_CO_Pulse_Freq = (int)0x1178;
	public static final int DAQmx_CO_Pulse_Freq_InitialDelay = (int)0x0299;
	public static final int DAQmx_CO_Pulse_HighTicks = (int)0x1169;
	public static final int DAQmx_CO_Pulse_LowTicks = (int)0x1171;
	public static final int DAQmx_CO_Pulse_Ticks_InitialDelay = (int)0x0298;
	public static final int DAQmx_CO_CtrTimebaseSrc = (int)0x0339;
	public static final int DAQmx_CO_CtrTimebaseRate = (int)0x18C2;
	public static final int DAQmx_CO_CtrTimebaseActiveEdge = (int)0x0341;
	public static final int DAQmx_CO_CtrTimebase_DigFltr_Enable = (int)0x2276;
	public static final int DAQmx_CO_CtrTimebase_DigFltr_MinPulseWidth = (int)0x2277;
	public static final int DAQmx_CO_CtrTimebase_DigFltr_TimebaseSrc = (int)0x2278;
	public static final int DAQmx_CO_CtrTimebase_DigFltr_TimebaseRate = (int)0x2279;
	public static final int DAQmx_CO_CtrTimebase_DigSync_Enable = (int)0x227A;
	public static final int DAQmx_CO_Count = (int)0x0293;
	public static final int DAQmx_CO_OutputState = (int)0x0294;
	public static final int DAQmx_CO_AutoIncrCnt = (int)0x0295;
	public static final int DAQmx_CO_CtrTimebaseMasterTimebaseDiv = (int)0x18C3;
	public static final int DAQmx_CO_PulseDone = (int)0x190E;
	public static final int DAQmx_CO_EnableInitialDelayOnRetrigger = (int)0x2EC9;
	public static final int DAQmx_CO_ConstrainedGenMode = (int)0x29F2;
	public static final int DAQmx_CO_UseOnlyOnBrdMem = (int)0x2ECB;
	public static final int DAQmx_CO_DataXferMech = (int)0x2ECC;
	public static final int DAQmx_CO_DataXferReqCond = (int)0x2ECD;
	public static final int DAQmx_CO_UsbXferReqSize = (int)0x2A93;
	public static final int DAQmx_CO_UsbXferReqCount = (int)0x3005;
	public static final int DAQmx_CO_MemMapEnable = (int)0x2ED3;
	public static final int DAQmx_CO_Prescaler = (int)0x226D;
	public static final int DAQmx_CO_RdyForNewVal = (int)0x22FF;
	public static final int DAQmx_ChanType = (int)0x187F;
	public static final int DAQmx_PhysicalChanName = (int)0x18F5;
	public static final int DAQmx_ChanDescr = (int)0x1926;
	public static final int DAQmx_ChanIsGlobal = (int)0x2304;
	public static final int DAQmx_Exported_AIConvClk_OutputTerm = (int)0x1687;
	public static final int DAQmx_Exported_AIConvClk_Pulse_Polarity = (int)0x1688;
	public static final int DAQmx_Exported_10MHzRefClk_OutputTerm = (int)0x226E;
	public static final int DAQmx_Exported_20MHzTimebase_OutputTerm = (int)0x1657;
	public static final int DAQmx_Exported_SampClk_OutputBehavior = (int)0x186B;
	public static final int DAQmx_Exported_SampClk_OutputTerm = (int)0x1663;
	public static final int DAQmx_Exported_SampClk_DelayOffset = (int)0x21C4;
	public static final int DAQmx_Exported_SampClk_Pulse_Polarity = (int)0x1664;
	public static final int DAQmx_Exported_SampClkTimebase_OutputTerm = (int)0x18F9;
	public static final int DAQmx_Exported_DividedSampClkTimebase_OutputTerm = (int)0x21A1;
	public static final int DAQmx_Exported_AdvTrig_OutputTerm = (int)0x1645;
	public static final int DAQmx_Exported_AdvTrig_Pulse_Polarity = (int)0x1646;
	public static final int DAQmx_Exported_AdvTrig_Pulse_WidthUnits = (int)0x1647;
	public static final int DAQmx_Exported_AdvTrig_Pulse_Width = (int)0x1648;
	public static final int DAQmx_Exported_PauseTrig_OutputTerm = (int)0x1615;
	public static final int DAQmx_Exported_PauseTrig_Lvl_ActiveLvl = (int)0x1616;
	public static final int DAQmx_Exported_RefTrig_OutputTerm = (int)0x0590;
	public static final int DAQmx_Exported_RefTrig_Pulse_Polarity = (int)0x0591;
	public static final int DAQmx_Exported_StartTrig_OutputTerm = (int)0x0584;
	public static final int DAQmx_Exported_StartTrig_Pulse_Polarity = (int)0x0585;
	public static final int DAQmx_Exported_AdvCmpltEvent_OutputTerm = (int)0x1651;
	public static final int DAQmx_Exported_AdvCmpltEvent_Delay = (int)0x1757;
	public static final int DAQmx_Exported_AdvCmpltEvent_Pulse_Polarity = (int)0x1652;
	public static final int DAQmx_Exported_AdvCmpltEvent_Pulse_Width = (int)0x1654;
	public static final int DAQmx_Exported_AIHoldCmpltEvent_OutputTerm = (int)0x18ED;
	public static final int DAQmx_Exported_AIHoldCmpltEvent_PulsePolarity = (int)0x18EE;
	public static final int DAQmx_Exported_ChangeDetectEvent_OutputTerm = (int)0x2197;
	public static final int DAQmx_Exported_ChangeDetectEvent_Pulse_Polarity = (int)0x2303;
	public static final int DAQmx_Exported_CtrOutEvent_OutputTerm = (int)0x1717;
	public static final int DAQmx_Exported_CtrOutEvent_OutputBehavior = (int)0x174F;
	public static final int DAQmx_Exported_CtrOutEvent_Pulse_Polarity = (int)0x1718;
	public static final int DAQmx_Exported_CtrOutEvent_Toggle_IdleState = (int)0x186A;
	public static final int DAQmx_Exported_HshkEvent_OutputTerm = (int)0x22BA;
	public static final int DAQmx_Exported_HshkEvent_OutputBehavior = (int)0x22BB;
	public static final int DAQmx_Exported_HshkEvent_Delay = (int)0x22BC;
	public static final int DAQmx_Exported_HshkEvent_Interlocked_AssertedLvl = (int)0x22BD;
	public static final int DAQmx_Exported_HshkEvent_Interlocked_AssertOnStart = (int)0x22BE;
	public static final int DAQmx_Exported_HshkEvent_Interlocked_DeassertDelay = (int)0x22BF;
	public static final int DAQmx_Exported_HshkEvent_Pulse_Polarity = (int)0x22C0;
	public static final int DAQmx_Exported_HshkEvent_Pulse_Width = (int)0x22C1;
	public static final int DAQmx_Exported_RdyForXferEvent_OutputTerm = (int)0x22B5;
	public static final int DAQmx_Exported_RdyForXferEvent_Lvl_ActiveLvl = (int)0x22B6;
	public static final int DAQmx_Exported_RdyForXferEvent_DeassertCond = (int)0x2963;
	public static final int DAQmx_Exported_RdyForXferEvent_DeassertCondCustomThreshold = (int)0x2964;
	public static final int DAQmx_Exported_DataActiveEvent_OutputTerm = (int)0x1633;
	public static final int DAQmx_Exported_DataActiveEvent_Lvl_ActiveLvl = (int)0x1634;
	public static final int DAQmx_Exported_RdyForStartEvent_OutputTerm = (int)0x1609;
	public static final int DAQmx_Exported_RdyForStartEvent_Lvl_ActiveLvl = (int)0x1751;
	public static final int DAQmx_Exported_SyncPulseEvent_OutputTerm = (int)0x223C;
	public static final int DAQmx_Exported_WatchdogExpiredEvent_OutputTerm = (int)0x21AA;
	public static final int DAQmx_Dev_IsSimulated = (int)0x22CA;
	public static final int DAQmx_Dev_ProductCategory = (int)0x29A9;
	public static final int DAQmx_Dev_ProductType = (int)0x0631;
	public static final int DAQmx_Dev_ProductNum = (int)0x231D;
	public static final int DAQmx_Dev_SerialNum = (int)0x0632;
	public static final int DAQmx_Dev_Accessory_ProductTypes = (int)0x2F6D;
	public static final int DAQmx_Dev_Accessory_ProductNums = (int)0x2F6E;
	public static final int DAQmx_Dev_Accessory_SerialNums = (int)0x2F6F;
	public static final int DAQmx_Carrier_SerialNum = (int)0x2A8A;
	public static final int DAQmx_Dev_Chassis_ModuleDevNames = (int)0x29B6;
	public static final int DAQmx_Dev_AnlgTrigSupported = (int)0x2984;
	public static final int DAQmx_Dev_DigTrigSupported = (int)0x2985;
	public static final int DAQmx_Dev_AI_PhysicalChans = (int)0x231E;
	public static final int DAQmx_Dev_AI_SupportedMeasTypes = (int)0x2FD2;
	public static final int DAQmx_Dev_AI_MaxSingleChanRate = (int)0x298C;
	public static final int DAQmx_Dev_AI_MaxMultiChanRate = (int)0x298D;
	public static final int DAQmx_Dev_AI_MinRate = (int)0x298E;
	public static final int DAQmx_Dev_AI_SimultaneousSamplingSupported = (int)0x298F;
	public static final int DAQmx_Dev_AI_SampModes = (int)0x2FDC;
	public static final int DAQmx_Dev_AI_TrigUsage = (int)0x2986;
	public static final int DAQmx_Dev_AI_VoltageRngs = (int)0x2990;
	public static final int DAQmx_Dev_AI_VoltageIntExcitDiscreteVals = (int)0x29C9;
	public static final int DAQmx_Dev_AI_VoltageIntExcitRangeVals = (int)0x29CA;
	public static final int DAQmx_Dev_AI_CurrentRngs = (int)0x2991;
	public static final int DAQmx_Dev_AI_CurrentIntExcitDiscreteVals = (int)0x29CB;
	public static final int DAQmx_Dev_AI_BridgeRngs = (int)0x2FD0;
	public static final int DAQmx_Dev_AI_ResistanceRngs = (int)0x2A15;
	public static final int DAQmx_Dev_AI_FreqRngs = (int)0x2992;
	public static final int DAQmx_Dev_AI_Gains = (int)0x2993;
	public static final int DAQmx_Dev_AI_Couplings = (int)0x2994;
	public static final int DAQmx_Dev_AI_LowpassCutoffFreqDiscreteVals = (int)0x2995;
	public static final int DAQmx_Dev_AI_LowpassCutoffFreqRangeVals = (int)0x29CF;
	public static final int DAQmx_AI_DigFltr_Types = (int)0x3107;
	public static final int DAQmx_Dev_AI_DigFltr_LowpassCutoffFreqDiscreteVals = (int)0x30C8;
	public static final int DAQmx_Dev_AI_DigFltr_LowpassCutoffFreqRangeVals = (int)0x30C9;
	public static final int DAQmx_Dev_AO_PhysicalChans = (int)0x231F;
	public static final int DAQmx_Dev_AO_SupportedOutputTypes = (int)0x2FD3;
	public static final int DAQmx_Dev_AO_SampClkSupported = (int)0x2996;
	public static final int DAQmx_Dev_AO_SampModes = (int)0x2FDD;
	public static final int DAQmx_Dev_AO_MaxRate = (int)0x2997;
	public static final int DAQmx_Dev_AO_MinRate = (int)0x2998;
	public static final int DAQmx_Dev_AO_TrigUsage = (int)0x2987;
	public static final int DAQmx_Dev_AO_VoltageRngs = (int)0x299B;
	public static final int DAQmx_Dev_AO_CurrentRngs = (int)0x299C;
	public static final int DAQmx_Dev_AO_Gains = (int)0x299D;
	public static final int DAQmx_Dev_DI_Lines = (int)0x2320;
	public static final int DAQmx_Dev_DI_Ports = (int)0x2321;
	public static final int DAQmx_Dev_DI_MaxRate = (int)0x2999;
	public static final int DAQmx_Dev_DI_TrigUsage = (int)0x2988;
	public static final int DAQmx_Dev_DO_Lines = (int)0x2322;
	public static final int DAQmx_Dev_DO_Ports = (int)0x2323;
	public static final int DAQmx_Dev_DO_MaxRate = (int)0x299A;
	public static final int DAQmx_Dev_DO_TrigUsage = (int)0x2989;
	public static final int DAQmx_Dev_CI_PhysicalChans = (int)0x2324;
	public static final int DAQmx_Dev_CI_SupportedMeasTypes = (int)0x2FD4;
	public static final int DAQmx_Dev_CI_TrigUsage = (int)0x298A;
	public static final int DAQmx_Dev_CI_SampClkSupported = (int)0x299E;
	public static final int DAQmx_Dev_CI_SampModes = (int)0x2FDE;
	public static final int DAQmx_Dev_CI_MaxSize = (int)0x299F;
	public static final int DAQmx_Dev_CI_MaxTimebase = (int)0x29A0;
	public static final int DAQmx_Dev_CO_PhysicalChans = (int)0x2325;
	public static final int DAQmx_Dev_CO_SupportedOutputTypes = (int)0x2FD5;
	public static final int DAQmx_Dev_CO_SampClkSupported = (int)0x2F5B;
	public static final int DAQmx_Dev_CO_SampModes = (int)0x2FDF;
	public static final int DAQmx_Dev_CO_TrigUsage = (int)0x298B;
	public static final int DAQmx_Dev_CO_MaxSize = (int)0x29A1;
	public static final int DAQmx_Dev_CO_MaxTimebase = (int)0x29A2;
	public static final int DAQmx_Dev_TEDS_HWTEDSSupported = (int)0x2FD6;
	public static final int DAQmx_Dev_NumDMAChans = (int)0x233C;
	public static final int DAQmx_Dev_BusType = (int)0x2326;
	public static final int DAQmx_Dev_PCI_BusNum = (int)0x2327;
	public static final int DAQmx_Dev_PCI_DevNum = (int)0x2328;
	public static final int DAQmx_Dev_PXI_ChassisNum = (int)0x2329;
	public static final int DAQmx_Dev_PXI_SlotNum = (int)0x232A;
	public static final int DAQmx_Dev_CompactDAQ_ChassisDevName = (int)0x29B7;
	public static final int DAQmx_Dev_CompactDAQ_SlotNum = (int)0x29B8;
	public static final int DAQmx_Dev_TCPIP_Hostname = (int)0x2A8B;
	public static final int DAQmx_Dev_TCPIP_EthernetIP = (int)0x2A8C;
	public static final int DAQmx_Dev_TCPIP_WirelessIP = (int)0x2A8D;
	public static final int DAQmx_Dev_Terminals = (int)0x2A40;
	public static final int DAQmx_Read_RelativeTo = (int)0x190A;
	public static final int DAQmx_Read_Offset = (int)0x190B;
	public static final int DAQmx_Read_ChannelsToRead = (int)0x1823;
	public static final int DAQmx_Read_ReadAllAvailSamp = (int)0x1215;
	public static final int DAQmx_Read_AutoStart = (int)0x1826;
	public static final int DAQmx_Read_OverWrite = (int)0x1211;
	public static final int DAQmx_Logging_FilePath = (int)0x2EC4;
	public static final int DAQmx_Logging_Mode = (int)0x2EC5;
	public static final int DAQmx_Logging_TDMS_GroupName = (int)0x2EC6;
	public static final int DAQmx_Logging_TDMS_Operation = (int)0x2EC7;
	public static final int DAQmx_Logging_Pause = (int)0x2FE3;
	public static final int DAQmx_Logging_SampsPerFile = (int)0x2FE4;
	public static final int DAQmx_Logging_FileWriteSize = (int)0x2FC3;
	public static final int DAQmx_Logging_FilePreallocationSize = (int)0x2FC6;
	public static final int DAQmx_Read_CurrReadPos = (int)0x1221;
	public static final int DAQmx_Read_AvailSampPerChan = (int)0x1223;
	public static final int DAQmx_Read_TotalSampPerChanAcquired = (int)0x192A;
	public static final int DAQmx_Read_CommonModeRangeErrorChansExist = (int)0x2A98;
	public static final int DAQmx_Read_CommonModeRangeErrorChans = (int)0x2A99;
	public static final int DAQmx_Read_ExcitFaultChansExist = (int)0x3088;
	public static final int DAQmx_Read_ExcitFaultChans = (int)0x3089;
	public static final int DAQmx_Read_OvercurrentChansExist = (int)0x29E6;
	public static final int DAQmx_Read_OvercurrentChans = (int)0x29E7;
	public static final int DAQmx_Read_OvertemperatureChansExist = (int)0x3081;
	public static final int DAQmx_Read_OvertemperatureChans = (int)0x3082;
	public static final int DAQmx_Read_OpenChansExist = (int)0x3100;
	public static final int DAQmx_Read_OpenChans = (int)0x3101;
	public static final int DAQmx_Read_OpenChansDetails = (int)0x3102;
	public static final int DAQmx_Read_OpenCurrentLoopChansExist = (int)0x2A09;
	public static final int DAQmx_Read_OpenCurrentLoopChans = (int)0x2A0A;
	public static final int DAQmx_Read_OpenThrmcplChansExist = (int)0x2A96;
	public static final int DAQmx_Read_OpenThrmcplChans = (int)0x2A97;
	public static final int DAQmx_Read_OverloadedChansExist = (int)0x2174;
	public static final int DAQmx_Read_OverloadedChans = (int)0x2175;
	public static final int DAQmx_Read_AccessoryInsertionOrRemovalDetected = (int)0x2F70;
	public static final int DAQmx_Read_DevsWithInsertedOrRemovedAccessories = (int)0x2F71;
	public static final int DAQmx_Read_ChangeDetect_HasOverflowed = (int)0x2194;
	public static final int DAQmx_Read_RawDataWidth = (int)0x217A;
	public static final int DAQmx_Read_NumChans = (int)0x217B;
	public static final int DAQmx_Read_DigitalLines_BytesPerChan = (int)0x217C;
	public static final int DAQmx_Read_WaitMode = (int)0x2232;
	public static final int DAQmx_Read_SleepTime = (int)0x22B0;
	public static final int DAQmx_RealTime_ConvLateErrorsToWarnings = (int)0x22EE;
	public static final int DAQmx_RealTime_NumOfWarmupIters = (int)0x22ED;
	public static final int DAQmx_RealTime_WaitForNextSampClkWaitMode = (int)0x22EF;
	public static final int DAQmx_RealTime_ReportMissedSamp = (int)0x2319;
	public static final int DAQmx_RealTime_WriteRecoveryMode = (int)0x231A;
	public static final int DAQmx_SwitchChan_Usage = (int)0x18E4;
	public static final int DAQmx_SwitchChan_AnlgBusSharingEnable = (int)0x2F9E;
	public static final int DAQmx_SwitchChan_MaxACCarryCurrent = (int)0x0648;
	public static final int DAQmx_SwitchChan_MaxACSwitchCurrent = (int)0x0646;
	public static final int DAQmx_SwitchChan_MaxACCarryPwr = (int)0x0642;
	public static final int DAQmx_SwitchChan_MaxACSwitchPwr = (int)0x0644;
	public static final int DAQmx_SwitchChan_MaxDCCarryCurrent = (int)0x0647;
	public static final int DAQmx_SwitchChan_MaxDCSwitchCurrent = (int)0x0645;
	public static final int DAQmx_SwitchChan_MaxDCCarryPwr = (int)0x0643;
	public static final int DAQmx_SwitchChan_MaxDCSwitchPwr = (int)0x0649;
	public static final int DAQmx_SwitchChan_MaxACVoltage = (int)0x0651;
	public static final int DAQmx_SwitchChan_MaxDCVoltage = (int)0x0650;
	public static final int DAQmx_SwitchChan_WireMode = (int)0x18E5;
	public static final int DAQmx_SwitchChan_Bandwidth = (int)0x0640;
	public static final int DAQmx_SwitchChan_Impedance = (int)0x0641;
	public static final int DAQmx_SwitchDev_SettlingTime = (int)0x1244;
	public static final int DAQmx_SwitchDev_AutoConnAnlgBus = (int)0x17DA;
	public static final int DAQmx_SwitchDev_PwrDownLatchRelaysAfterSettling = (int)0x22DB;
	public static final int DAQmx_SwitchDev_Settled = (int)0x1243;
	public static final int DAQmx_SwitchDev_RelayList = (int)0x17DC;
	public static final int DAQmx_SwitchDev_NumRelays = (int)0x18E6;
	public static final int DAQmx_SwitchDev_SwitchChanList = (int)0x18E7;
	public static final int DAQmx_SwitchDev_NumSwitchChans = (int)0x18E8;
	public static final int DAQmx_SwitchDev_NumRows = (int)0x18E9;
	public static final int DAQmx_SwitchDev_NumColumns = (int)0x18EA;
	public static final int DAQmx_SwitchDev_Topology = (int)0x193D;
	public static final int DAQmx_SwitchDev_Temperature = (int)0x301A;
	public static final int DAQmx_SwitchScan_BreakMode = (int)0x1247;
	public static final int DAQmx_SwitchScan_RepeatMode = (int)0x1248;
	public static final int DAQmx_SwitchScan_WaitingForAdv = (int)0x17D9;
	public static final int DAQmx_Scale_Descr = (int)0x1226;
	public static final int DAQmx_Scale_ScaledUnits = (int)0x191B;
	public static final int DAQmx_Scale_PreScaledUnits = (int)0x18F7;
	public static final int DAQmx_Scale_Type = (int)0x1929;
	public static final int DAQmx_Scale_Lin_Slope = (int)0x1227;
	public static final int DAQmx_Scale_Lin_YIntercept = (int)0x1228;
	public static final int DAQmx_Scale_Map_ScaledMax = (int)0x1229;
	public static final int DAQmx_Scale_Map_PreScaledMax = (int)0x1231;
	public static final int DAQmx_Scale_Map_ScaledMin = (int)0x1230;
	public static final int DAQmx_Scale_Map_PreScaledMin = (int)0x1232;
	public static final int DAQmx_Scale_Poly_ForwardCoeff = (int)0x1234;
	public static final int DAQmx_Scale_Poly_ReverseCoeff = (int)0x1235;
	public static final int DAQmx_Scale_Table_ScaledVals = (int)0x1236;
	public static final int DAQmx_Scale_Table_PreScaledVals = (int)0x1237;
	public static final int DAQmx_Sys_GlobalChans = (int)0x1265;
	public static final int DAQmx_Sys_Scales = (int)0x1266;
	public static final int DAQmx_Sys_Tasks = (int)0x1267;
	public static final int DAQmx_Sys_DevNames = (int)0x193B;
	public static final int DAQmx_Sys_NIDAQMajorVersion = (int)0x1272;
	public static final int DAQmx_Sys_NIDAQMinorVersion = (int)0x1923;
	public static final int DAQmx_Sys_NIDAQUpdateVersion = (int)0x2F22;
	public static final int DAQmx_Task_Name = (int)0x1276;
	public static final int DAQmx_Task_Channels = (int)0x1273;
	public static final int DAQmx_Task_NumChans = (int)0x2181;
	public static final int DAQmx_Task_Devices = (int)0x230E;
	public static final int DAQmx_Task_NumDevices = (int)0x29BA;
	public static final int DAQmx_Task_Complete = (int)0x1274;
	public static final int DAQmx_SampQuant_SampMode = (int)0x1300;
	public static final int DAQmx_SampQuant_SampPerChan = (int)0x1310;
	public static final int DAQmx_SampTimingType = (int)0x1347;
	public static final int DAQmx_SampClk_Rate = (int)0x1344;
	public static final int DAQmx_SampClk_MaxRate = (int)0x22C8;
	public static final int DAQmx_SampClk_Src = (int)0x1852;
	public static final int DAQmx_SampClk_ActiveEdge = (int)0x1301;
	public static final int DAQmx_SampClk_OverrunBehavior = (int)0x2EFC;
	public static final int DAQmx_SampClk_UnderflowBehavior = (int)0x2961;
	public static final int DAQmx_SampClk_TimebaseDiv = (int)0x18EB;
	public static final int DAQmx_SampClk_Term = (int)0x2F1B;
	public static final int DAQmx_SampClk_Timebase_Rate = (int)0x1303;
	public static final int DAQmx_SampClk_Timebase_Src = (int)0x1308;
	public static final int DAQmx_SampClk_Timebase_ActiveEdge = (int)0x18EC;
	public static final int DAQmx_SampClk_Timebase_MasterTimebaseDiv = (int)0x1305;
	public static final int DAQmx_SampClkTimebase_Term = (int)0x2F1C;
	public static final int DAQmx_SampClk_DigFltr_Enable = (int)0x221E;
	public static final int DAQmx_SampClk_DigFltr_MinPulseWidth = (int)0x221F;
	public static final int DAQmx_SampClk_DigFltr_TimebaseSrc = (int)0x2220;
	public static final int DAQmx_SampClk_DigFltr_TimebaseRate = (int)0x2221;
	public static final int DAQmx_SampClk_DigSync_Enable = (int)0x2222;
	public static final int DAQmx_SampClk_WriteWfm_UseInitialWfmDT = (int)0x30FC;
	public static final int DAQmx_Hshk_DelayAfterXfer = (int)0x22C2;
	public static final int DAQmx_Hshk_StartCond = (int)0x22C3;
	public static final int DAQmx_Hshk_SampleInputDataWhen = (int)0x22C4;
	public static final int DAQmx_ChangeDetect_DI_RisingEdgePhysicalChans = (int)0x2195;
	public static final int DAQmx_ChangeDetect_DI_FallingEdgePhysicalChans = (int)0x2196;
	public static final int DAQmx_ChangeDetect_DI_Tristate = (int)0x2EFA;
	public static final int DAQmx_OnDemand_SimultaneousAOEnable = (int)0x21A0;
	public static final int DAQmx_Implicit_UnderflowBehavior = (int)0x2EFD;
	public static final int DAQmx_AIConv_Rate = (int)0x1848;
	public static final int DAQmx_AIConv_MaxRate = (int)0x22C9;
	public static final int DAQmx_AIConv_Src = (int)0x1502;
	public static final int DAQmx_AIConv_ActiveEdge = (int)0x1853;
	public static final int DAQmx_AIConv_TimebaseDiv = (int)0x1335;
	public static final int DAQmx_AIConv_Timebase_Src = (int)0x1339;
	public static final int DAQmx_DelayFromSampClk_DelayUnits = (int)0x1304;
	public static final int DAQmx_DelayFromSampClk_Delay = (int)0x1317;
	public static final int DAQmx_AIConv_DigFltr_Enable = (int)0x2EDC;
	public static final int DAQmx_AIConv_DigFltr_MinPulseWidth = (int)0x2EDD;
	public static final int DAQmx_AIConv_DigFltr_TimebaseSrc = (int)0x2EDE;
	public static final int DAQmx_AIConv_DigFltr_TimebaseRate = (int)0x2EDF;
	public static final int DAQmx_AIConv_DigSync_Enable = (int)0x2EE0;
	public static final int DAQmx_MasterTimebase_Rate = (int)0x1495;
	public static final int DAQmx_MasterTimebase_Src = (int)0x1343;
	public static final int DAQmx_RefClk_Rate = (int)0x1315;
	public static final int DAQmx_RefClk_Src = (int)0x1316;
	public static final int DAQmx_SyncPulse_Src = (int)0x223D;
	public static final int DAQmx_SyncPulse_SyncTime = (int)0x223E;
	public static final int DAQmx_SyncPulse_MinDelayToStart = (int)0x223F;
	public static final int DAQmx_SyncPulse_ResetTime = (int)0x2F7C;
	public static final int DAQmx_SyncPulse_ResetDelay = (int)0x2F7D;
	public static final int DAQmx_SyncPulse_Term = (int)0x2F85;
	public static final int DAQmx_SyncClk_Interval = (int)0x2F7E;
	public static final int DAQmx_SampTimingEngine = (int)0x2A26;
	public static final int DAQmx_StartTrig_Type = (int)0x1393;
	public static final int DAQmx_StartTrig_Term = (int)0x2F1E;
	public static final int DAQmx_DigEdge_StartTrig_Src = (int)0x1407;
	public static final int DAQmx_DigEdge_StartTrig_Edge = (int)0x1404;
	public static final int DAQmx_DigEdge_StartTrig_DigFltr_Enable = (int)0x2223;
	public static final int DAQmx_DigEdge_StartTrig_DigFltr_MinPulseWidth = (int)0x2224;
	public static final int DAQmx_DigEdge_StartTrig_DigFltr_TimebaseSrc = (int)0x2225;
	public static final int DAQmx_DigEdge_StartTrig_DigFltr_TimebaseRate = (int)0x2226;
	public static final int DAQmx_DigEdge_StartTrig_DigSync_Enable = (int)0x2227;
	public static final int DAQmx_DigPattern_StartTrig_Src = (int)0x1410;
	public static final int DAQmx_DigPattern_StartTrig_Pattern = (int)0x2186;
	public static final int DAQmx_DigPattern_StartTrig_When = (int)0x1411;
	public static final int DAQmx_AnlgEdge_StartTrig_Src = (int)0x1398;
	public static final int DAQmx_AnlgEdge_StartTrig_Slope = (int)0x1397;
	public static final int DAQmx_AnlgEdge_StartTrig_Lvl = (int)0x1396;
	public static final int DAQmx_AnlgEdge_StartTrig_Hyst = (int)0x1395;
	public static final int DAQmx_AnlgEdge_StartTrig_Coupling = (int)0x2233;
	public static final int DAQmx_AnlgEdge_StartTrig_DigFltr_Enable = (int)0x2EE1;
	public static final int DAQmx_AnlgEdge_StartTrig_DigFltr_MinPulseWidth = (int)0x2EE2;
	public static final int DAQmx_AnlgEdge_StartTrig_DigFltr_TimebaseSrc = (int)0x2EE3;
	public static final int DAQmx_AnlgEdge_StartTrig_DigFltr_TimebaseRate = (int)0x2EE4;
	public static final int DAQmx_AnlgEdge_StartTrig_DigSync_Enable = (int)0x2EE5;
	public static final int DAQmx_AnlgWin_StartTrig_Src = (int)0x1400;
	public static final int DAQmx_AnlgWin_StartTrig_When = (int)0x1401;
	public static final int DAQmx_AnlgWin_StartTrig_Top = (int)0x1403;
	public static final int DAQmx_AnlgWin_StartTrig_Btm = (int)0x1402;
	public static final int DAQmx_AnlgWin_StartTrig_Coupling = (int)0x2234;
	public static final int DAQmx_AnlgWin_StartTrig_DigFltr_Enable = (int)0x2EFF;
	public static final int DAQmx_AnlgWin_StartTrig_DigFltr_MinPulseWidth = (int)0x2F00;
	public static final int DAQmx_AnlgWin_StartTrig_DigFltr_TimebaseSrc = (int)0x2F01;
	public static final int DAQmx_AnlgWin_StartTrig_DigFltr_TimebaseRate = (int)0x2F02;
	public static final int DAQmx_AnlgWin_StartTrig_DigSync_Enable = (int)0x2F03;
	public static final int DAQmx_StartTrig_Delay = (int)0x1856;
	public static final int DAQmx_StartTrig_DelayUnits = (int)0x18C8;
	public static final int DAQmx_StartTrig_Retriggerable = (int)0x190F;
	public static final int DAQmx_RefTrig_Type = (int)0x1419;
	public static final int DAQmx_RefTrig_PretrigSamples = (int)0x1445;
	public static final int DAQmx_RefTrig_Term = (int)0x2F1F;
	public static final int DAQmx_DigEdge_RefTrig_Src = (int)0x1434;
	public static final int DAQmx_DigEdge_RefTrig_Edge = (int)0x1430;
	public static final int DAQmx_DigEdge_RefTrig_DigFltr_Enable = (int)0x2ED7;
	public static final int DAQmx_DigEdge_RefTrig_DigFltr_MinPulseWidth = (int)0x2ED8;
	public static final int DAQmx_DigEdge_RefTrig_DigFltr_TimebaseSrc = (int)0x2ED9;
	public static final int DAQmx_DigEdge_RefTrig_DigFltr_TimebaseRate = (int)0x2EDA;
	public static final int DAQmx_DigEdge_RefTrig_DigSync_Enable = (int)0x2EDB;
	public static final int DAQmx_DigPattern_RefTrig_Src = (int)0x1437;
	public static final int DAQmx_DigPattern_RefTrig_Pattern = (int)0x2187;
	public static final int DAQmx_DigPattern_RefTrig_When = (int)0x1438;
	public static final int DAQmx_AnlgEdge_RefTrig_Src = (int)0x1424;
	public static final int DAQmx_AnlgEdge_RefTrig_Slope = (int)0x1423;
	public static final int DAQmx_AnlgEdge_RefTrig_Lvl = (int)0x1422;
	public static final int DAQmx_AnlgEdge_RefTrig_Hyst = (int)0x1421;
	public static final int DAQmx_AnlgEdge_RefTrig_Coupling = (int)0x2235;
	public static final int DAQmx_AnlgEdge_RefTrig_DigFltr_Enable = (int)0x2EE6;
	public static final int DAQmx_AnlgEdge_RefTrig_DigFltr_MinPulseWidth = (int)0x2EE7;
	public static final int DAQmx_AnlgEdge_RefTrig_DigFltr_TimebaseSrc = (int)0x2EE8;
	public static final int DAQmx_AnlgEdge_RefTrig_DigFltr_TimebaseRate = (int)0x2EE9;
	public static final int DAQmx_AnlgEdge_RefTrig_DigSync_Enable = (int)0x2EEA;
	public static final int DAQmx_AnlgWin_RefTrig_Src = (int)0x1426;
	public static final int DAQmx_AnlgWin_RefTrig_When = (int)0x1427;
	public static final int DAQmx_AnlgWin_RefTrig_Top = (int)0x1429;
	public static final int DAQmx_AnlgWin_RefTrig_Btm = (int)0x1428;
	public static final int DAQmx_AnlgWin_RefTrig_Coupling = (int)0x1857;
	public static final int DAQmx_AnlgWin_RefTrig_DigFltr_Enable = (int)0x2EEB;
	public static final int DAQmx_AnlgWin_RefTrig_DigFltr_MinPulseWidth = (int)0x2EEC;
	public static final int DAQmx_AnlgWin_RefTrig_DigFltr_TimebaseSrc = (int)0x2EED;
	public static final int DAQmx_AnlgWin_RefTrig_DigFltr_TimebaseRate = (int)0x2EEE;
	public static final int DAQmx_AnlgWin_RefTrig_DigSync_Enable = (int)0x2EEF;
	public static final int DAQmx_RefTrig_AutoTrigEnable = (int)0x2EC1;
	public static final int DAQmx_RefTrig_AutoTriggered = (int)0x2EC2;
	public static final int DAQmx_RefTrig_Delay = (int)0x1483;
	public static final int DAQmx_AdvTrig_Type = (int)0x1365;
	public static final int DAQmx_DigEdge_AdvTrig_Src = (int)0x1362;
	public static final int DAQmx_DigEdge_AdvTrig_Edge = (int)0x1360;
	public static final int DAQmx_DigEdge_AdvTrig_DigFltr_Enable = (int)0x2238;
	public static final int DAQmx_HshkTrig_Type = (int)0x22B7;
	public static final int DAQmx_Interlocked_HshkTrig_Src = (int)0x22B8;
	public static final int DAQmx_Interlocked_HshkTrig_AssertedLvl = (int)0x22B9;
	public static final int DAQmx_PauseTrig_Type = (int)0x1366;
	public static final int DAQmx_PauseTrig_Term = (int)0x2F20;
	public static final int DAQmx_AnlgLvl_PauseTrig_Src = (int)0x1370;
	public static final int DAQmx_AnlgLvl_PauseTrig_When = (int)0x1371;
	public static final int DAQmx_AnlgLvl_PauseTrig_Lvl = (int)0x1369;
	public static final int DAQmx_AnlgLvl_PauseTrig_Hyst = (int)0x1368;
	public static final int DAQmx_AnlgLvl_PauseTrig_Coupling = (int)0x2236;
	public static final int DAQmx_AnlgLvl_PauseTrig_DigFltr_Enable = (int)0x2EF0;
	public static final int DAQmx_AnlgLvl_PauseTrig_DigFltr_MinPulseWidth = (int)0x2EF1;
	public static final int DAQmx_AnlgLvl_PauseTrig_DigFltr_TimebaseSrc = (int)0x2EF2;
	public static final int DAQmx_AnlgLvl_PauseTrig_DigFltr_TimebaseRate = (int)0x2EF3;
	public static final int DAQmx_AnlgLvl_PauseTrig_DigSync_Enable = (int)0x2EF4;
	public static final int DAQmx_AnlgWin_PauseTrig_Src = (int)0x1373;
	public static final int DAQmx_AnlgWin_PauseTrig_When = (int)0x1374;
	public static final int DAQmx_AnlgWin_PauseTrig_Top = (int)0x1376;
	public static final int DAQmx_AnlgWin_PauseTrig_Btm = (int)0x1375;
	public static final int DAQmx_AnlgWin_PauseTrig_Coupling = (int)0x2237;
	public static final int DAQmx_AnlgWin_PauseTrig_DigFltr_Enable = (int)0x2EF5;
	public static final int DAQmx_AnlgWin_PauseTrig_DigFltr_MinPulseWidth = (int)0x2EF6;
	public static final int DAQmx_AnlgWin_PauseTrig_DigFltr_TimebaseSrc = (int)0x2EF7;
	public static final int DAQmx_AnlgWin_PauseTrig_DigFltr_TimebaseRate = (int)0x2EF8;
	public static final int DAQmx_AnlgWin_PauseTrig_DigSync_Enable = (int)0x2EF9;
	public static final int DAQmx_DigLvl_PauseTrig_Src = (int)0x1379;
	public static final int DAQmx_DigLvl_PauseTrig_When = (int)0x1380;
	public static final int DAQmx_DigLvl_PauseTrig_DigFltr_Enable = (int)0x2228;
	public static final int DAQmx_DigLvl_PauseTrig_DigFltr_MinPulseWidth = (int)0x2229;
	public static final int DAQmx_DigLvl_PauseTrig_DigFltr_TimebaseSrc = (int)0x222A;
	public static final int DAQmx_DigLvl_PauseTrig_DigFltr_TimebaseRate = (int)0x222B;
	public static final int DAQmx_DigLvl_PauseTrig_DigSync_Enable = (int)0x222C;
	public static final int DAQmx_DigPattern_PauseTrig_Src = (int)0x216F;
	public static final int DAQmx_DigPattern_PauseTrig_Pattern = (int)0x2188;
	public static final int DAQmx_DigPattern_PauseTrig_When = (int)0x2170;
	public static final int DAQmx_ArmStartTrig_Type = (int)0x1414;
	public static final int DAQmx_ArmStart_Term = (int)0x2F7F;
	public static final int DAQmx_DigEdge_ArmStartTrig_Src = (int)0x1417;
	public static final int DAQmx_DigEdge_ArmStartTrig_Edge = (int)0x1415;
	public static final int DAQmx_DigEdge_ArmStartTrig_DigFltr_Enable = (int)0x222D;
	public static final int DAQmx_DigEdge_ArmStartTrig_DigFltr_MinPulseWidth = (int)0x222E;
	public static final int DAQmx_DigEdge_ArmStartTrig_DigFltr_TimebaseSrc = (int)0x222F;
	public static final int DAQmx_DigEdge_ArmStartTrig_DigFltr_TimebaseRate = (int)0x2230;
	public static final int DAQmx_DigEdge_ArmStartTrig_DigSync_Enable = (int)0x2231;
	public static final int DAQmx_Trigger_SyncType = (int)0x2F80;
	public static final int DAQmx_Watchdog_Timeout = (int)0x21A9;
	public static final int DAQmx_WatchdogExpirTrig_Type = (int)0x21A3;
	public static final int DAQmx_WatchdogExpirTrig_TrigOnNetworkConnLoss = (int)0x305D;
	public static final int DAQmx_DigEdge_WatchdogExpirTrig_Src = (int)0x21A4;
	public static final int DAQmx_DigEdge_WatchdogExpirTrig_Edge = (int)0x21A5;
	public static final int DAQmx_Watchdog_DO_ExpirState = (int)0x21A7;
	public static final int DAQmx_Watchdog_AO_OutputType = (int)0x305E;
	public static final int DAQmx_Watchdog_AO_ExpirState = (int)0x305F;
	public static final int DAQmx_Watchdog_CO_ExpirState = (int)0x3060;
	public static final int DAQmx_Watchdog_HasExpired = (int)0x21A8;
	public static final int DAQmx_Write_RelativeTo = (int)0x190C;
	public static final int DAQmx_Write_Offset = (int)0x190D;
	public static final int DAQmx_Write_RegenMode = (int)0x1453;
	public static final int DAQmx_Write_CurrWritePos = (int)0x1458;
	public static final int DAQmx_Write_OvercurrentChansExist = (int)0x29E8;
	public static final int DAQmx_Write_OvercurrentChans = (int)0x29E9;
	public static final int DAQmx_Write_OvertemperatureChansExist = (int)0x2A84;
	public static final int DAQmx_Write_OvertemperatureChans = (int)0x3083;
	public static final int DAQmx_Write_ExternalOvervoltageChansExist = (int)0x30BB;
	public static final int DAQmx_Write_ExternalOvervoltageChans = (int)0x30BC;
	public static final int DAQmx_Write_OverloadedChansExist = (int)0x3084;
	public static final int DAQmx_Write_OverloadedChans = (int)0x3085;
	public static final int DAQmx_Write_OpenCurrentLoopChansExist = (int)0x29EA;
	public static final int DAQmx_Write_OpenCurrentLoopChans = (int)0x29EB;
	public static final int DAQmx_Write_PowerSupplyFaultChansExist = (int)0x29EC;
	public static final int DAQmx_Write_PowerSupplyFaultChans = (int)0x29ED;
	public static final int DAQmx_Write_SpaceAvail = (int)0x1460;
	public static final int DAQmx_Write_TotalSampPerChanGenerated = (int)0x192B;
	public static final int DAQmx_Write_AccessoryInsertionOrRemovalDetected = (int)0x3053;
	public static final int DAQmx_Write_DevsWithInsertedOrRemovedAccessories = (int)0x3054;
	public static final int DAQmx_Write_RawDataWidth = (int)0x217D;
	public static final int DAQmx_Write_NumChans = (int)0x217E;
	public static final int DAQmx_Write_WaitMode = (int)0x22B1;
	public static final int DAQmx_Write_SleepTime = (int)0x22B2;
	public static final int DAQmx_Write_DigitalLines_BytesPerChan = (int)0x217F;
	public static final int DAQmx_PhysicalChan_AI_SupportedMeasTypes = (int)0x2FD7;
	public static final int DAQmx_PhysicalChan_AI_TermCfgs = (int)0x2342;
	public static final int DAQmx_PhysicalChan_AI_InputSrcs = (int)0x2FD8;
	public static final int DAQmx_PhysicalChan_AO_SupportedOutputTypes = (int)0x2FD9;
	public static final int DAQmx_PhysicalChan_AO_SupportedPowerUpOutputTypes = (int)0x304E;
	public static final int DAQmx_PhysicalChan_AO_TermCfgs = (int)0x29A3;
	public static final int DAQmx_PhysicalChan_AO_ManualControlEnable = (int)0x2A1E;
	public static final int DAQmx_PhysicalChan_AO_ManualControl_ShortDetected = (int)0x2EC3;
	public static final int DAQmx_PhysicalChan_AO_ManualControlAmplitude = (int)0x2A1F;
	public static final int DAQmx_PhysicalChan_AO_ManualControlFreq = (int)0x2A20;
	public static final int DAQmx_AO_PowerAmp_ChannelEnable = (int)0x3062;
	public static final int DAQmx_AO_PowerAmp_ScalingCoeff = (int)0x3063;
	public static final int DAQmx_AO_PowerAmp_Overcurrent = (int)0x3064;
	public static final int DAQmx_AO_PowerAmp_Gain = (int)0x3065;
	public static final int DAQmx_AO_PowerAmp_Offset = (int)0x3066;
	public static final int DAQmx_PhysicalChan_DI_PortWidth = (int)0x29A4;
	public static final int DAQmx_PhysicalChan_DI_SampClkSupported = (int)0x29A5;
	public static final int DAQmx_PhysicalChan_DI_SampModes = (int)0x2FE0;
	public static final int DAQmx_PhysicalChan_DI_ChangeDetectSupported = (int)0x29A6;
	public static final int DAQmx_PhysicalChan_DO_PortWidth = (int)0x29A7;
	public static final int DAQmx_PhysicalChan_DO_SampClkSupported = (int)0x29A8;
	public static final int DAQmx_PhysicalChan_DO_SampModes = (int)0x2FE1;
	public static final int DAQmx_PhysicalChan_CI_SupportedMeasTypes = (int)0x2FDA;
	public static final int DAQmx_PhysicalChan_CO_SupportedOutputTypes = (int)0x2FDB;
	public static final int DAQmx_PhysicalChan_TEDS_MfgID = (int)0x21DA;
	public static final int DAQmx_PhysicalChan_TEDS_ModelNum = (int)0x21DB;
	public static final int DAQmx_PhysicalChan_TEDS_SerialNum = (int)0x21DC;
	public static final int DAQmx_PhysicalChan_TEDS_VersionNum = (int)0x21DD;
	public static final int DAQmx_PhysicalChan_TEDS_VersionLetter = (int)0x21DE;
	public static final int DAQmx_PhysicalChan_TEDS_BitStream = (int)0x21DF;
	public static final int DAQmx_PhysicalChan_TEDS_TemplateIDs = (int)0x228F;
	public static final int DAQmx_PersistedTask_Author = (int)0x22CC;
	public static final int DAQmx_PersistedTask_AllowInteractiveEditing = (int)0x22CD;
	public static final int DAQmx_PersistedTask_AllowInteractiveDeletion = (int)0x22CE;
	public static final int DAQmx_PersistedChan_Author = (int)0x22D0;
	public static final int DAQmx_PersistedChan_AllowInteractiveEditing = (int)0x22D1;
	public static final int DAQmx_PersistedChan_AllowInteractiveDeletion = (int)0x22D2;
	public static final int DAQmx_PersistedScale_Author = (int)0x22D4;
	public static final int DAQmx_PersistedScale_AllowInteractiveEditing = (int)0x22D5;
	public static final int DAQmx_PersistedScale_AllowInteractiveDeletion = (int)0x22D6;
	public static final int DAQmx_ReadWaitMode = (int)0x2232;
	public static final int DAQmx_Val_Task_Start = (int)0;
	public static final int DAQmx_Val_Task_Stop = (int)1;
	public static final int DAQmx_Val_Task_Verify = (int)2;
	public static final int DAQmx_Val_Task_Commit = (int)3;
	public static final int DAQmx_Val_Task_Reserve = (int)4;
	public static final int DAQmx_Val_Task_Unreserve = (int)5;
	public static final int DAQmx_Val_Task_Abort = (int)6;
	public static final int DAQmx_Val_SynchronousEventCallbacks = (int)(1 << 0);
	public static final int DAQmx_Val_Acquired_Into_Buffer = (int)1;
	public static final int DAQmx_Val_Transferred_From_Buffer = (int)2;
	public static final int DAQmx_Val_ResetTimer = (int)0;
	public static final int DAQmx_Val_ClearExpiration = (int)1;
	public static final int DAQmx_Val_ChanPerLine = (int)0;
	public static final int DAQmx_Val_ChanForAllLines = (int)1;
        */
	public static final int DAQmx_Val_GroupByChannel = (int)0;
	public static final int DAQmx_Val_GroupByScanNumber = (int)1;
                /*
	public static final int DAQmx_Val_DoNotInvertPolarity = (int)0;
	public static final int DAQmx_Val_InvertPolarity = (int)1;
	public static final int DAQmx_Val_Action_Commit = (int)0;
	public static final int DAQmx_Val_Action_Cancel = (int)1;
	public static final int DAQmx_Val_AdvanceTrigger = (int)12488;
        */
        
	public static final int DAQmx_Val_Rising = (int)10280;
	public static final int DAQmx_Val_Falling = (int)10171;
                /*
	public static final int DAQmx_Val_PathStatus_Available = (int)10431;
	public static final int DAQmx_Val_PathStatus_AlreadyExists = (int)10432;
	public static final int DAQmx_Val_PathStatus_Unsupported = (int)10433;
	public static final int DAQmx_Val_PathStatus_ChannelInUse = (int)10434;
	public static final int DAQmx_Val_PathStatus_SourceChannelConflict = (int)10435;
	public static final int DAQmx_Val_PathStatus_ChannelReservedForRouting = (int)10436;
	*/
	public static final int DAQmx_Val_DegC = (int)10143;
	public static final int DAQmx_Val_DegF = (int)10144;
	public static final int DAQmx_Val_Kelvins = (int)10325;
	public static final int DAQmx_Val_DegR = (int)10145;
	/*
	public static final int DAQmx_Val_High = (int)10192;
	public static final int DAQmx_Val_Low = (int)10214;
	public static final int DAQmx_Val_Tristate = (int)10310;
	public static final int DAQmx_Val_PullUp = (int)15950;
	public static final int DAQmx_Val_PullDown = (int)15951;
        */
	public static final int DAQmx_Val_ChannelVoltage = (int)0;
	public static final int DAQmx_Val_ChannelCurrent = (int)1;
	public static final int DAQmx_Val_ChannelHighImpedance = (int)2;
	public static final int DAQmx_Val_Open = (int)10437;
    /*
	public static final int DAQmx_Val_Closed = (int)10438;
	public static final int DAQmx_Val_Loopback0 = (int)0;
	public static final int DAQmx_Val_Loopback180 = (int)1;
	public static final int DAQmx_Val_Ground = (int)2;
	public static final int DAQmx_Val_Voltage = (int)10322;
	public static final int DAQmx_Val_Bridge = (int)15908;
	public static final int DAQmx_Val_Current = (int)10134;
*/
	public static final int DAQmx_Val_Diff = (int)10106;
	public static final int DAQmx_Val_PseudoDiff = (int)12529;
/*	public static final int DAQmx_Val_A = (int)12513;
	public static final int DAQmx_Val_B = (int)12514;
        */
	public static final int DAQmx_Val_Newtons = (int)15875;
	public static final int DAQmx_Val_Pounds = (int)15876;
	public static final int DAQmx_Val_FromCustomScale = (int)10065;
	public static final int DAQmx_Val_Cfg_Default = (int)-1;
                /*
	public static final int DAQmx_Val_Default = (int)-1;
	public static final double DAQmx_Val_WaitInfinitely = (double)-1.0;
	public static final int DAQmx_Val_Auto = (int)-1;
	public static final int DAQmx_Val_Save_Overwrite = (int)(1 << 0);
	public static final int DAQmx_Val_Save_AllowInteractiveEditing = (int)(1 << 1);
	public static final int DAQmx_Val_Save_AllowInteractiveDeletion = (int)(1 << 2);
	public static final int DAQmx_Val_Bit_TriggerUsageTypes_Advance = (int)(1 << 0);
	public static final int DAQmx_Val_Bit_TriggerUsageTypes_Pause = (int)(1 << 1);
	public static final int DAQmx_Val_Bit_TriggerUsageTypes_Reference = (int)(1 << 2);
	public static final int DAQmx_Val_Bit_TriggerUsageTypes_Start = (int)(1 << 3);
	public static final int DAQmx_Val_Bit_TriggerUsageTypes_Handshake = (int)(1 << 4);
	public static final int DAQmx_Val_Bit_TriggerUsageTypes_ArmStart = (int)(1 << 5);
	public static final int DAQmx_Val_Bit_CouplingTypes_AC = (int)(1 << 0);
	public static final int DAQmx_Val_Bit_CouplingTypes_DC = (int)(1 << 1);
	public static final int DAQmx_Val_Bit_CouplingTypes_Ground = (int)(1 << 2);
	public static final int DAQmx_Val_Bit_CouplingTypes_HFReject = (int)(1 << 3);
	public static final int DAQmx_Val_Bit_CouplingTypes_LFReject = (int)(1 << 4);
	public static final int DAQmx_Val_Bit_CouplingTypes_NoiseReject = (int)(1 << 5);
	public static final int DAQmx_Val_Bit_TermCfg_RSE = (int)(1 << 0);
	public static final int DAQmx_Val_Bit_TermCfg_NRSE = (int)(1 << 1);
	public static final int DAQmx_Val_Bit_TermCfg_Diff = (int)(1 << 2);
	public static final int DAQmx_Val_Bit_TermCfg_PseudoDIFF = (int)(1 << 3);
	public static final int DAQmx_Val_4Wire = (int)4;
	public static final int DAQmx_Val_5Wire = (int)5;
	public static final int DAQmx_Val_6Wire = (int)6;
	public static final int DAQmx_Val_Automatic = (int)16097;
	public static final int DAQmx_Val_HighResolution = (int)10195;
	public static final int DAQmx_Val_HighSpeed = (int)14712;
	public static final int DAQmx_Val_Best50HzRejection = (int)14713;
	public static final int DAQmx_Val_Best60HzRejection = (int)14714;
	public static final int DAQmx_Val_Custom = (int)10137;
	public static final int DAQmx_Val_VoltageRMS = (int)10350;
	public static final int DAQmx_Val_CurrentRMS = (int)10351;
	public static final int DAQmx_Val_Voltage_CustomWithExcitation = (int)10323;
	public static final int DAQmx_Val_Freq_Voltage = (int)10181;
	public static final int DAQmx_Val_Resistance = (int)10278;
	public static final int DAQmx_Val_Temp_TC = (int)10303;
	public static final int DAQmx_Val_Temp_Thrmstr = (int)10302;
	public static final int DAQmx_Val_Temp_RTD = (int)10301;
	public static final int DAQmx_Val_Temp_BuiltInSensor = (int)10311;
	public static final int DAQmx_Val_Strain_Gage = (int)10300;
	public static final int DAQmx_Val_Rosette_Strain_Gage = (int)15980;
	public static final int DAQmx_Val_Position_LVDT = (int)10352;
	public static final int DAQmx_Val_Position_RVDT = (int)10353;
	public static final int DAQmx_Val_Position_EddyCurrentProximityProbe = (int)14835;
	public static final int DAQmx_Val_Accelerometer = (int)10356;
	public static final int DAQmx_Val_Velocity_IEPESensor = (int)15966;
	public static final int DAQmx_Val_Force_Bridge = (int)15899;
	public static final int DAQmx_Val_Force_IEPESensor = (int)15895;
	public static final int DAQmx_Val_Pressure_Bridge = (int)15902;
	public static final int DAQmx_Val_SoundPressure_Microphone = (int)10354;
	public static final int DAQmx_Val_Torque_Bridge = (int)15905;
	public static final int DAQmx_Val_TEDS_Sensor = (int)12531;
	public static final int DAQmx_Val_ZeroVolts = (int)12526;
	public static final int DAQmx_Val_HighImpedance = (int)12527;
	public static final int DAQmx_Val_MaintainExistingValue = (int)12528;
	public static final int DAQmx_Val_FuncGen = (int)14750;
	public static final int DAQmx_Val_mVoltsPerG = (int)12509;
	public static final int DAQmx_Val_VoltsPerG = (int)12510;
	public static final int DAQmx_Val_AccelUnit_g = (int)10186;
	*/
	public static final int DAQmx_Val_MetersPerSecondSquared = (int)12470;
	public static final int DAQmx_Val_InchesPerSecondSquared = (int)12471;
	public static final int DAQmx_Val_FiniteSamps = (int)10178;
	public static final int DAQmx_Val_ContSamps = (int)10123;
                /*
	public static final int DAQmx_Val_HWTimedSinglePoint = (int)12522;
	public static final int DAQmx_Val_AboveLvl = (int)10093;
	public static final int DAQmx_Val_BelowLvl = (int)10107;
	*/
	public static final int DAQmx_Val_Degrees = (int)10146;
	public static final int DAQmx_Val_Radians = (int)10273;
	/*
	public static final int DAQmx_Val_Ticks = (int)10304;
	public static final int DAQmx_Val_RPM = (int)16080;
	public static final int DAQmx_Val_RadiansPerSecond = (int)16081;
	public static final int DAQmx_Val_DegreesPerSecond = (int)16082;
	public static final int DAQmx_Val_None = (int)10230;
	public static final int DAQmx_Val_Once = (int)10244;
	public static final int DAQmx_Val_EverySample = (int)10164;
	public static final int DAQmx_Val_NoAction = (int)10227;
	public static final int DAQmx_Val_BreakBeforeMake = (int)10110;
	public static final int DAQmx_Val_FullBridge = (int)10182;
	public static final int DAQmx_Val_HalfBridge = (int)10187;
	public static final int DAQmx_Val_QuarterBridge = (int)10270;
	public static final int DAQmx_Val_NoBridge = (int)10228;
	*/
	public static final int DAQmx_Val_VoltsPerVolt = (int)15896;
	public static final int DAQmx_Val_mVoltsPerVolt = (int)15897;
	public static final int DAQmx_Val_KilogramForce = (int)15877;
	public static final int DAQmx_Val_Pascals = (int)10081;
	public static final int DAQmx_Val_PoundsPerSquareInch = (int)15879;
	public static final int DAQmx_Val_Bar = (int)15880;
	public static final int DAQmx_Val_NewtonMeters = (int)15881;
	public static final int DAQmx_Val_InchOunces = (int)15882;
	public static final int DAQmx_Val_InchPounds = (int)15883;
	public static final int DAQmx_Val_FootPounds = (int)15884;
	public static final int DAQmx_Val_FromTEDS = (int)12516;
	/*
	public static final int DAQmx_Val_PCI = (int)12582;
	public static final int DAQmx_Val_PCIe = (int)13612;
	public static final int DAQmx_Val_PXI = (int)12583;
	public static final int DAQmx_Val_PXIe = (int)14706;
	public static final int DAQmx_Val_SCXI = (int)12584;
	public static final int DAQmx_Val_SCC = (int)14707;
	public static final int DAQmx_Val_PCCard = (int)12585;
	public static final int DAQmx_Val_USB = (int)12586;
	public static final int DAQmx_Val_CompactDAQ = (int)14637;
	public static final int DAQmx_Val_TCPIP = (int)14828;
	public static final int DAQmx_Val_Unknown = (int)12588;
	public static final int DAQmx_Val_SwitchBlock = (int)15870;
	public static final int DAQmx_Val_CountEdges = (int)10125;
	public static final int DAQmx_Val_Freq = (int)10179;
	public static final int DAQmx_Val_Period = (int)10256;
	public static final int DAQmx_Val_PulseWidth = (int)10359;
	public static final int DAQmx_Val_SemiPeriod = (int)10289;
	public static final int DAQmx_Val_PulseFrequency = (int)15864;
	public static final int DAQmx_Val_PulseTime = (int)15865;
	public static final int DAQmx_Val_PulseTicks = (int)15866;
	public static final int DAQmx_Val_DutyCycle = (int)16070;
	public static final int DAQmx_Val_Position_AngEncoder = (int)10360;
	public static final int DAQmx_Val_Position_LinEncoder = (int)10361;
	public static final int DAQmx_Val_Velocity_AngEncoder = (int)16078;
	public static final int DAQmx_Val_Velocity_LinEncoder = (int)16079;
	public static final int DAQmx_Val_TwoEdgeSep = (int)10267;
	public static final int DAQmx_Val_GPS_Timestamp = (int)10362;
	public static final int DAQmx_Val_BuiltIn = (int)10200;
	public static final int DAQmx_Val_ConstVal = (int)10116;
	public static final int DAQmx_Val_Chan = (int)10113;
	public static final int DAQmx_Val_Pulse_Time = (int)10269;
	public static final int DAQmx_Val_Pulse_Freq = (int)10119;
	public static final int DAQmx_Val_Pulse_Ticks = (int)10268;
	public static final int DAQmx_Val_AI = (int)10100;
	public static final int DAQmx_Val_AO = (int)10102;
	public static final int DAQmx_Val_DI = (int)10151;
	public static final int DAQmx_Val_DO = (int)10153;
	public static final int DAQmx_Val_CI = (int)10131;
	public static final int DAQmx_Val_CO = (int)10132;
	public static final int DAQmx_Val_Unconstrained = (int)14708;
	public static final int DAQmx_Val_FixedHighFreq = (int)14709;
	public static final int DAQmx_Val_FixedLowFreq = (int)14710;
	public static final int DAQmx_Val_Fixed50PercentDutyCycle = (int)14711;
	public static final int DAQmx_Val_CountUp = (int)10128;
	public static final int DAQmx_Val_CountDown = (int)10124;
	public static final int DAQmx_Val_ExtControlled = (int)10326;
	public static final int DAQmx_Val_LowFreq1Ctr = (int)10105;
	public static final int DAQmx_Val_HighFreq2Ctr = (int)10157;
	public static final int DAQmx_Val_LargeRng2Ctr = (int)10205;
	public static final int DAQmx_Val_DynAvg = (int)16065;
	public static final int DAQmx_Val_AC = (int)10045;
	public static final int DAQmx_Val_DC = (int)10050;
	public static final int DAQmx_Val_GND = (int)10066;
	public static final int DAQmx_Val_Internal = (int)10200;
	public static final int DAQmx_Val_External = (int)10167;
	public static final int DAQmx_Val_UserProvided = (int)10167;
	*/
	public static final int DAQmx_Val_Amps = (int)10342;
	/*
	public static final int DAQmx_Val_RightJustified = (int)10279;
	public static final int DAQmx_Val_LeftJustified = (int)10209;
        */
	public static final int DAQmx_Val_DMA = (int)10054;
	public static final int DAQmx_Val_Interrupts = (int)10204;
	public static final int DAQmx_Val_ProgrammedIO = (int)10264;
	public static final int DAQmx_Val_USBbulk = (int)12590;
                /*
	public static final int DAQmx_Val_OnbrdMemMoreThanHalfFull = (int)10237;
	public static final int DAQmx_Val_OnbrdMemFull = (int)10236;
	public static final int DAQmx_Val_OnbrdMemCustomThreshold = (int)12577;
	public static final int DAQmx_Val_ActiveDrive = (int)12573;
	public static final int DAQmx_Val_OpenCollector = (int)12574;
	public static final int DAQmx_Val_NoChange = (int)10160;
	public static final int DAQmx_Val_PatternMatches = (int)10254;
	public static final int DAQmx_Val_PatternDoesNotMatch = (int)10253;
	public static final int DAQmx_Val_SampClkPeriods = (int)10286;
	*/
	public static final int DAQmx_Val_Seconds = (int)10364;
	/*
	public static final int DAQmx_Val_SampleClkPeriods = (int)10286;
	public static final int DAQmx_Val_mVoltsPerMil = (int)14836;
	public static final int DAQmx_Val_VoltsPerMil = (int)14837;
	public static final int DAQmx_Val_mVoltsPerMillimeter = (int)14838;
	public static final int DAQmx_Val_VoltsPerMillimeter = (int)14839;
	public static final int DAQmx_Val_mVoltsPerMicron = (int)14840;
	public static final int DAQmx_Val_X1 = (int)10090;
	public static final int DAQmx_Val_X2 = (int)10091;
	public static final int DAQmx_Val_X4 = (int)10092;
	public static final int DAQmx_Val_TwoPulseCounting = (int)10313;
	public static final int DAQmx_Val_AHighBHigh = (int)10040;
	public static final int DAQmx_Val_AHighBLow = (int)10041;
	public static final int DAQmx_Val_ALowBHigh = (int)10042;
	public static final int DAQmx_Val_ALowBLow = (int)10043;
	public static final int DAQmx_Val_Pulse = (int)10265;
	public static final int DAQmx_Val_Toggle = (int)10307;
	public static final int DAQmx_Val_Lvl = (int)10210;
	public static final int DAQmx_Val_Interlocked = (int)12549;
	public static final int DAQmx_Val_Lowpass = (int)16071;
	public static final int DAQmx_Val_Highpass = (int)16072;
	public static final int DAQmx_Val_Bandpass = (int)16073;
	public static final int DAQmx_Val_Notch = (int)16074;
	public static final int DAQmx_Val_ConstantGroupDelay = (int)16075;
	public static final int DAQmx_Val_Butterworth = (int)16076;
	public static final int DAQmx_Val_Elliptical = (int)16077;
	public static final int DAQmx_Val_HardwareDefined = (int)10191;
	public static final int DAQmx_Val_mVoltsPerNewton = (int)15891;
	public static final int DAQmx_Val_mVoltsPerPound = (int)15892;
	*/
	public static final int DAQmx_Val_Hz = (int)10373;
	/*
	public static final int DAQmx_Val_Sine = (int)14751;
	public static final int DAQmx_Val_Triangle = (int)14752;
	public static final int DAQmx_Val_Square = (int)14753;
	public static final int DAQmx_Val_Sawtooth = (int)14754;
	public static final int DAQmx_Val_IRIGB = (int)10070;
	public static final int DAQmx_Val_PPS = (int)10080;
	public static final int DAQmx_Val_Immediate = (int)10198;
	public static final int DAQmx_Val_WaitForHandshakeTriggerAssert = (int)12550;
	public static final int DAQmx_Val_WaitForHandshakeTriggerDeassert = (int)12551;
	public static final int DAQmx_Val_OnBrdMemMoreThanHalfFull = (int)10237;
	public static final int DAQmx_Val_OnBrdMemNotEmpty = (int)10241;
	public static final int DAQmx_Val_WhenAcqComplete = (int)12546;
*/
	public static final int DAQmx_Val_RSE = (int)10083;
	public static final int DAQmx_Val_NRSE = (int)10078;
/*	public static final int DAQmx_Val_mVoltsPerVoltPerMillimeter = (int)12506;
	public static final int DAQmx_Val_mVoltsPerVoltPerMilliInch = (int)12505;
	*/
	public static final int DAQmx_Val_Meters = (int)10219;
	public static final int DAQmx_Val_Inches = (int)10379;
	public static final int DAQmx_Val_Off = (int)10231;
	public static final int DAQmx_Val_Log = (int)15844;
	public static final int DAQmx_Val_LogAndRead = (int)15842;
	public static final int DAQmx_Val_OpenOrCreate = (int)15846;
	public static final int DAQmx_Val_CreateOrReplace = (int)15847;
	public static final int DAQmx_Val_Create = (int)15848;
	/*
	public static final int DAQmx_Val_2point5V = (int)14620;
	public static final int DAQmx_Val_3point3V = (int)14621;
	public static final int DAQmx_Val_5V = (int)14619;
	public static final int DAQmx_Val_SameAsSampTimebase = (int)10284;
	public static final int DAQmx_Val_SameAsMasterTimebase = (int)10282;
	public static final int DAQmx_Val_100MHzTimebase = (int)15857;
	public static final int DAQmx_Val_80MHzTimebase = (int)14636;
	public static final int DAQmx_Val_20MHzTimebase = (int)12537;
	public static final int DAQmx_Val_8MHzTimebase = (int)16023;
	public static final int DAQmx_Val_AM = (int)14756;
	public static final int DAQmx_Val_FM = (int)14757;
	public static final int DAQmx_Val_OnBrdMemEmpty = (int)10235;
	public static final int DAQmx_Val_OnBrdMemHalfFullOrLess = (int)10239;
	public static final int DAQmx_Val_OnBrdMemNotFull = (int)10242;
	public static final int DAQmx_Val_StopTaskAndError = (int)15862;
	public static final int DAQmx_Val_IgnoreOverruns = (int)15863;
	public static final int DAQmx_Val_OverwriteUnreadSamps = (int)10252;
	public static final int DAQmx_Val_DoNotOverwriteUnreadSamps = (int)10159;
	public static final int DAQmx_Val_ActiveHigh = (int)10095;
	public static final int DAQmx_Val_ActiveLow = (int)10096;
	public static final int DAQmx_Val_MSeriesDAQ = (int)14643;
	public static final int DAQmx_Val_XSeriesDAQ = (int)15858;
	public static final int DAQmx_Val_ESeriesDAQ = (int)14642;
	public static final int DAQmx_Val_SSeriesDAQ = (int)14644;
	public static final int DAQmx_Val_BSeriesDAQ = (int)14662;
	public static final int DAQmx_Val_SCSeriesDAQ = (int)14645;
	public static final int DAQmx_Val_USBDAQ = (int)14646;
	public static final int DAQmx_Val_AOSeries = (int)14647;
	public static final int DAQmx_Val_DigitalIO = (int)14648;
	public static final int DAQmx_Val_TIOSeries = (int)14661;
	public static final int DAQmx_Val_DynamicSignalAcquisition = (int)14649;
	public static final int DAQmx_Val_Switches = (int)14650;
	public static final int DAQmx_Val_CompactDAQChassis = (int)14658;
	public static final int DAQmx_Val_CSeriesModule = (int)14659;
	public static final int DAQmx_Val_SCXIModule = (int)14660;
	public static final int DAQmx_Val_SCCConnectorBlock = (int)14704;
	public static final int DAQmx_Val_SCCModule = (int)14705;
	public static final int DAQmx_Val_NIELVIS = (int)14755;
	public static final int DAQmx_Val_NetworkDAQ = (int)14829;
	public static final int DAQmx_Val_SCExpress = (int)15886;
	public static final int DAQmx_Val_Pt3750 = (int)12481;
	public static final int DAQmx_Val_Pt3851 = (int)10071;
	public static final int DAQmx_Val_Pt3911 = (int)12482;
	public static final int DAQmx_Val_Pt3916 = (int)10069;
	public static final int DAQmx_Val_Pt3920 = (int)10053;
	public static final int DAQmx_Val_Pt3928 = (int)12483;
	public static final int DAQmx_Val_mVoltsPerVoltPerDegree = (int)12507;
	public static final int DAQmx_Val_mVoltsPerVoltPerRadian = (int)12508;
	public static final int DAQmx_Val_LosslessPacking = (int)12555;
	public static final int DAQmx_Val_LossyLSBRemoval = (int)12556;
	public static final int DAQmx_Val_FirstSample = (int)10424;
	public static final int DAQmx_Val_CurrReadPos = (int)10425;
	public static final int DAQmx_Val_RefTrig = (int)10426;
	public static final int DAQmx_Val_FirstPretrigSamp = (int)10427;
	public static final int DAQmx_Val_MostRecentSamp = (int)10428;
	public static final int DAQmx_Val_AllowRegen = (int)10097;
	public static final int DAQmx_Val_DoNotAllowRegen = (int)10158;
	public static final int DAQmx_Val_2Wire = (int)2;
	public static final int DAQmx_Val_3Wire = (int)3;
	*/
	public static final int DAQmx_Val_Ohms = (int)10384;
	/*
	public static final int DAQmx_Val_Bits = (int)10109;
	public static final int DAQmx_Val_SCXI1124Range0to1V = (int)14629;
	public static final int DAQmx_Val_SCXI1124Range0to5V = (int)14630;
	public static final int DAQmx_Val_SCXI1124Range0to10V = (int)14631;
	public static final int DAQmx_Val_SCXI1124RangeNeg1to1V = (int)14632;
	public static final int DAQmx_Val_SCXI1124RangeNeg5to5V = (int)14633;
	public static final int DAQmx_Val_SCXI1124RangeNeg10to10V = (int)14634;
	public static final int DAQmx_Val_SCXI1124Range0to20mA = (int)14635;
	public static final int DAQmx_Val_SampClkActiveEdge = (int)14617;
	public static final int DAQmx_Val_SampClkInactiveEdge = (int)14618;
	public static final int DAQmx_Val_HandshakeTriggerAsserts = (int)12552;
	public static final int DAQmx_Val_HandshakeTriggerDeasserts = (int)12553;
	public static final int DAQmx_Val_SampClk = (int)10388;
	public static final int DAQmx_Val_BurstHandshake = (int)12548;
	public static final int DAQmx_Val_Handshake = (int)10389;
	public static final int DAQmx_Val_Implicit = (int)10451;
	public static final int DAQmx_Val_OnDemand = (int)10390;
	public static final int DAQmx_Val_ChangeDetection = (int)12504;
	public static final int DAQmx_Val_PipelinedSampClk = (int)14668;
	public static final int DAQmx_Val_Linear = (int)10447;
	public static final int DAQmx_Val_MapRanges = (int)10448;
	public static final int DAQmx_Val_Polynomial = (int)10449;
	public static final int DAQmx_Val_Table = (int)10450;
	public static final int DAQmx_Val_TwoPointLinear = (int)15898;
	public static final int DAQmx_Val_AandB = (int)12515;
	public static final int DAQmx_Val_R1 = (int)12465;
	public static final int DAQmx_Val_R2 = (int)12466;
	public static final int DAQmx_Val_R3 = (int)12467;
	public static final int DAQmx_Val_R4 = (int)14813;
	public static final int DAQmx_Val_AIConvertClock = (int)12484;
	public static final int DAQmx_Val_10MHzRefClock = (int)12536;
	public static final int DAQmx_Val_20MHzTimebaseClock = (int)12486;
	public static final int DAQmx_Val_SampleClock = (int)12487;
	public static final int DAQmx_Val_ReferenceTrigger = (int)12490;
	public static final int DAQmx_Val_StartTrigger = (int)12491;
	public static final int DAQmx_Val_AdvCmpltEvent = (int)12492;
	public static final int DAQmx_Val_AIHoldCmpltEvent = (int)12493;
	public static final int DAQmx_Val_CounterOutputEvent = (int)12494;
	public static final int DAQmx_Val_ChangeDetectionEvent = (int)12511;
	public static final int DAQmx_Val_WDTExpiredEvent = (int)12512;
	public static final int DAQmx_Val_SampleCompleteEvent = (int)12530;
	public static final int DAQmx_Val_RisingSlope = (int)10280;
	public static final int DAQmx_Val_FallingSlope = (int)10171;
	public static final int DAQmx_Val_FullBridgeI = (int)10183;
	public static final int DAQmx_Val_FullBridgeII = (int)10184;
	public static final int DAQmx_Val_FullBridgeIII = (int)10185;
	public static final int DAQmx_Val_HalfBridgeI = (int)10188;
	public static final int DAQmx_Val_HalfBridgeII = (int)10189;
	public static final int DAQmx_Val_QuarterBridgeI = (int)10271;
	public static final int DAQmx_Val_QuarterBridgeII = (int)10272;
	public static final int DAQmx_Val_RectangularRosette = (int)15968;
	public static final int DAQmx_Val_DeltaRosette = (int)15969;
	public static final int DAQmx_Val_TeeRosette = (int)15970;
	public static final int DAQmx_Val_PrincipalStrain1 = (int)15971;
	public static final int DAQmx_Val_PrincipalStrain2 = (int)15972;
	public static final int DAQmx_Val_PrincipalStrainAngle = (int)15973;
	public static final int DAQmx_Val_CartesianStrainX = (int)15974;
	public static final int DAQmx_Val_CartesianStrainY = (int)15975;
	public static final int DAQmx_Val_CartesianShearStrainXY = (int)15976;
	public static final int DAQmx_Val_MaxShearStrain = (int)15977;
	public static final int DAQmx_Val_MaxShearStrainAngle = (int)15978;
	*/
	public static final int DAQmx_Val_Strain = (int)10299;
	/*
	public static final int DAQmx_Val_Finite = (int)10172;
	public static final int DAQmx_Val_Cont = (int)10117;
	public static final int DAQmx_Val_Source = (int)10439;
	public static final int DAQmx_Val_Load = (int)10440;
	public static final int DAQmx_Val_ReservedForRouting = (int)10441;
	public static final int DAQmx_Val_Master = (int)15888;
	public static final int DAQmx_Val_Slave = (int)15889;
	public static final int DAQmx_Val_J_Type_TC = (int)10072;
	public static final int DAQmx_Val_K_Type_TC = (int)10073;
	public static final int DAQmx_Val_N_Type_TC = (int)10077;
	public static final int DAQmx_Val_R_Type_TC = (int)10082;
	public static final int DAQmx_Val_S_Type_TC = (int)10085;
	public static final int DAQmx_Val_T_Type_TC = (int)10086;
	public static final int DAQmx_Val_B_Type_TC = (int)10047;
	public static final int DAQmx_Val_E_Type_TC = (int)10055;
	public static final int DAQmx_Val_SingleCycle = (int)14613;
	public static final int DAQmx_Val_Multicycle = (int)14614;
	public static final int DAQmx_Val_DigEdge = (int)10150;
	public static final int DAQmx_Val_Software = (int)10292;
	public static final int DAQmx_Val_AnlgLvl = (int)10101;
	public static final int DAQmx_Val_AnlgWin = (int)10103;
	public static final int DAQmx_Val_DigLvl = (int)10152;
	public static final int DAQmx_Val_DigPattern = (int)10398;
	public static final int DAQmx_Val_AnlgEdge = (int)10099;
	public static final int DAQmx_Val_HaltOutputAndError = (int)14615;
	public static final int DAQmx_Val_PauseUntilDataAvailable = (int)14616;
        */
	public static final int DAQmx_Val_Volts = (int)10348;

    public int DAQmxReadAnalogF64(Pointer handle, int i, int i0, FillMode fillMode, DoubleBuffer result, int inputBufferSize, IntBuffer samplesPerChannelRead, Object object);
	public static final int DAQmx_Val_g = (int)10186;
    /*
	public static final int DAQmx_Val_MetersPerSecond = (int)15959;
	public static final int DAQmx_Val_InchesPerSecond = (int)15960;
	public static final int DAQmx_Val_MillivoltsPerMillimeterPerSecond = (int)15963;
	public static final int DAQmx_Val_MilliVoltsPerInchPerSecond = (int)15964;
	public static final int DAQmx_Val_WaitForInterrupt = (int)12523;
	public static final int DAQmx_Val_Poll = (int)12524;
	public static final int DAQmx_Val_Yield = (int)12525;
	public static final int DAQmx_Val_Sleep = (int)12547;
	public static final int DAQmx_Val_EnteringWin = (int)10163;
	public static final int DAQmx_Val_LeavingWin = (int)10208;
	public static final int DAQmx_Val_InsideWin = (int)10199;
	public static final int DAQmx_Val_OutsideWin = (int)10251;
	public static final int DAQmx_Val_WriteToEEPROM = (int)12538;
	public static final int DAQmx_Val_WriteToPROM = (int)12539;
	public static final int DAQmx_Val_DoNotWrite = (int)12540;
	public static final int DAQmx_Val_CurrWritePos = (int)10430;
	public static final int DAQmx_Val_ZeroVoltsOrAmps = (int)12526;
	public static final int DAQmx_Val_RepeatedData = (int)16062;
	public static final int DAQmx_Val_SentinelValue = (int)16063;
	public static final int DAQmx_Val_LogicLevelPullUp = (int)16064;
	public static final int DAQmx_Val_Local = (int)16095;
	public static final int DAQmx_Val_Remote = (int)16096;
	public static final String DAQmx_Val_Switch_Topology_Configured_Topology = (String)"Configured Topology";
	public static final String DAQmx_Val_Switch_Topology_1127_1_Wire_64x1_Mux = (String)"1127/1-Wire 64x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_1127_2_Wire_32x1_Mux = (String)"1127/2-Wire 32x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_1127_2_Wire_4x8_Matrix = (String)"1127/2-Wire 4x8 Matrix";
	public static final String DAQmx_Val_Switch_Topology_1127_4_Wire_16x1_Mux = (String)"1127/4-Wire 16x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_1127_Independent = (String)"1127/Independent";
	public static final String DAQmx_Val_Switch_Topology_1128_1_Wire_64x1_Mux = (String)"1128/1-Wire 64x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_1128_2_Wire_32x1_Mux = (String)"1128/2-Wire 32x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_1128_2_Wire_4x8_Matrix = (String)"1128/2-Wire 4x8 Matrix";
	public static final String DAQmx_Val_Switch_Topology_1128_4_Wire_16x1_Mux = (String)"1128/4-Wire 16x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_1128_Independent = (String)"1128/Independent";
	public static final String DAQmx_Val_Switch_Topology_1129_2_Wire_16x16_Matrix = (String)"1129/2-Wire 16x16 Matrix";
	public static final String DAQmx_Val_Switch_Topology_1129_2_Wire_8x32_Matrix = (String)"1129/2-Wire 8x32 Matrix";
	public static final String DAQmx_Val_Switch_Topology_1129_2_Wire_4x64_Matrix = (String)"1129/2-Wire 4x64 Matrix";
	public static final String DAQmx_Val_Switch_Topology_1129_2_Wire_Dual_8x16_Matrix = (String)"1129/2-Wire Dual 8x16 Matrix";
	public static final String DAQmx_Val_Switch_Topology_1129_2_Wire_Dual_4x32_Matrix = (String)"1129/2-Wire Dual 4x32 Matrix";
	public static final String DAQmx_Val_Switch_Topology_1129_2_Wire_Quad_4x16_Matrix = (String)"1129/2-Wire Quad 4x16 Matrix";
	public static final String DAQmx_Val_Switch_Topology_1130_1_Wire_256x1_Mux = (String)"1130/1-Wire 256x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_1130_1_Wire_Dual_128x1_Mux = (String)"1130/1-Wire Dual 128x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_1130_2_Wire_128x1_Mux = (String)"1130/2-Wire 128x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_1130_4_Wire_64x1_Mux = (String)"1130/4-Wire 64x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_1130_1_Wire_4x64_Matrix = (String)"1130/1-Wire 4x64 Matrix";
	public static final String DAQmx_Val_Switch_Topology_1130_1_Wire_8x32_Matrix = (String)"1130/1-Wire 8x32 Matrix";
	public static final String DAQmx_Val_Switch_Topology_1130_1_Wire_Octal_32x1_Mux = (String)"1130/1-Wire Octal 32x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_1130_1_Wire_Quad_64x1_Mux = (String)"1130/1-Wire Quad 64x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_1130_1_Wire_Sixteen_16x1_Mux = (String)"1130/1-Wire Sixteen 16x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_1130_2_Wire_4x32_Matrix = (String)"1130/2-Wire 4x32 Matrix";
	public static final String DAQmx_Val_Switch_Topology_1130_2_Wire_Octal_16x1_Mux = (String)"1130/2-Wire Octal 16x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_1130_2_Wire_Quad_32x1_Mux = (String)"1130/2-Wire Quad 32x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_1130_4_Wire_Quad_16x1_Mux = (String)"1130/4-Wire Quad 16x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_1130_Independent = (String)"1130/Independent";
	public static final String DAQmx_Val_Switch_Topology_1160_16_SPDT = (String)"1160/16-SPDT";
	public static final String DAQmx_Val_Switch_Topology_1161_8_SPDT = (String)"1161/8-SPDT";
	public static final String DAQmx_Val_Switch_Topology_1163R_Octal_4x1_Mux = (String)"1163R/Octal 4x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_1166_32_SPDT = (String)"1166/32-SPDT";
	public static final String DAQmx_Val_Switch_Topology_1166_16_DPDT = (String)"1166/16-DPDT";
	public static final String DAQmx_Val_Switch_Topology_1167_Independent = (String)"1167/Independent";
	public static final String DAQmx_Val_Switch_Topology_1169_100_SPST = (String)"1169/100-SPST";
	public static final String DAQmx_Val_Switch_Topology_1169_50_DPST = (String)"1169/50-DPST";
	public static final String DAQmx_Val_Switch_Topology_1175_1_Wire_196x1_Mux = (String)"1175/1-Wire 196x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_1175_2_Wire_98x1_Mux = (String)"1175/2-Wire 98x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_1175_2_Wire_95x1_Mux = (String)"1175/2-Wire 95x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_1190_Quad_4x1_Mux = (String)"1190/Quad 4x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_1191_Quad_4x1_Mux = (String)"1191/Quad 4x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_1192_8_SPDT = (String)"1192/8-SPDT";
	public static final String DAQmx_Val_Switch_Topology_1193_32x1_Mux = (String)"1193/32x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_1193_Dual_16x1_Mux = (String)"1193/Dual 16x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_1193_Quad_8x1_Mux = (String)"1193/Quad 8x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_1193_16x1_Terminated_Mux = (String)"1193/16x1 Terminated Mux";
	public static final String DAQmx_Val_Switch_Topology_1193_Dual_8x1_Terminated_Mux = (String)"1193/Dual 8x1 Terminated Mux";
	public static final String DAQmx_Val_Switch_Topology_1193_Quad_4x1_Terminated_Mux = (String)"1193/Quad 4x1 Terminated Mux";
	public static final String DAQmx_Val_Switch_Topology_1193_Independent = (String)"1193/Independent";
	public static final String DAQmx_Val_Switch_Topology_1194_Quad_4x1_Mux = (String)"1194/Quad 4x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_1195_Quad_4x1_Mux = (String)"1195/Quad 4x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_2501_1_Wire_48x1_Mux = (String)"2501/1-Wire 48x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_2501_1_Wire_48x1_Amplified_Mux = (String)"2501/1-Wire 48x1 Amplified Mux";
	public static final String DAQmx_Val_Switch_Topology_2501_2_Wire_24x1_Mux = (String)"2501/2-Wire 24x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_2501_2_Wire_24x1_Amplified_Mux = (String)"2501/2-Wire 24x1 Amplified Mux";
	public static final String DAQmx_Val_Switch_Topology_2501_2_Wire_Dual_12x1_Mux = (String)"2501/2-Wire Dual 12x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_2501_2_Wire_Quad_6x1_Mux = (String)"2501/2-Wire Quad 6x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_2501_2_Wire_4x6_Matrix = (String)"2501/2-Wire 4x6 Matrix";
	public static final String DAQmx_Val_Switch_Topology_2501_4_Wire_12x1_Mux = (String)"2501/4-Wire 12x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_2503_1_Wire_48x1_Mux = (String)"2503/1-Wire 48x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_2503_2_Wire_24x1_Mux = (String)"2503/2-Wire 24x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_2503_2_Wire_Dual_12x1_Mux = (String)"2503/2-Wire Dual 12x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_2503_2_Wire_Quad_6x1_Mux = (String)"2503/2-Wire Quad 6x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_2503_2_Wire_4x6_Matrix = (String)"2503/2-Wire 4x6 Matrix";
	public static final String DAQmx_Val_Switch_Topology_2503_4_Wire_12x1_Mux = (String)"2503/4-Wire 12x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_2510_Independent = (String)"2510/Independent";
	public static final String DAQmx_Val_Switch_Topology_2512_Independent = (String)"2512/Independent";
	public static final String DAQmx_Val_Switch_Topology_2514_Independent = (String)"2514/Independent";
	public static final String DAQmx_Val_Switch_Topology_2515_Independent = (String)"2515/Independent";
	public static final String DAQmx_Val_Switch_Topology_2520_80_SPST = (String)"2520/80-SPST";
	public static final String DAQmx_Val_Switch_Topology_2521_40_DPST = (String)"2521/40-DPST";
	public static final String DAQmx_Val_Switch_Topology_2522_53_SPDT = (String)"2522/53-SPDT";
	public static final String DAQmx_Val_Switch_Topology_2523_26_DPDT = (String)"2523/26-DPDT";
	public static final String DAQmx_Val_Switch_Topology_2527_1_Wire_64x1_Mux = (String)"2527/1-Wire 64x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_2527_1_Wire_Dual_32x1_Mux = (String)"2527/1-Wire Dual 32x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_2527_2_Wire_32x1_Mux = (String)"2527/2-Wire 32x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_2527_2_Wire_Dual_16x1_Mux = (String)"2527/2-Wire Dual 16x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_2527_4_Wire_16x1_Mux = (String)"2527/4-Wire 16x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_2527_Independent = (String)"2527/Independent";
	public static final String DAQmx_Val_Switch_Topology_2529_2_Wire_8x16_Matrix = (String)"2529/2-Wire 8x16 Matrix";
	public static final String DAQmx_Val_Switch_Topology_2529_2_Wire_4x32_Matrix = (String)"2529/2-Wire 4x32 Matrix";
	public static final String DAQmx_Val_Switch_Topology_2529_2_Wire_Dual_4x16_Matrix = (String)"2529/2-Wire Dual 4x16 Matrix";
	public static final String DAQmx_Val_Switch_Topology_2530_1_Wire_128x1_Mux = (String)"2530/1-Wire 128x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_2530_1_Wire_Dual_64x1_Mux = (String)"2530/1-Wire Dual 64x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_2530_2_Wire_64x1_Mux = (String)"2530/2-Wire 64x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_2530_4_Wire_32x1_Mux = (String)"2530/4-Wire 32x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_2530_1_Wire_4x32_Matrix = (String)"2530/1-Wire 4x32 Matrix";
	public static final String DAQmx_Val_Switch_Topology_2530_1_Wire_8x16_Matrix = (String)"2530/1-Wire 8x16 Matrix";
	public static final String DAQmx_Val_Switch_Topology_2530_1_Wire_Octal_16x1_Mux = (String)"2530/1-Wire Octal 16x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_2530_1_Wire_Quad_32x1_Mux = (String)"2530/1-Wire Quad 32x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_2530_2_Wire_4x16_Matrix = (String)"2530/2-Wire 4x16 Matrix";
	public static final String DAQmx_Val_Switch_Topology_2530_2_Wire_Dual_32x1_Mux = (String)"2530/2-Wire Dual 32x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_2530_2_Wire_Quad_16x1_Mux = (String)"2530/2-Wire Quad 16x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_2530_4_Wire_Dual_16x1_Mux = (String)"2530/4-Wire Dual 16x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_2530_Independent = (String)"2530/Independent";
	public static final String DAQmx_Val_Switch_Topology_2531_1_Wire_4x128_Matrix = (String)"2531/1-Wire 4x128 Matrix";
	public static final String DAQmx_Val_Switch_Topology_2531_1_Wire_8x64_Matrix = (String)"2531/1-Wire 8x64 Matrix";
	public static final String DAQmx_Val_Switch_Topology_2531_1_Wire_Dual_4x64_Matrix = (String)"2531/1-Wire Dual 4x64 Matrix";
	public static final String DAQmx_Val_Switch_Topology_2531_1_Wire_Dual_8x32_Matrix = (String)"2531/1-Wire Dual 8x32 Matrix";
	public static final String DAQmx_Val_Switch_Topology_2532_1_Wire_16x32_Matrix = (String)"2532/1-Wire 16x32 Matrix";
	public static final String DAQmx_Val_Switch_Topology_2532_1_Wire_4x128_Matrix = (String)"2532/1-Wire 4x128 Matrix";
	public static final String DAQmx_Val_Switch_Topology_2532_1_Wire_8x64_Matrix = (String)"2532/1-Wire 8x64 Matrix";
	public static final String DAQmx_Val_Switch_Topology_2532_1_Wire_Dual_16x16_Matrix = (String)"2532/1-Wire Dual 16x16 Matrix";
	public static final String DAQmx_Val_Switch_Topology_2532_1_Wire_Dual_4x64_Matrix = (String)"2532/1-Wire Dual 4x64 Matrix";
	public static final String DAQmx_Val_Switch_Topology_2532_1_Wire_Dual_8x32_Matrix = (String)"2532/1-Wire Dual 8x32 Matrix";
	public static final String DAQmx_Val_Switch_Topology_2532_1_Wire_Quad_4x32_Matrix = (String)"2532/1-Wire Quad 4x32 Matrix";
	public static final String DAQmx_Val_Switch_Topology_2532_1_Wire_Sixteen_2x16_Matrix = (String)"2532/1-Wire Sixteen 2x16 Matrix";
	public static final String DAQmx_Val_Switch_Topology_2532_2_Wire_16x16_Matrix = (String)"2532/2-Wire 16x16 Matrix";
	public static final String DAQmx_Val_Switch_Topology_2532_2_Wire_4x64_Matrix = (String)"2532/2-Wire 4x64 Matrix";
	public static final String DAQmx_Val_Switch_Topology_2532_2_Wire_8x32_Matrix = (String)"2532/2-Wire 8x32 Matrix";
	public static final String DAQmx_Val_Switch_Topology_2532_2_Wire_Dual_4x32_Matrix = (String)"2532/2-Wire Dual 4x32 Matrix";
	public static final String DAQmx_Val_Switch_Topology_2533_1_Wire_4x64_Matrix = (String)"2533/1-Wire 4x64 Matrix";
	public static final String DAQmx_Val_Switch_Topology_2534_1_Wire_8x32_Matrix = (String)"2534/1-Wire 8x32 Matrix";
	public static final String DAQmx_Val_Switch_Topology_2535_1_Wire_4x136_Matrix = (String)"2535/1-Wire 4x136 Matrix";
	public static final String DAQmx_Val_Switch_Topology_2536_1_Wire_8x68_Matrix = (String)"2536/1-Wire 8x68 Matrix";
	public static final String DAQmx_Val_Switch_Topology_2540_1_Wire_8x9_Matrix = (String)"2540/1-Wire 8x9 Matrix";
	public static final String DAQmx_Val_Switch_Topology_2541_1_Wire_8x12_Matrix = (String)"2541/1-Wire 8x12 Matrix";
	public static final String DAQmx_Val_Switch_Topology_2542_Quad_2x1_Terminated_Mux = (String)"2542/Quad 2x1 Terminated Mux";
	public static final String DAQmx_Val_Switch_Topology_2543_Dual_4x1_Terminated_Mux = (String)"2543/Dual 4x1 Terminated Mux";
	public static final String DAQmx_Val_Switch_Topology_2544_8x1_Terminated_Mux = (String)"2544/8x1 Terminated Mux";
	public static final String DAQmx_Val_Switch_Topology_2545_4x1_Terminated_Mux = (String)"2545/4x1 Terminated Mux";
	public static final String DAQmx_Val_Switch_Topology_2546_Dual_4x1_Mux = (String)"2546/Dual 4x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_2547_8x1_Mux = (String)"2547/8x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_2548_4_SPDT = (String)"2548/4-SPDT";
	public static final String DAQmx_Val_Switch_Topology_2549_Terminated_2_SPDT = (String)"2549/Terminated 2-SPDT";
	public static final String DAQmx_Val_Switch_Topology_2554_4x1_Mux = (String)"2554/4x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_2555_4x1_Terminated_Mux = (String)"2555/4x1 Terminated Mux";
	public static final String DAQmx_Val_Switch_Topology_2556_Dual_4x1_Mux = (String)"2556/Dual 4x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_2557_8x1_Mux = (String)"2557/8x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_2558_4_SPDT = (String)"2558/4-SPDT";
	public static final String DAQmx_Val_Switch_Topology_2559_Terminated_2_SPDT = (String)"2559/Terminated 2-SPDT";
	public static final String DAQmx_Val_Switch_Topology_2564_16_SPST = (String)"2564/16-SPST";
	public static final String DAQmx_Val_Switch_Topology_2564_8_DPST = (String)"2564/8-DPST";
	public static final String DAQmx_Val_Switch_Topology_2565_16_SPST = (String)"2565/16-SPST";
	public static final String DAQmx_Val_Switch_Topology_2566_16_SPDT = (String)"2566/16-SPDT";
	public static final String DAQmx_Val_Switch_Topology_2566_8_DPDT = (String)"2566/8-DPDT";
	public static final String DAQmx_Val_Switch_Topology_2567_Independent = (String)"2567/Independent";
	public static final String DAQmx_Val_Switch_Topology_2568_31_SPST = (String)"2568/31-SPST";
	public static final String DAQmx_Val_Switch_Topology_2568_15_DPST = (String)"2568/15-DPST";
	public static final String DAQmx_Val_Switch_Topology_2569_100_SPST = (String)"2569/100-SPST";
	public static final String DAQmx_Val_Switch_Topology_2569_50_DPST = (String)"2569/50-DPST";
	public static final String DAQmx_Val_Switch_Topology_2570_40_SPDT = (String)"2570/40-SPDT";
	public static final String DAQmx_Val_Switch_Topology_2570_20_DPDT = (String)"2570/20-DPDT";
	public static final String DAQmx_Val_Switch_Topology_2571_66_SPDT = (String)"2571/66-SPDT";
	public static final String DAQmx_Val_Switch_Topology_2575_1_Wire_196x1_Mux = (String)"2575/1-Wire 196x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_2575_2_Wire_98x1_Mux = (String)"2575/2-Wire 98x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_2575_2_Wire_95x1_Mux = (String)"2575/2-Wire 95x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_2576_2_Wire_64x1_Mux = (String)"2576/2-Wire 64x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_2576_2_Wire_Dual_32x1_Mux = (String)"2576/2-Wire Dual 32x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_2576_2_Wire_Octal_8x1_Mux = (String)"2576/2-Wire Octal 8x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_2576_2_Wire_Quad_16x1_Mux = (String)"2576/2-Wire Quad 16x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_2576_2_Wire_Sixteen_4x1_Mux = (String)"2576/2-Wire Sixteen 4x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_2576_Independent = (String)"2576/Independent";
	public static final String DAQmx_Val_Switch_Topology_2584_1_Wire_12x1_Mux = (String)"2584/1-Wire 12x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_2584_1_Wire_Dual_6x1_Mux = (String)"2584/1-Wire Dual 6x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_2584_2_Wire_6x1_Mux = (String)"2584/2-Wire 6x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_2584_Independent = (String)"2584/Independent";
	public static final String DAQmx_Val_Switch_Topology_2585_1_Wire_10x1_Mux = (String)"2585/1-Wire 10x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_2586_10_SPST = (String)"2586/10-SPST";
	public static final String DAQmx_Val_Switch_Topology_2586_5_DPST = (String)"2586/5-DPST";
	public static final String DAQmx_Val_Switch_Topology_2590_4x1_Mux = (String)"2590/4x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_2591_4x1_Mux = (String)"2591/4x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_2593_16x1_Mux = (String)"2593/16x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_2593_Dual_8x1_Mux = (String)"2593/Dual 8x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_2593_8x1_Terminated_Mux = (String)"2593/8x1 Terminated Mux";
	public static final String DAQmx_Val_Switch_Topology_2593_Dual_4x1_Terminated_Mux = (String)"2593/Dual 4x1 Terminated Mux";
	public static final String DAQmx_Val_Switch_Topology_2593_Independent = (String)"2593/Independent";
	public static final String DAQmx_Val_Switch_Topology_2594_4x1_Mux = (String)"2594/4x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_2595_4x1_Mux = (String)"2595/4x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_2596_Dual_6x1_Mux = (String)"2596/Dual 6x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_2597_6x1_Terminated_Mux = (String)"2597/6x1 Terminated Mux";
	public static final String DAQmx_Val_Switch_Topology_2598_Dual_Transfer = (String)"2598/Dual Transfer";
	public static final String DAQmx_Val_Switch_Topology_2599_2_SPDT = (String)"2599/2-SPDT";
	public static final String DAQmx_Val_Switch_Topology_2720_Independent = (String)"2720/Independent";
	public static final String DAQmx_Val_Switch_Topology_2722_Independent = (String)"2722/Independent";
	public static final String DAQmx_Val_Switch_Topology_2725_Independent = (String)"2725/Independent";
	public static final String DAQmx_Val_Switch_Topology_2727_Independent = (String)"2727/Independent";
	public static final String DAQmx_Val_Switch_Topology_2790_Independent = (String)"2790/Independent";
	public static final String DAQmx_Val_Switch_Topology_2796_Dual_6x1_Mux = (String)"2796/Dual 6x1 Mux";
	public static final String DAQmx_Val_Switch_Topology_2797_6x1_Terminated_Mux = (String)"2797/6x1 Terminated Mux";
	public static final String DAQmx_Val_Switch_Topology_2798_Dual_Transfer = (String)"2798/Dual Transfer";
	public static final String DAQmx_Val_Switch_Topology_2799_2_SPDT = (String)"2799/2-SPDT";
	public static final int DAQmxSuccess = (int)(0);
	public static final int DAQmxErrorInconsistentAODACRangeAcrossTasks = (int)(-209825);
	public static final int DAQmxErrorInconsistentDTToWrite = (int)(-209824);
	public static final int DAQmxErrorFunctionObsolete = (int)(-209823);
	public static final int DAQmxErrorNegativeDurationNotSupported = (int)(-209822);
	public static final int DAQmxErrorDurationTooSmall = (int)(-209821);
	public static final int DAQmxErrorDurationTooLong = (int)(-209820);
	public static final int DAQmxErrorDurationBasedNotSupportedForSpecifiedTimingMode = (int)(-209819);
	public static final int DAQmxErrorInvalidLEDState = (int)(-209818);
	public static final int DAQmxErrorWatchdogStatesNotUniform = (int)(-209817);
	public static final int DAQmxErrorSelfTestFailedPowerSupplyOutOfTolerance = (int)(-209816);
	public static final int DAQmxErrorHWTSPMultiSampleWrite = (int)(-209815);
	public static final int DAQmxErrorOnboardRegenExceedsChannelLimit = (int)(-209814);
	public static final int DAQmxErrorWatchdogChannelExpirationStateNotSpecified = (int)(-209813);
	public static final int DAQmxErrorInvalidShuntSourceForCalibration = (int)(-209812);
	public static final int DAQmxErrorInvalidShuntSelectForCalibration = (int)(-209811);
	public static final int DAQmxErrorInvalidShuntCalibrationConfiguration = (int)(-209810);
	public static final int DAQmxErrorBufferedOperationsNotSupportedOnChannelStandalone = (int)(-209809);
	public static final int DAQmxErrorFeatureNotAvailableOnAccessory = (int)(-209808);
	public static final int DAQmxErrorInconsistentThreshVoltageAcrossTerminals = (int)(-209807);
	public static final int DAQmxErrorDAQmxIsNotInstalledOnTarget = (int)(-209806);
	public static final int DAQmxErrorCOCannotKeepUpInHWTimedSinglePoint = (int)(-209805);
	public static final int DAQmxErrorWaitForNextSampClkDetected3OrMoreSampClks = (int)(-209803);
	public static final int DAQmxErrorWaitForNextSampClkDetectedMissedSampClk = (int)(-209802);
	public static final int DAQmxErrorWriteNotCompleteBeforeSampClk = (int)(-209801);
	public static final int DAQmxErrorReadNotCompleteBeforeSampClk = (int)(-209800);
	public static final int DAQmxErrorInconsistentDigitalFilteringAcrossTerminals = (int)(-201510);
	public static final int DAQmxErrorInconsistentPullUpCfgAcrossTerminals = (int)(-201509);
	public static final int DAQmxErrorInconsistentTermCfgAcrossTerminals = (int)(-201508);
	public static final int DAQmxErrorVCXODCMBecameUnlocked = (int)(-201507);
	public static final int DAQmxErrorPLLDACUpdateFailed = (int)(-201506);
	public static final int DAQmxErrorNoCabledDevice = (int)(-201505);
	public static final int DAQmxErrorLostRefClk = (int)(-201504);
	public static final int DAQmxErrorCantUseAITimingEngineWithCounters = (int)(-201503);
	public static final int DAQmxErrorDACOffsetValNotSet = (int)(-201502);
	public static final int DAQmxErrorCalAdjustRefValOutOfRange = (int)(-201501);
	public static final int DAQmxErrorChansForCalAdjustMustPerformSetContext = (int)(-201500);
	public static final int DAQmxErrorGetCalDataInvalidForCalMode = (int)(-201499);
	public static final int DAQmxErrorNoIEPEWithACNotAllowed = (int)(-201498);
	public static final int DAQmxErrorSetupCalNeededBeforeGetCalDataPoints = (int)(-201497);
	public static final int DAQmxErrorVoltageNotCalibrated = (int)(-201496);
	public static final int DAQmxErrorMissingRangeForCalibration = (int)(-201495);
	public static final int DAQmxErrorMultipleChansNotSupportedDuringCalAdjust = (int)(-201494);
	public static final int DAQmxErrorShuntCalFailedOutOfRange = (int)(-201493);
	public static final int DAQmxErrorOperationNotSupportedOnSimulatedDevice = (int)(-201492);
	public static final int DAQmxErrorFirmwareVersionSameAsInstalledVersion = (int)(-201491);
	public static final int DAQmxErrorFirmwareVersionOlderThanInstalledVersion = (int)(-201490);
	public static final int DAQmxErrorFirmwareUpdateInvalidState = (int)(-201489);
	public static final int DAQmxErrorFirmwareUpdateInvalidID = (int)(-201488);
	public static final int DAQmxErrorFirmwareUpdateAutomaticManagementEnabled = (int)(-201487);
	public static final int DAQmxErrorSetupCalibrationNotCalled = (int)(-201486);
	public static final int DAQmxErrorCalMeasuredDataSizeVsActualDataSizeMismatch = (int)(-201485);
	public static final int DAQmxErrorCDAQMissingDSAMasterForChanExpansion = (int)(-201484);
	public static final int DAQmxErrorCDAQMasterNotFoundForChanExpansion = (int)(-201483);
	public static final int DAQmxErrorAllChansShouldBeProvidedForCalibration = (int)(-201482);
	public static final int DAQmxErrorMustSpecifyExpirationStateForAllLinesInRange = (int)(-201481);
	public static final int DAQmxErrorOpenSessionExists = (int)(-201480);
	public static final int DAQmxErrorCannotQueryTerminalForSWArmStart = (int)(-201479);
	public static final int DAQmxErrorChassisWatchdogTimerExpired = (int)(-201478);
	public static final int DAQmxErrorCantReserveWatchdogTaskWhileOtherTasksReserved = (int)(-201477);
	public static final int DAQmxErrorCantReserveTaskWhileWatchdogTaskReserving = (int)(-201476);
	public static final int DAQmxErrorAuxPowerSourceRequired = (int)(-201475);
	public static final int DAQmxErrorDeviceNotSupportedOnLocalSystem = (int)(-201474);
	public static final int DAQmxErrorOneTimestampChannelRequiredForCombinedNavigationRead = (int)(-201472);
	public static final int DAQmxErrorMultDevsMultPhysChans = (int)(-201471);
	public static final int DAQmxErrorInvalidCalAdjustmentPointValues = (int)(-201470);
	public static final int DAQmxErrorDifferentDigitizerFromCommunicator = (int)(-201469);
	public static final int DAQmxErrorCDAQSyncMasterClockNotPresent = (int)(-201468);
	public static final int DAQmxErrorAssociatedChansHaveConflictingProps = (int)(-201467);
	public static final int DAQmxErrorAutoConfigBetweenMultipleDeviceStatesInvalid = (int)(-201466);
	public static final int DAQmxErrorAutoConfigOfOfflineDevicesInvalid = (int)(-201465);
	public static final int DAQmxErrorExternalFIFOFault = (int)(-201464);
	public static final int DAQmxErrorConnectionsNotReciprocal = (int)(-201463);
	public static final int DAQmxErrorInvalidOutputToInputCDAQSyncConnection = (int)(-201462);
	public static final int DAQmxErrorReferenceClockNotPresent = (int)(-201461);
	public static final int DAQmxErrorBlankStringExpansionFoundNoSupportedCDAQSyncConnectionDevices = (int)(-201460);
	public static final int DAQmxErrorNoDevicesSupportCDAQSyncConnections = (int)(-201459);
	public static final int DAQmxErrorInvalidCDAQSyncTimeoutValue = (int)(-201458);
	public static final int DAQmxErrorCDAQSyncConnectionToSamePort = (int)(-201457);
	public static final int DAQmxErrorDevsWithoutCommonSyncConnectionStrategy = (int)(-201456);
	public static final int DAQmxErrorNoCDAQSyncBetweenPhysAndSimulatedDevs = (int)(-201455);
	public static final int DAQmxErrorUnableToContainCards = (int)(-201454);
	public static final int DAQmxErrorFindDisconnectedBetweenPhysAndSimDeviceStatesInvalid = (int)(-201453);
	public static final int DAQmxErrorOperationAborted = (int)(-201452);
	public static final int DAQmxErrorTwoPortsRequired = (int)(-201451);
	public static final int DAQmxErrorDeviceDoesNotSupportCDAQSyncConnections = (int)(-201450);
	public static final int DAQmxErrorInvalidcDAQSyncPortConnectionFormat = (int)(-201449);
	public static final int DAQmxErrorRosetteMeasurementsNotSpecified = (int)(-201448);
	public static final int DAQmxErrorInvalidNumOfPhysChansForDeltaRosette = (int)(-201447);
	public static final int DAQmxErrorInvalidNumOfPhysChansForTeeRosette = (int)(-201446);
	public static final int DAQmxErrorRosetteStrainChanNamesNeeded = (int)(-201445);
	public static final int DAQmxErrorMultideviceWithOnDemandTiming = (int)(-201444);
	public static final int DAQmxErrorFREQOUTCannotProduceDesiredFrequency3 = (int)(-201443);
	public static final int DAQmxErrorTwoEdgeSeparationSameTerminalSameEdge = (int)(-201442);
	public static final int DAQmxErrorDontMixSyncPulseAndSampClkTimebaseOn449x = (int)(-201441);
	public static final int DAQmxErrorNeitherRefClkNorSampClkTimebaseConfiguredForDSASync = (int)(-201440);
	public static final int DAQmxErrorRetriggeringFiniteCONotAllowed = (int)(-201439);
	public static final int DAQmxErrorDeviceRebootedFromWDTTimeout = (int)(-201438);
	public static final int DAQmxErrorTimeoutValueExceedsMaximum = (int)(-201437);
	public static final int DAQmxErrorSharingDifferentWireModes = (int)(-201436);
	public static final int DAQmxErrorCantPrimeWithEmptyBuffer = (int)(-201435);
	public static final int DAQmxErrorConfigFailedBecauseWatchdogExpired = (int)(-201434);
	public static final int DAQmxErrorWriteFailedBecauseWatchdogChangedLineDirection = (int)(-201433);
	public static final int DAQmxErrorMultipleSubsytemCalibration = (int)(-201432);
	public static final int DAQmxErrorIncorrectChannelForOffsetAdjustment = (int)(-201431);
	public static final int DAQmxErrorInvalidNumRefVoltagesToWrite = (int)(-201430);
	public static final int DAQmxErrorStartTrigDelayWithDSAModule = (int)(-201429);
	public static final int DAQmxErrorMoreThanOneSyncPulseDetected = (int)(-201428);
	public static final int DAQmxErrorDevNotSupportedWithinDAQmxAPI = (int)(-201427);
	public static final int DAQmxErrorDevsWithoutSyncStrategies = (int)(-201426);
	public static final int DAQmxErrorDevsWithoutCommonSyncStrategy = (int)(-201425);
	public static final int DAQmxErrorSyncStrategiesCannotSync = (int)(-201424);
	public static final int DAQmxErrorChassisCommunicationInterrupted = (int)(-201423);
	public static final int DAQmxErrorUnknownCardPowerProfileInCarrier = (int)(-201422);
	public static final int DAQmxErrorAttrNotSupportedOnAccessory = (int)(-201421);
	public static final int DAQmxErrorNetworkDeviceReservedByAnotherHost = (int)(-201420);
	public static final int DAQmxErrorIncorrectFirmwareFileUploaded = (int)(-201419);
	public static final int DAQmxErrorInvalidFirmwareFileUploaded = (int)(-201418);
	public static final int DAQmxErrorInTimerTimeoutOnArm = (int)(-201417);
	public static final int DAQmxErrorCantExceedSlotRelayDriveLimit = (int)(-201416);
	public static final int DAQmxErrorModuleUnsupportedFor9163 = (int)(-201415);
	public static final int DAQmxErrorConnectionsNotSupported = (int)(-201414);
	public static final int DAQmxErrorAccessoryNotPresent = (int)(-201413);
	public static final int DAQmxErrorSpecifiedAccessoryChannelsNotPresentOnDevice = (int)(-201412);
	public static final int DAQmxErrorConnectionsNotSupportedOnAccessory = (int)(-201411);
	public static final int DAQmxErrorRateTooFastForHWTSP = (int)(-201410);
	public static final int DAQmxErrorDelayFromSampleClockOutOfRangeForHWTSP = (int)(-201409);
	public static final int DAQmxErrorAveragingWhenNotInternalHWTSP = (int)(-201408);
	public static final int DAQmxErrorAttributeNotSupportedUnlessHWTSP = (int)(-201407);
	public static final int DAQmxErrorFiveVoltDetectFailed = (int)(-201406);
	public static final int DAQmxErrorAnalogBusStateInconsistent = (int)(-201405);
	public static final int DAQmxErrorCardDetectedDoesNotMatchExpectedCard = (int)(-201404);
	public static final int DAQmxErrorLoggingStartNewFileNotCalled = (int)(-201403);
	public static final int DAQmxErrorLoggingSampsPerFileNotDivisible = (int)(-201402);
	public static final int DAQmxErrorRetrievingNetworkDeviceProperties = (int)(-201401);
	public static final int DAQmxErrorFilePreallocationFailed = (int)(-201400);
	public static final int DAQmxErrorModuleMismatchInSameTimedTask = (int)(-201399);
	public static final int DAQmxErrorInvalidAttributeValuePossiblyDueToOtherAttributeValues = (int)(-201398);
	public static final int DAQmxErrorChangeDetectionStoppedToPreventDeviceHang = (int)(-201397);
	public static final int DAQmxErrorFilterDelayRemovalNotPosssibleWithAnalogTrigger = (int)(-201396);
	public static final int DAQmxErrorNonbufferedOrNoChannels = (int)(-201395);
	public static final int DAQmxErrorTristateLogicLevelNotSpecdForEntirePort = (int)(-201394);
	public static final int DAQmxErrorTristateLogicLevelNotSupportedOnDigOutChan = (int)(-201393);
	public static final int DAQmxErrorTristateLogicLevelNotSupported = (int)(-201392);
	public static final int DAQmxErrorIncompleteGainAndCouplingCalAdjustment = (int)(-201391);
	public static final int DAQmxErrorNetworkStatusConnectionLost = (int)(-201390);
	public static final int DAQmxErrorModuleChangeDuringConnectionLoss = (int)(-201389);
	public static final int DAQmxErrorNetworkDeviceNotReservedByHost = (int)(-201388);
	public static final int DAQmxErrorDuplicateCalibrationAdjustmentInput = (int)(-201387);
	public static final int DAQmxErrorSelfCalFailedContactTechSupport = (int)(-201386);
	public static final int DAQmxErrorSelfCalFailedToConverge = (int)(-201385);
	public static final int DAQmxErrorUnsupportedSimulatedModuleForSimulatedChassis = (int)(-201384);
	public static final int DAQmxErrorLoggingWriteSizeTooBig = (int)(-201383);
	public static final int DAQmxErrorLoggingWriteSizeNotDivisible = (int)(-201382);
	public static final int DAQmxErrorMyDAQPowerRailFault = (int)(-201381);
	public static final int DAQmxErrorDeviceDoesNotSupportThisOperation = (int)(-201380);
	public static final int DAQmxErrorNetworkDevicesNotSupportedOnThisPlatform = (int)(-201379);
	public static final int DAQmxErrorUnknownFirmwareVersion = (int)(-201378);
	public static final int DAQmxErrorFirmwareIsUpdating = (int)(-201377);
	public static final int DAQmxErrorAccessoryEEPROMIsCorrupt = (int)(-201376);
	public static final int DAQmxErrorThrmcplLeadOffsetNullingCalNotSupported = (int)(-201375);
	public static final int DAQmxErrorSelfCalFailedTryExtCal = (int)(-201374);
	public static final int DAQmxErrorOutputP2PNotSupportedWithMultithreadedScripts = (int)(-201373);
	public static final int DAQmxErrorThrmcplCalibrationChannelsOpen = (int)(-201372);
	public static final int DAQmxErrorMDNSServiceInstanceAlreadyInUse = (int)(-201371);
	public static final int DAQmxErrorIPAddressAlreadyInUse = (int)(-201370);
	public static final int DAQmxErrorHostnameAlreadyInUse = (int)(-201369);
	public static final int DAQmxErrorInvalidNumberOfCalAdjustmentPoints = (int)(-201368);
	public static final int DAQmxErrorFilterOrDigitalSyncInternalSignal = (int)(-201367);
	public static final int DAQmxErrorBadDDSSource = (int)(-201366);
	public static final int DAQmxErrorOnboardRegenWithMoreThan16Channels = (int)(-201365);
	public static final int DAQmxErrorTriggerTooFast = (int)(-201364);
	public static final int DAQmxErrorMinMaxOutsideTableRange = (int)(-201363);
	public static final int DAQmxErrorChannelExpansionWithInvalidAnalogTriggerDevice = (int)(-201362);
	public static final int DAQmxErrorSyncPulseSrcInvalidForTask = (int)(-201361);
	public static final int DAQmxErrorInvalidCarrierSlotNumberSpecd = (int)(-201360);
	public static final int DAQmxErrorCardsMustBeInSameCarrier = (int)(-201359);
	public static final int DAQmxErrorCardDevCarrierSimMustMatch = (int)(-201358);
	public static final int DAQmxErrorDevMustHaveAtLeastOneCard = (int)(-201357);
	public static final int DAQmxErrorCardTopologyError = (int)(-201356);
	public static final int DAQmxErrorExceededCarrierPowerLimit = (int)(-201355);
	public static final int DAQmxErrorCardsIncompatible = (int)(-201354);
	public static final int DAQmxErrorAnalogBusNotValid = (int)(-201353);
	public static final int DAQmxErrorReservationConflict = (int)(-201352);
	public static final int DAQmxErrorMemMappedOnDemandNotSupported = (int)(-201351);
	public static final int DAQmxErrorSlaveWithNoStartTriggerConfigured = (int)(-201350);
	public static final int DAQmxErrorChannelExpansionWithDifferentTriggerDevices = (int)(-201349);
	public static final int DAQmxErrorCounterSyncAndRetriggered = (int)(-201348);
	public static final int DAQmxErrorNoExternalSyncPulseDetected = (int)(-201347);
	public static final int DAQmxErrorSlaveAndNoExternalSyncPulse = (int)(-201346);
	public static final int DAQmxErrorCustomTimingRequiredForAttribute = (int)(-201345);
	public static final int DAQmxErrorCustomTimingModeNotSet = (int)(-201344);
	public static final int DAQmxErrorAccessoryPowerTripped = (int)(-201343);
	public static final int DAQmxErrorUnsupportedAccessory = (int)(-201342);
	public static final int DAQmxErrorInvalidAccessoryChange = (int)(-201341);
	public static final int DAQmxErrorFirmwareRequiresUpgrade = (int)(-201340);
	public static final int DAQmxErrorFastExternalTimebaseNotSupportedForDevice = (int)(-201339);
	public static final int DAQmxErrorInvalidShuntLocationForCalibration = (int)(-201338);
	public static final int DAQmxErrorDeviceNameTooLong = (int)(-201337);
	public static final int DAQmxErrorBridgeScalesUnsupported = (int)(-201336);
	public static final int DAQmxErrorMismatchedElecPhysValues = (int)(-201335);
	public static final int DAQmxErrorLinearRequiresUniquePoints = (int)(-201334);
	public static final int DAQmxErrorMissingRequiredScalingParameter = (int)(-201333);
	public static final int DAQmxErrorLoggingNotSupportOnOutputTasks = (int)(-201332);
	public static final int DAQmxErrorMemoryMappedHardwareTimedNonBufferedUnsupported = (int)(-201331);
	public static final int DAQmxErrorCannotUpdatePulseTrainWithAutoIncrementEnabled = (int)(-201330);
	public static final int DAQmxErrorHWTimedSinglePointAndDataXferNotDMA = (int)(-201329);
	public static final int DAQmxErrorSCCSecondStageEmpty = (int)(-201328);
	public static final int DAQmxErrorSCCInvalidDualStageCombo = (int)(-201327);
	public static final int DAQmxErrorSCCInvalidSecondStage = (int)(-201326);
	public static final int DAQmxErrorSCCInvalidFirstStage = (int)(-201325);
	public static final int DAQmxErrorCounterMultipleSampleClockedChannels = (int)(-201324);
	public static final int DAQmxError2CounterMeasurementModeAndSampleClocked = (int)(-201323);
	public static final int DAQmxErrorCantHaveBothMemMappedAndNonMemMappedTasks = (int)(-201322);
	public static final int DAQmxErrorMemMappedDataReadByAnotherProcess = (int)(-201321);
	public static final int DAQmxErrorRetriggeringInvalidForGivenSettings = (int)(-201320);
	public static final int DAQmxErrorAIOverrun = (int)(-201319);
	public static final int DAQmxErrorCOOverrun = (int)(-201318);
	public static final int DAQmxErrorCounterMultipleBufferedChannels = (int)(-201317);
	public static final int DAQmxErrorInvalidTimebaseForCOHWTSP = (int)(-201316);
	public static final int DAQmxErrorWriteBeforeEvent = (int)(-201315);
	public static final int DAQmxErrorCIOverrun = (int)(-201314);
	public static final int DAQmxErrorCounterNonResponsiveAndReset = (int)(-201313);
	public static final int DAQmxErrorMeasTypeOrChannelNotSupportedForLogging = (int)(-201312);
	public static final int DAQmxErrorFileAlreadyOpenedForWrite = (int)(-201311);
	public static final int DAQmxErrorTdmsNotFound = (int)(-201310);
	public static final int DAQmxErrorGenericFileIO = (int)(-201309);
	public static final int DAQmxErrorFiniteSTCCounterNotSupportedForLogging = (int)(-201308);
	public static final int DAQmxErrorMeasurementTypeNotSupportedForLogging = (int)(-201307);
	public static final int DAQmxErrorFileAlreadyOpened = (int)(-201306);
	public static final int DAQmxErrorDiskFull = (int)(-201305);
	public static final int DAQmxErrorFilePathInvalid = (int)(-201304);
	public static final int DAQmxErrorFileVersionMismatch = (int)(-201303);
	public static final int DAQmxErrorFileWriteProtected = (int)(-201302);
	public static final int DAQmxErrorReadNotSupportedForLoggingMode = (int)(-201301);
	public static final int DAQmxErrorAttributeNotSupportedWhenLogging = (int)(-201300);
	public static final int DAQmxErrorLoggingModeNotSupportedNonBuffered = (int)(-201299);
	public static final int DAQmxErrorPropertyNotSupportedWithConflictingProperty = (int)(-201298);
	public static final int DAQmxErrorParallelSSHOnConnector1 = (int)(-201297);
	public static final int DAQmxErrorCOOnlyImplicitSampleTimingTypeSupported = (int)(-201296);
	public static final int DAQmxErrorCalibrationFailedAOOutOfRange = (int)(-201295);
	public static final int DAQmxErrorCalibrationFailedAIOutOfRange = (int)(-201294);
	public static final int DAQmxErrorCalPWMLinearityFailed = (int)(-201293);
	public static final int DAQmxErrorOverrunUnderflowConfigurationCombo = (int)(-201292);
	public static final int DAQmxErrorCannotWriteToFiniteCOTask = (int)(-201291);
	public static final int DAQmxErrorNetworkDAQInvalidWEPKeyLength = (int)(-201290);
	public static final int DAQmxErrorCalInputsShortedNotSupported = (int)(-201289);
	public static final int DAQmxErrorCannotSetPropertyWhenTaskIsReserved = (int)(-201288);
	public static final int DAQmxErrorMinus12VFuseBlown = (int)(-201287);
	public static final int DAQmxErrorPlus12VFuseBlown = (int)(-201286);
	public static final int DAQmxErrorPlus5VFuseBlown = (int)(-201285);
	public static final int DAQmxErrorPlus3VFuseBlown = (int)(-201284);
	public static final int DAQmxErrorDeviceSerialPortError = (int)(-201283);
	public static final int DAQmxErrorPowerUpStateMachineNotDone = (int)(-201282);
	public static final int DAQmxErrorTooManyTriggersSpecifiedInTask = (int)(-201281);
	public static final int DAQmxErrorVerticalOffsetNotSupportedOnDevice = (int)(-201280);
	public static final int DAQmxErrorInvalidCouplingForMeasurementType = (int)(-201279);
	public static final int DAQmxErrorDigitalLineUpdateTooFastForDevice = (int)(-201278);
	public static final int DAQmxErrorCertificateIsTooBigToTransfer = (int)(-201277);
	public static final int DAQmxErrorOnlyPEMOrDERCertiticatesAccepted = (int)(-201276);
	public static final int DAQmxErrorCalCouplingNotSupported = (int)(-201275);
	public static final int DAQmxErrorDeviceNotSupportedIn64Bit = (int)(-201274);
	public static final int DAQmxErrorNetworkDeviceInUse = (int)(-201273);
	public static final int DAQmxErrorInvalidIPv4AddressFormat = (int)(-201272);
	public static final int DAQmxErrorNetworkProductTypeMismatch = (int)(-201271);
	public static final int DAQmxErrorOnlyPEMCertificatesAccepted = (int)(-201270);
	public static final int DAQmxErrorCalibrationRequiresPrototypingBoardEnabled = (int)(-201269);
	public static final int DAQmxErrorAllCurrentLimitingResourcesAlreadyTaken = (int)(-201268);
	public static final int DAQmxErrorUserDefInfoStringBadLength = (int)(-201267);
	public static final int DAQmxErrorPropertyNotFound = (int)(-201266);
	public static final int DAQmxErrorOverVoltageProtectionActivated = (int)(-201265);
	public static final int DAQmxErrorScaledIQWaveformTooLarge = (int)(-201264);
	public static final int DAQmxErrorFirmwareFailedToDownload = (int)(-201263);
	public static final int DAQmxErrorPropertyNotSupportedForBusType = (int)(-201262);
	public static final int DAQmxErrorChangeRateWhileRunningCouldNotBeCompleted = (int)(-201261);
	public static final int DAQmxErrorCannotQueryManualControlAttribute = (int)(-201260);
	public static final int DAQmxErrorInvalidNetworkConfiguration = (int)(-201259);
	public static final int DAQmxErrorInvalidWirelessConfiguration = (int)(-201258);
	public static final int DAQmxErrorInvalidWirelessCountryCode = (int)(-201257);
	public static final int DAQmxErrorInvalidWirelessChannel = (int)(-201256);
	public static final int DAQmxErrorNetworkEEPROMHasChanged = (int)(-201255);
	public static final int DAQmxErrorNetworkSerialNumberMismatch = (int)(-201254);
	public static final int DAQmxErrorNetworkStatusDown = (int)(-201253);
	public static final int DAQmxErrorNetworkTargetUnreachable = (int)(-201252);
	public static final int DAQmxErrorNetworkTargetNotFound = (int)(-201251);
	public static final int DAQmxErrorNetworkStatusTimedOut = (int)(-201250);
	public static final int DAQmxErrorInvalidWirelessSecuritySelection = (int)(-201249);
	public static final int DAQmxErrorNetworkDeviceConfigurationLocked = (int)(-201248);
	public static final int DAQmxErrorNetworkDAQDeviceNotSupported = (int)(-201247);
	public static final int DAQmxErrorNetworkDAQCannotCreateEmptySleeve = (int)(-201246);
	public static final int DAQmxErrorUserDefInfoStringTooLong = (int)(-201245);
	public static final int DAQmxErrorModuleTypeDoesNotMatchModuleTypeInDestination = (int)(-201244);
	public static final int DAQmxErrorInvalidTEDSInterfaceAddress = (int)(-201243);
	public static final int DAQmxErrorDevDoesNotSupportSCXIComm = (int)(-201242);
	public static final int DAQmxErrorSCXICommDevConnector0MustBeCabledToModule = (int)(-201241);
	public static final int DAQmxErrorSCXIModuleDoesNotSupportDigitizationMode = (int)(-201240);
	public static final int DAQmxErrorDevDoesNotSupportMultiplexedSCXIDigitizationMode = (int)(-201239);
	public static final int DAQmxErrorDevOrDevPhysChanDoesNotSupportSCXIDigitization = (int)(-201238);
	public static final int DAQmxErrorInvalidPhysChanName = (int)(-201237);
	public static final int DAQmxErrorSCXIChassisCommModeInvalid = (int)(-201236);
	public static final int DAQmxErrorRequiredDependencyNotFound = (int)(-201235);
	public static final int DAQmxErrorInvalidStorage = (int)(-201234);
	public static final int DAQmxErrorInvalidObject = (int)(-201233);
	public static final int DAQmxErrorStorageAlteredPriorToSave = (int)(-201232);
	public static final int DAQmxErrorTaskDoesNotReferenceLocalChannel = (int)(-201231);
	public static final int DAQmxErrorReferencedDevSimMustMatchTarget = (int)(-201230);
	public static final int DAQmxErrorProgrammedIOFailsBecauseOfWatchdogTimer = (int)(-201229);
	public static final int DAQmxErrorWatchdogTimerFailsBecauseOfProgrammedIO = (int)(-201228);
	public static final int DAQmxErrorCantUseThisTimingEngineWithAPort = (int)(-201227);
	public static final int DAQmxErrorProgrammedIOConflict = (int)(-201226);
	public static final int DAQmxErrorChangeDetectionIncompatibleWithProgrammedIO = (int)(-201225);
	public static final int DAQmxErrorTristateNotEnoughLines = (int)(-201224);
	public static final int DAQmxErrorTristateConflict = (int)(-201223);
	public static final int DAQmxErrorGenerateOrFiniteWaitExpectedBeforeBreakBlock = (int)(-201222);
	public static final int DAQmxErrorBreakBlockNotAllowedInLoop = (int)(-201221);
	public static final int DAQmxErrorClearTriggerNotAllowedInBreakBlock = (int)(-201220);
	public static final int DAQmxErrorNestingNotAllowedInBreakBlock = (int)(-201219);
	public static final int DAQmxErrorIfElseBlockNotAllowedInBreakBlock = (int)(-201218);
	public static final int DAQmxErrorRepeatUntilTriggerLoopNotAllowedInBreakBlock = (int)(-201217);
	public static final int DAQmxErrorWaitUntilTriggerNotAllowedInBreakBlock = (int)(-201216);
	public static final int DAQmxErrorMarkerPosInvalidInBreakBlock = (int)(-201215);
	public static final int DAQmxErrorInvalidWaitDurationInBreakBlock = (int)(-201214);
	public static final int DAQmxErrorInvalidSubsetLengthInBreakBlock = (int)(-201213);
	public static final int DAQmxErrorInvalidWaveformLengthInBreakBlock = (int)(-201212);
	public static final int DAQmxErrorInvalidWaitDurationBeforeBreakBlock = (int)(-201211);
	public static final int DAQmxErrorInvalidSubsetLengthBeforeBreakBlock = (int)(-201210);
	public static final int DAQmxErrorInvalidWaveformLengthBeforeBreakBlock = (int)(-201209);
	public static final int DAQmxErrorSampleRateTooHighForADCTimingMode = (int)(-201208);
	public static final int DAQmxErrorActiveDevNotSupportedWithMultiDevTask = (int)(-201207);
	public static final int DAQmxErrorRealDevAndSimDevNotSupportedInSameTask = (int)(-201206);
	public static final int DAQmxErrorRTSISimMustMatchDevSim = (int)(-201205);
	public static final int DAQmxErrorBridgeShuntCaNotSupported = (int)(-201204);
	public static final int DAQmxErrorStrainShuntCaNotSupported = (int)(-201203);
	public static final int DAQmxErrorGainTooLargeForGainCalConst = (int)(-201202);
	public static final int DAQmxErrorOffsetTooLargeForOffsetCalConst = (int)(-201201);
	public static final int DAQmxErrorElvisPrototypingBoardRemoved = (int)(-201200);
	public static final int DAQmxErrorElvis2PowerRailFault = (int)(-201199);
	public static final int DAQmxErrorElvis2PhysicalChansFault = (int)(-201198);
	public static final int DAQmxErrorElvis2PhysicalChansThermalEvent = (int)(-201197);
	public static final int DAQmxErrorRXBitErrorRateLimitExceeded = (int)(-201196);
	public static final int DAQmxErrorPHYBitErrorRateLimitExceeded = (int)(-201195);
	public static final int DAQmxErrorTwoPartAttributeCalledOutOfOrder = (int)(-201194);
	public static final int DAQmxErrorInvalidSCXIChassisAddress = (int)(-201193);
	public static final int DAQmxErrorCouldNotConnectToRemoteMXS = (int)(-201192);
	public static final int DAQmxErrorExcitationStateRequiredForAttributes = (int)(-201191);
	public static final int DAQmxErrorDeviceNotUsableUntilUSBReplug = (int)(-201190);
	public static final int DAQmxErrorInputFIFOOverflowDuringCalibrationOnFullSpeedUSB = (int)(-201189);
	public static final int DAQmxErrorInputFIFOOverflowDuringCalibration = (int)(-201188);
	public static final int DAQmxErrorCJCChanConflictsWithNonThermocoupleChan = (int)(-201187);
	public static final int DAQmxErrorCommDeviceForPXIBackplaneNotInRightmostSlot = (int)(-201186);
	public static final int DAQmxErrorCommDeviceForPXIBackplaneNotInSameChassis = (int)(-201185);
	public static final int DAQmxErrorCommDeviceForPXIBackplaneNotPXI = (int)(-201184);
	public static final int DAQmxErrorInvalidCalExcitFrequency = (int)(-201183);
	public static final int DAQmxErrorInvalidCalExcitVoltage = (int)(-201182);
	public static final int DAQmxErrorInvalidAIInputSrc = (int)(-201181);
	public static final int DAQmxErrorInvalidCalInputRef = (int)(-201180);
	public static final int DAQmxErrordBReferenceValueNotGreaterThanZero = (int)(-201179);
	public static final int DAQmxErrorSampleClockRateIsTooFastForSampleClockTiming = (int)(-201178);
	public static final int DAQmxErrorDeviceNotUsableUntilColdStart = (int)(-201177);
	public static final int DAQmxErrorSampleClockRateIsTooFastForBurstTiming = (int)(-201176);
	public static final int DAQmxErrorDevImportFailedAssociatedResourceIDsNotSupported = (int)(-201175);
	public static final int DAQmxErrorSCXI1600ImportNotSupported = (int)(-201174);
	public static final int DAQmxErrorPowerSupplyConfigurationFailed = (int)(-201173);
	public static final int DAQmxErrorIEPEWithDCNotAllowed = (int)(-201172);
	public static final int DAQmxErrorMinTempForThermocoupleTypeOutsideAccuracyForPolyScaling = (int)(-201171);
	public static final int DAQmxErrorDevImportFailedNoDeviceToOverwriteAndSimulationNotSupported = (int)(-201170);
	public static final int DAQmxErrorDevImportFailedDeviceNotSupportedOnDestination = (int)(-201169);
	public static final int DAQmxErrorFirmwareIsTooOld = (int)(-201168);
	public static final int DAQmxErrorFirmwareCouldntUpdate = (int)(-201167);
	public static final int DAQmxErrorFirmwareIsCorrupt = (int)(-201166);
	public static final int DAQmxErrorFirmwareTooNew = (int)(-201165);
	public static final int DAQmxErrorSampClockCannotBeExportedFromExternalSampClockSrc = (int)(-201164);
	public static final int DAQmxErrorPhysChanReservedForInputWhenDesiredForOutput = (int)(-201163);
	public static final int DAQmxErrorPhysChanReservedForOutputWhenDesiredForInput = (int)(-201162);
	public static final int DAQmxErrorSpecifiedCDAQSlotNotEmpty = (int)(-201161);
	public static final int DAQmxErrorDeviceDoesNotSupportSimulation = (int)(-201160);
	public static final int DAQmxErrorInvalidCDAQSlotNumberSpecd = (int)(-201159);
	public static final int DAQmxErrorCSeriesModSimMustMatchCDAQChassisSim = (int)(-201158);
	public static final int DAQmxErrorSCCCabledDevMustNotBeSimWhenSCCCarrierIsNotSim = (int)(-201157);
	public static final int DAQmxErrorSCCModSimMustMatchSCCCarrierSim = (int)(-201156);
	public static final int DAQmxErrorSCXIModuleDoesNotSupportSimulation = (int)(-201155);
	public static final int DAQmxErrorSCXICableDevMustNotBeSimWhenModIsNotSim = (int)(-201154);
	public static final int DAQmxErrorSCXIDigitizerSimMustNotBeSimWhenModIsNotSim = (int)(-201153);
	public static final int DAQmxErrorSCXIModSimMustMatchSCXIChassisSim = (int)(-201152);
	public static final int DAQmxErrorSimPXIDevReqSlotAndChassisSpecd = (int)(-201151);
	public static final int DAQmxErrorSimDevConflictWithRealDev = (int)(-201150);
	public static final int DAQmxErrorInsufficientDataForCalibration = (int)(-201149);
	public static final int DAQmxErrorTriggerChannelMustBeEnabled = (int)(-201148);
	public static final int DAQmxErrorCalibrationDataConflictCouldNotBeResolved = (int)(-201147);
	public static final int DAQmxErrorSoftwareTooNewForSelfCalibrationData = (int)(-201146);
	public static final int DAQmxErrorSoftwareTooNewForExtCalibrationData = (int)(-201145);
	public static final int DAQmxErrorSelfCalibrationDataTooNewForSoftware = (int)(-201144);
	public static final int DAQmxErrorExtCalibrationDataTooNewForSoftware = (int)(-201143);
	public static final int DAQmxErrorSoftwareTooNewForEEPROM = (int)(-201142);
	public static final int DAQmxErrorEEPROMTooNewForSoftware = (int)(-201141);
	public static final int DAQmxErrorSoftwareTooNewForHardware = (int)(-201140);
	public static final int DAQmxErrorHardwareTooNewForSoftware = (int)(-201139);
	public static final int DAQmxErrorTaskCannotRestartFirstSampNotAvailToGenerate = (int)(-201138);
	public static final int DAQmxErrorOnlyUseStartTrigSrcPrptyWithDevDataLines = (int)(-201137);
	public static final int DAQmxErrorOnlyUsePauseTrigSrcPrptyWithDevDataLines = (int)(-201136);
	public static final int DAQmxErrorOnlyUseRefTrigSrcPrptyWithDevDataLines = (int)(-201135);
	public static final int DAQmxErrorPauseTrigDigPatternSizeDoesNotMatchSrcSize = (int)(-201134);
	public static final int DAQmxErrorLineConflictCDAQ = (int)(-201133);
	public static final int DAQmxErrorCannotWriteBeyondFinalFiniteSample = (int)(-201132);
	public static final int DAQmxErrorRefAndStartTriggerSrcCantBeSame = (int)(-201131);
	public static final int DAQmxErrorMemMappingIncompatibleWithPhysChansInTask = (int)(-201130);
	public static final int DAQmxErrorOutputDriveTypeMemMappingConflict = (int)(-201129);
	public static final int DAQmxErrorCAPIDeviceIndexInvalid = (int)(-201128);
	public static final int DAQmxErrorRatiometricDevicesMustUseExcitationForScaling = (int)(-201127);
	public static final int DAQmxErrorPropertyRequiresPerDeviceCfg = (int)(-201126);
	public static final int DAQmxErrorAICouplingAndAIInputSourceConflict = (int)(-201125);
	public static final int DAQmxErrorOnlyOneTaskCanPerformDOMemoryMappingAtATime = (int)(-201124);
	public static final int DAQmxErrorTooManyChansForAnalogRefTrigCDAQ = (int)(-201123);
	public static final int DAQmxErrorSpecdPropertyValueIsIncompatibleWithSampleTimingType = (int)(-201122);
	public static final int DAQmxErrorCPUNotSupportedRequireSSE = (int)(-201121);
	public static final int DAQmxErrorSpecdPropertyValueIsIncompatibleWithSampleTimingResponseMode = (int)(-201120);
	public static final int DAQmxErrorConflictingNextWriteIsLastAndRegenModeProperties = (int)(-201119);
	public static final int DAQmxErrorMStudioOperationDoesNotSupportDeviceContext = (int)(-201118);
	public static final int DAQmxErrorPropertyValueInChannelExpansionContextInvalid = (int)(-201117);
	public static final int DAQmxErrorHWTimedNonBufferedAONotSupported = (int)(-201116);
	public static final int DAQmxErrorWaveformLengthNotMultOfQuantum = (int)(-201115);
	public static final int DAQmxErrorDSAExpansionMixedBoardsWrongOrderInPXIChassis = (int)(-201114);
	public static final int DAQmxErrorPowerLevelTooLowForOOK = (int)(-201113);
	public static final int DAQmxErrorDeviceComponentTestFailure = (int)(-201112);
	public static final int DAQmxErrorUserDefinedWfmWithOOKUnsupported = (int)(-201111);
	public static final int DAQmxErrorInvalidDigitalModulationUserDefinedWaveform = (int)(-201110);
	public static final int DAQmxErrorBothRefInAndRefOutEnabled = (int)(-201109);
	public static final int DAQmxErrorBothAnalogAndDigitalModulationEnabled = (int)(-201108);
	public static final int DAQmxErrorBufferedOpsNotSupportedInSpecdSlotForCDAQ = (int)(-201107);
	public static final int DAQmxErrorPhysChanNotSupportedInSpecdSlotForCDAQ = (int)(-201106);
	public static final int DAQmxErrorResourceReservedWithConflictingSettings = (int)(-201105);
	public static final int DAQmxErrorInconsistentAnalogTrigSettingsCDAQ = (int)(-201104);
	public static final int DAQmxErrorTooManyChansForAnalogPauseTrigCDAQ = (int)(-201103);
	public static final int DAQmxErrorAnalogTrigNotFirstInScanListCDAQ = (int)(-201102);
	public static final int DAQmxErrorTooManyChansGivenTimingType = (int)(-201101);
	public static final int DAQmxErrorSampClkTimebaseDivWithExtSampClk = (int)(-201100);
	public static final int DAQmxErrorCantSaveTaskWithPerDeviceTimingProperties = (int)(-201099);
	public static final int DAQmxErrorConflictingAutoZeroMode = (int)(-201098);
	public static final int DAQmxErrorSampClkRateNotSupportedWithEAREnabled = (int)(-201097);
	public static final int DAQmxErrorSampClkTimebaseRateNotSpecd = (int)(-201096);
	public static final int DAQmxErrorSessionCorruptedByDLLReload = (int)(-201095);
	public static final int DAQmxErrorActiveDevNotSupportedWithChanExpansion = (int)(-201094);
	public static final int DAQmxErrorSampClkRateInvalid = (int)(-201093);
	public static final int DAQmxErrorExtSyncPulseSrcCannotBeExported = (int)(-201092);
	public static final int DAQmxErrorSyncPulseMinDelayToStartNeededForExtSyncPulseSrc = (int)(-201091);
	public static final int DAQmxErrorSyncPulseSrcInvalid = (int)(-201090);
	public static final int DAQmxErrorSampClkTimebaseRateInvalid = (int)(-201089);
	public static final int DAQmxErrorSampClkTimebaseSrcInvalid = (int)(-201088);
	public static final int DAQmxErrorSampClkRateMustBeSpecd = (int)(-201087);
	public static final int DAQmxErrorInvalidAttributeName = (int)(-201086);
	public static final int DAQmxErrorCJCChanNameMustBeSetWhenCJCSrcIsScannableChan = (int)(-201085);
	public static final int DAQmxErrorHiddenChanMissingInChansPropertyInCfgFile = (int)(-201084);
	public static final int DAQmxErrorChanNamesNotSpecdInCfgFile = (int)(-201083);
	public static final int DAQmxErrorDuplicateHiddenChanNamesInCfgFile = (int)(-201082);
	public static final int DAQmxErrorDuplicateChanNameInCfgFile = (int)(-201081);
	public static final int DAQmxErrorInvalidSCCModuleForSlotSpecd = (int)(-201080);
	public static final int DAQmxErrorInvalidSCCSlotNumberSpecd = (int)(-201079);
	public static final int DAQmxErrorInvalidSectionIdentifier = (int)(-201078);
	public static final int DAQmxErrorInvalidSectionName = (int)(-201077);
	public static final int DAQmxErrorDAQmxVersionNotSupported = (int)(-201076);
	public static final int DAQmxErrorSWObjectsFoundInFile = (int)(-201075);
	public static final int DAQmxErrorHWObjectsFoundInFile = (int)(-201074);
	public static final int DAQmxErrorLocalChannelSpecdWithNoParentTask = (int)(-201073);
	public static final int DAQmxErrorTaskReferencesMissingLocalChannel = (int)(-201072);
	public static final int DAQmxErrorTaskReferencesLocalChannelFromOtherTask = (int)(-201071);
	public static final int DAQmxErrorTaskMissingChannelProperty = (int)(-201070);
	public static final int DAQmxErrorInvalidLocalChanName = (int)(-201069);
	public static final int DAQmxErrorInvalidEscapeCharacterInString = (int)(-201068);
	public static final int DAQmxErrorInvalidTableIdentifier = (int)(-201067);
	public static final int DAQmxErrorValueFoundInInvalidColumn = (int)(-201066);
	public static final int DAQmxErrorMissingStartOfTable = (int)(-201065);
	public static final int DAQmxErrorFileMissingRequiredDAQmxHeader = (int)(-201064);
	public static final int DAQmxErrorDeviceIDDoesNotMatch = (int)(-201063);
	public static final int DAQmxErrorBufferedOperationsNotSupportedOnSelectedLines = (int)(-201062);
	public static final int DAQmxErrorPropertyConflictsWithScale = (int)(-201061);
	public static final int DAQmxErrorInvalidINIFileSyntax = (int)(-201060);
	public static final int DAQmxErrorDeviceInfoFailedPXIChassisNotIdentified = (int)(-201059);
	public static final int DAQmxErrorInvalidHWProductNumber = (int)(-201058);
	public static final int DAQmxErrorInvalidHWProductType = (int)(-201057);
	public static final int DAQmxErrorInvalidNumericFormatSpecd = (int)(-201056);
	public static final int DAQmxErrorDuplicatePropertyInObject = (int)(-201055);
	public static final int DAQmxErrorInvalidEnumValueSpecd = (int)(-201054);
	public static final int DAQmxErrorTEDSSensorPhysicalChannelConflict = (int)(-201053);
	public static final int DAQmxErrorTooManyPhysicalChansForTEDSInterfaceSpecd = (int)(-201052);
	public static final int DAQmxErrorIncapableTEDSInterfaceControllingDeviceSpecd = (int)(-201051);
	public static final int DAQmxErrorSCCCarrierSpecdIsMissing = (int)(-201050);
	public static final int DAQmxErrorIncapableSCCDigitizingDeviceSpecd = (int)(-201049);
	public static final int DAQmxErrorAccessorySettingNotApplicable = (int)(-201048);
	public static final int DAQmxErrorDeviceAndConnectorSpecdAlreadyOccupied = (int)(-201047);
	public static final int DAQmxErrorIllegalAccessoryTypeForDeviceSpecd = (int)(-201046);
	public static final int DAQmxErrorInvalidDeviceConnectorNumberSpecd = (int)(-201045);
	public static final int DAQmxErrorInvalidAccessoryName = (int)(-201044);
	public static final int DAQmxErrorMoreThanOneMatchForSpecdDevice = (int)(-201043);
	public static final int DAQmxErrorNoMatchForSpecdDevice = (int)(-201042);
	public static final int DAQmxErrorProductTypeAndProductNumberConflict = (int)(-201041);
	public static final int DAQmxErrorExtraPropertyDetectedInSpecdObject = (int)(-201040);
	public static final int DAQmxErrorRequiredPropertyMissing = (int)(-201039);
	public static final int DAQmxErrorCantSetAuthorForLocalChan = (int)(-201038);
	public static final int DAQmxErrorInvalidTimeValue = (int)(-201037);
	public static final int DAQmxErrorInvalidTimeFormat = (int)(-201036);
	public static final int DAQmxErrorDigDevChansSpecdInModeOtherThanParallel = (int)(-201035);
	public static final int DAQmxErrorCascadeDigitizationModeNotSupported = (int)(-201034);
	public static final int DAQmxErrorSpecdSlotAlreadyOccupied = (int)(-201033);
	public static final int DAQmxErrorInvalidSCXISlotNumberSpecd = (int)(-201032);
	public static final int DAQmxErrorAddressAlreadyInUse = (int)(-201031);
	public static final int DAQmxErrorSpecdDeviceDoesNotSupportRTSI = (int)(-201030);
	public static final int DAQmxErrorSpecdDeviceIsAlreadyOnRTSIBus = (int)(-201029);
	public static final int DAQmxErrorIdentifierInUse = (int)(-201028);
	public static final int DAQmxErrorWaitForNextSampleClockOrReadDetected3OrMoreMissedSampClks = (int)(-201027);
	public static final int DAQmxErrorHWTimedAndDataXferPIO = (int)(-201026);
	public static final int DAQmxErrorNonBufferedAndHWTimed = (int)(-201025);
	public static final int DAQmxErrorCTROutSampClkPeriodShorterThanGenPulseTrainPeriodPolled = (int)(-201024);
	public static final int DAQmxErrorCTROutSampClkPeriodShorterThanGenPulseTrainPeriod2 = (int)(-201023);
	public static final int DAQmxErrorCOCannotKeepUpInHWTimedSinglePointPolled = (int)(-201022);
	public static final int DAQmxErrorWriteRecoveryCannotKeepUpInHWTimedSinglePoint = (int)(-201021);
	public static final int DAQmxErrorNoChangeDetectionOnSelectedLineForDevice = (int)(-201020);
	public static final int DAQmxErrorSMIOPauseTriggersNotSupportedWithChannelExpansion = (int)(-201019);
	public static final int DAQmxErrorClockMasterForExternalClockNotLongestPipeline = (int)(-201018);
	public static final int DAQmxErrorUnsupportedUnicodeByteOrderMarker = (int)(-201017);
	public static final int DAQmxErrorTooManyInstructionsInLoopInScript = (int)(-201016);
	public static final int DAQmxErrorPLLNotLocked = (int)(-201015);
	public static final int DAQmxErrorIfElseBlockNotAllowedInFiniteRepeatLoopInScript = (int)(-201014);
	public static final int DAQmxErrorIfElseBlockNotAllowedInConditionalRepeatLoopInScript = (int)(-201013);
	public static final int DAQmxErrorClearIsLastInstructionInIfElseBlockInScript = (int)(-201012);
	public static final int DAQmxErrorInvalidWaitDurationBeforeIfElseBlockInScript = (int)(-201011);
	public static final int DAQmxErrorMarkerPosInvalidBeforeIfElseBlockInScript = (int)(-201010);
	public static final int DAQmxErrorInvalidSubsetLengthBeforeIfElseBlockInScript = (int)(-201009);
	public static final int DAQmxErrorInvalidWaveformLengthBeforeIfElseBlockInScript = (int)(-201008);
	public static final int DAQmxErrorGenerateOrFiniteWaitInstructionExpectedBeforeIfElseBlockInScript = (int)(-201007);
	public static final int DAQmxErrorCalPasswordNotSupported = (int)(-201006);
	public static final int DAQmxErrorSetupCalNeededBeforeAdjustCal = (int)(-201005);
	public static final int DAQmxErrorMultipleChansNotSupportedDuringCalSetup = (int)(-201004);
	public static final int DAQmxErrorDevCannotBeAccessed = (int)(-201003);
	public static final int DAQmxErrorSampClkRateDoesntMatchSampClkSrc = (int)(-201002);
	public static final int DAQmxErrorSampClkRateNotSupportedWithEARDisabled = (int)(-201001);
	public static final int DAQmxErrorLabVIEWVersionDoesntSupportDAQmxEvents = (int)(-201000);
	public static final int DAQmxErrorCOReadyForNewValNotSupportedWithOnDemand = (int)(-200999);
	public static final int DAQmxErrorCIHWTimedSinglePointNotSupportedForMeasType = (int)(-200998);
	public static final int DAQmxErrorOnDemandNotSupportedWithHWTimedSinglePoint = (int)(-200997);
	public static final int DAQmxErrorHWTimedSinglePointAndDataXferNotProgIO = (int)(-200996);
	public static final int DAQmxErrorMemMapAndHWTimedSinglePoint = (int)(-200995);
	public static final int DAQmxErrorCannotSetPropertyWhenHWTimedSinglePointTaskIsRunning = (int)(-200994);
	public static final int DAQmxErrorCTROutSampClkPeriodShorterThanGenPulseTrainPeriod = (int)(-200993);
	public static final int DAQmxErrorTooManyEventsGenerated = (int)(-200992);
	public static final int DAQmxErrorMStudioCppRemoveEventsBeforeStop = (int)(-200991);
	public static final int DAQmxErrorCAPICannotRegisterSyncEventsFromMultipleThreads = (int)(-200990);
	public static final int DAQmxErrorReadWaitNextSampClkWaitMismatchTwo = (int)(-200989);
	public static final int DAQmxErrorReadWaitNextSampClkWaitMismatchOne = (int)(-200988);
	public static final int DAQmxErrorDAQmxSignalEventTypeNotSupportedByChanTypesOrDevicesInTask = (int)(-200987);
	public static final int DAQmxErrorCannotUnregisterDAQmxSoftwareEventWhileTaskIsRunning = (int)(-200986);
	public static final int DAQmxErrorAutoStartWriteNotAllowedEventRegistered = (int)(-200985);
	public static final int DAQmxErrorAutoStartReadNotAllowedEventRegistered = (int)(-200984);
	public static final int DAQmxErrorCannotGetPropertyWhenTaskNotReservedCommittedOrRunning = (int)(-200983);
	public static final int DAQmxErrorSignalEventsNotSupportedByDevice = (int)(-200982);
	public static final int DAQmxErrorEveryNSamplesAcqIntoBufferEventNotSupportedByDevice = (int)(-200981);
	public static final int DAQmxErrorEveryNSampsTransferredFromBufferEventNotSupportedByDevice = (int)(-200980);
	public static final int DAQmxErrorCAPISyncEventsTaskStateChangeNotAllowedFromDifferentThread = (int)(-200979);
	public static final int DAQmxErrorDAQmxSWEventsWithDifferentCallMechanisms = (int)(-200978);
	public static final int DAQmxErrorCantSaveChanWithPolyCalScaleAndAllowInteractiveEdit = (int)(-200977);
	public static final int DAQmxErrorChanDoesNotSupportCJC = (int)(-200976);
	public static final int DAQmxErrorCOReadyForNewValNotSupportedWithHWTimedSinglePoint = (int)(-200975);
	public static final int DAQmxErrorDACAllowConnToGndNotSupportedByDevWhenRefSrcExt = (int)(-200974);
	public static final int DAQmxErrorCantGetPropertyTaskNotRunning = (int)(-200973);
	public static final int DAQmxErrorCantSetPropertyTaskNotRunning = (int)(-200972);
	public static final int DAQmxErrorCantSetPropertyTaskNotRunningCommitted = (int)(-200971);
	public static final int DAQmxErrorAIEveryNSampsEventIntervalNotMultipleOf2 = (int)(-200970);
	public static final int DAQmxErrorInvalidTEDSPhysChanNotAI = (int)(-200969);
	public static final int DAQmxErrorCAPICannotPerformTaskOperationInAsyncCallback = (int)(-200968);
	public static final int DAQmxErrorEveryNSampsTransferredFromBufferEventAlreadyRegistered = (int)(-200967);
	public static final int DAQmxErrorEveryNSampsAcqIntoBufferEventAlreadyRegistered = (int)(-200966);
	public static final int DAQmxErrorEveryNSampsTransferredFromBufferNotForInput = (int)(-200965);
	public static final int DAQmxErrorEveryNSampsAcqIntoBufferNotForOutput = (int)(-200964);
	public static final int DAQmxErrorAOSampTimingTypeDifferentIn2Tasks = (int)(-200963);
	public static final int DAQmxErrorCouldNotDownloadFirmwareHWDamaged = (int)(-200962);
	public static final int DAQmxErrorCouldNotDownloadFirmwareFileMissingOrDamaged = (int)(-200961);
	public static final int DAQmxErrorCannotRegisterDAQmxSoftwareEventWhileTaskIsRunning = (int)(-200960);
	public static final int DAQmxErrorDifferentRawDataCompression = (int)(-200959);
	public static final int DAQmxErrorConfiguredTEDSInterfaceDevNotDetected = (int)(-200958);
	public static final int DAQmxErrorCompressedSampSizeExceedsResolution = (int)(-200957);
	public static final int DAQmxErrorChanDoesNotSupportCompression = (int)(-200956);
	public static final int DAQmxErrorDifferentRawDataFormats = (int)(-200955);
	public static final int DAQmxErrorSampClkOutputTermIncludesStartTrigSrc = (int)(-200954);
	public static final int DAQmxErrorStartTrigSrcEqualToSampClkSrc = (int)(-200953);
	public static final int DAQmxErrorEventOutputTermIncludesTrigSrc = (int)(-200952);
	public static final int DAQmxErrorCOMultipleWritesBetweenSampClks = (int)(-200951);
	public static final int DAQmxErrorDoneEventAlreadyRegistered = (int)(-200950);
	public static final int DAQmxErrorSignalEventAlreadyRegistered = (int)(-200949);
	public static final int DAQmxErrorCannotHaveTimedLoopAndDAQmxSignalEventsInSameTask = (int)(-200948);
	public static final int DAQmxErrorNeedLabVIEW711PatchToUseDAQmxEvents = (int)(-200947);
	public static final int DAQmxErrorStartFailedDueToWriteFailure = (int)(-200946);
	public static final int DAQmxErrorDataXferCustomThresholdNotDMAXferMethodSpecifiedForDev = (int)(-200945);
	public static final int DAQmxErrorDataXferRequestConditionNotSpecifiedForCustomThreshold = (int)(-200944);
	public static final int DAQmxErrorDataXferCustomThresholdNotSpecified = (int)(-200943);
	public static final int DAQmxErrorCAPISyncCallbackNotSupportedOnThisPlatform = (int)(-200942);
	public static final int DAQmxErrorCalChanReversePolyCoefNotSpecd = (int)(-200941);
	public static final int DAQmxErrorCalChanForwardPolyCoefNotSpecd = (int)(-200940);
	public static final int DAQmxErrorChanCalRepeatedNumberInPreScaledVals = (int)(-200939);
	public static final int DAQmxErrorChanCalTableNumScaledNotEqualNumPrescaledVals = (int)(-200938);
	public static final int DAQmxErrorChanCalTableScaledValsNotSpecd = (int)(-200937);
	public static final int DAQmxErrorChanCalTablePreScaledValsNotSpecd = (int)(-200936);
	public static final int DAQmxErrorChanCalScaleTypeNotSet = (int)(-200935);
	public static final int DAQmxErrorChanCalExpired = (int)(-200934);
	public static final int DAQmxErrorChanCalExpirationDateNotSet = (int)(-200933);
	public static final int DAQmxError3OutputPortCombinationGivenSampTimingType653x = (int)(-200932);
	public static final int DAQmxError3InputPortCombinationGivenSampTimingType653x = (int)(-200931);
	public static final int DAQmxError2OutputPortCombinationGivenSampTimingType653x = (int)(-200930);
	public static final int DAQmxError2InputPortCombinationGivenSampTimingType653x = (int)(-200929);
	public static final int DAQmxErrorPatternMatcherMayBeUsedByOneTrigOnly = (int)(-200928);
	public static final int DAQmxErrorNoChansSpecdForPatternSource = (int)(-200927);
	public static final int DAQmxErrorChangeDetectionChanNotInTask = (int)(-200926);
	public static final int DAQmxErrorChangeDetectionChanNotTristated = (int)(-200925);
	public static final int DAQmxErrorWaitModeValueNotSupportedNonBuffered = (int)(-200924);
	public static final int DAQmxErrorWaitModePropertyNotSupportedNonBuffered = (int)(-200923);
	public static final int DAQmxErrorCantSavePerLineConfigDigChanSoInteractiveEditsAllowed = (int)(-200922);
	public static final int DAQmxErrorCantSaveNonPortMultiLineDigChanSoInteractiveEditsAllowed = (int)(-200921);
	public static final int DAQmxErrorBufferSizeNotMultipleOfEveryNSampsEventIntervalNoIrqOnDev = (int)(-200920);
	public static final int DAQmxErrorGlobalTaskNameAlreadyChanName = (int)(-200919);
	public static final int DAQmxErrorGlobalChanNameAlreadyTaskName = (int)(-200918);
	public static final int DAQmxErrorAOEveryNSampsEventIntervalNotMultipleOf2 = (int)(-200917);
	public static final int DAQmxErrorSampleTimebaseDivisorNotSupportedGivenTimingType = (int)(-200916);
	public static final int DAQmxErrorHandshakeEventOutputTermNotSupportedGivenTimingType = (int)(-200915);
	public static final int DAQmxErrorChangeDetectionOutputTermNotSupportedGivenTimingType = (int)(-200914);
	public static final int DAQmxErrorReadyForTransferOutputTermNotSupportedGivenTimingType = (int)(-200913);
	public static final int DAQmxErrorRefTrigOutputTermNotSupportedGivenTimingType = (int)(-200912);
	public static final int DAQmxErrorStartTrigOutputTermNotSupportedGivenTimingType = (int)(-200911);
	public static final int DAQmxErrorSampClockOutputTermNotSupportedGivenTimingType = (int)(-200910);
	public static final int DAQmxError20MhzTimebaseNotSupportedGivenTimingType = (int)(-200909);
	public static final int DAQmxErrorSampClockSourceNotSupportedGivenTimingType = (int)(-200908);
	public static final int DAQmxErrorRefTrigTypeNotSupportedGivenTimingType = (int)(-200907);
	public static final int DAQmxErrorPauseTrigTypeNotSupportedGivenTimingType = (int)(-200906);
	public static final int DAQmxErrorHandshakeTrigTypeNotSupportedGivenTimingType = (int)(-200905);
	public static final int DAQmxErrorStartTrigTypeNotSupportedGivenTimingType = (int)(-200904);
	public static final int DAQmxErrorRefClkSrcNotSupported = (int)(-200903);
	public static final int DAQmxErrorDataVoltageLowAndHighIncompatible = (int)(-200902);
	public static final int DAQmxErrorInvalidCharInDigPatternString = (int)(-200901);
	public static final int DAQmxErrorCantUsePort3AloneGivenSampTimingTypeOn653x = (int)(-200900);
	public static final int DAQmxErrorCantUsePort1AloneGivenSampTimingTypeOn653x = (int)(-200899);
	public static final int DAQmxErrorPartialUseOfPhysicalLinesWithinPortNotSupported653x = (int)(-200898);
	public static final int DAQmxErrorPhysicalChanNotSupportedGivenSampTimingType653x = (int)(-200897);
	public static final int DAQmxErrorCanExportOnlyDigEdgeTrigs = (int)(-200896);
	public static final int DAQmxErrorRefTrigDigPatternSizeDoesNotMatchSourceSize = (int)(-200895);
	public static final int DAQmxErrorStartTrigDigPatternSizeDoesNotMatchSourceSize = (int)(-200894);
	public static final int DAQmxErrorChangeDetectionRisingAndFallingEdgeChanDontMatch = (int)(-200893);
	public static final int DAQmxErrorPhysicalChansForChangeDetectionAndPatternMatch653x = (int)(-200892);
	public static final int DAQmxErrorCanExportOnlyOnboardSampClk = (int)(-200891);
	public static final int DAQmxErrorInternalSampClkNotRisingEdge = (int)(-200890);
	public static final int DAQmxErrorRefTrigDigPatternChanNotInTask = (int)(-200889);
	public static final int DAQmxErrorRefTrigDigPatternChanNotTristated = (int)(-200888);
	public static final int DAQmxErrorStartTrigDigPatternChanNotInTask = (int)(-200887);
	public static final int DAQmxErrorStartTrigDigPatternChanNotTristated = (int)(-200886);
	public static final int DAQmxErrorPXIStarAndClock10Sync = (int)(-200885);
	public static final int DAQmxErrorGlobalChanCannotBeSavedSoInteractiveEditsAllowed = (int)(-200884);
	public static final int DAQmxErrorTaskCannotBeSavedSoInteractiveEditsAllowed = (int)(-200883);
	public static final int DAQmxErrorInvalidGlobalChan = (int)(-200882);
	public static final int DAQmxErrorEveryNSampsEventAlreadyRegistered = (int)(-200881);
	public static final int DAQmxErrorEveryNSampsEventIntervalZeroNotSupported = (int)(-200880);
	public static final int DAQmxErrorChanSizeTooBigForU16PortWrite = (int)(-200879);
	public static final int DAQmxErrorChanSizeTooBigForU16PortRead = (int)(-200878);
	public static final int DAQmxErrorBufferSizeNotMultipleOfEveryNSampsEventIntervalWhenDMA = (int)(-200877);
	public static final int DAQmxErrorWriteWhenTaskNotRunningCOTicks = (int)(-200876);
	public static final int DAQmxErrorWriteWhenTaskNotRunningCOFreq = (int)(-200875);
	public static final int DAQmxErrorWriteWhenTaskNotRunningCOTime = (int)(-200874);
	public static final int DAQmxErrorAOMinMaxNotSupportedDACRangeTooSmall = (int)(-200873);
	public static final int DAQmxErrorAOMinMaxNotSupportedGivenDACRange = (int)(-200872);
	public static final int DAQmxErrorAOMinMaxNotSupportedGivenDACRangeAndOffsetVal = (int)(-200871);
	public static final int DAQmxErrorAOMinMaxNotSupportedDACOffsetValInappropriate = (int)(-200870);
	public static final int DAQmxErrorAOMinMaxNotSupportedGivenDACOffsetVal = (int)(-200869);
	public static final int DAQmxErrorAOMinMaxNotSupportedDACRefValTooSmall = (int)(-200868);
	public static final int DAQmxErrorAOMinMaxNotSupportedGivenDACRefVal = (int)(-200867);
	public static final int DAQmxErrorAOMinMaxNotSupportedGivenDACRefAndOffsetVal = (int)(-200866);
	public static final int DAQmxErrorWhenAcqCompAndNumSampsPerChanExceedsOnBrdBufSize = (int)(-200865);
	public static final int DAQmxErrorWhenAcqCompAndNoRefTrig = (int)(-200864);
	public static final int DAQmxErrorWaitForNextSampClkNotSupported = (int)(-200863);
	public static final int DAQmxErrorDevInUnidentifiedPXIChassis = (int)(-200862);
	public static final int DAQmxErrorMaxSoundPressureMicSensitivitRelatedAIPropertiesNotSupportedByDev = (int)(-200861);
	public static final int DAQmxErrorMaxSoundPressureAndMicSensitivityNotSupportedByDev = (int)(-200860);
	public static final int DAQmxErrorAOBufferSizeZeroForSampClkTimingType = (int)(-200859);
	public static final int DAQmxErrorAOCallWriteBeforeStartForSampClkTimingType = (int)(-200858);
	public static final int DAQmxErrorInvalidCalLowPassCutoffFreq = (int)(-200857);
	public static final int DAQmxErrorSimulationCannotBeDisabledForDevCreatedAsSimulatedDev = (int)(-200856);
	public static final int DAQmxErrorCannotAddNewDevsAfterTaskConfiguration = (int)(-200855);
	public static final int DAQmxErrorDifftSyncPulseSrcAndSampClkTimebaseSrcDevMultiDevTask = (int)(-200854);
	public static final int DAQmxErrorTermWithoutDevInMultiDevTask = (int)(-200853);
	public static final int DAQmxErrorSyncNoDevSampClkTimebaseOrSyncPulseInPXISlot2 = (int)(-200852);
	public static final int DAQmxErrorPhysicalChanNotOnThisConnector = (int)(-200851);
	public static final int DAQmxErrorNumSampsToWaitNotGreaterThanZeroInScript = (int)(-200850);
	public static final int DAQmxErrorNumSampsToWaitNotMultipleOfAlignmentQuantumInScript = (int)(-200849);
	public static final int DAQmxErrorEveryNSamplesEventNotSupportedForNonBufferedTasks = (int)(-200848);
	public static final int DAQmxErrorBufferedAndDataXferPIO = (int)(-200847);
	public static final int DAQmxErrorCannotWriteWhenAutoStartFalseAndTaskNotRunning = (int)(-200846);
	public static final int DAQmxErrorNonBufferedAndDataXferInterrupts = (int)(-200845);
	public static final int DAQmxErrorWriteFailedMultipleCtrsWithFREQOUT = (int)(-200844);
	public static final int DAQmxErrorReadNotCompleteBefore3SampClkEdges = (int)(-200843);
	public static final int DAQmxErrorCtrHWTimedSinglePointAndDataXferNotProgIO = (int)(-200842);
	public static final int DAQmxErrorPrescalerNot1ForInputTerminal = (int)(-200841);
	public static final int DAQmxErrorPrescalerNot1ForTimebaseSrc = (int)(-200840);
	public static final int DAQmxErrorSampClkTimingTypeWhenTristateIsFalse = (int)(-200839);
	public static final int DAQmxErrorOutputBufferSizeNotMultOfXferSize = (int)(-200838);
	public static final int DAQmxErrorSampPerChanNotMultOfXferSize = (int)(-200837);
	public static final int DAQmxErrorWriteToTEDSFailed = (int)(-200836);
	public static final int DAQmxErrorSCXIDevNotUsablePowerTurnedOff = (int)(-200835);
	public static final int DAQmxErrorCannotReadWhenAutoStartFalseBufSizeZeroAndTaskNotRunning = (int)(-200834);
	public static final int DAQmxErrorCannotReadWhenAutoStartFalseHWTimedSinglePtAndTaskNotRunning = (int)(-200833);
	public static final int DAQmxErrorCannotReadWhenAutoStartFalseOnDemandAndTaskNotRunning = (int)(-200832);
	public static final int DAQmxErrorSimultaneousAOWhenNotOnDemandTiming = (int)(-200831);
	public static final int DAQmxErrorMemMapAndSimultaneousAO = (int)(-200830);
	public static final int DAQmxErrorWriteFailedMultipleCOOutputTypes = (int)(-200829);
	public static final int DAQmxErrorWriteToTEDSNotSupportedOnRT = (int)(-200828);
	public static final int DAQmxErrorVirtualTEDSDataFileError = (int)(-200827);
	public static final int DAQmxErrorTEDSSensorDataError = (int)(-200826);
	public static final int DAQmxErrorDataSizeMoreThanSizeOfEEPROMOnTEDS = (int)(-200825);
	public static final int DAQmxErrorPROMOnTEDSContainsBasicTEDSData = (int)(-200824);
	public static final int DAQmxErrorPROMOnTEDSAlreadyWritten = (int)(-200823);
	public static final int DAQmxErrorTEDSDoesNotContainPROM = (int)(-200822);
	public static final int DAQmxErrorHWTimedSinglePointNotSupportedAI = (int)(-200821);
	public static final int DAQmxErrorHWTimedSinglePointOddNumChansInAITask = (int)(-200820);
	public static final int DAQmxErrorCantUseOnlyOnBoardMemWithProgrammedIO = (int)(-200819);
	public static final int DAQmxErrorSwitchDevShutDownDueToHighTemp = (int)(-200818);
	public static final int DAQmxErrorExcitationNotSupportedWhenTermCfgDiff = (int)(-200817);
	public static final int DAQmxErrorTEDSMinElecValGEMaxElecVal = (int)(-200816);
	public static final int DAQmxErrorTEDSMinPhysValGEMaxPhysVal = (int)(-200815);
	public static final int DAQmxErrorCIOnboardClockNotSupportedAsInputTerm = (int)(-200814);
	public static final int DAQmxErrorInvalidSampModeForPositionMeas = (int)(-200813);
	public static final int DAQmxErrorTrigWhenAOHWTimedSinglePtSampMode = (int)(-200812);
	public static final int DAQmxErrorDAQmxCantUseStringDueToUnknownChar = (int)(-200811);
	public static final int DAQmxErrorDAQmxCantRetrieveStringDueToUnknownChar = (int)(-200810);
	public static final int DAQmxErrorClearTEDSNotSupportedOnRT = (int)(-200809);
	public static final int DAQmxErrorCfgTEDSNotSupportedOnRT = (int)(-200808);
	public static final int DAQmxErrorProgFilterClkCfgdToDifferentMinPulseWidthBySameTask1PerDev = (int)(-200807);
	public static final int DAQmxErrorProgFilterClkCfgdToDifferentMinPulseWidthByAnotherTask1PerDev = (int)(-200806);
	public static final int DAQmxErrorNoLastExtCalDateTimeLastExtCalNotDAQmx = (int)(-200804);
	public static final int DAQmxErrorCannotWriteNotStartedAutoStartFalseNotOnDemandHWTimedSglPt = (int)(-200803);
	public static final int DAQmxErrorCannotWriteNotStartedAutoStartFalseNotOnDemandBufSizeZero = (int)(-200802);
	public static final int DAQmxErrorCOInvalidTimingSrcDueToSignal = (int)(-200801);
	public static final int DAQmxErrorCIInvalidTimingSrcForSampClkDueToSampTimingType = (int)(-200800);
	public static final int DAQmxErrorCIInvalidTimingSrcForEventCntDueToSampMode = (int)(-200799);
	public static final int DAQmxErrorNoChangeDetectOnNonInputDigLineForDev = (int)(-200798);
	public static final int DAQmxErrorEmptyStringTermNameNotSupported = (int)(-200797);
	public static final int DAQmxErrorMemMapEnabledForHWTimedNonBufferedAO = (int)(-200796);
	public static final int DAQmxErrorDevOnboardMemOverflowDuringHWTimedNonBufferedGen = (int)(-200795);
	public static final int DAQmxErrorCODAQmxWriteMultipleChans = (int)(-200794);
	public static final int DAQmxErrorCantMaintainExistingValueAOSync = (int)(-200793);
	public static final int DAQmxErrorMStudioMultiplePhysChansNotSupported = (int)(-200792);
	public static final int DAQmxErrorCantConfigureTEDSForChan = (int)(-200791);
	public static final int DAQmxErrorWriteDataTypeTooSmall = (int)(-200790);
	public static final int DAQmxErrorReadDataTypeTooSmall = (int)(-200789);
	public static final int DAQmxErrorMeasuredBridgeOffsetTooHigh = (int)(-200788);
	public static final int DAQmxErrorStartTrigConflictWithCOHWTimedSinglePt = (int)(-200787);
	public static final int DAQmxErrorSampClkRateExtSampClkTimebaseRateMismatch = (int)(-200786);
	public static final int DAQmxErrorInvalidTimingSrcDueToSampTimingType = (int)(-200785);
	public static final int DAQmxErrorVirtualTEDSFileNotFound = (int)(-200784);
	public static final int DAQmxErrorMStudioNoForwardPolyScaleCoeffs = (int)(-200783);
	public static final int DAQmxErrorMStudioNoReversePolyScaleCoeffs = (int)(-200782);
	public static final int DAQmxErrorMStudioNoPolyScaleCoeffsUseCalc = (int)(-200781);
	public static final int DAQmxErrorMStudioNoForwardPolyScaleCoeffsUseCalc = (int)(-200780);
	public static final int DAQmxErrorMStudioNoReversePolyScaleCoeffsUseCalc = (int)(-200779);
	public static final int DAQmxErrorCOSampModeSampTimingTypeSampClkConflict = (int)(-200778);
	public static final int DAQmxErrorDevCannotProduceMinPulseWidth = (int)(-200777);
	public static final int DAQmxErrorCannotProduceMinPulseWidthGivenPropertyValues = (int)(-200776);
	public static final int DAQmxErrorTermCfgdToDifferentMinPulseWidthByAnotherTask = (int)(-200775);
	public static final int DAQmxErrorTermCfgdToDifferentMinPulseWidthByAnotherProperty = (int)(-200774);
	public static final int DAQmxErrorDigSyncNotAvailableOnTerm = (int)(-200773);
	public static final int DAQmxErrorDigFilterNotAvailableOnTerm = (int)(-200772);
	public static final int DAQmxErrorDigFilterEnabledMinPulseWidthNotCfg = (int)(-200771);
	public static final int DAQmxErrorDigFilterAndSyncBothEnabled = (int)(-200770);
	public static final int DAQmxErrorHWTimedSinglePointAOAndDataXferNotProgIO = (int)(-200769);
	public static final int DAQmxErrorNonBufferedAOAndDataXferNotProgIO = (int)(-200768);
	public static final int DAQmxErrorProgIODataXferForBufferedAO = (int)(-200767);
	public static final int DAQmxErrorTEDSLegacyTemplateIDInvalidOrUnsupported = (int)(-200766);
	public static final int DAQmxErrorTEDSMappingMethodInvalidOrUnsupported = (int)(-200765);
	public static final int DAQmxErrorTEDSLinearMappingSlopeZero = (int)(-200764);
	public static final int DAQmxErrorAIInputBufferSizeNotMultOfXferSize = (int)(-200763);
	public static final int DAQmxErrorNoSyncPulseExtSampClkTimebase = (int)(-200762);
	public static final int DAQmxErrorNoSyncPulseAnotherTaskRunning = (int)(-200761);
	public static final int DAQmxErrorAOMinMaxNotInGainRange = (int)(-200760);
	public static final int DAQmxErrorAOMinMaxNotInDACRange = (int)(-200759);
	public static final int DAQmxErrorDevOnlySupportsSampClkTimingAO = (int)(-200758);
	public static final int DAQmxErrorDevOnlySupportsSampClkTimingAI = (int)(-200757);
	public static final int DAQmxErrorTEDSIncompatibleSensorAndMeasType = (int)(-200756);
	public static final int DAQmxErrorTEDSMultipleCalTemplatesNotSupported = (int)(-200755);
	public static final int DAQmxErrorTEDSTemplateParametersNotSupported = (int)(-200754);
	public static final int DAQmxErrorParsingTEDSData = (int)(-200753);
	public static final int DAQmxErrorMultipleActivePhysChansNotSupported = (int)(-200752);
	public static final int DAQmxErrorNoChansSpecdForChangeDetect = (int)(-200751);
	public static final int DAQmxErrorInvalidCalVoltageForGivenGain = (int)(-200750);
	public static final int DAQmxErrorInvalidCalGain = (int)(-200749);
	public static final int DAQmxErrorMultipleWritesBetweenSampClks = (int)(-200748);
	public static final int DAQmxErrorInvalidAcqTypeForFREQOUT = (int)(-200747);
	public static final int DAQmxErrorSuitableTimebaseNotFoundTimeCombo2 = (int)(-200746);
	public static final int DAQmxErrorSuitableTimebaseNotFoundFrequencyCombo2 = (int)(-200745);
	public static final int DAQmxErrorRefClkRateRefClkSrcMismatch = (int)(-200744);
	public static final int DAQmxErrorNoTEDSTerminalBlock = (int)(-200743);
	public static final int DAQmxErrorCorruptedTEDSMemory = (int)(-200742);
	public static final int DAQmxErrorTEDSNotSupported = (int)(-200741);
	public static final int DAQmxErrorTimingSrcTaskStartedBeforeTimedLoop = (int)(-200740);
	public static final int DAQmxErrorPropertyNotSupportedForTimingSrc = (int)(-200739);
	public static final int DAQmxErrorTimingSrcDoesNotExist = (int)(-200738);
	public static final int DAQmxErrorInputBufferSizeNotEqualSampsPerChanForFiniteSampMode = (int)(-200737);
	public static final int DAQmxErrorFREQOUTCannotProduceDesiredFrequency2 = (int)(-200736);
	public static final int DAQmxErrorExtRefClkRateNotSpecified = (int)(-200735);
	public static final int DAQmxErrorDeviceDoesNotSupportDMADataXferForNonBufferedAcq = (int)(-200734);
	public static final int DAQmxErrorDigFilterMinPulseWidthSetWhenTristateIsFalse = (int)(-200733);
	public static final int DAQmxErrorDigFilterEnableSetWhenTristateIsFalse = (int)(-200732);
	public static final int DAQmxErrorNoHWTimingWithOnDemand = (int)(-200731);
	public static final int DAQmxErrorCannotDetectChangesWhenTristateIsFalse = (int)(-200730);
	public static final int DAQmxErrorCannotHandshakeWhenTristateIsFalse = (int)(-200729);
	public static final int DAQmxErrorLinesUsedForStaticInputNotForHandshakingControl = (int)(-200728);
	public static final int DAQmxErrorLinesUsedForHandshakingControlNotForStaticInput = (int)(-200727);
	public static final int DAQmxErrorLinesUsedForStaticInputNotForHandshakingInput = (int)(-200726);
	public static final int DAQmxErrorLinesUsedForHandshakingInputNotForStaticInput = (int)(-200725);
	public static final int DAQmxErrorDifferentDITristateValsForChansInTask = (int)(-200724);
	public static final int DAQmxErrorTimebaseCalFreqVarianceTooLarge = (int)(-200723);
	public static final int DAQmxErrorTimebaseCalFailedToConverge = (int)(-200722);
	public static final int DAQmxErrorInadequateResolutionForTimebaseCal = (int)(-200721);
	public static final int DAQmxErrorInvalidAOGainCalConst = (int)(-200720);
	public static final int DAQmxErrorInvalidAOOffsetCalConst = (int)(-200719);
	public static final int DAQmxErrorInvalidAIGainCalConst = (int)(-200718);
	public static final int DAQmxErrorInvalidAIOffsetCalConst = (int)(-200717);
	public static final int DAQmxErrorDigOutputOverrun = (int)(-200716);
	public static final int DAQmxErrorDigInputOverrun = (int)(-200715);
	public static final int DAQmxErrorAcqStoppedDriverCantXferDataFastEnough = (int)(-200714);
	public static final int DAQmxErrorChansCantAppearInSameTask = (int)(-200713);
	public static final int DAQmxErrorInputCfgFailedBecauseWatchdogExpired = (int)(-200712);
	public static final int DAQmxErrorAnalogTrigChanNotExternal = (int)(-200711);
	public static final int DAQmxErrorTooManyChansForInternalAIInputSrc = (int)(-200710);
	public static final int DAQmxErrorTEDSSensorNotDetected = (int)(-200709);
	public static final int DAQmxErrorPrptyGetSpecdActiveItemFailedDueToDifftValues = (int)(-200708);
	public static final int DAQmxErrorRoutingDestTermPXIClk10InNotInSlot2 = (int)(-200706);
	public static final int DAQmxErrorRoutingDestTermPXIStarXNotInSlot2 = (int)(-200705);
	public static final int DAQmxErrorRoutingSrcTermPXIStarXNotInSlot2 = (int)(-200704);
	public static final int DAQmxErrorRoutingSrcTermPXIStarInSlot16AndAbove = (int)(-200703);
	public static final int DAQmxErrorRoutingDestTermPXIStarInSlot16AndAbove = (int)(-200702);
	public static final int DAQmxErrorRoutingDestTermPXIStarInSlot2 = (int)(-200701);
	public static final int DAQmxErrorRoutingSrcTermPXIStarInSlot2 = (int)(-200700);
	public static final int DAQmxErrorRoutingDestTermPXIChassisNotIdentified = (int)(-200699);
	public static final int DAQmxErrorRoutingSrcTermPXIChassisNotIdentified = (int)(-200698);
	public static final int DAQmxErrorFailedToAcquireCalData = (int)(-200697);
	public static final int DAQmxErrorBridgeOffsetNullingCalNotSupported = (int)(-200696);
	public static final int DAQmxErrorAIMaxNotSpecified = (int)(-200695);
	public static final int DAQmxErrorAIMinNotSpecified = (int)(-200694);
	public static final int DAQmxErrorOddTotalBufferSizeToWrite = (int)(-200693);
	public static final int DAQmxErrorOddTotalNumSampsToWrite = (int)(-200692);
	public static final int DAQmxErrorBufferWithWaitMode = (int)(-200691);
	public static final int DAQmxErrorBufferWithHWTimedSinglePointSampMode = (int)(-200690);
	public static final int DAQmxErrorCOWritePulseLowTicksNotSupported = (int)(-200689);
	public static final int DAQmxErrorCOWritePulseHighTicksNotSupported = (int)(-200688);
	public static final int DAQmxErrorCOWritePulseLowTimeOutOfRange = (int)(-200687);
	public static final int DAQmxErrorCOWritePulseHighTimeOutOfRange = (int)(-200686);
	public static final int DAQmxErrorCOWriteFreqOutOfRange = (int)(-200685);
	public static final int DAQmxErrorCOWriteDutyCycleOutOfRange = (int)(-200684);
	public static final int DAQmxErrorInvalidInstallation = (int)(-200683);
	public static final int DAQmxErrorRefTrigMasterSessionUnavailable = (int)(-200682);
	public static final int DAQmxErrorRouteFailedBecauseWatchdogExpired = (int)(-200681);
	public static final int DAQmxErrorDeviceShutDownDueToHighTemp = (int)(-200680);
	public static final int DAQmxErrorNoMemMapWhenHWTimedSinglePoint = (int)(-200679);
	public static final int DAQmxErrorWriteFailedBecauseWatchdogExpired = (int)(-200678);
	public static final int DAQmxErrorDifftInternalAIInputSrcs = (int)(-200677);
	public static final int DAQmxErrorDifftAIInputSrcInOneChanGroup = (int)(-200676);
	public static final int DAQmxErrorInternalAIInputSrcInMultChanGroups = (int)(-200675);
	public static final int DAQmxErrorSwitchOpFailedDueToPrevError = (int)(-200674);
	public static final int DAQmxErrorWroteMultiSampsUsingSingleSampWrite = (int)(-200673);
	public static final int DAQmxErrorMismatchedInputArraySizes = (int)(-200672);
	public static final int DAQmxErrorCantExceedRelayDriveLimit = (int)(-200671);
	public static final int DAQmxErrorDACRngLowNotEqualToMinusRefVal = (int)(-200670);
	public static final int DAQmxErrorCantAllowConnectDACToGnd = (int)(-200669);
	public static final int DAQmxErrorWatchdogTimeoutOutOfRangeAndNotSpecialVal = (int)(-200668);
	public static final int DAQmxErrorNoWatchdogOutputOnPortReservedForInput = (int)(-200667);
	public static final int DAQmxErrorNoInputOnPortCfgdForWatchdogOutput = (int)(-200666);
	public static final int DAQmxErrorWatchdogExpirationStateNotEqualForLinesInPort = (int)(-200665);
	public static final int DAQmxErrorCannotPerformOpWhenTaskNotReserved = (int)(-200664);
	public static final int DAQmxErrorPowerupStateNotSupported = (int)(-200663);
	public static final int DAQmxErrorWatchdogTimerNotSupported = (int)(-200662);
	public static final int DAQmxErrorOpNotSupportedWhenRefClkSrcNone = (int)(-200661);
	public static final int DAQmxErrorSampClkRateUnavailable = (int)(-200660);
	public static final int DAQmxErrorPrptyGetSpecdSingleActiveChanFailedDueToDifftVals = (int)(-200659);
	public static final int DAQmxErrorPrptyGetImpliedActiveChanFailedDueToDifftVals = (int)(-200658);
	public static final int DAQmxErrorPrptyGetSpecdActiveChanFailedDueToDifftVals = (int)(-200657);
	public static final int DAQmxErrorNoRegenWhenUsingBrdMem = (int)(-200656);
	public static final int DAQmxErrorNonbufferedReadMoreThanSampsPerChan = (int)(-200655);
	public static final int DAQmxErrorWatchdogExpirationTristateNotSpecdForEntirePort = (int)(-200654);
	public static final int DAQmxErrorPowerupTristateNotSpecdForEntirePort = (int)(-200653);
	public static final int DAQmxErrorPowerupStateNotSpecdForEntirePort = (int)(-200652);
	public static final int DAQmxErrorCantSetWatchdogExpirationOnDigInChan = (int)(-200651);
	public static final int DAQmxErrorCantSetPowerupStateOnDigInChan = (int)(-200650);
	public static final int DAQmxErrorPhysChanNotInTask = (int)(-200649);
	public static final int DAQmxErrorPhysChanDevNotInTask = (int)(-200648);
	public static final int DAQmxErrorDigInputNotSupported = (int)(-200647);
	public static final int DAQmxErrorDigFilterIntervalNotEqualForLines = (int)(-200646);
	public static final int DAQmxErrorDigFilterIntervalAlreadyCfgd = (int)(-200645);
	public static final int DAQmxErrorCantResetExpiredWatchdog = (int)(-200644);
	public static final int DAQmxErrorActiveChanTooManyLinesSpecdWhenGettingPrpty = (int)(-200643);
	public static final int DAQmxErrorActiveChanNotSpecdWhenGetting1LinePrpty = (int)(-200642);
	public static final int DAQmxErrorDigPrptyCannotBeSetPerLine = (int)(-200641);
	public static final int DAQmxErrorSendAdvCmpltAfterWaitForTrigInScanlist = (int)(-200640);
	public static final int DAQmxErrorDisconnectionRequiredInScanlist = (int)(-200639);
	public static final int DAQmxErrorTwoWaitForTrigsAfterConnectionInScanlist = (int)(-200638);
	public static final int DAQmxErrorActionSeparatorRequiredAfterBreakingConnectionInScanlist = (int)(-200637);
	public static final int DAQmxErrorConnectionInScanlistMustWaitForTrig = (int)(-200636);
	public static final int DAQmxErrorActionNotSupportedTaskNotWatchdog = (int)(-200635);
	public static final int DAQmxErrorWfmNameSameAsScriptName = (int)(-200634);
	public static final int DAQmxErrorScriptNameSameAsWfmName = (int)(-200633);
	public static final int DAQmxErrorDSFStopClock = (int)(-200632);
	public static final int DAQmxErrorDSFReadyForStartClock = (int)(-200631);
	public static final int DAQmxErrorWriteOffsetNotMultOfIncr = (int)(-200630);
	public static final int DAQmxErrorDifferentPrptyValsNotSupportedOnDev = (int)(-200629);
	public static final int DAQmxErrorRefAndPauseTrigConfigured = (int)(-200628);
	public static final int DAQmxErrorFailedToEnableHighSpeedInputClock = (int)(-200627);
	public static final int DAQmxErrorEmptyPhysChanInPowerUpStatesArray = (int)(-200626);
	public static final int DAQmxErrorActivePhysChanTooManyLinesSpecdWhenGettingPrpty = (int)(-200625);
	public static final int DAQmxErrorActivePhysChanNotSpecdWhenGetting1LinePrpty = (int)(-200624);
	public static final int DAQmxErrorPXIDevTempCausedShutDown = (int)(-200623);
	public static final int DAQmxErrorInvalidNumSampsToWrite = (int)(-200622);
	public static final int DAQmxErrorOutputFIFOUnderflow2 = (int)(-200621);
	public static final int DAQmxErrorRepeatedAIPhysicalChan = (int)(-200620);
	public static final int DAQmxErrorMultScanOpsInOneChassis = (int)(-200619);
	public static final int DAQmxErrorInvalidAIChanOrder = (int)(-200618);
	public static final int DAQmxErrorReversePowerProtectionActivated = (int)(-200617);
	public static final int DAQmxErrorInvalidAsynOpHandle = (int)(-200616);
	public static final int DAQmxErrorFailedToEnableHighSpeedOutput = (int)(-200615);
	public static final int DAQmxErrorCannotReadPastEndOfRecord = (int)(-200614);
	public static final int DAQmxErrorAcqStoppedToPreventInputBufferOverwriteOneDataXferMech = (int)(-200613);
	public static final int DAQmxErrorZeroBasedChanIndexInvalid = (int)(-200612);
	public static final int DAQmxErrorNoChansOfGivenTypeInTask = (int)(-200611);
	public static final int DAQmxErrorSampClkSrcInvalidForOutputValidForInput = (int)(-200610);
	public static final int DAQmxErrorOutputBufSizeTooSmallToStartGen = (int)(-200609);
	public static final int DAQmxErrorInputBufSizeTooSmallToStartAcq = (int)(-200608);
	public static final int DAQmxErrorExportTwoSignalsOnSameTerminal = (int)(-200607);
	public static final int DAQmxErrorChanIndexInvalid = (int)(-200606);
	public static final int DAQmxErrorRangeSyntaxNumberTooBig = (int)(-200605);
	public static final int DAQmxErrorNULLPtr = (int)(-200604);
	public static final int DAQmxErrorScaledMinEqualMax = (int)(-200603);
	public static final int DAQmxErrorPreScaledMinEqualMax = (int)(-200602);
	public static final int DAQmxErrorPropertyNotSupportedForScaleType = (int)(-200601);
	public static final int DAQmxErrorChannelNameGenerationNumberTooBig = (int)(-200600);
	public static final int DAQmxErrorRepeatedNumberInScaledValues = (int)(-200599);
	public static final int DAQmxErrorRepeatedNumberInPreScaledValues = (int)(-200598);
	public static final int DAQmxErrorLinesAlreadyReservedForOutput = (int)(-200597);
	public static final int DAQmxErrorSwitchOperationChansSpanMultipleDevsInList = (int)(-200596);
	public static final int DAQmxErrorInvalidIDInListAtBeginningOfSwitchOperation = (int)(-200595);
	public static final int DAQmxErrorMStudioInvalidPolyDirection = (int)(-200594);
	public static final int DAQmxErrorMStudioPropertyGetWhileTaskNotVerified = (int)(-200593);
	public static final int DAQmxErrorRangeWithTooManyObjects = (int)(-200592);
	public static final int DAQmxErrorCppDotNetAPINegativeBufferSize = (int)(-200591);
	public static final int DAQmxErrorCppCantRemoveInvalidEventHandler = (int)(-200590);
	public static final int DAQmxErrorCppCantRemoveEventHandlerTwice = (int)(-200589);
	public static final int DAQmxErrorCppCantRemoveOtherObjectsEventHandler = (int)(-200588);
	public static final int DAQmxErrorDigLinesReservedOrUnavailable = (int)(-200587);
	public static final int DAQmxErrorDSFFailedToResetStream = (int)(-200586);
	public static final int DAQmxErrorDSFReadyForOutputNotAsserted = (int)(-200585);
	public static final int DAQmxErrorSampToWritePerChanNotMultipleOfIncr = (int)(-200584);
	public static final int DAQmxErrorAOPropertiesCauseVoltageBelowMin = (int)(-200583);
	public static final int DAQmxErrorAOPropertiesCauseVoltageOverMax = (int)(-200582);
	public static final int DAQmxErrorPropertyNotSupportedWhenRefClkSrcNone = (int)(-200581);
	public static final int DAQmxErrorAIMaxTooSmall = (int)(-200580);
	public static final int DAQmxErrorAIMaxTooLarge = (int)(-200579);
	public static final int DAQmxErrorAIMinTooSmall = (int)(-200578);
	public static final int DAQmxErrorAIMinTooLarge = (int)(-200577);
	public static final int DAQmxErrorBuiltInCJCSrcNotSupported = (int)(-200576);
	public static final int DAQmxErrorTooManyPostTrigSampsPerChan = (int)(-200575);
	public static final int DAQmxErrorTrigLineNotFoundSingleDevRoute = (int)(-200574);
	public static final int DAQmxErrorDifferentInternalAIInputSources = (int)(-200573);
	public static final int DAQmxErrorDifferentAIInputSrcInOneChanGroup = (int)(-200572);
	public static final int DAQmxErrorInternalAIInputSrcInMultipleChanGroups = (int)(-200571);
	public static final int DAQmxErrorCAPIChanIndexInvalid = (int)(-200570);
	public static final int DAQmxErrorCollectionDoesNotMatchChanType = (int)(-200569);
	public static final int DAQmxErrorOutputCantStartChangedRegenerationMode = (int)(-200568);
	public static final int DAQmxErrorOutputCantStartChangedBufferSize = (int)(-200567);
	public static final int DAQmxErrorChanSizeTooBigForU32PortWrite = (int)(-200566);
	public static final int DAQmxErrorChanSizeTooBigForU8PortWrite = (int)(-200565);
	public static final int DAQmxErrorChanSizeTooBigForU32PortRead = (int)(-200564);
	public static final int DAQmxErrorChanSizeTooBigForU8PortRead = (int)(-200563);
	public static final int DAQmxErrorInvalidDigDataWrite = (int)(-200562);
	public static final int DAQmxErrorInvalidAODataWrite = (int)(-200561);
	public static final int DAQmxErrorWaitUntilDoneDoesNotIndicateDone = (int)(-200560);
	public static final int DAQmxErrorMultiChanTypesInTask = (int)(-200559);
	public static final int DAQmxErrorMultiDevsInTask = (int)(-200558);
	public static final int DAQmxErrorCannotSetPropertyWhenTaskRunning = (int)(-200557);
	public static final int DAQmxErrorCannotGetPropertyWhenTaskNotCommittedOrRunning = (int)(-200556);
	public static final int DAQmxErrorLeadingUnderscoreInString = (int)(-200555);
	public static final int DAQmxErrorTrailingSpaceInString = (int)(-200554);
	public static final int DAQmxErrorLeadingSpaceInString = (int)(-200553);
	public static final int DAQmxErrorInvalidCharInString = (int)(-200552);
	public static final int DAQmxErrorDLLBecameUnlocked = (int)(-200551);
	public static final int DAQmxErrorDLLLock = (int)(-200550);
	public static final int DAQmxErrorSelfCalConstsInvalid = (int)(-200549);
	public static final int DAQmxErrorInvalidTrigCouplingExceptForExtTrigChan = (int)(-200548);
	public static final int DAQmxErrorWriteFailsBufferSizeAutoConfigured = (int)(-200547);
	public static final int DAQmxErrorExtCalAdjustExtRefVoltageFailed = (int)(-200546);
	public static final int DAQmxErrorSelfCalFailedExtNoiseOrRefVoltageOutOfCal = (int)(-200545);
	public static final int DAQmxErrorExtCalTemperatureNotDAQmx = (int)(-200544);
	public static final int DAQmxErrorExtCalDateTimeNotDAQmx = (int)(-200543);
	public static final int DAQmxErrorSelfCalTemperatureNotDAQmx = (int)(-200542);
	public static final int DAQmxErrorSelfCalDateTimeNotDAQmx = (int)(-200541);
	public static final int DAQmxErrorDACRefValNotSet = (int)(-200540);
	public static final int DAQmxErrorAnalogMultiSampWriteNotSupported = (int)(-200539);
	public static final int DAQmxErrorInvalidActionInControlTask = (int)(-200538);
	public static final int DAQmxErrorPolyCoeffsInconsistent = (int)(-200537);
	public static final int DAQmxErrorSensorValTooLow = (int)(-200536);
	public static final int DAQmxErrorSensorValTooHigh = (int)(-200535);
	public static final int DAQmxErrorWaveformNameTooLong = (int)(-200534);
	public static final int DAQmxErrorIdentifierTooLongInScript = (int)(-200533);
	public static final int DAQmxErrorUnexpectedIDFollowingSwitchChanName = (int)(-200532);
	public static final int DAQmxErrorRelayNameNotSpecifiedInList = (int)(-200531);
	public static final int DAQmxErrorUnexpectedIDFollowingRelayNameInList = (int)(-200530);
	public static final int DAQmxErrorUnexpectedIDFollowingSwitchOpInList = (int)(-200529);
	public static final int DAQmxErrorInvalidLineGrouping = (int)(-200528);
	public static final int DAQmxErrorCtrMinMax = (int)(-200527);
	public static final int DAQmxErrorWriteChanTypeMismatch = (int)(-200526);
	public static final int DAQmxErrorReadChanTypeMismatch = (int)(-200525);
	public static final int DAQmxErrorWriteNumChansMismatch = (int)(-200524);
	public static final int DAQmxErrorOneChanReadForMultiChanTask = (int)(-200523);
	public static final int DAQmxErrorCannotSelfCalDuringExtCal = (int)(-200522);
	public static final int DAQmxErrorMeasCalAdjustOscillatorPhaseDAC = (int)(-200521);
	public static final int DAQmxErrorInvalidCalConstCalADCAdjustment = (int)(-200520);
	public static final int DAQmxErrorInvalidCalConstOscillatorFreqDACValue = (int)(-200519);
	public static final int DAQmxErrorInvalidCalConstOscillatorPhaseDACValue = (int)(-200518);
	public static final int DAQmxErrorInvalidCalConstOffsetDACValue = (int)(-200517);
	public static final int DAQmxErrorInvalidCalConstGainDACValue = (int)(-200516);
	public static final int DAQmxErrorInvalidNumCalADCReadsToAverage = (int)(-200515);
	public static final int DAQmxErrorInvalidCfgCalAdjustDirectPathOutputImpedance = (int)(-200514);
	public static final int DAQmxErrorInvalidCfgCalAdjustMainPathOutputImpedance = (int)(-200513);
	public static final int DAQmxErrorInvalidCfgCalAdjustMainPathPostAmpGainAndOffset = (int)(-200512);
	public static final int DAQmxErrorInvalidCfgCalAdjustMainPathPreAmpGain = (int)(-200511);
	public static final int DAQmxErrorInvalidCfgCalAdjustMainPreAmpOffset = (int)(-200510);
	public static final int DAQmxErrorMeasCalAdjustCalADC = (int)(-200509);
	public static final int DAQmxErrorMeasCalAdjustOscillatorFrequency = (int)(-200508);
	public static final int DAQmxErrorMeasCalAdjustDirectPathOutputImpedance = (int)(-200507);
	public static final int DAQmxErrorMeasCalAdjustMainPathOutputImpedance = (int)(-200506);
	public static final int DAQmxErrorMeasCalAdjustDirectPathGain = (int)(-200505);
	public static final int DAQmxErrorMeasCalAdjustMainPathPostAmpGainAndOffset = (int)(-200504);
	public static final int DAQmxErrorMeasCalAdjustMainPathPreAmpGain = (int)(-200503);
	public static final int DAQmxErrorMeasCalAdjustMainPathPreAmpOffset = (int)(-200502);
	public static final int DAQmxErrorInvalidDateTimeInEEPROM = (int)(-200501);
	public static final int DAQmxErrorUnableToLocateErrorResources = (int)(-200500);
	public static final int DAQmxErrorDotNetAPINotUnsigned32BitNumber = (int)(-200499);
	public static final int DAQmxErrorInvalidRangeOfObjectsSyntaxInString = (int)(-200498);
	public static final int DAQmxErrorAttemptToEnableLineNotPreviouslyDisabled = (int)(-200497);
	public static final int DAQmxErrorInvalidCharInPattern = (int)(-200496);
	public static final int DAQmxErrorIntermediateBufferFull = (int)(-200495);
	public static final int DAQmxErrorLoadTaskFailsBecauseNoTimingOnDev = (int)(-200494);
	public static final int DAQmxErrorCAPIReservedParamNotNULLNorEmpty = (int)(-200493);
	public static final int DAQmxErrorCAPIReservedParamNotNULL = (int)(-200492);
	public static final int DAQmxErrorCAPIReservedParamNotZero = (int)(-200491);
	public static final int DAQmxErrorSampleValueOutOfRange = (int)(-200490);
	public static final int DAQmxErrorChanAlreadyInTask = (int)(-200489);
	public static final int DAQmxErrorVirtualChanDoesNotExist = (int)(-200488);
	public static final int DAQmxErrorChanNotInTask = (int)(-200486);
	public static final int DAQmxErrorTaskNotInDataNeighborhood = (int)(-200485);
	public static final int DAQmxErrorCantSaveTaskWithoutReplace = (int)(-200484);
	public static final int DAQmxErrorCantSaveChanWithoutReplace = (int)(-200483);
	public static final int DAQmxErrorDevNotInTask = (int)(-200482);
	public static final int DAQmxErrorDevAlreadyInTask = (int)(-200481);
	public static final int DAQmxErrorCanNotPerformOpWhileTaskRunning = (int)(-200479);

	public static final int DAQmxErrorCanNotPerformOpWhenNoChansInTask = (int)(-200478);
	public static final int DAQmxErrorCanNotPerformOpWhenNoDevInTask = (int)(-200477);
	public static final int DAQmxErrorCannotPerformOpWhenTaskNotRunning = (int)(-200475);
	public static final int DAQmxErrorOperationTimedOut = (int)(-200474);
	public static final int DAQmxErrorCannotReadWhenAutoStartFalseAndTaskNotRunningOrCommitted = (int)(-200473);
	public static final int DAQmxErrorCannotWriteWhenAutoStartFalseAndTaskNotRunningOrCommitted = (int)(-200472);
	public static final int DAQmxErrorTaskVersionNew = (int)(-200470);
	public static final int DAQmxErrorChanVersionNew = (int)(-200469);
	public static final int DAQmxErrorEmptyString = (int)(-200467);
	public static final int DAQmxErrorChannelSizeTooBigForPortReadType = (int)(-200466);
	public static final int DAQmxErrorChannelSizeTooBigForPortWriteType = (int)(-200465);
	public static final int DAQmxErrorExpectedNumberOfChannelsVerificationFailed = (int)(-200464);
	public static final int DAQmxErrorNumLinesMismatchInReadOrWrite = (int)(-200463);
	public static final int DAQmxErrorOutputBufferEmpty = (int)(-200462);
	public static final int DAQmxErrorInvalidChanName = (int)(-200461);
	public static final int DAQmxErrorReadNoInputChansInTask = (int)(-200460);
	public static final int DAQmxErrorWriteNoOutputChansInTask = (int)(-200459);
	public static final int DAQmxErrorPropertyNotSupportedNotInputTask = (int)(-200457);
	public static final int DAQmxErrorPropertyNotSupportedNotOutputTask = (int)(-200456);
	public static final int DAQmxErrorGetPropertyNotInputBufferedTask = (int)(-200455);
	public static final int DAQmxErrorGetPropertyNotOutputBufferedTask = (int)(-200454);
	public static final int DAQmxErrorInvalidTimeoutVal = (int)(-200453);
	public static final int DAQmxErrorAttributeNotSupportedInTaskContext = (int)(-200452);
	public static final int DAQmxErrorAttributeNotQueryableUnlessTaskIsCommitted = (int)(-200451);
	public static final int DAQmxErrorAttributeNotSettableWhenTaskIsRunning = (int)(-200450);
	public static final int DAQmxErrorDACRngLowNotMinusRefValNorZero = (int)(-200449);
	public static final int DAQmxErrorDACRngHighNotEqualRefVal = (int)(-200448);
	public static final int DAQmxErrorUnitsNotFromCustomScale = (int)(-200447);
	public static final int DAQmxErrorInvalidVoltageReadingDuringExtCal = (int)(-200446);
	public static final int DAQmxErrorCalFunctionNotSupported = (int)(-200445);
	public static final int DAQmxErrorInvalidPhysicalChanForCal = (int)(-200444);
	public static final int DAQmxErrorExtCalNotComplete = (int)(-200443);
	public static final int DAQmxErrorCantSyncToExtStimulusFreqDuringCal = (int)(-200442);
	public static final int DAQmxErrorUnableToDetectExtStimulusFreqDuringCal = (int)(-200441);
	public static final int DAQmxErrorInvalidCloseAction = (int)(-200440);
	public static final int DAQmxErrorExtCalFunctionOutsideExtCalSession = (int)(-200439);
	public static final int DAQmxErrorInvalidCalArea = (int)(-200438);
	public static final int DAQmxErrorExtCalConstsInvalid = (int)(-200437);
	public static final int DAQmxErrorStartTrigDelayWithExtSampClk = (int)(-200436);
	public static final int DAQmxErrorDelayFromSampClkWithExtConv = (int)(-200435);
	public static final int DAQmxErrorFewerThan2PreScaledVals = (int)(-200434);
	public static final int DAQmxErrorFewerThan2ScaledValues = (int)(-200433);
	public static final int DAQmxErrorPhysChanOutputType = (int)(-200432);
	public static final int DAQmxErrorPhysChanMeasType = (int)(-200431);
	public static final int DAQmxErrorInvalidPhysChanType = (int)(-200430);
	public static final int DAQmxErrorLabVIEWEmptyTaskOrChans = (int)(-200429);
	public static final int DAQmxErrorLabVIEWInvalidTaskOrChans = (int)(-200428);
	public static final int DAQmxErrorInvalidRefClkRate = (int)(-200427);
	public static final int DAQmxErrorInvalidExtTrigImpedance = (int)(-200426);
	public static final int DAQmxErrorHystTrigLevelAIMax = (int)(-200425);
	public static final int DAQmxErrorLineNumIncompatibleWithVideoSignalFormat = (int)(-200424);
	public static final int DAQmxErrorTrigWindowAIMinAIMaxCombo = (int)(-200423);
	public static final int DAQmxErrorTrigAIMinAIMax = (int)(-200422);
	public static final int DAQmxErrorHystTrigLevelAIMin = (int)(-200421);
	public static final int DAQmxErrorInvalidSampRateConsiderRIS = (int)(-200420);
	public static final int DAQmxErrorInvalidReadPosDuringRIS = (int)(-200419);
	public static final int DAQmxErrorImmedTrigDuringRISMode = (int)(-200418);
	public static final int DAQmxErrorTDCNotEnabledDuringRISMode = (int)(-200417);
	public static final int DAQmxErrorMultiRecWithRIS = (int)(-200416);
	public static final int DAQmxErrorInvalidRefClkSrc = (int)(-200415);
	public static final int DAQmxErrorInvalidSampClkSrc = (int)(-200414);
	public static final int DAQmxErrorInsufficientOnBoardMemForNumRecsAndSamps = (int)(-200413);
	public static final int DAQmxErrorInvalidAIAttenuation = (int)(-200412);
	public static final int DAQmxErrorACCouplingNotAllowedWith50OhmImpedance = (int)(-200411);
	public static final int DAQmxErrorInvalidRecordNum = (int)(-200410);
	public static final int DAQmxErrorZeroSlopeLinearScale = (int)(-200409);
	public static final int DAQmxErrorZeroReversePolyScaleCoeffs = (int)(-200408);
	public static final int DAQmxErrorZeroForwardPolyScaleCoeffs = (int)(-200407);
	public static final int DAQmxErrorNoReversePolyScaleCoeffs = (int)(-200406);
	public static final int DAQmxErrorNoForwardPolyScaleCoeffs = (int)(-200405);
	public static final int DAQmxErrorNoPolyScaleCoeffs = (int)(-200404);
	public static final int DAQmxErrorReversePolyOrderLessThanNumPtsToCompute = (int)(-200403);
	public static final int DAQmxErrorReversePolyOrderNotPositive = (int)(-200402);
	public static final int DAQmxErrorNumPtsToComputeNotPositive = (int)(-200401);
	public static final int DAQmxErrorWaveformLengthNotMultipleOfIncr = (int)(-200400);
	public static final int DAQmxErrorCAPINoExtendedErrorInfoAvailable = (int)(-200399);
	public static final int DAQmxErrorCVIFunctionNotFoundInDAQmxDLL = (int)(-200398);
	public static final int DAQmxErrorCVIFailedToLoadDAQmxDLL = (int)(-200397);
	public static final int DAQmxErrorNoCommonTrigLineForImmedRoute = (int)(-200396);
	public static final int DAQmxErrorNoCommonTrigLineForTaskRoute = (int)(-200395);
	public static final int DAQmxErrorF64PrptyValNotUnsignedInt = (int)(-200394);
	public static final int DAQmxErrorRegisterNotWritable = (int)(-200393);
	public static final int DAQmxErrorInvalidOutputVoltageAtSampClkRate = (int)(-200392);
	public static final int DAQmxErrorStrobePhaseShiftDCMBecameUnlocked = (int)(-200391);
	public static final int DAQmxErrorDrivePhaseShiftDCMBecameUnlocked = (int)(-200390);
	public static final int DAQmxErrorClkOutPhaseShiftDCMBecameUnlocked = (int)(-200389);
	public static final int DAQmxErrorOutputBoardClkDCMBecameUnlocked = (int)(-200388);
	public static final int DAQmxErrorInputBoardClkDCMBecameUnlocked = (int)(-200387);
	public static final int DAQmxErrorInternalClkDCMBecameUnlocked = (int)(-200386);
	public static final int DAQmxErrorDCMLock = (int)(-200385);
	public static final int DAQmxErrorDataLineReservedForDynamicOutput = (int)(-200384);
	public static final int DAQmxErrorInvalidRefClkSrcGivenSampClkSrc = (int)(-200383);
	public static final int DAQmxErrorNoPatternMatcherAvailable = (int)(-200382);
	public static final int DAQmxErrorInvalidDelaySampRateBelowPhaseShiftDCMThresh = (int)(-200381);
	public static final int DAQmxErrorStrainGageCalibration = (int)(-200380);
	public static final int DAQmxErrorInvalidExtClockFreqAndDivCombo = (int)(-200379);
	public static final int DAQmxErrorCustomScaleDoesNotExist = (int)(-200378);
	public static final int DAQmxErrorOnlyFrontEndChanOpsDuringScan = (int)(-200377);
	public static final int DAQmxErrorInvalidOptionForDigitalPortChannel = (int)(-200376);
	public static final int DAQmxErrorUnsupportedSignalTypeExportSignal = (int)(-200375);
	public static final int DAQmxErrorInvalidSignalTypeExportSignal = (int)(-200374);
	public static final int DAQmxErrorUnsupportedTrigTypeSendsSWTrig = (int)(-200373);
	public static final int DAQmxErrorInvalidTrigTypeSendsSWTrig = (int)(-200372);
	public static final int DAQmxErrorRepeatedPhysicalChan = (int)(-200371);
	public static final int DAQmxErrorResourcesInUseForRouteInTask = (int)(-200370);
	public static final int DAQmxErrorResourcesInUseForRoute = (int)(-200369);
	public static final int DAQmxErrorRouteNotSupportedByHW = (int)(-200368);
	public static final int DAQmxErrorResourcesInUseForExportSignalPolarity = (int)(-200367);
	public static final int DAQmxErrorResourcesInUseForInversionInTask = (int)(-200366);
	public static final int DAQmxErrorResourcesInUseForInversion = (int)(-200365);
	public static final int DAQmxErrorExportSignalPolarityNotSupportedByHW = (int)(-200364);
	public static final int DAQmxErrorInversionNotSupportedByHW = (int)(-200363);
	public static final int DAQmxErrorOverloadedChansExistNotRead = (int)(-200362);
	public static final int DAQmxErrorInputFIFOOverflow2 = (int)(-200361);
	public static final int DAQmxErrorCJCChanNotSpecd = (int)(-200360);
	public static final int DAQmxErrorCtrExportSignalNotPossible = (int)(-200359);
	public static final int DAQmxErrorRefTrigWhenContinuous = (int)(-200358);
	public static final int DAQmxErrorIncompatibleSensorOutputAndDeviceInputRanges = (int)(-200357);
	public static final int DAQmxErrorCustomScaleNameUsed = (int)(-200356);
	public static final int DAQmxErrorPropertyValNotSupportedByHW = (int)(-200355);
	public static final int DAQmxErrorPropertyValNotValidTermName = (int)(-200354);
	public static final int DAQmxErrorResourcesInUseForProperty = (int)(-200353);
	public static final int DAQmxErrorCJCChanAlreadyUsed = (int)(-200352);
	public static final int DAQmxErrorForwardPolynomialCoefNotSpecd = (int)(-200351);
	public static final int DAQmxErrorTableScaleNumPreScaledAndScaledValsNotEqual = (int)(-200350);
	public static final int DAQmxErrorTableScalePreScaledValsNotSpecd = (int)(-200349);
	public static final int DAQmxErrorTableScaleScaledValsNotSpecd = (int)(-200348);
	public static final int DAQmxErrorIntermediateBufferSizeNotMultipleOfIncr = (int)(-200347);
	public static final int DAQmxErrorEventPulseWidthOutOfRange = (int)(-200346);
	public static final int DAQmxErrorEventDelayOutOfRange = (int)(-200345);
	public static final int DAQmxErrorSampPerChanNotMultipleOfIncr = (int)(-200344);
	public static final int DAQmxErrorCannotCalculateNumSampsTaskNotStarted = (int)(-200343);
	public static final int DAQmxErrorScriptNotInMem = (int)(-200342);
	public static final int DAQmxErrorOnboardMemTooSmall = (int)(-200341);
	public static final int DAQmxErrorReadAllAvailableDataWithoutBuffer = (int)(-200340);
	public static final int DAQmxErrorPulseActiveAtStart = (int)(-200339);
	public static final int DAQmxErrorCalTempNotSupported = (int)(-200338);
	public static final int DAQmxErrorDelayFromSampClkTooLong = (int)(-200337);
	public static final int DAQmxErrorDelayFromSampClkTooShort = (int)(-200336);
	public static final int DAQmxErrorAIConvRateTooHigh = (int)(-200335);
	public static final int DAQmxErrorDelayFromStartTrigTooLong = (int)(-200334);
	public static final int DAQmxErrorDelayFromStartTrigTooShort = (int)(-200333);
	public static final int DAQmxErrorSampRateTooHigh = (int)(-200332);
	public static final int DAQmxErrorSampRateTooLow = (int)(-200331);
	public static final int DAQmxErrorPFI0UsedForAnalogAndDigitalSrc = (int)(-200330);
	public static final int DAQmxErrorPrimingCfgFIFO = (int)(-200329);
	public static final int DAQmxErrorCannotOpenTopologyCfgFile = (int)(-200328);
	public static final int DAQmxErrorInvalidDTInsideWfmDataType = (int)(-200327);
	public static final int DAQmxErrorRouteSrcAndDestSame = (int)(-200326);
	public static final int DAQmxErrorReversePolynomialCoefNotSpecd = (int)(-200325);
	public static final int DAQmxErrorDevAbsentOrUnavailable = (int)(-200324);
	public static final int DAQmxErrorNoAdvTrigForMultiDevScan = (int)(-200323);
	public static final int DAQmxErrorInterruptsInsufficientDataXferMech = (int)(-200322);
	public static final int DAQmxErrorInvalidAttentuationBasedOnMinMax = (int)(-200321);
	public static final int DAQmxErrorCabledModuleCannotRouteSSH = (int)(-200320);
	public static final int DAQmxErrorCabledModuleCannotRouteConvClk = (int)(-200319);
	public static final int DAQmxErrorInvalidExcitValForScaling = (int)(-200318);
	public static final int DAQmxErrorNoDevMemForScript = (int)(-200317);
	public static final int DAQmxErrorScriptDataUnderflow = (int)(-200316);
	public static final int DAQmxErrorNoDevMemForWaveform = (int)(-200315);
	public static final int DAQmxErrorStreamDCMBecameUnlocked = (int)(-200314);
	public static final int DAQmxErrorStreamDCMLock = (int)(-200313);
	public static final int DAQmxErrorWaveformNotInMem = (int)(-200312);
	public static final int DAQmxErrorWaveformWriteOutOfBounds = (int)(-200311);
	public static final int DAQmxErrorWaveformPreviouslyAllocated = (int)(-200310);
	public static final int DAQmxErrorSampClkTbMasterTbDivNotAppropriateForSampTbSrc = (int)(-200309);
	public static final int DAQmxErrorSampTbRateSampTbSrcMismatch = (int)(-200308);
	public static final int DAQmxErrorMasterTbRateMasterTbSrcMismatch = (int)(-200307);
	public static final int DAQmxErrorSampsPerChanTooBig = (int)(-200306);
	public static final int DAQmxErrorFinitePulseTrainNotPossible = (int)(-200305);
	public static final int DAQmxErrorExtMasterTimebaseRateNotSpecified = (int)(-200304);
	public static final int DAQmxErrorExtSampClkSrcNotSpecified = (int)(-200303);
	public static final int DAQmxErrorInputSignalSlowerThanMeasTime = (int)(-200302);
	public static final int DAQmxErrorCannotUpdatePulseGenProperty = (int)(-200301);
	public static final int DAQmxErrorInvalidTimingType = (int)(-200300);
	public static final int DAQmxErrorPropertyUnavailWhenUsingOnboardMemory = (int)(-200297);
	public static final int DAQmxErrorCannotWriteAfterStartWithOnboardMemory = (int)(-200295);
	public static final int DAQmxErrorNotEnoughSampsWrittenForInitialXferRqstCondition = (int)(-200294);
	public static final int DAQmxErrorNoMoreSpace = (int)(-200293);
	public static final int DAQmxErrorSamplesCanNotYetBeWritten = (int)(-200292);
	public static final int DAQmxErrorGenStoppedToPreventIntermediateBufferRegenOfOldSamples = (int)(-200291);
	public static final int DAQmxErrorGenStoppedToPreventRegenOfOldSamples = (int)(-200290);
	public static final int DAQmxErrorSamplesNoLongerWriteable = (int)(-200289);
	public static final int DAQmxErrorSamplesWillNeverBeGenerated = (int)(-200288);
	public static final int DAQmxErrorNegativeWriteSampleNumber = (int)(-200287);
	public static final int DAQmxErrorNoAcqStarted = (int)(-200286);
	public static final int DAQmxErrorSamplesNotYetAvailable = (int)(-200284);
	public static final int DAQmxErrorAcqStoppedToPreventIntermediateBufferOverflow = (int)(-200283);
	public static final int DAQmxErrorNoRefTrigConfigured = (int)(-200282);
	public static final int DAQmxErrorCannotReadRelativeToRefTrigUntilDone = (int)(-200281);
	public static final int DAQmxErrorSamplesNoLongerAvailable = (int)(-200279);
	public static final int DAQmxErrorSamplesWillNeverBeAvailable = (int)(-200278);
	public static final int DAQmxErrorNegativeReadSampleNumber = (int)(-200277);
	public static final int DAQmxErrorExternalSampClkAndRefClkThruSameTerm = (int)(-200276);
	public static final int DAQmxErrorExtSampClkRateTooLowForClkIn = (int)(-200275);
	public static final int DAQmxErrorExtSampClkRateTooHighForBackplane = (int)(-200274);
	public static final int DAQmxErrorSampClkRateAndDivCombo = (int)(-200273);
	public static final int DAQmxErrorSampClkRateTooLowForDivDown = (int)(-200272);
	public static final int DAQmxErrorProductOfAOMinAndGainTooSmall = (int)(-200271);
	public static final int DAQmxErrorInterpolationRateNotPossible = (int)(-200270);
	public static final int DAQmxErrorOffsetTooLarge = (int)(-200269);
	public static final int DAQmxErrorOffsetTooSmall = (int)(-200268);
	public static final int DAQmxErrorProductOfAOMaxAndGainTooLarge = (int)(-200267);
	public static final int DAQmxErrorMinAndMaxNotSymmetric = (int)(-200266);
	public static final int DAQmxErrorInvalidAnalogTrigSrc = (int)(-200265);
	public static final int DAQmxErrorTooManyChansForAnalogRefTrig = (int)(-200264);
	public static final int DAQmxErrorTooManyChansForAnalogPauseTrig = (int)(-200263);
	public static final int DAQmxErrorTrigWhenOnDemandSampTiming = (int)(-200262);
	public static final int DAQmxErrorInconsistentAnalogTrigSettings = (int)(-200261);
	public static final int DAQmxErrorMemMapDataXferModeSampTimingCombo = (int)(-200260);
	public static final int DAQmxErrorInvalidJumperedAttr = (int)(-200259);
	public static final int DAQmxErrorInvalidGainBasedOnMinMax = (int)(-200258);
	public static final int DAQmxErrorInconsistentExcit = (int)(-200257);
	public static final int DAQmxErrorTopologyNotSupportedByCfgTermBlock = (int)(-200256);
	public static final int DAQmxErrorBuiltInTempSensorNotSupported = (int)(-200255);
	public static final int DAQmxErrorInvalidTerm = (int)(-200254);
	public static final int DAQmxErrorCannotTristateTerm = (int)(-200253);
	public static final int DAQmxErrorCannotTristateBusyTerm = (int)(-200252);
	public static final int DAQmxErrorNoDMAChansAvailable = (int)(-200251);
	public static final int DAQmxErrorInvalidWaveformLengthWithinLoopInScript = (int)(-200250);
	public static final int DAQmxErrorInvalidSubsetLengthWithinLoopInScript = (int)(-200249);
	public static final int DAQmxErrorMarkerPosInvalidForLoopInScript = (int)(-200248);
	public static final int DAQmxErrorIntegerExpectedInScript = (int)(-200247);
	public static final int DAQmxErrorPLLBecameUnlocked = (int)(-200246);
	public static final int DAQmxErrorPLLLock = (int)(-200245);
	public static final int DAQmxErrorDDCClkOutDCMBecameUnlocked = (int)(-200244);
	public static final int DAQmxErrorDDCClkOutDCMLock = (int)(-200243);
	public static final int DAQmxErrorClkDoublerDCMBecameUnlocked = (int)(-200242);
	public static final int DAQmxErrorClkDoublerDCMLock = (int)(-200241);
	public static final int DAQmxErrorSampClkDCMBecameUnlocked = (int)(-200240);
	public static final int DAQmxErrorSampClkDCMLock = (int)(-200239);
	public static final int DAQmxErrorSampClkTimebaseDCMBecameUnlocked = (int)(-200238);
	public static final int DAQmxErrorSampClkTimebaseDCMLock = (int)(-200237);
	public static final int DAQmxErrorAttrCannotBeReset = (int)(-200236);
	public static final int DAQmxErrorExplanationNotFound = (int)(-200235);
	public static final int DAQmxErrorWriteBufferTooSmall = (int)(-200234);
	public static final int DAQmxErrorSpecifiedAttrNotValid = (int)(-200233);
	public static final int DAQmxErrorAttrCannotBeRead = (int)(-200232);
	public static final int DAQmxErrorAttrCannotBeSet = (int)(-200231);
	public static final int DAQmxErrorNULLPtrForC_Api = (int)(-200230);
	public static final int DAQmxErrorReadBufferTooSmall = (int)(-200229);
	public static final int DAQmxErrorBufferTooSmallForString = (int)(-200228);
	public static final int DAQmxErrorNoAvailTrigLinesOnDevice = (int)(-200227);
	public static final int DAQmxErrorTrigBusLineNotAvail = (int)(-200226);
	public static final int DAQmxErrorCouldNotReserveRequestedTrigLine = (int)(-200225);
	public static final int DAQmxErrorTrigLineNotFound = (int)(-200224);
	public static final int DAQmxErrorSCXI1126ThreshHystCombination = (int)(-200223);
	public static final int DAQmxErrorAcqStoppedToPreventInputBufferOverwrite = (int)(-200222);
	public static final int DAQmxErrorTimeoutExceeded = (int)(-200221);
	public static final int DAQmxErrorInvalidDeviceID = (int)(-200220);
	public static final int DAQmxErrorInvalidAOChanOrder = (int)(-200219);
	public static final int DAQmxErrorSampleTimingTypeAndDataXferMode = (int)(-200218);
	public static final int DAQmxErrorBufferWithOnDemandSampTiming = (int)(-200217);
	public static final int DAQmxErrorBufferAndDataXferMode = (int)(-200216);
	public static final int DAQmxErrorMemMapAndBuffer = (int)(-200215);
	public static final int DAQmxErrorNoAnalogTrigHW = (int)(-200214);
	public static final int DAQmxErrorTooManyPretrigPlusMinPostTrigSamps = (int)(-200213);
	public static final int DAQmxErrorInconsistentUnitsSpecified = (int)(-200212);
	public static final int DAQmxErrorMultipleRelaysForSingleRelayOp = (int)(-200211);
	public static final int DAQmxErrorMultipleDevIDsPerChassisSpecifiedInList = (int)(-200210);
	public static final int DAQmxErrorDuplicateDevIDInList = (int)(-200209);
	public static final int DAQmxErrorInvalidRangeStatementCharInList = (int)(-200208);
	public static final int DAQmxErrorInvalidDeviceIDInList = (int)(-200207);
	public static final int DAQmxErrorTriggerPolarityConflict = (int)(-200206);
	public static final int DAQmxErrorCannotScanWithCurrentTopology = (int)(-200205);
	public static final int DAQmxErrorUnexpectedIdentifierInFullySpecifiedPathInList = (int)(-200204);
	public static final int DAQmxErrorSwitchCannotDriveMultipleTrigLines = (int)(-200203);
	public static final int DAQmxErrorInvalidRelayName = (int)(-200202);
	public static final int DAQmxErrorSwitchScanlistTooBig = (int)(-200201);
	public static final int DAQmxErrorSwitchChanInUse = (int)(-200200);
	public static final int DAQmxErrorSwitchNotResetBeforeScan = (int)(-200199);
	public static final int DAQmxErrorInvalidTopology = (int)(-200198);
	public static final int DAQmxErrorAttrNotSupported = (int)(-200197);
	public static final int DAQmxErrorUnexpectedEndOfActionsInList = (int)(-200196);
	public static final int DAQmxErrorPowerLimitExceeded = (int)(-200195);
	public static final int DAQmxErrorHWUnexpectedlyPoweredOffAndOn = (int)(-200194);
	public static final int DAQmxErrorSwitchOperationNotSupported = (int)(-200193);
	public static final int DAQmxErrorOnlyContinuousScanSupported = (int)(-200192);
	public static final int DAQmxErrorSwitchDifferentTopologyWhenScanning = (int)(-200191);
	public static final int DAQmxErrorDisconnectPathNotSameAsExistingPath = (int)(-200190);
	public static final int DAQmxErrorConnectionNotPermittedOnChanReservedForRouting = (int)(-200189);
	public static final int DAQmxErrorCannotConnectSrcChans = (int)(-200188);
	public static final int DAQmxErrorCannotConnectChannelToItself = (int)(-200187);
	public static final int DAQmxErrorChannelNotReservedForRouting = (int)(-200186);
	public static final int DAQmxErrorCannotConnectChansDirectly = (int)(-200185);
	public static final int DAQmxErrorChansAlreadyConnected = (int)(-200184);
	public static final int DAQmxErrorChanDuplicatedInPath = (int)(-200183);
	public static final int DAQmxErrorNoPathToDisconnect = (int)(-200182);
	public static final int DAQmxErrorInvalidSwitchChan = (int)(-200181);
	public static final int DAQmxErrorNoPathAvailableBetween2SwitchChans = (int)(-200180);
	public static final int DAQmxErrorExplicitConnectionExists = (int)(-200179);
	public static final int DAQmxErrorSwitchDifferentSettlingTimeWhenScanning = (int)(-200178);
	public static final int DAQmxErrorOperationOnlyPermittedWhileScanning = (int)(-200177);
	public static final int DAQmxErrorOperationNotPermittedWhileScanning = (int)(-200176);
	public static final int DAQmxErrorHardwareNotResponding = (int)(-200175);
	public static final int DAQmxErrorInvalidSampAndMasterTimebaseRateCombo = (int)(-200173);
	public static final int DAQmxErrorNonZeroBufferSizeInProgIOXfer = (int)(-200172);
	public static final int DAQmxErrorVirtualChanNameUsed = (int)(-200171);
	public static final int DAQmxErrorPhysicalChanDoesNotExist = (int)(-200170);
	public static final int DAQmxErrorMemMapOnlyForProgIOXfer = (int)(-200169);
	public static final int DAQmxErrorTooManyChans = (int)(-200168);
	public static final int DAQmxErrorCannotHaveCJTempWithOtherChans = (int)(-200167);
	public static final int DAQmxErrorOutputBufferUnderwrite = (int)(-200166);
	public static final int DAQmxErrorSensorInvalidCompletionResistance = (int)(-200163);
	public static final int DAQmxErrorVoltageExcitIncompatibleWith2WireCfg = (int)(-200162);
	public static final int DAQmxErrorIntExcitSrcNotAvailable = (int)(-200161);
	public static final int DAQmxErrorCannotCreateChannelAfterTaskVerified = (int)(-200160);
	public static final int DAQmxErrorLinesReservedForSCXIControl = (int)(-200159);
	public static final int DAQmxErrorCouldNotReserveLinesForSCXIControl = (int)(-200158);
	public static final int DAQmxErrorCalibrationFailed = (int)(-200157);
	public static final int DAQmxErrorReferenceFrequencyInvalid = (int)(-200156);
	public static final int DAQmxErrorReferenceResistanceInvalid = (int)(-200155);
	public static final int DAQmxErrorReferenceCurrentInvalid = (int)(-200154);
	public static final int DAQmxErrorReferenceVoltageInvalid = (int)(-200153);
	public static final int DAQmxErrorEEPROMDataInvalid = (int)(-200152);
	public static final int DAQmxErrorCabledModuleNotCapableOfRoutingAI = (int)(-200151);
	public static final int DAQmxErrorChannelNotAvailableInParallelMode = (int)(-200150);
	public static final int DAQmxErrorExternalTimebaseRateNotKnownForDelay = (int)(-200149);
	public static final int DAQmxErrorFREQOUTCannotProduceDesiredFrequency = (int)(-200148);
	public static final int DAQmxErrorMultipleCounterInputTask = (int)(-200147);
	public static final int DAQmxErrorCounterStartPauseTriggerConflict = (int)(-200146);
	public static final int DAQmxErrorCounterInputPauseTriggerAndSampleClockInvalid = (int)(-200145);
	public static final int DAQmxErrorCounterOutputPauseTriggerInvalid = (int)(-200144);
	public static final int DAQmxErrorCounterTimebaseRateNotSpecified = (int)(-200143);
	public static final int DAQmxErrorCounterTimebaseRateNotFound = (int)(-200142);
	public static final int DAQmxErrorCounterOverflow = (int)(-200141);
	public static final int DAQmxErrorCounterNoTimebaseEdgesBetweenGates = (int)(-200140);
	public static final int DAQmxErrorCounterMaxMinRangeFreq = (int)(-200139);
	public static final int DAQmxErrorCounterMaxMinRangeTime = (int)(-200138);
	public static final int DAQmxErrorSuitableTimebaseNotFoundTimeCombo = (int)(-200137);
	public static final int DAQmxErrorSuitableTimebaseNotFoundFrequencyCombo = (int)(-200136);
	public static final int DAQmxErrorInternalTimebaseSourceDivisorCombo = (int)(-200135);
	public static final int DAQmxErrorInternalTimebaseSourceRateCombo = (int)(-200134);
	public static final int DAQmxErrorInternalTimebaseRateDivisorSourceCombo = (int)(-200133);
	public static final int DAQmxErrorExternalTimebaseRateNotknownForRate = (int)(-200132);
	public static final int DAQmxErrorAnalogTrigChanNotFirstInScanList = (int)(-200131);
	public static final int DAQmxErrorNoDivisorForExternalSignal = (int)(-200130);
	public static final int DAQmxErrorAttributeInconsistentAcrossRepeatedPhysicalChannels = (int)(-200128);
	public static final int DAQmxErrorCannotHandshakeWithPort0 = (int)(-200127);
	public static final int DAQmxErrorControlLineConflictOnPortC = (int)(-200126);
	public static final int DAQmxErrorLines4To7ConfiguredForOutput = (int)(-200125);
	public static final int DAQmxErrorLines4To7ConfiguredForInput = (int)(-200124);
	public static final int DAQmxErrorLines0To3ConfiguredForOutput = (int)(-200123);
	public static final int DAQmxErrorLines0To3ConfiguredForInput = (int)(-200122);
	public static final int DAQmxErrorPortConfiguredForOutput = (int)(-200121);
	public static final int DAQmxErrorPortConfiguredForInput = (int)(-200120);
	public static final int DAQmxErrorPortConfiguredForStaticDigitalOps = (int)(-200119);
	public static final int DAQmxErrorPortReservedForHandshaking = (int)(-200118);
	public static final int DAQmxErrorPortDoesNotSupportHandshakingDataIO = (int)(-200117);
	public static final int DAQmxErrorCannotTristate8255OutputLines = (int)(-200116);
	public static final int DAQmxErrorTemperatureOutOfRangeForCalibration = (int)(-200113);
	public static final int DAQmxErrorCalibrationHandleInvalid = (int)(-200112);
	public static final int DAQmxErrorPasswordRequired = (int)(-200111);
	public static final int DAQmxErrorIncorrectPassword = (int)(-200110);
	public static final int DAQmxErrorPasswordTooLong = (int)(-200109);
	public static final int DAQmxErrorCalibrationSessionAlreadyOpen = (int)(-200108);
	public static final int DAQmxErrorSCXIModuleIncorrect = (int)(-200107);
	public static final int DAQmxErrorAttributeInconsistentAcrossChannelsOnDevice = (int)(-200106);
	public static final int DAQmxErrorSCXI1122ResistanceChanNotSupportedForCfg = (int)(-200105);
	public static final int DAQmxErrorBracketPairingMismatchInList = (int)(-200104);
	public static final int DAQmxErrorInconsistentNumSamplesToWrite = (int)(-200103);
	public static final int DAQmxErrorIncorrectDigitalPattern = (int)(-200102);
	public static final int DAQmxErrorIncorrectNumChannelsToWrite = (int)(-200101);
	public static final int DAQmxErrorIncorrectReadFunction = (int)(-200100);
	public static final int DAQmxErrorPhysicalChannelNotSpecified = (int)(-200099);
	public static final int DAQmxErrorMoreThanOneTerminal = (int)(-200098);
	public static final int DAQmxErrorMoreThanOneActiveChannelSpecified = (int)(-200097);
	public static final int DAQmxErrorInvalidNumberSamplesToRead = (int)(-200096);
	public static final int DAQmxErrorAnalogWaveformExpected = (int)(-200095);
	public static final int DAQmxErrorDigitalWaveformExpected = (int)(-200094);
	public static final int DAQmxErrorActiveChannelNotSpecified = (int)(-200093);
	public static final int DAQmxErrorFunctionNotSupportedForDeviceTasks = (int)(-200092);
	public static final int DAQmxErrorFunctionNotInLibrary = (int)(-200091);
	public static final int DAQmxErrorLibraryNotPresent = (int)(-200090);
	public static final int DAQmxErrorDuplicateTask = (int)(-200089);
	public static final int DAQmxErrorInvalidTask = (int)(-200088);
	public static final int DAQmxErrorInvalidChannel = (int)(-200087);
	public static final int DAQmxErrorInvalidSyntaxForPhysicalChannelRange = (int)(-200086);
	public static final int DAQmxErrorMinNotLessThanMax = (int)(-200082);
	public static final int DAQmxErrorSampleRateNumChansConvertPeriodCombo = (int)(-200081);
	public static final int DAQmxErrorAODuringCounter1DMAConflict = (int)(-200079);
	public static final int DAQmxErrorAIDuringCounter0DMAConflict = (int)(-200078);
	public static final int DAQmxErrorInvalidAttributeValue = (int)(-200077);
	public static final int DAQmxErrorSuppliedCurrentDataOutsideSpecifiedRange = (int)(-200076);
	public static final int DAQmxErrorSuppliedVoltageDataOutsideSpecifiedRange = (int)(-200075);
	public static final int DAQmxErrorCannotStoreCalConst = (int)(-200074);
	public static final int DAQmxErrorSCXIModuleNotFound = (int)(-200073);
	public static final int DAQmxErrorDuplicatePhysicalChansNotSupported = (int)(-200072);
	public static final int DAQmxErrorTooManyPhysicalChansInList = (int)(-200071);
	public static final int DAQmxErrorInvalidAdvanceEventTriggerType = (int)(-200070);
	public static final int DAQmxErrorDeviceIsNotAValidSwitch = (int)(-200069);
	public static final int DAQmxErrorDeviceDoesNotSupportScanning = (int)(-200068);
	public static final int DAQmxErrorScanListCannotBeTimed = (int)(-200067);
	public static final int DAQmxErrorConnectOperatorInvalidAtPointInList = (int)(-200066);
	public static final int DAQmxErrorUnexpectedSwitchActionInList = (int)(-200065);
	public static final int DAQmxErrorUnexpectedSeparatorInList = (int)(-200064);
	public static final int DAQmxErrorExpectedTerminatorInList = (int)(-200063);
	public static final int DAQmxErrorExpectedConnectOperatorInList = (int)(-200062);
	public static final int DAQmxErrorExpectedSeparatorInList = (int)(-200061);
	public static final int DAQmxErrorFullySpecifiedPathInListContainsRange = (int)(-200060);
	public static final int DAQmxErrorConnectionSeparatorAtEndOfList = (int)(-200059);
	public static final int DAQmxErrorIdentifierInListTooLong = (int)(-200058);
	public static final int DAQmxErrorDuplicateDeviceIDInListWhenSettling = (int)(-200057);
	public static final int DAQmxErrorChannelNameNotSpecifiedInList = (int)(-200056);
	public static final int DAQmxErrorDeviceIDNotSpecifiedInList = (int)(-200055);
	public static final int DAQmxErrorSemicolonDoesNotFollowRangeInList = (int)(-200054);
	public static final int DAQmxErrorSwitchActionInListSpansMultipleDevices = (int)(-200053);
	public static final int DAQmxErrorRangeWithoutAConnectActionInList = (int)(-200052);
	public static final int DAQmxErrorInvalidIdentifierFollowingSeparatorInList = (int)(-200051);
	public static final int DAQmxErrorInvalidChannelNameInList = (int)(-200050);
	public static final int DAQmxErrorInvalidNumberInRepeatStatementInList = (int)(-200049);
	public static final int DAQmxErrorInvalidTriggerLineInList = (int)(-200048);
	public static final int DAQmxErrorInvalidIdentifierInListFollowingDeviceID = (int)(-200047);
	public static final int DAQmxErrorInvalidIdentifierInListAtEndOfSwitchAction = (int)(-200046);
	public static final int DAQmxErrorDeviceRemoved = (int)(-200045);
	public static final int DAQmxErrorRoutingPathNotAvailable = (int)(-200044);
	public static final int DAQmxErrorRoutingHardwareBusy = (int)(-200043);
	public static final int DAQmxErrorRequestedSignalInversionForRoutingNotPossible = (int)(-200042);
	public static final int DAQmxErrorInvalidRoutingDestinationTerminalName = (int)(-200041);
	public static final int DAQmxErrorInvalidRoutingSourceTerminalName = (int)(-200040);
	public static final int DAQmxErrorRoutingNotSupportedForDevice = (int)(-200039);
	public static final int DAQmxErrorWaitIsLastInstructionOfLoopInScript = (int)(-200038);
	public static final int DAQmxErrorClearIsLastInstructionOfLoopInScript = (int)(-200037);
	public static final int DAQmxErrorInvalidLoopIterationsInScript = (int)(-200036);
	public static final int DAQmxErrorRepeatLoopNestingTooDeepInScript = (int)(-200035);
	public static final int DAQmxErrorMarkerPositionOutsideSubsetInScript = (int)(-200034);
	public static final int DAQmxErrorSubsetStartOffsetNotAlignedInScript = (int)(-200033);
	public static final int DAQmxErrorInvalidSubsetLengthInScript = (int)(-200032);
	public static final int DAQmxErrorMarkerPositionNotAlignedInScript = (int)(-200031);
	public static final int DAQmxErrorSubsetOutsideWaveformInScript = (int)(-200030);
	public static final int DAQmxErrorMarkerOutsideWaveformInScript = (int)(-200029);
	public static final int DAQmxErrorWaveformInScriptNotInMem = (int)(-200028);
	public static final int DAQmxErrorKeywordExpectedInScript = (int)(-200027);
	public static final int DAQmxErrorBufferNameExpectedInScript = (int)(-200026);
	public static final int DAQmxErrorProcedureNameExpectedInScript = (int)(-200025);
	public static final int DAQmxErrorScriptHasInvalidIdentifier = (int)(-200024);
	public static final int DAQmxErrorScriptHasInvalidCharacter = (int)(-200023);
	public static final int DAQmxErrorResourceAlreadyReserved = (int)(-200022);
	public static final int DAQmxErrorSelfTestFailed = (int)(-200020);
	public static final int DAQmxErrorADCOverrun = (int)(-200019);
	public static final int DAQmxErrorDACUnderflow = (int)(-200018);
	public static final int DAQmxErrorInputFIFOUnderflow = (int)(-200017);
	public static final int DAQmxErrorOutputFIFOUnderflow = (int)(-200016);
	public static final int DAQmxErrorSCXISerialCommunication = (int)(-200015);
	public static final int DAQmxErrorDigitalTerminalSpecifiedMoreThanOnce = (int)(-200014);
	public static final int DAQmxErrorDigitalOutputNotSupported = (int)(-200012);
	public static final int DAQmxErrorInconsistentChannelDirections = (int)(-200011);
	public static final int DAQmxErrorInputFIFOOverflow = (int)(-200010);
	public static final int DAQmxErrorTimeStampOverwritten = (int)(-200009);
	public static final int DAQmxErrorStopTriggerHasNotOccurred = (int)(-200008);
	public static final int DAQmxErrorRecordNotAvailable = (int)(-200007);
	public static final int DAQmxErrorRecordOverwritten = (int)(-200006);
	public static final int DAQmxErrorDataNotAvailable = (int)(-200005);
	public static final int DAQmxErrorDataOverwrittenInDeviceMemory = (int)(-200004);
	public static final int DAQmxErrorDuplicatedChannel = (int)(-200003);
	public static final int DAQmxWarningTimestampCounterRolledOver = (int)(200003);
	public static final int DAQmxWarningInputTerminationOverloaded = (int)(200004);
	public static final int DAQmxWarningADCOverloaded = (int)(200005);
	public static final int DAQmxWarningPLLUnlocked = (int)(200007);
	public static final int DAQmxWarningCounter0DMADuringAIConflict = (int)(200008);
	public static final int DAQmxWarningCounter1DMADuringAOConflict = (int)(200009);
	public static final int DAQmxWarningStoppedBeforeDone = (int)(200010);
	public static final int DAQmxWarningRateViolatesSettlingTime = (int)(200011);
	public static final int DAQmxWarningRateViolatesMaxADCRate = (int)(200012);
	public static final int DAQmxWarningUserDefInfoStringTooLong = (int)(200013);
	public static final int DAQmxWarningTooManyInterruptsPerSecond = (int)(200014);
	public static final int DAQmxWarningPotentialGlitchDuringWrite = (int)(200015);
	public static final int DAQmxWarningDevNotSelfCalibratedWithDAQmx = (int)(200016);
	public static final int DAQmxWarningAISampRateTooLow = (int)(200017);
	public static final int DAQmxWarningAIConvRateTooLow = (int)(200018);
	public static final int DAQmxWarningReadOffsetCoercion = (int)(200019);
	public static final int DAQmxWarningPretrigCoercion = (int)(200020);
	public static final int DAQmxWarningSampValCoercedToMax = (int)(200021);
	public static final int DAQmxWarningSampValCoercedToMin = (int)(200022);
	public static final int DAQmxWarningPropertyVersionNew = (int)(200024);
	public static final int DAQmxWarningUserDefinedInfoTooLong = (int)(200025);
	public static final int DAQmxWarningCAPIStringTruncatedToFitBuffer = (int)(200026);
	public static final int DAQmxWarningSampClkRateTooLow = (int)(200027);
	public static final int DAQmxWarningPossiblyInvalidCTRSampsInFiniteDMAAcq = (int)(200028);
	public static final int DAQmxWarningRISAcqCompletedSomeBinsNotFilled = (int)(200029);
	public static final int DAQmxWarningPXIDevTempExceedsMaxOpTemp = (int)(200030);
	public static final int DAQmxWarningOutputGainTooLowForRFFreq = (int)(200031);
	public static final int DAQmxWarningOutputGainTooHighForRFFreq = (int)(200032);
	public static final int DAQmxWarningMultipleWritesBetweenSampClks = (int)(200033);
	public static final int DAQmxWarningDeviceMayShutDownDueToHighTemp = (int)(200034);
	public static final int DAQmxWarningRateViolatesMinADCRate = (int)(200035);
	public static final int DAQmxWarningSampClkRateAboveDevSpecs = (int)(200036);
	public static final int DAQmxWarningCOPrevDAQmxWriteSettingsOverwrittenForHWTimedSinglePoint = (int)(200037);
	public static final int DAQmxWarningLowpassFilterSettlingTimeExceedsUserTimeBetween2ADCConversions = (int)(200038);
	public static final int DAQmxWarningLowpassFilterSettlingTimeExceedsDriverTimeBetween2ADCConversions = (int)(200039);
	public static final int DAQmxWarningSampClkRateViolatesSettlingTimeForGen = (int)(200040);
	public static final int DAQmxWarningInvalidCalConstValueForAI = (int)(200041);
	public static final int DAQmxWarningInvalidCalConstValueForAO = (int)(200042);
	public static final int DAQmxWarningChanCalExpired = (int)(200043);
	public static final int DAQmxWarningUnrecognizedEnumValueEncounteredInStorage = (int)(200044);
	public static final int DAQmxWarningTableCRCNotCorrect = (int)(200045);
	public static final int DAQmxWarningExternalCRCNotCorrect = (int)(200046);
	public static final int DAQmxWarningSelfCalCRCNotCorrect = (int)(200047);
	public static final int DAQmxWarningDeviceSpecExceeded = (int)(200048);
	public static final int DAQmxWarningOnlyGainCalibrated = (int)(200049);
	public static final int DAQmxWarningReversePowerProtectionActivated = (int)(200050);
	public static final int DAQmxWarningOverVoltageProtectionActivated = (int)(200051);
	public static final int DAQmxWarningBufferSizeNotMultipleOfSectorSize = (int)(200052);
	public static final int DAQmxWarningSampleRateMayCauseAcqToFail = (int)(200053);
	public static final int DAQmxWarningUserAreaCRCNotCorrect = (int)(200054);
	public static final int DAQmxWarningPowerUpInfoCRCNotCorrect = (int)(200055);
	public static final int DAQmxWarningConnectionCountHasExceededRecommendedLimit = (int)(200056);
	public static final int DAQmxWarningNetworkDeviceAlreadyAdded = (int)(200057);
	public static final int DAQmxWarningAccessoryConnectionCountIsInvalid = (int)(200058);
	public static final int DAQmxWarningUnableToDisconnectPorts = (int)(200059);
	public static final int DAQmxWarningReadRepeatedData = (int)(200060);
	public static final int DAQmxWarningPXI5600_NotConfigured = (int)(200061);
	public static final int DAQmxWarningPXI5661_IncorrectlyConfigured = (int)(200062);
	public static final int DAQmxWarningPXIe5601_NotConfigured = (int)(200063);
	public static final int DAQmxWarningPXIe5663_IncorrectlyConfigured = (int)(200064);
	public static final int DAQmxWarningPXIe5663E_IncorrectlyConfigured = (int)(200065);
	public static final int DAQmxWarningPXIe5603_NotConfigured = (int)(200066);
	public static final int DAQmxWarningPXIe5665_5603_IncorrectlyConfigured = (int)(200067);
	public static final int DAQmxWarningPXIe5667_5603_IncorrectlyConfigured = (int)(200068);
	public static final int DAQmxWarningPXIe5605_NotConfigured = (int)(200069);
	public static final int DAQmxWarningPXIe5665_5605_IncorrectlyConfigured = (int)(200070);
	public static final int DAQmxWarningPXIe5667_5605_IncorrectlyConfigured = (int)(200071);
	public static final int DAQmxWarningPXIe5606_NotConfigured = (int)(200072);
	public static final int DAQmxWarningPXIe5665_5606_IncorrectlyConfigured = (int)(200073);
	public static final int DAQmxWarningPXI5610_NotConfigured = (int)(200074);
	public static final int DAQmxWarningPXI5610_IncorrectlyConfigured = (int)(200075);
	public static final int DAQmxWarningPXIe5611_NotConfigured = (int)(200076);
	public static final int DAQmxWarningPXIe5611_IncorrectlyConfigured = (int)(200077);
	public static final int DAQmxWarningUSBHotfixForDAQ = (int)(200078);
	public static final int DAQmxWarningNoChangeSupersededByIdleBehavior = (int)(200079);
	public static final int DAQmxWarningReadNotCompleteBeforeSampClk = (int)(209800);
	public static final int DAQmxWarningWriteNotCompleteBeforeSampClk = (int)(209801);
	public static final int DAQmxWarningWaitForNextSampClkDetectedMissedSampClk = (int)(209802);
	public static final int DAQmxWarningOutputDataTransferConditionNotSupported = (int)(209803);
	public static final int DAQmxErrorRoutingDestTermPXIDStarXNotInSystemTimingSlot_Routing = (int)(-89167);
	public static final int DAQmxErrorRoutingSrcTermPXIDStarXNotInSystemTimingSlot_Routing = (int)(-89166);
	public static final int DAQmxErrorRoutingSrcTermPXIDStarInNonDStarTriggerSlot_Routing = (int)(-89165);
	public static final int DAQmxErrorRoutingDestTermPXIDStarInNonDStarTriggerSlot_Routing = (int)(-89164);
	public static final int DAQmxErrorRoutingDestTermPXIClk10InNotInStarTriggerSlot_Routing = (int)(-89162);
	public static final int DAQmxErrorRoutingDestTermPXIClk10InNotInSystemTimingSlot_Routing = (int)(-89161);
	public static final int DAQmxErrorRoutingDestTermPXIStarXNotInStarTriggerSlot_Routing = (int)(-89160);
	public static final int DAQmxErrorRoutingDestTermPXIStarXNotInSystemTimingSlot_Routing = (int)(-89159);
	public static final int DAQmxErrorRoutingSrcTermPXIStarXNotInStarTriggerSlot_Routing = (int)(-89158);
	public static final int DAQmxErrorRoutingSrcTermPXIStarXNotInSystemTimingSlot_Routing = (int)(-89157);
	public static final int DAQmxErrorRoutingSrcTermPXIStarInNonStarTriggerSlot_Routing = (int)(-89156);
	public static final int DAQmxErrorRoutingDestTermPXIStarInNonStarTriggerSlot_Routing = (int)(-89155);
	public static final int DAQmxErrorRoutingDestTermPXIStarInStarTriggerSlot_Routing = (int)(-89154);
	public static final int DAQmxErrorRoutingDestTermPXIStarInSystemTimingSlot_Routing = (int)(-89153);
	public static final int DAQmxErrorRoutingSrcTermPXIStarInStarTriggerSlot_Routing = (int)(-89152);
	public static final int DAQmxErrorRoutingSrcTermPXIStarInSystemTimingSlot_Routing = (int)(-89151);
	public static final int DAQmxErrorInvalidSignalModifier_Routing = (int)(-89150);
	public static final int DAQmxErrorRoutingDestTermPXIClk10InNotInSlot2_Routing = (int)(-89149);
	public static final int DAQmxErrorRoutingDestTermPXIStarXNotInSlot2_Routing = (int)(-89148);
	public static final int DAQmxErrorRoutingSrcTermPXIStarXNotInSlot2_Routing = (int)(-89147);
	public static final int DAQmxErrorRoutingSrcTermPXIStarInSlot16AndAbove_Routing = (int)(-89146);
	public static final int DAQmxErrorRoutingDestTermPXIStarInSlot16AndAbove_Routing = (int)(-89145);
	public static final int DAQmxErrorRoutingDestTermPXIStarInSlot2_Routing = (int)(-89144);
	public static final int DAQmxErrorRoutingSrcTermPXIStarInSlot2_Routing = (int)(-89143);
	public static final int DAQmxErrorRoutingDestTermPXIChassisNotIdentified_Routing = (int)(-89142);
	public static final int DAQmxErrorRoutingSrcTermPXIChassisNotIdentified_Routing = (int)(-89141);
	public static final int DAQmxErrorTrigLineNotFoundSingleDevRoute_Routing = (int)(-89140);
	public static final int DAQmxErrorNoCommonTrigLineForRoute_Routing = (int)(-89139);
	public static final int DAQmxErrorResourcesInUseForRouteInTask_Routing = (int)(-89138);
	public static final int DAQmxErrorResourcesInUseForRoute_Routing = (int)(-89137);
	public static final int DAQmxErrorRouteNotSupportedByHW_Routing = (int)(-89136);
	public static final int DAQmxErrorResourcesInUseForInversionInTask_Routing = (int)(-89135);
	public static final int DAQmxErrorResourcesInUseForInversion_Routing = (int)(-89134);
	public static final int DAQmxErrorInversionNotSupportedByHW_Routing = (int)(-89133);
	public static final int DAQmxErrorResourcesInUseForProperty_Routing = (int)(-89132);
	public static final int DAQmxErrorRouteSrcAndDestSame_Routing = (int)(-89131);
	public static final int DAQmxErrorDevAbsentOrUnavailable_Routing = (int)(-89130);
	public static final int DAQmxErrorInvalidTerm_Routing = (int)(-89129);
	public static final int DAQmxErrorCannotTristateTerm_Routing = (int)(-89128);
	public static final int DAQmxErrorCannotTristateBusyTerm_Routing = (int)(-89127);
	public static final int DAQmxErrorCouldNotReserveRequestedTrigLine_Routing = (int)(-89126);
	public static final int DAQmxErrorTrigLineNotFound_Routing = (int)(-89125);
	public static final int DAQmxErrorRoutingPathNotAvailable_Routing = (int)(-89124);
	public static final int DAQmxErrorRoutingHardwareBusy_Routing = (int)(-89123);
	public static final int DAQmxErrorRequestedSignalInversionForRoutingNotPossible_Routing = (int)(-89122);
	public static final int DAQmxErrorInvalidRoutingDestinationTerminalName_Routing = (int)(-89121);
	public static final int DAQmxErrorInvalidRoutingSourceTerminalName_Routing = (int)(-89120);
	public static final int DAQmxErrorServiceLocatorNotAvailable_Routing = (int)(-88907);
	public static final int DAQmxErrorCouldNotConnectToServer_Routing = (int)(-88900);
	public static final int DAQmxErrorDeviceNameContainsSpacesOrPunctuation_Routing = (int)(-88720);
	public static final int DAQmxErrorDeviceNameContainsNonprintableCharacters_Routing = (int)(-88719);
	public static final int DAQmxErrorDeviceNameIsEmpty_Routing = (int)(-88718);
	public static final int DAQmxErrorDeviceNameNotFound_Routing = (int)(-88717);
	public static final int DAQmxErrorLocalRemoteDriverVersionMismatch_Routing = (int)(-88716);
	public static final int DAQmxErrorDuplicateDeviceName_Routing = (int)(-88715);
	public static final int DAQmxErrorRuntimeAborting_Routing = (int)(-88710);
	public static final int DAQmxErrorRuntimeAborted_Routing = (int)(-88709);
	public static final int DAQmxErrorResourceNotInPool_Routing = (int)(-88708);
	public static final int DAQmxErrorDriverDeviceGUIDNotFound_Routing = (int)(-88705);
	public static final int DAQmxErrorPALUSBTransactionError = (int)(-50808);
	public static final int DAQmxErrorPALIsocStreamBufferError = (int)(-50807);
	public static final int DAQmxErrorPALInvalidAddressComponent = (int)(-50806);
	public static final int DAQmxErrorPALSharingViolation = (int)(-50805);
	public static final int DAQmxErrorPALInvalidDeviceState = (int)(-50804);
	public static final int DAQmxErrorPALConnectionReset = (int)(-50803);
	public static final int DAQmxErrorPALConnectionAborted = (int)(-50802);
	public static final int DAQmxErrorPALConnectionRefused = (int)(-50801);
	public static final int DAQmxErrorPALBusResetOccurred = (int)(-50800);
	public static final int DAQmxErrorPALWaitInterrupted = (int)(-50700);
	public static final int DAQmxErrorPALMessageUnderflow = (int)(-50651);
	public static final int DAQmxErrorPALMessageOverflow = (int)(-50650);
	public static final int DAQmxErrorPALThreadAlreadyDead = (int)(-50604);
	public static final int DAQmxErrorPALThreadStackSizeNotSupported = (int)(-50603);
	public static final int DAQmxErrorPALThreadControllerIsNotThreadCreator = (int)(-50602);
	public static final int DAQmxErrorPALThreadHasNoThreadObject = (int)(-50601);
	public static final int DAQmxErrorPALThreadCouldNotRun = (int)(-50600);
	public static final int DAQmxErrorPALSyncAbandoned = (int)(-50551);
	public static final int DAQmxErrorPALSyncTimedOut = (int)(-50550);
	public static final int DAQmxErrorPALReceiverSocketInvalid = (int)(-50503);
	public static final int DAQmxErrorPALSocketListenerInvalid = (int)(-50502);
	public static final int DAQmxErrorPALSocketListenerAlreadyRegistered = (int)(-50501);
	public static final int DAQmxErrorPALDispatcherAlreadyExported = (int)(-50500);
	public static final int DAQmxErrorPALDMALinkEventMissed = (int)(-50450);
	public static final int DAQmxErrorPALBusError = (int)(-50413);
	public static final int DAQmxErrorPALRetryLimitExceeded = (int)(-50412);
	public static final int DAQmxErrorPALTransferOverread = (int)(-50411);
	public static final int DAQmxErrorPALTransferOverwritten = (int)(-50410);
	public static final int DAQmxErrorPALPhysicalBufferFull = (int)(-50409);
	public static final int DAQmxErrorPALPhysicalBufferEmpty = (int)(-50408);
	public static final int DAQmxErrorPALLogicalBufferFull = (int)(-50407);
	public static final int DAQmxErrorPALLogicalBufferEmpty = (int)(-50406);
	public static final int DAQmxErrorPALTransferAborted = (int)(-50405);
	public static final int DAQmxErrorPALTransferStopped = (int)(-50404);
	public static final int DAQmxErrorPALTransferInProgress = (int)(-50403);
	public static final int DAQmxErrorPALTransferNotInProgress = (int)(-50402);
	public static final int DAQmxErrorPALCommunicationsFault = (int)(-50401);
	public static final int DAQmxErrorPALTransferTimedOut = (int)(-50400);
	public static final int DAQmxErrorPALMemoryHeapNotEmpty = (int)(-50355);
	public static final int DAQmxErrorPALMemoryBlockCheckFailed = (int)(-50354);
	public static final int DAQmxErrorPALMemoryPageLockFailed = (int)(-50353);
	public static final int DAQmxErrorPALMemoryFull = (int)(-50352);
	public static final int DAQmxErrorPALMemoryAlignmentFault = (int)(-50351);
	public static final int DAQmxErrorPALMemoryConfigurationFault = (int)(-50350);
	public static final int DAQmxErrorPALDeviceInitializationFault = (int)(-50303);
	public static final int DAQmxErrorPALDeviceNotSupported = (int)(-50302);
	public static final int DAQmxErrorPALDeviceUnknown = (int)(-50301);
	public static final int DAQmxErrorPALDeviceNotFound = (int)(-50300);
	public static final int DAQmxErrorPALFeatureDisabled = (int)(-50265);
	public static final int DAQmxErrorPALComponentBusy = (int)(-50264);
	public static final int DAQmxErrorPALComponentAlreadyInstalled = (int)(-50263);
	public static final int DAQmxErrorPALComponentNotUnloadable = (int)(-50262);
	public static final int DAQmxErrorPALComponentNeverLoaded = (int)(-50261);
	public static final int DAQmxErrorPALComponentAlreadyLoaded = (int)(-50260);
	public static final int DAQmxErrorPALComponentCircularDependency = (int)(-50259);
	public static final int DAQmxErrorPALComponentInitializationFault = (int)(-50258);
	public static final int DAQmxErrorPALComponentImageCorrupt = (int)(-50257);
	public static final int DAQmxErrorPALFeatureNotSupported = (int)(-50256);
	public static final int DAQmxErrorPALFunctionNotFound = (int)(-50255);
	public static final int DAQmxErrorPALFunctionObsolete = (int)(-50254);
	public static final int DAQmxErrorPALComponentTooNew = (int)(-50253);
	public static final int DAQmxErrorPALComponentTooOld = (int)(-50252);
	public static final int DAQmxErrorPALComponentNotFound = (int)(-50251);
	public static final int DAQmxErrorPALVersionMismatch = (int)(-50250);
	public static final int DAQmxErrorPALFileFault = (int)(-50209);
	public static final int DAQmxErrorPALFileWriteFault = (int)(-50208);
	public static final int DAQmxErrorPALFileReadFault = (int)(-50207);
	public static final int DAQmxErrorPALFileSeekFault = (int)(-50206);
	public static final int DAQmxErrorPALFileCloseFault = (int)(-50205);
	public static final int DAQmxErrorPALFileOpenFault = (int)(-50204);
	public static final int DAQmxErrorPALDiskFull = (int)(-50203);
	public static final int DAQmxErrorPALOSFault = (int)(-50202);
	public static final int DAQmxErrorPALOSInitializationFault = (int)(-50201);
	public static final int DAQmxErrorPALOSUnsupported = (int)(-50200);
	public static final int DAQmxErrorPALCalculationOverflow = (int)(-50175);
	public static final int DAQmxErrorPALHardwareFault = (int)(-50152);
	public static final int DAQmxErrorPALFirmwareFault = (int)(-50151);
	public static final int DAQmxErrorPALSoftwareFault = (int)(-50150);
	public static final int DAQmxErrorPALMessageQueueFull = (int)(-50108);
	public static final int DAQmxErrorPALResourceAmbiguous = (int)(-50107);
	public static final int DAQmxErrorPALResourceBusy = (int)(-50106);
	public static final int DAQmxErrorPALResourceInitialized = (int)(-50105);
	public static final int DAQmxErrorPALResourceNotInitialized = (int)(-50104);
	public static final int DAQmxErrorPALResourceReserved = (int)(-50103);
	public static final int DAQmxErrorPALResourceNotReserved = (int)(-50102);
	public static final int DAQmxErrorPALResourceNotAvailable = (int)(-50101);
	public static final int DAQmxErrorPALResourceOwnedBySystem = (int)(-50100);
	public static final int DAQmxErrorPALBadToken = (int)(-50020);
	public static final int DAQmxErrorPALBadThreadMultitask = (int)(-50019);
	public static final int DAQmxErrorPALBadLibrarySpecifier = (int)(-50018);
	public static final int DAQmxErrorPALBadAddressSpace = (int)(-50017);
	public static final int DAQmxErrorPALBadWindowType = (int)(-50016);
	public static final int DAQmxErrorPALBadAddressClass = (int)(-50015);
	public static final int DAQmxErrorPALBadWriteCount = (int)(-50014);
	public static final int DAQmxErrorPALBadWriteOffset = (int)(-50013);
	public static final int DAQmxErrorPALBadWriteMode = (int)(-50012);
	public static final int DAQmxErrorPALBadReadCount = (int)(-50011);
	public static final int DAQmxErrorPALBadReadOffset = (int)(-50010);
	public static final int DAQmxErrorPALBadReadMode = (int)(-50009);
	public static final int DAQmxErrorPALBadCount = (int)(-50008);
	public static final int DAQmxErrorPALBadOffset = (int)(-50007);
	public static final int DAQmxErrorPALBadMode = (int)(-50006);
	public static final int DAQmxErrorPALBadDataSize = (int)(-50005);
	public static final int DAQmxErrorPALBadPointer = (int)(-50004);
	public static final int DAQmxErrorPALBadSelector = (int)(-50003);
	public static final int DAQmxErrorPALBadDevice = (int)(-50002);
	public static final int DAQmxErrorPALIrrelevantAttribute = (int)(-50001);
	public static final int DAQmxErrorPALValueConflict = (int)(-50000);
	public static final int DAQmxErrorRetryCall = (int)(-26853);
	public static final int DAQmxErrorFileDoesNotExist = (int)(-26852);
	public static final int DAQmxErrorGenerationDisabled = (int)(-26851);
	public static final int DAQmxErrorAlreadyInitialized = (int)(-26850);
	public static final int DAQmxErrorPXISystemDescriptionParseError = (int)(-26809);
	public static final int DAQmxErrorPXISAConfigurationLocked = (int)(-26808);
	public static final int DAQmxErrorNotActiveResourceManager = (int)(-26807);
	public static final int DAQmxErrorInvalidAttribute = (int)(-26806);
	public static final int DAQmxErrorInvalidHandle = (int)(-26805);
	public static final int DAQmxErrorServiceNotRunning = (int)(-26804);
	public static final int DAQmxErrorRecursiveCall = (int)(-26803);
	public static final int DAQmxErrorTimeout = (int)(-26802);
	public static final int DAQmxErrorUnspecifiedError = (int)(-26801);
	public static final int DAQmxErrorHandlerNotFound = (int)(-26657);
	public static final int DAQmxErrorIncorrectDataType = (int)(-26656);
	public static final int DAQmxErrorInconsistentFileFault = (int)(-26655);
	public static final int DAQmxErrorChildNotFound = (int)(-26654);
	public static final int DAQmxErrorAttributeNotFound = (int)(-26653);
	public static final int DAQmxErrorIOError = (int)(-26652);
	public static final int DAQmxErrorPxiResmanMxsPxiSystemNotFound = (int)(-26600);
	public static final int DAQmxErrorPxiResmanPciDescriptionStringParseError = (int)(-26550);
	public static final int DAQmxErrorPxiResmanModuleParseError = (int)(-26500);
	public static final int DAQmxErrorPxiResmanSystemDescriptionSpecLimitation = (int)(-26403);
	public static final int DAQmxErrorPxiResmanSystemDescriptionWriteError = (int)(-26402);
	public static final int DAQmxErrorPxiResmanSystemDescriptionParseError = (int)(-26401);
	public static final int DAQmxErrorPxiResmanSystemDescriptionFileNotFound = (int)(-26400);
	public static final int DAQmxErrorPxiResmanControllerParseError = (int)(-26302);
	public static final int DAQmxErrorPxiResmanControllerTypeInvalid = (int)(-26301);
	public static final int DAQmxErrorPxiResmanControllerFileNotFound = (int)(-26300);
	public static final int DAQmxErrorPxiResmanChassisTriggerParseError = (int)(-26206);
	public static final int DAQmxErrorPxiResmanChassisBridgeParseError = (int)(-26205);
	public static final int DAQmxErrorPxiResmanChassisSlotParseError = (int)(-26204);
	public static final int DAQmxErrorPxiResmanChassisSegmentParseError = (int)(-26203);
	public static final int DAQmxErrorPxiResmanChassisParseError = (int)(-26202);
	public static final int DAQmxErrorPxiResmanChassisBridgeNotFound = (int)(-26201);
	public static final int DAQmxErrorPxiResmanChassisFileNotFound = (int)(-26200);
	public static final int DAQmxErrorInsufficientBuffer = (int)(-26113);
	public static final int DAQmxErrorDirCreateFault = (int)(-26112);
	public static final int DAQmxErrorAccessDenied = (int)(-26111);
	public static final int DAQmxErrorPathNotFound = (int)(-26110);
	public static final int DAQmxErrorFileExists = (int)(-26109);
	public static final int DAQmxErrorFileDeleteFault = (int)(-26107);
	public static final int DAQmxErrorFileCopyFault = (int)(-26106);
	public static final int DAQmxErrorFileCloseFault = (int)(-26105);
	public static final int DAQmxErrorFileNotFound = (int)(-26103);
	public static final int DAQmxErrorPxiResmanSystemNotInitialized = (int)(-26102);
	public static final int DAQmxErrorPxiResmanInvalidConfiguration = (int)(-26101);
	public static final int DAQmxErrorPxiResmanAllocationError = (int)(-26100);
	public static final int DAQmxErrorTrigmanDisconnected = (int)(-26010);
	public static final int DAQmxErrorTrigmanInvalidClient = (int)(-26009);
	public static final int DAQmxErrorTrigmanConflictingRoute = (int)(-26008);
	public static final int DAQmxErrorTrigmanConflictingRouteNoUnreserve = (int)(-26007);
	public static final int DAQmxErrorTrigmanConflictingRouteGeneric = (int)(-26006);
	public static final int DAQmxErrorTrigmanLineAlreadyReserved = (int)(-26005);
	public static final int DAQmxErrorTrigmanLineNotReservedUnroutable = (int)(-26004);
	public static final int DAQmxErrorTrigmanLineNotReserved = (int)(-26003);
	public static final int DAQmxErrorTrigmanInvalidParameter = (int)(-26002);
	public static final int DAQmxErrorTrigmanUnsupportedOper = (int)(-26001);
	public static final int DAQmxErrorTrigmanUnknownError = (int)(-26000);
	public static final int DAQmxWarningTrigmanUnknownError = (int)(26000);
	public static final int DAQmxWarningTrigmanUnsupportedOper = (int)(26001);
	public static final int DAQmxWarningTrigmanInvalidParameter = (int)(26002);
	public static final int DAQmxWarningTrigmanLineNotReserved = (int)(26003);
	public static final int DAQmxWarningTrigmanLineNotReservedUnroutable = (int)(26004);
	public static final int DAQmxWarningTrigmanLineAlreadyReserved = (int)(26005);
	public static final int DAQmxWarningTrigmanConflictingRouteGeneric = (int)(26006);
	public static final int DAQmxWarningTrigmanConflictingRouteNoUnreserve = (int)(26007);
	public static final int DAQmxWarningTrigmanConflictingRoute = (int)(26008);
	public static final int DAQmxWarningTrigmanInvalidClient = (int)(26009);
	public static final int DAQmxWarningTrigmanDisconnected = (int)(26010);
	public static final int DAQmxWarningPxiResmanAllocationError = (int)(26100);
	public static final int DAQmxWarningPxiResmanInvalidConfiguration = (int)(26101);
	public static final int DAQmxWarningPxiResmanSystemNotInitialized = (int)(26102);
	public static final int DAQmxWarningFileNotFound = (int)(26103);
	public static final int DAQmxWarningFileCloseFault = (int)(26105);
	public static final int DAQmxWarningFileCopyFault = (int)(26106);
	public static final int DAQmxWarningFileDeleteFault = (int)(26107);
	public static final int DAQmxWarningFileExists = (int)(26109);
	public static final int DAQmxWarningPathNotFound = (int)(26110);
	public static final int DAQmxWarningAccessDenied = (int)(26111);
	public static final int DAQmxWarningDirCreateFault = (int)(26112);
	public static final int DAQmxWarningInsufficientBuffer = (int)(26113);
	public static final int DAQmxWarningPxiResmanChassisFileNotFound = (int)(26200);
	public static final int DAQmxWarningPxiResmanChassisBridgeNotFound = (int)(26201);
	public static final int DAQmxWarningPxiResmanChassisParseError = (int)(26202);
	public static final int DAQmxWarningPxiResmanChassisSegmentParseError = (int)(26203);
	public static final int DAQmxWarningPxiResmanChassisSlotParseError = (int)(26204);
	public static final int DAQmxWarningPxiResmanChassisBridgeParseError = (int)(26205);
	public static final int DAQmxWarningPxiResmanChassisTriggerParseError = (int)(26206);
	public static final int DAQmxWarningPxiResmanControllerFileNotFound = (int)(26300);
	public static final int DAQmxWarningPxiResmanControllerTypeInvalid = (int)(26301);
	public static final int DAQmxWarningPxiResmanControllerParseError = (int)(26302);
	public static final int DAQmxWarningPxiResmanSystemDescriptionFileNotFound = (int)(26400);
	public static final int DAQmxWarningPxiResmanSystemDescriptionParseError = (int)(26401);
	public static final int DAQmxWarningPxiResmanSystemDescriptionWriteError = (int)(26402);
	public static final int DAQmxWarningPxiResmanSystemDescriptionSpecLimitation = (int)(26403);
	public static final int DAQmxWarningPxiResmanModuleParseError = (int)(26500);
	public static final int DAQmxWarningPxiResmanPciDescriptionStringParseError = (int)(26550);
	public static final int DAQmxWarningPxiResmanMxsPxiSystemNotFound = (int)(26600);
	public static final int DAQmxWarningIOError = (int)(26652);
	public static final int DAQmxWarningAttributeNotFound = (int)(26653);
	public static final int DAQmxWarningChildNotFound = (int)(26654);
	public static final int DAQmxWarningInconsistentFileFault = (int)(26655);
	public static final int DAQmxWarningIncorrectDataType = (int)(26656);
	public static final int DAQmxWarningHandlerNotFound = (int)(26657);
	public static final int DAQmxWarningUnspecifiedError = (int)(26801);
	public static final int DAQmxWarningTimeout = (int)(26802);
	public static final int DAQmxWarningRecursiveCall = (int)(26803);
	public static final int DAQmxWarningServiceNotRunning = (int)(26804);
	public static final int DAQmxWarningInvalidHandle = (int)(26805);
	public static final int DAQmxWarningInvalidAttribute = (int)(26806);
	public static final int DAQmxWarningNotActiveResourceManager = (int)(26807);
	public static final int DAQmxWarningPXISAConfigurationLocked = (int)(26808);
	public static final int DAQmxWarningPXISystemDescriptionParseError = (int)(26809);
	public static final int DAQmxWarningAlreadyInitialized = (int)(26850);
	public static final int DAQmxWarningGenerationDisabled = (int)(26851);
	public static final int DAQmxWarningFileDoesNotExist = (int)(26852);
	public static final int DAQmxWarningRetryCall = (int)(26853);
	public static final int DAQmxWarningPALValueConflict = (int)(50000);
	public static final int DAQmxWarningPALIrrelevantAttribute = (int)(50001);
	public static final int DAQmxWarningPALBadDevice = (int)(50002);
	public static final int DAQmxWarningPALBadSelector = (int)(50003);
	public static final int DAQmxWarningPALBadPointer = (int)(50004);
	public static final int DAQmxWarningPALBadDataSize = (int)(50005);
	public static final int DAQmxWarningPALBadMode = (int)(50006);
	public static final int DAQmxWarningPALBadOffset = (int)(50007);
	public static final int DAQmxWarningPALBadCount = (int)(50008);
	public static final int DAQmxWarningPALBadReadMode = (int)(50009);
	public static final int DAQmxWarningPALBadReadOffset = (int)(50010);
	public static final int DAQmxWarningPALBadReadCount = (int)(50011);
	public static final int DAQmxWarningPALBadWriteMode = (int)(50012);
	public static final int DAQmxWarningPALBadWriteOffset = (int)(50013);
	public static final int DAQmxWarningPALBadWriteCount = (int)(50014);
	public static final int DAQmxWarningPALBadAddressClass = (int)(50015);
	public static final int DAQmxWarningPALBadWindowType = (int)(50016);
	public static final int DAQmxWarningPALBadThreadMultitask = (int)(50019);
	public static final int DAQmxWarningPALResourceOwnedBySystem = (int)(50100);
	public static final int DAQmxWarningPALResourceNotAvailable = (int)(50101);
	public static final int DAQmxWarningPALResourceNotReserved = (int)(50102);
	public static final int DAQmxWarningPALResourceReserved = (int)(50103);
	public static final int DAQmxWarningPALResourceNotInitialized = (int)(50104);
	public static final int DAQmxWarningPALResourceInitialized = (int)(50105);
	public static final int DAQmxWarningPALResourceBusy = (int)(50106);
	public static final int DAQmxWarningPALResourceAmbiguous = (int)(50107);
	public static final int DAQmxWarningPALFirmwareFault = (int)(50151);
	public static final int DAQmxWarningPALHardwareFault = (int)(50152);
	public static final int DAQmxWarningPALOSUnsupported = (int)(50200);
	public static final int DAQmxWarningPALOSFault = (int)(50202);
	public static final int DAQmxWarningPALFunctionObsolete = (int)(50254);
	public static final int DAQmxWarningPALFunctionNotFound = (int)(50255);
	public static final int DAQmxWarningPALFeatureNotSupported = (int)(50256);
	public static final int DAQmxWarningPALComponentInitializationFault = (int)(50258);
	public static final int DAQmxWarningPALComponentAlreadyLoaded = (int)(50260);
	public static final int DAQmxWarningPALComponentNotUnloadable = (int)(50262);
	public static final int DAQmxWarningPALMemoryAlignmentFault = (int)(50351);
	public static final int DAQmxWarningPALMemoryHeapNotEmpty = (int)(50355);
	public static final int DAQmxWarningPALTransferNotInProgress = (int)(50402);
	public static final int DAQmxWarningPALTransferInProgress = (int)(50403);
	public static final int DAQmxWarningPALTransferStopped = (int)(50404);
	public static final int DAQmxWarningPALTransferAborted = (int)(50405);
	public static final int DAQmxWarningPALLogicalBufferEmpty = (int)(50406);
	public static final int DAQmxWarningPALLogicalBufferFull = (int)(50407);
	public static final int DAQmxWarningPALPhysicalBufferEmpty = (int)(50408);
	public static final int DAQmxWarningPALPhysicalBufferFull = (int)(50409);
	public static final int DAQmxWarningPALTransferOverwritten = (int)(50410);
	public static final int DAQmxWarningPALTransferOverread = (int)(50411);
	public static final int DAQmxWarningPALDispatcherAlreadyExported = (int)(50500);
	public static final int DAQmxWarningPALSyncAbandoned = (int)(50551);

        */
	public interface DAQmxEveryNSamplesEventCallbackPtr extends Callback {
		int apply(Pointer taskHandle, int everyNsamplesEventType, NativeLong nSamples, Pointer callbackData);
	};
	public interface DAQmxDoneEventCallbackPtr extends Callback {
		int apply(Pointer taskHandle, int status, Pointer callbackData);
	};
	public interface DAQmxSignalEventCallbackPtr extends Callback {
		int apply(Pointer taskHandle, int signalID, Pointer callbackData);
	};

	/**
	 * /<br>
	 * Original signature : <code>int32 DAQmxLoadTask(const char[], TaskHandle*)</code><br>
	 * <i>native declaration : line 2482</i>
	 */
	// int DAQmxLoadTask(byte taskName[], PointerByReference taskHandle);

	/**
	 * Original signature : <code>int32 DAQmxCreateTask(const char[], TaskHandle*)</code><br>
	 * <i>native declaration : line 2483</i>
	 */
	int DAQmxCreateTask(byte taskName[], PointerByReference taskHandle);

	/**
	 * Channel Names must be valid channels already available in MAX. They are not created.<br>
	 * Original signature : <code>int32 DAQmxAddGlobalChansToTask(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 2485</i>
	 */
	// int DAQmxAddGlobalChansToTask(Pointer taskHandle, byte channelNames[]);
	/**
	 * Original signature : <code>int32 DAQmxStartTask(TaskHandle)</code><br>
	 * <i>native declaration : line 2487</i>
	 */
	int DAQmxStartTask(Pointer taskHandle);
	/**
	 * Original signature : <code>int32 DAQmxStopTask(TaskHandle)</code><br>
	 * <i>native declaration : line 2488</i>
	 */
	int DAQmxStopTask(Pointer taskHandle);
	/**
	 * Original signature : <code>int32 DAQmxClearTask(TaskHandle)</code><br>
	 * <i>native declaration : line 2490</i>
	 */
	int DAQmxClearTask(Pointer taskHandle);
	/**
	 * Original signature : <code>int32 DAQmxWaitUntilTaskDone(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 2492</i>
	 */
	// int DAQmxWaitUntilTaskDone(Pointer taskHandle, double timeToWait);
	/**
	 * Original signature : <code>int32 DAQmxIsTaskDone(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 2493</i>
	 */
	// int DAQmxIsTaskDone(Pointer taskHandle, NativeLongByReference isTaskDone);
	/**
	 * Original signature : <code>int32 DAQmxTaskControl(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 2495</i>
	 */
	// int DAQmxTaskControl(Pointer taskHandle, int action);

	/**
	 * Original signature : <code>int32 DAQmxGetNthTaskChannel(TaskHandle, uInt32, char[], int32)</code><br>
	 * <i>native declaration : line 2497</i>
	 */
	// int DAQmxGetNthTaskChannel(Pointer taskHandle, NativeLong index, ByteBuffer buffer, int bufferSize);

	/**
	 * Original signature : <code>int32 DAQmxGetNthTaskDevice(TaskHandle, uInt32, char[], int32)</code><br>
	 * <i>native declaration : line 2499</i>
	 */
	// int DAQmxGetNthTaskDevice(Pointer taskHandle, NativeLong index, ByteBuffer buffer, int bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxGetTaskAttribute(TaskHandle, int32, void*, null)</code><br>
	 * <i>native declaration : line 2501</i>
	 */
	// int DAQmxGetTaskAttribute(Pointer taskHandle, int attribute, Pointer value, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxRegisterEveryNSamplesEvent(TaskHandle, int32, uInt32, uInt32, DAQmxEveryNSamplesEventCallbackPtr, void*)</code><br>
	 * <i>native declaration : line 2507</i>
	 */
	// int DAQmxRegisterEveryNSamplesEvent(Pointer task, int everyNsamplesEventType, NativeLong nSamples, NativeLong options, DriverLibrary.DAQmxEveryNSamplesEventCallbackPtr callbackFunction, Pointer callbackData);
	/**
	 * Original signature : <code>int32 DAQmxRegisterDoneEvent(TaskHandle, uInt32, DAQmxDoneEventCallbackPtr, void*)</code><br>
	 * <i>native declaration : line 2508</i>
	 */
	// int DAQmxRegisterDoneEvent(Pointer task, NativeLong options, DriverLibrary.DAQmxDoneEventCallbackPtr callbackFunction, Pointer callbackData);
	/**
	 * Original signature : <code>int32 DAQmxRegisterSignalEvent(TaskHandle, int32, uInt32, DAQmxSignalEventCallbackPtr, void*)</code><br>
	 * <i>native declaration : line 2509</i>
	 */
	// int DAQmxRegisterSignalEvent(Pointer task, int signalID, NativeLong options, DriverLibrary.DAQmxSignalEventCallbackPtr callbackFunction, Pointer callbackData);
	/**
	 * /<br>
	 * Original signature : <code>int32 DAQmxCreateAIVoltageChan(TaskHandle, const char[], const char[], int32, float64, float64, int32, const char[])</code><br>
	 * <i>native declaration : line 2516</i>
	 */
	int DAQmxCreateAIVoltageChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], int terminalConfig, double minVal, double maxVal, int units, byte customScaleName[]);

	/**
	 * Original signature : <code>int32 DAQmxCreateAICurrentChan(TaskHandle, const char[], const char[], int32, float64, float64, int32, int32, float64, const char[])</code><br>
	 * <i>native declaration : line 2517</i>
	 */
	// int DAQmxCreateAICurrentChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], int terminalConfig, double minVal, double maxVal, int units, int shuntResistorLoc, double extShuntResistorVal, byte customScaleName[]);

	/**
	 * Original signature : <code>int32 DAQmxCreateAIVoltageRMSChan(TaskHandle, const char[], const char[], int32, float64, float64, int32, const char[])</code><br>
	 * <i>native declaration : line 2518</i>
	 */
	// int DAQmxCreateAIVoltageRMSChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], int terminalConfig, double minVal, double maxVal, int units, byte customScaleName[]);

	/**
	 * Original signature : <code>int32 DAQmxCreateAICurrentRMSChan(TaskHandle, const char[], const char[], int32, float64, float64, int32, int32, float64, const char[])</code><br>
	 * <i>native declaration : line 2519</i>
	 */
	// int DAQmxCreateAICurrentRMSChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], int terminalConfig, double minVal, double maxVal, int units, int shuntResistorLoc, double extShuntResistorVal, byte customScaleName[]);

	/**
	 * Original signature : <code>int32 DAQmxCreateAIThrmcplChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, int32, float64, const char[])</code><br>
	 * <i>native declaration : line 2520</i>
	 */
	// int DAQmxCreateAIThrmcplChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], double minVal, double maxVal, int units, int thermocoupleType, int cjcSource, double cjcVal, byte cjcChannel[]);

	/**
	 * Original signature : <code>int32 DAQmxCreateAIRTDChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, int32, int32, float64, float64)</code><br>
	 * <i>native declaration : line 2521</i>
	 */
	// int DAQmxCreateAIRTDChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], double minVal, double maxVal, int units, int rtdType, int resistanceConfig, int currentExcitSource, double currentExcitVal, double r0);

	/**
	 * Original signature : <code>int32 DAQmxCreateAIThrmstrChanIex(TaskHandle, const char[], const char[], float64, float64, int32, int32, int32, float64, float64, float64, float64)</code><br>
	 * <i>native declaration : line 2522</i>
	 */
	// int DAQmxCreateAIThrmstrChanIex(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], double minVal, double maxVal, int units, int resistanceConfig, int currentExcitSource, double currentExcitVal, double a, double b, double c);

	/**
	 * Original signature : <code>int32 DAQmxCreateAIThrmstrChanVex(TaskHandle, const char[], const char[], float64, float64, int32, int32, int32, float64, float64, float64, float64, float64)</code><br>
	 * <i>native declaration : line 2523</i>
	 */
	// int DAQmxCreateAIThrmstrChanVex(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], double minVal, double maxVal, int units, int resistanceConfig, int voltageExcitSource, double voltageExcitVal, double a, double b, double c, double r1);

	/**
	 * Original signature : <code>int32 DAQmxCreateAIFreqVoltageChan(TaskHandle, const char[], const char[], float64, float64, int32, float64, float64, const char[])</code><br>
	 * <i>native declaration : line 2524</i>
	 */
	// int DAQmxCreateAIFreqVoltageChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], double minVal, double maxVal, int units, double thresholdLevel, double hysteresis, byte customScaleName[]);

	/**
	 * Original signature : <code>int32 DAQmxCreateAIResistanceChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, int32, float64, const char[])</code><br>
	 * <i>native declaration : line 2525</i>
	 */
	// int DAQmxCreateAIResistanceChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], double minVal, double maxVal, int units, int resistanceConfig, int currentExcitSource, double currentExcitVal, byte customScaleName[]);

	/**
	 * Original signature : <code>int32 DAQmxCreateAIStrainGageChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, int32, float64, float64, float64, float64, float64, float64, const char[])</code><br>
	 * <i>native declaration : line 2526</i>
	 */
	// int DAQmxCreateAIStrainGageChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], double minVal, double maxVal, int units, int strainConfig, int voltageExcitSource, double voltageExcitVal, double gageFactor, double initialBridgeVoltage, double nominalGageResistance, double poissonRatio, double leadWireResistance, byte customScaleName[]);

	/**
	 * Original signature : <code>int32 DAQmxCreateAIRosetteStrainGageChan(TaskHandle, const char[], const char[], float64, float64, int32, float64, const int32[], uInt32, int32, int32, float64, float64, float64, float64, float64)</code><br>
	 * <i>native declaration : line 2527</i>
	 */
	// int DAQmxCreateAIRosetteStrainGageChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], double minVal, double maxVal, int rosetteType, double gageOrientation, int rosetteMeasTypes[], NativeLong numRosetteMeasTypes, int strainConfig, int voltageExcitSource, double voltageExcitVal, double gageFactor, double nominalGageResistance, double poissonRatio, double leadWireResistance);

	/**
	 * Original signature : <code>int32 DAQmxCreateAIForceBridgeTwoPointLinChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, int32, float64, float64, float64, float64, int32, float64, float64, int32, const char[])</code><br>
	 * <i>native declaration : line 2528</i>
	 */
	// int DAQmxCreateAIForceBridgeTwoPointLinChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], double minVal, double maxVal, int units, int bridgeConfig, int voltageExcitSource, double voltageExcitVal, double nominalBridgeResistance, double firstElectricalVal, double secondElectricalVal, int electricalUnits, double firstPhysicalVal, double secondPhysicalVal, int physicalUnits, byte customScaleName[]);

	/**
	 * Original signature : <code>int32 DAQmxCreateAIForceBridgeTableChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, int32, float64, float64, const float64[], uInt32, int32, const float64[], uInt32, int32, const char[])</code><br>
	 * <i>native declaration : line 2530</i>
	 */
	// int DAQmxCreateAIForceBridgeTableChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], double minVal, double maxVal, int units, int bridgeConfig, int voltageExcitSource, double voltageExcitVal, double nominalBridgeResistance, DoubleBuffer electricalVals, NativeLong numElectricalVals, int electricalUnits, DoubleBuffer physicalVals, NativeLong numPhysicalVals, int physicalUnits, byte customScaleName[]);

	/**
	 * Original signature : <code>int32 DAQmxCreateAIForceBridgePolynomialChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, int32, float64, float64, const float64[], uInt32, const float64[], uInt32, int32, int32, const char[])</code><br>
	 * <i>native declaration : line 2532</i>
	 */
	// int DAQmxCreateAIForceBridgePolynomialChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], double minVal, double maxVal, int units, int bridgeConfig, int voltageExcitSource, double voltageExcitVal, double nominalBridgeResistance, DoubleBuffer forwardCoeffs, NativeLong numForwardCoeffs, DoubleBuffer reverseCoeffs, NativeLong numReverseCoeffs, int electricalUnits, int physicalUnits, byte customScaleName[]);

	/**
	 * Original signature : <code>int32 DAQmxCreateAIPressureBridgeTwoPointLinChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, int32, float64, float64, float64, float64, int32, float64, float64, int32, const char[])</code><br>
	 * <i>native declaration : line 2534</i>
	 */
	// int DAQmxCreateAIPressureBridgeTwoPointLinChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], double minVal, double maxVal, int units, int bridgeConfig, int voltageExcitSource, double voltageExcitVal, double nominalBridgeResistance, double firstElectricalVal, double secondElectricalVal, int electricalUnits, double firstPhysicalVal, double secondPhysicalVal, int physicalUnits, byte customScaleName[]);

	/**
	 * Original signature : <code>int32 DAQmxCreateAIPressureBridgeTableChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, int32, float64, float64, const float64[], uInt32, int32, const float64[], uInt32, int32, const char[])</code><br>
	 * <i>native declaration : line 2536</i>
	 */
	// int DAQmxCreateAIPressureBridgeTableChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], double minVal, double maxVal, int units, int bridgeConfig, int voltageExcitSource, double voltageExcitVal, double nominalBridgeResistance, DoubleBuffer electricalVals, NativeLong numElectricalVals, int electricalUnits, DoubleBuffer physicalVals, NativeLong numPhysicalVals, int physicalUnits, byte customScaleName[]);

	/**
	 * Original signature : <code>int32 DAQmxCreateAIPressureBridgePolynomialChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, int32, float64, float64, const float64[], uInt32, const float64[], uInt32, int32, int32, const char[])</code><br>
	 * <i>native declaration : line 2538</i>
	 */
	// int DAQmxCreateAIPressureBridgePolynomialChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], double minVal, double maxVal, int units, int bridgeConfig, int voltageExcitSource, double voltageExcitVal, double nominalBridgeResistance, DoubleBuffer forwardCoeffs, NativeLong numForwardCoeffs, DoubleBuffer reverseCoeffs, NativeLong numReverseCoeffs, int electricalUnits, int physicalUnits, byte customScaleName[]);

	/**
	 * Original signature : <code>int32 DAQmxCreateAITorqueBridgeTwoPointLinChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, int32, float64, float64, float64, float64, int32, float64, float64, int32, const char[])</code><br>
	 * <i>native declaration : line 2540</i>
	 */
	// int DAQmxCreateAITorqueBridgeTwoPointLinChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], double minVal, double maxVal, int units, int bridgeConfig, int voltageExcitSource, double voltageExcitVal, double nominalBridgeResistance, double firstElectricalVal, double secondElectricalVal, int electricalUnits, double firstPhysicalVal, double secondPhysicalVal, int physicalUnits, byte customScaleName[]);
	/**
	 * Original signature : <code>int32 DAQmxCreateAITorqueBridgeTableChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, int32, float64, float64, const float64[], uInt32, int32, const float64[], uInt32, int32, const char[])</code><br>
	 * <i>native declaration : line 2542</i>
	 */
	// int DAQmxCreateAITorqueBridgeTableChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], double minVal, double maxVal, int units, int bridgeConfig, int voltageExcitSource, double voltageExcitVal, double nominalBridgeResistance, DoubleBuffer electricalVals, NativeLong numElectricalVals, int electricalUnits, DoubleBuffer physicalVals, NativeLong numPhysicalVals, int physicalUnits, byte customScaleName[]);
	/**
	 * Original signature : <code>int32 DAQmxCreateAITorqueBridgePolynomialChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, int32, float64, float64, const float64[], uInt32, const float64[], uInt32, int32, int32, const char[])</code><br>
	 * <i>native declaration : line 2544</i>
	 */
	// int DAQmxCreateAITorqueBridgePolynomialChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], double minVal, double maxVal, int units, int bridgeConfig, int voltageExcitSource, double voltageExcitVal, double nominalBridgeResistance, DoubleBuffer forwardCoeffs, NativeLong numForwardCoeffs, DoubleBuffer reverseCoeffs, NativeLong numReverseCoeffs, int electricalUnits, int physicalUnits, byte customScaleName[]);

	/**
	 * Original signature : <code>int32 DAQmxCreateAIBridgeChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, int32, float64, float64, const char[])</code><br>
	 * <i>native declaration : line 2545</i>
	 */
	// int DAQmxCreateAIBridgeChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], double minVal, double maxVal, int units, int bridgeConfig, int voltageExcitSource, double voltageExcitVal, double nominalBridgeResistance, byte customScaleName[]);

	/**
	 * Original signature : <code>int32 DAQmxCreateAIVoltageChanWithExcit(TaskHandle, const char[], const char[], int32, float64, float64, int32, int32, int32, float64, bool32, const char[])</code><br>
	 * <i>native declaration : line 2546</i>
	 */
	// int DAQmxCreateAIVoltageChanWithExcit(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], int terminalConfig, double minVal, double maxVal, int units, int bridgeConfig, int voltageExcitSource, double voltageExcitVal, NativeLong useExcitForScaling, byte customScaleName[]);

	/**
	 * Original signature : <code>int32 DAQmxCreateAITempBuiltInSensorChan(TaskHandle, const char[], const char[], int32)</code><br>
	 * <i>native declaration : line 2547</i>
	 */
	// int DAQmxCreateAITempBuiltInSensorChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], int units);

	/**
	 * Original signature : <code>int32 DAQmxCreateAIAccelChan(TaskHandle, const char[], const char[], int32, float64, float64, int32, float64, int32, int32, float64, const char[])</code><br>
	 * <i>native declaration : line 2548</i>
	 */
	// int DAQmxCreateAIAccelChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], int terminalConfig, double minVal, double maxVal, int units, double sensitivity, int sensitivityUnits, int currentExcitSource, double currentExcitVal, byte customScaleName[]);

	/**
	 * Original signature : <code>int32 DAQmxCreateAIVelocityIEPEChan(TaskHandle, const char[], const char[], int32, float64, float64, int32, float64, int32, int32, float64, const char[])</code><br>
	 * <i>native declaration : line 2549</i>
	 */
	// int DAQmxCreateAIVelocityIEPEChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], int terminalConfig, double minVal, double maxVal, int units, double sensitivity, int sensitivityUnits, int currentExcitSource, double currentExcitVal, byte customScaleName[]);

	/**
	 * Original signature : <code>int32 DAQmxCreateAIForceIEPEChan(TaskHandle, const char[], const char[], int32, float64, float64, int32, float64, int32, int32, float64, const char[])</code><br>
	 * <i>native declaration : line 2550</i>
	 */
	// int DAQmxCreateAIForceIEPEChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], int terminalConfig, double minVal, double maxVal, int units, double sensitivity, int sensitivityUnits, int currentExcitSource, double currentExcitVal, byte customScaleName[]);

	/**
	 * Original signature : <code>int32 DAQmxCreateAIMicrophoneChan(TaskHandle, const char[], const char[], int32, int32, float64, float64, int32, float64, const char[])</code><br>
	 * <i>native declaration : line 2551</i>
	 */
	// int DAQmxCreateAIMicrophoneChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], int terminalConfig, int units, double micSensitivity, double maxSndPressLevel, int currentExcitSource, double currentExcitVal, byte customScaleName[]);

	/**
	 * Original signature : <code>int32 DAQmxCreateAIPosLVDTChan(TaskHandle, const char[], const char[], float64, float64, int32, float64, int32, int32, float64, float64, int32, const char[])</code><br>
	 * <i>native declaration : line 2552</i>
	 */
	// int DAQmxCreateAIPosLVDTChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], double minVal, double maxVal, int units, double sensitivity, int sensitivityUnits, int voltageExcitSource, double voltageExcitVal, double voltageExcitFreq, int ACExcitWireMode, byte customScaleName[]);

	/**
	 * Original signature : <code>int32 DAQmxCreateAIPosRVDTChan(TaskHandle, const char[], const char[], float64, float64, int32, float64, int32, int32, float64, float64, int32, const char[])</code><br>
	 * <i>native declaration : line 2553</i>
	 */
	// int DAQmxCreateAIPosRVDTChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], double minVal, double maxVal, int units, double sensitivity, int sensitivityUnits, int voltageExcitSource, double voltageExcitVal, double voltageExcitFreq, int ACExcitWireMode, byte customScaleName[]);

	/**
	 * Original signature : <code>int32 DAQmxCreateAIPosEddyCurrProxProbeChan(TaskHandle, const char[], const char[], float64, float64, int32, float64, int32, const char[])</code><br>
	 * <i>native declaration : line 2554</i>
	 */
	// int DAQmxCreateAIPosEddyCurrProxProbeChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], double minVal, double maxVal, int units, double sensitivity, int sensitivityUnits, byte customScaleName[]);

	/**
	 * Function DAQmxCreateAIDeviceTempChan is obsolete and has been replaced by DAQmxCreateAITempBuiltInSensorChan<br>
	 * Original signature : <code>int32 DAQmxCreateAIDeviceTempChan(TaskHandle, const char[], const char[], int32)</code><br>
	 * <i>native declaration : line 2556</i>
	 */
	// int DAQmxCreateAIDeviceTempChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], int units);

	/**
	 * Original signature : <code>int32 DAQmxCreateTEDSAIVoltageChan(TaskHandle, const char[], const char[], int32, float64, float64, int32, const char[])</code><br>
	 * <i>native declaration : line 2558</i>
	 */
	// int DAQmxCreateTEDSAIVoltageChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], int terminalConfig, double minVal, double maxVal, int units, byte customScaleName[]);

	/**
	 * Original signature : <code>int32 DAQmxCreateTEDSAICurrentChan(TaskHandle, const char[], const char[], int32, float64, float64, int32, int32, float64, const char[])</code><br>
	 * <i>native declaration : line 2559</i>
	 */
	// int DAQmxCreateTEDSAICurrentChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], int terminalConfig, double minVal, double maxVal, int units, int shuntResistorLoc, double extShuntResistorVal, byte customScaleName[]);

	/**
	 * Original signature : <code>int32 DAQmxCreateTEDSAIThrmcplChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, float64, const char[])</code><br>
	 * <i>native declaration : line 2560</i>
	 */
	// int DAQmxCreateTEDSAIThrmcplChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], double minVal, double maxVal, int units, int cjcSource, double cjcVal, byte cjcChannel[]);

	/**
	 * Original signature : <code>int32 DAQmxCreateTEDSAIRTDChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, int32, float64)</code><br>
	 * <i>native declaration : line 2561</i>
	 */
	// int DAQmxCreateTEDSAIRTDChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], double minVal, double maxVal, int units, int resistanceConfig, int currentExcitSource, double currentExcitVal);

	/**
	 * Original signature : <code>int32 DAQmxCreateTEDSAIThrmstrChanIex(TaskHandle, const char[], const char[], float64, float64, int32, int32, int32, float64)</code><br>
	 * <i>native declaration : line 2562</i>
	 */
	// int DAQmxCreateTEDSAIThrmstrChanIex(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], double minVal, double maxVal, int units, int resistanceConfig, int currentExcitSource, double currentExcitVal);

	/**
	 * Original signature : <code>int32 DAQmxCreateTEDSAIThrmstrChanVex(TaskHandle, const char[], const char[], float64, float64, int32, int32, int32, float64, float64)</code><br>
	 * <i>native declaration : line 2563</i>
	 */
	// int DAQmxCreateTEDSAIThrmstrChanVex(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], double minVal, double maxVal, int units, int resistanceConfig, int voltageExcitSource, double voltageExcitVal, double r1);

	/**
	 * Original signature : <code>int32 DAQmxCreateTEDSAIResistanceChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, int32, float64, const char[])</code><br>
	 * <i>native declaration : line 2564</i>
	 */
	// int DAQmxCreateTEDSAIResistanceChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], double minVal, double maxVal, int units, int resistanceConfig, int currentExcitSource, double currentExcitVal, byte customScaleName[]);

	/**
	 * Original signature : <code>int32 DAQmxCreateTEDSAIStrainGageChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, float64, float64, float64, const char[])</code><br>
	 * <i>native declaration : line 2565</i>
	 */
	// int DAQmxCreateTEDSAIStrainGageChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], double minVal, double maxVal, int units, int voltageExcitSource, double voltageExcitVal, double initialBridgeVoltage, double leadWireResistance, byte customScaleName[]);

	/**
	 * Original signature : <code>int32 DAQmxCreateTEDSAIForceBridgeChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, float64, const char[])</code><br>
	 * <i>native declaration : line 2566</i>
	 */
	// int DAQmxCreateTEDSAIForceBridgeChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], double minVal, double maxVal, int units, int voltageExcitSource, double voltageExcitVal, byte customScaleName[]);

	/**
	 * Original signature : <code>int32 DAQmxCreateTEDSAIPressureBridgeChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, float64, const char[])</code><br>
	 * <i>native declaration : line 2567</i>
	 */
	// int DAQmxCreateTEDSAIPressureBridgeChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], double minVal, double maxVal, int units, int voltageExcitSource, double voltageExcitVal, byte customScaleName[]);

	/**
	 * Original signature : <code>int32 DAQmxCreateTEDSAITorqueBridgeChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, float64, const char[])</code><br>
	 * <i>native declaration : line 2568</i>
	 */
	// int DAQmxCreateTEDSAITorqueBridgeChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], double minVal, double maxVal, int units, int voltageExcitSource, double voltageExcitVal, byte customScaleName[]);

	/**
	 * Original signature : <code>int32 DAQmxCreateTEDSAIBridgeChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, float64, const char[])</code><br>
	 * <i>native declaration : line 2569</i>
	 */
	// int DAQmxCreateTEDSAIBridgeChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], double minVal, double maxVal, int units, int voltageExcitSource, double voltageExcitVal, byte customScaleName[]);

	/**
	 * Original signature : <code>int32 DAQmxCreateTEDSAIVoltageChanWithExcit(TaskHandle, const char[], const char[], int32, float64, float64, int32, int32, float64, const char[])</code><br>
	 * <i>native declaration : line 2570</i>
	 */
	// int DAQmxCreateTEDSAIVoltageChanWithExcit(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], int terminalConfig, double minVal, double maxVal, int units, int voltageExcitSource, double voltageExcitVal, byte customScaleName[]);

	/**
	 * Original signature : <code>int32 DAQmxCreateTEDSAIAccelChan(TaskHandle, const char[], const char[], int32, float64, float64, int32, int32, float64, const char[])</code><br>
	 * <i>native declaration : line 2571</i>
	 */
	// int DAQmxCreateTEDSAIAccelChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], int terminalConfig, double minVal, double maxVal, int units, int currentExcitSource, double currentExcitVal, byte customScaleName[]);

	/**
	 * Original signature : <code>int32 DAQmxCreateTEDSAIForceIEPEChan(TaskHandle, const char[], const char[], int32, float64, float64, int32, int32, float64, const char[])</code><br>
	 * <i>native declaration : line 2572</i>
	 */
	// int DAQmxCreateTEDSAIForceIEPEChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], int terminalConfig, double minVal, double maxVal, int units, int currentExcitSource, double currentExcitVal, byte customScaleName[]);

	/**
	 * Original signature : <code>int32 DAQmxCreateTEDSAIMicrophoneChan(TaskHandle, const char[], const char[], int32, int32, float64, int32, float64, const char[])</code><br>
	 * <i>native declaration : line 2574</i>
	 */
	// int DAQmxCreateTEDSAIMicrophoneChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], int terminalConfig, int units, double maxSndPressLevel, int currentExcitSource, double currentExcitVal, byte customScaleName[]);

	/**
	 * Original signature : <code>int32 DAQmxCreateTEDSAIPosLVDTChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, float64, float64, int32, const char[])</code><br>
	 * <i>native declaration : line 2575</i>
	 */
	// int DAQmxCreateTEDSAIPosLVDTChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], double minVal, double maxVal, int units, int voltageExcitSource, double voltageExcitVal, double voltageExcitFreq, int ACExcitWireMode, byte customScaleName[]);

	/**
	 * Original signature : <code>int32 DAQmxCreateTEDSAIPosRVDTChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, float64, float64, int32, const char[])</code><br>
	 * <i>native declaration : line 2576</i>
	 */
	// int DAQmxCreateTEDSAIPosRVDTChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], double minVal, double maxVal, int units, int voltageExcitSource, double voltageExcitVal, double voltageExcitFreq, int ACExcitWireMode, byte customScaleName[]);

	/**
	 * Original signature : <code>int32 DAQmxCreateAOVoltageChan(TaskHandle, const char[], const char[], float64, float64, int32, const char[])</code><br>
	 * <i>native declaration : line 2578</i>
	 */
	// int DAQmxCreateAOVoltageChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], double minVal, double maxVal, int units, byte customScaleName[]);

	/**
	 * Original signature : <code>int32 DAQmxCreateAOCurrentChan(TaskHandle, const char[], const char[], float64, float64, int32, const char[])</code><br>
	 * <i>native declaration : line 2579</i>
	 */
	// int DAQmxCreateAOCurrentChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], double minVal, double maxVal, int units, byte customScaleName[]);

	/**
	 * Original signature : <code>int32 DAQmxCreateAOFuncGenChan(TaskHandle, const char[], const char[], int32, float64, float64, float64)</code><br>
	 * <i>native declaration : line 2580</i>
	 */
	// int DAQmxCreateAOFuncGenChan(Pointer taskHandle, byte physicalChannel[], byte nameToAssignToChannel[], int type, double freq, double amplitude, double offset);

	/**
	 * Original signature : <code>int32 DAQmxCreateDIChan(TaskHandle, const char[], const char[], int32)</code><br>
	 * <i>native declaration : line 2582</i>
	 */
	// int DAQmxCreateDIChan(Pointer taskHandle, byte lines[], byte nameToAssignToLines[], int lineGrouping);

	/**
	 * Original signature : <code>int32 DAQmxCreateDOChan(TaskHandle, const char[], const char[], int32)</code><br>
	 * <i>native declaration : line 2584</i>
	 */
	// int DAQmxCreateDOChan(Pointer taskHandle, byte lines[], byte nameToAssignToLines[], int lineGrouping);

	/**
	 * Original signature : <code>int32 DAQmxCreateCIFreqChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, int32, float64, uInt32, const char[])</code><br>
	 * <i>native declaration : line 2586</i>
	 */
	// int DAQmxCreateCIFreqChan(Pointer taskHandle, byte counter[], byte nameToAssignToChannel[], double minVal, double maxVal, int units, int edge, int measMethod, double measTime, NativeLong divisor, byte customScaleName[]);

	/**
	 * Original signature : <code>int32 DAQmxCreateCIPeriodChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, int32, float64, uInt32, const char[])</code><br>
	 * <i>native declaration : line 2587</i>
	 */
	// int DAQmxCreateCIPeriodChan(Pointer taskHandle, byte counter[], byte nameToAssignToChannel[], double minVal, double maxVal, int units, int edge, int measMethod, double measTime, NativeLong divisor, byte customScaleName[]);

	/**
	 * Original signature : <code>int32 DAQmxCreateCICountEdgesChan(TaskHandle, const char[], const char[], int32, uInt32, int32)</code><br>
	 * <i>native declaration : line 2588</i>
	 */
	// int DAQmxCreateCICountEdgesChan(Pointer taskHandle, byte counter[], byte nameToAssignToChannel[], int edge, NativeLong initialCount, int countDirection);

	/**
	 * Original signature : <code>int32 DAQmxCreateCIDutyCycleChan(TaskHandle, const char[], const char[], float64, float64, int32, const char[])</code><br>
	 * <i>native declaration : line 2589</i>
	 */
	// int DAQmxCreateCIDutyCycleChan(Pointer taskHandle, byte counter[], byte nameToAssignToChannel[], double minFreq, double maxFreq, int edge, byte customScaleName[]);

	/**
	 * Original signature : <code>int32 DAQmxCreateCIPulseWidthChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, const char[])</code><br>
	 * <i>native declaration : line 2590</i>
	 */
	// int DAQmxCreateCIPulseWidthChan(Pointer taskHandle, byte counter[], byte nameToAssignToChannel[], double minVal, double maxVal, int units, int startingEdge, byte customScaleName[]);

	/**
	 * Original signature : <code>int32 DAQmxCreateCISemiPeriodChan(TaskHandle, const char[], const char[], float64, float64, int32, const char[])</code><br>
	 * <i>native declaration : line 2591</i>
	 */
	// int DAQmxCreateCISemiPeriodChan(Pointer taskHandle, byte counter[], byte nameToAssignToChannel[], double minVal, double maxVal, int units, byte customScaleName[]);

	/**
	 * Original signature : <code>int32 DAQmxCreateCITwoEdgeSepChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, int32, const char[])</code><br>
	 * <i>native declaration : line 2592</i>
	 */
	// int DAQmxCreateCITwoEdgeSepChan(Pointer taskHandle, byte counter[], byte nameToAssignToChannel[], double minVal, double maxVal, int units, int firstEdge, int secondEdge, byte customScaleName[]);

	/**
	 * Original signature : <code>int32 DAQmxCreateCIPulseChanFreq(TaskHandle, const char[], const char[], float64, float64, int32)</code><br>
	 * <i>native declaration : line 2593</i>
	 */
	// int DAQmxCreateCIPulseChanFreq(Pointer taskHandle, byte counter[], byte nameToAssignToChannel[], double minVal, double maxVal, int units);

	/**
	 * Original signature : <code>int32 DAQmxCreateCIPulseChanTime(TaskHandle, const char[], const char[], float64, float64, int32)</code><br>
	 * <i>native declaration : line 2594</i>
	 */
	// int DAQmxCreateCIPulseChanTime(Pointer taskHandle, byte counter[], byte nameToAssignToChannel[], double minVal, double maxVal, int units);

	/**
	 * Original signature : <code>int32 DAQmxCreateCIPulseChanTicks(TaskHandle, const char[], const char[], const char[], float64, float64)</code><br>
	 * <i>native declaration : line 2595</i>
	 */
	// int DAQmxCreateCIPulseChanTicks(Pointer taskHandle, byte counter[], byte nameToAssignToChannel[], byte sourceTerminal[], double minVal, double maxVal);

	/**
	 * Original signature : <code>int32 DAQmxCreateCILinEncoderChan(TaskHandle, const char[], const char[], int32, bool32, float64, int32, int32, float64, float64, const char[])</code><br>
	 * <i>native declaration : line 2596</i>
	 */
	// int DAQmxCreateCILinEncoderChan(Pointer taskHandle, byte counter[], byte nameToAssignToChannel[], int decodingType, NativeLong ZidxEnable, double ZidxVal, int ZidxPhase, int units, double distPerPulse, double initialPos, byte customScaleName[]);

	/**
	 * Original signature : <code>int32 DAQmxCreateCIAngEncoderChan(TaskHandle, const char[], const char[], int32, bool32, float64, int32, int32, uInt32, float64, const char[])</code><br>
	 * <i>native declaration : line 2597</i>
	 */
	// int DAQmxCreateCIAngEncoderChan(Pointer taskHandle, byte counter[], byte nameToAssignToChannel[], int decodingType, NativeLong ZidxEnable, double ZidxVal, int ZidxPhase, int units, NativeLong pulsesPerRev, double initialAngle, byte customScaleName[]);

	/**
	 * Original signature : <code>int32 DAQmxCreateCILinVelocityChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, float64, const char[])</code><br>
	 * <i>native declaration : line 2598</i>
	 */
	// int DAQmxCreateCILinVelocityChan(Pointer taskHandle, byte counter[], byte nameToAssignToChannel[], double minVal, double maxVal, int decodingType, int units, double distPerPulse, byte customScaleName[]);

	/**
	 * Original signature : <code>int32 DAQmxCreateCIAngVelocityChan(TaskHandle, const char[], const char[], float64, float64, int32, int32, uInt32, const char[])</code><br>
	 * <i>native declaration : line 2599</i>
	 */
	// int DAQmxCreateCIAngVelocityChan(Pointer taskHandle, byte counter[], byte nameToAssignToChannel[], double minVal, double maxVal, int decodingType, int units, NativeLong pulsesPerRev, byte customScaleName[]);

	/**
	 * Original signature : <code>int32 DAQmxCreateCIGPSTimestampChan(TaskHandle, const char[], const char[], int32, int32, const char[])</code><br>
	 * <i>native declaration : line 2600</i>
	 */
	// int DAQmxCreateCIGPSTimestampChan(Pointer taskHandle, byte counter[], byte nameToAssignToChannel[], int units, int syncMethod, byte customScaleName[]);

	/**
	 * Original signature : <code>int32 DAQmxCreateCOPulseChanFreq(TaskHandle, const char[], const char[], int32, int32, float64, float64, float64)</code><br>
	 * <i>native declaration : line 2602</i>
	 */
	// int DAQmxCreateCOPulseChanFreq(Pointer taskHandle, byte counter[], byte nameToAssignToChannel[], int units, int idleState, double initialDelay, double freq, double dutyCycle);

	/**
	 * Original signature : <code>int32 DAQmxCreateCOPulseChanTime(TaskHandle, const char[], const char[], int32, int32, float64, float64, float64)</code><br>
	 * <i>native declaration : line 2603</i>
	 */
	// int DAQmxCreateCOPulseChanTime(Pointer taskHandle, byte counter[], byte nameToAssignToChannel[], int units, int idleState, double initialDelay, double lowTime, double highTime);

	/**
	 * Original signature : <code>int32 DAQmxCreateCOPulseChanTicks(TaskHandle, const char[], const char[], const char[], int32, int32, int32, int32)</code><br>
	 * <i>native declaration : line 2604</i>
	 */
	// int DAQmxCreateCOPulseChanTicks(Pointer taskHandle, byte counter[], byte nameToAssignToChannel[], byte sourceTerminal[], int idleState, int initialDelay, int lowTicks, int highTicks);

	/**
	 * Original signature : <code>int32 DAQmxGetAIChanCalCalDate(TaskHandle, const char[], uInt32*, uInt32*, uInt32*, uInt32*, uInt32*)</code><br>
	 * <i>native declaration : line 2606</i>
	 */
	// int DAQmxGetAIChanCalCalDate(Pointer taskHandle, byte channelName[], NativeLongByReference year, NativeLongByReference month, NativeLongByReference day, NativeLongByReference hour, NativeLongByReference minute);

	/**
	 * Original signature : <code>int32 DAQmxSetAIChanCalCalDate(TaskHandle, const char[], uInt32, uInt32, uInt32, uInt32, uInt32)</code><br>
	 * <i>native declaration : line 2607</i>
	 */
	// int DAQmxSetAIChanCalCalDate(Pointer taskHandle, byte channelName[], NativeLong year, NativeLong month, NativeLong day, NativeLong hour, NativeLong minute);

	/**
	 * Original signature : <code>int32 DAQmxGetAIChanCalExpDate(TaskHandle, const char[], uInt32*, uInt32*, uInt32*, uInt32*, uInt32*)</code><br>
	 * <i>native declaration : line 2608</i>
	 */
	// int DAQmxGetAIChanCalExpDate(Pointer taskHandle, byte channelName[], NativeLongByReference year, NativeLongByReference month, NativeLongByReference day, NativeLongByReference hour, NativeLongByReference minute);

	/**
	 * Original signature : <code>int32 DAQmxSetAIChanCalExpDate(TaskHandle, const char[], uInt32, uInt32, uInt32, uInt32, uInt32)</code><br>
	 * <i>native declaration : line 2609</i>
	 */
	// int DAQmxSetAIChanCalExpDate(Pointer taskHandle, byte channelName[], NativeLong year, NativeLong month, NativeLong day, NativeLong hour, NativeLong minute);

	/**
	 * Original signature : <code>int32 DAQmxGetChanAttribute(TaskHandle, const char[], int32, void*, null)</code><br>
	 * <i>native declaration : line 2611</i>
	 */
	// int DAQmxGetChanAttribute(Pointer taskHandle, byte channel[], int attribute, Pointer value, Object... varArgs1);

	/**
	 * Original signature : <code>int32 DAQmxSetChanAttribute(TaskHandle, const char[], int32, null)</code><br>
	 * <i>native declaration : line 2612</i>
	 */
	// int DAQmxSetChanAttribute(Pointer taskHandle, byte channel[], int attribute, Object... varArgs1);

	/**
	 * Original signature : <code>int32 DAQmxResetChanAttribute(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 2613</i>
	 */
	// int DAQmxResetChanAttribute(Pointer taskHandle, byte channel[], int attribute);

    /**
	 * (Analog/Counter Timing)<br>
	 * Original signature : <code>int32 DAQmxCfgSampClkTiming(TaskHandle, const char[], float64, int32, int32, uInt64)</code><br>
	 * <i>native declaration : line 2622</i>
	 */
	int DAQmxCfgSampClkTiming(Pointer taskHandle, byte source[], double rate, int activeEdge, int sampleMode, long sampsPerChan);
	/**
	 * (Digital Timing)<br>
	 * Original signature : <code>int32 DAQmxCfgHandshakingTiming(TaskHandle, int32, uInt64)</code><br>
	 * <i>native declaration : line 2624</i>
	 */
	// int DAQmxCfgHandshakingTiming(Pointer taskHandle, int sampleMode, long sampsPerChan);

	/**
	 * (Burst Import Clock Timing)<br>
	 * Original signature : <code>int32 DAQmxCfgBurstHandshakingTimingImportClock(TaskHandle, int32, uInt64, float64, const char[], int32, int32, int32)</code><br>
	 * <i>native declaration : line 2626</i>
	 */
	// int DAQmxCfgBurstHandshakingTimingImportClock(Pointer taskHandle, int sampleMode, long sampsPerChan, double sampleClkRate, byte sampleClkSrc[], int sampleClkActiveEdge, int pauseWhen, int readyEventActiveLevel);

	/**
	 * (Burst Export Clock Timing)<br>
	 * Original signature : <code>int32 DAQmxCfgBurstHandshakingTimingExportClock(TaskHandle, int32, uInt64, float64, const char[], int32, int32, int32)</code><br>
	 * <i>native declaration : line 2628</i>
	 */
	// int DAQmxCfgBurstHandshakingTimingExportClock(Pointer taskHandle, int sampleMode, long sampsPerChan, double sampleClkRate, byte sampleClkOutpTerm[], int sampleClkPulsePolarity, int pauseWhen, int readyEventActiveLevel);

	/**
	 * Original signature : <code>int32 DAQmxCfgChangeDetectionTiming(TaskHandle, const char[], const char[], int32, uInt64)</code><br>
	 * <i>native declaration : line 2629</i>
	 */
	// int DAQmxCfgChangeDetectionTiming(Pointer taskHandle, byte risingEdgeChan[], byte fallingEdgeChan[], int sampleMode, long sampsPerChan);
	/**
	 * (Counter Timing)<br>
	 * Original signature : <code>int32 DAQmxCfgImplicitTiming(TaskHandle, int32, uInt64)</code><br>
	 * <i>native declaration : line 2631</i>
	 */
	// int DAQmxCfgImplicitTiming(Pointer taskHandle, int sampleMode, long sampsPerChan);

	/**
	 * (Pipelined Sample Clock Timing)<br>
	 * Original signature : <code>int32 DAQmxCfgPipelinedSampClkTiming(TaskHandle, const char[], float64, int32, int32, uInt64)</code><br>
	 * <i>native declaration : line 2633</i>
	 */
	// int DAQmxCfgPipelinedSampClkTiming(Pointer taskHandle, byte source[], double rate, int activeEdge, int sampleMode, long sampsPerChan);
	/**
	 * Original signature : <code>int32 DAQmxGetTimingAttribute(TaskHandle, int32, void*, null)</code><br>
	 * <i>native declaration : line 2635</i>
	 */
	// int DAQmxGetTimingAttribute(Pointer taskHandle, int attribute, Pointer value, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxSetTimingAttribute(TaskHandle, int32, null)</code><br>
	 * <i>native declaration : line 2636</i>
	 */
	// int DAQmxSetTimingAttribute(Pointer taskHandle, int attribute, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxResetTimingAttribute(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 2637</i>
	 */
	// int DAQmxResetTimingAttribute(Pointer taskHandle, int attribute);

	/**
	 * Original signature : <code>int32 DAQmxGetTimingAttributeEx(TaskHandle, const char[], int32, void*, null)</code><br>
	 * <i>native declaration : line 2639</i>
	 */
	// int DAQmxGetTimingAttributeEx(Pointer taskHandle, byte deviceNames[], int attribute, Pointer value, Object... varArgs1);
	/**

	/**
	 * Original signature : <code>int32 DAQmxSetTimingAttributeEx(TaskHandle, const char[], int32, null)</code><br>
	 * <i>native declaration : line 2640</i>
	 */
	// int DAQmxSetTimingAttributeEx(Pointer taskHandle, byte deviceNames[], int attribute, Object... varArgs1);

	/**
	 * Original signature : <code>int32 DAQmxResetTimingAttributeEx(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 2641</i>
	 */
	// int DAQmxResetTimingAttributeEx(Pointer taskHandle, byte deviceNames[], int attribute);
	/**
	 * /<br>
	 * Original signature : <code>int32 DAQmxDisableStartTrig(TaskHandle)</code><br>
	 * <i>native declaration : line 2649</i>
	 */
	// int DAQmxDisableStartTrig(Pointer taskHandle);

	/**
	 * Original signature : <code>int32 DAQmxCfgDigEdgeStartTrig(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 2650</i>
	 */
	// int DAQmxCfgDigEdgeStartTrig(Pointer taskHandle, byte triggerSource[], int triggerEdge);

	/**
	 * Original signature : <code>int32 DAQmxCfgAnlgEdgeStartTrig(TaskHandle, const char[], int32, float64)</code><br>
	 * <i>native declaration : line 2651</i>
	 */
	// int DAQmxCfgAnlgEdgeStartTrig(Pointer taskHandle, byte triggerSource[], int triggerSlope, double triggerLevel);

	/**
	 * Original signature : <code>int32 DAQmxCfgAnlgWindowStartTrig(TaskHandle, const char[], int32, float64, float64)</code><br>
	 * <i>native declaration : line 2652</i>
	 */
	// int DAQmxCfgAnlgWindowStartTrig(Pointer taskHandle, byte triggerSource[], int triggerWhen, double windowTop, double windowBottom);

	/**
	 * Original signature : <code>int32 DAQmxCfgDigPatternStartTrig(TaskHandle, const char[], const char[], int32)</code><br>
	 * <i>native declaration : line 2653</i>
	 */
	// int DAQmxCfgDigPatternStartTrig(Pointer taskHandle, byte triggerSource[], byte triggerPattern[], int triggerWhen);
	/**
	 * Original signature : <code>int32 DAQmxDisableRefTrig(TaskHandle)</code><br>
	 * <i>native declaration : line 2655</i>
	 */
	// int DAQmxDisableRefTrig(Pointer taskHandle);

	/**
	 * Original signature : <code>int32 DAQmxCfgDigEdgeRefTrig(TaskHandle, const char[], int32, uInt32)</code><br>
	 * <i>native declaration : line 2656</i>
	 */
	// int DAQmxCfgDigEdgeRefTrig(Pointer taskHandle, byte triggerSource[], int triggerEdge, NativeLong pretriggerSamples);

	/**
	 * Original signature : <code>int32 DAQmxCfgAnlgEdgeRefTrig(TaskHandle, const char[], int32, float64, uInt32)</code><br>
	 * <i>native declaration : line 2657</i>
	 */
	// int DAQmxCfgAnlgEdgeRefTrig(Pointer taskHandle, byte triggerSource[], int triggerSlope, double triggerLevel, NativeLong pretriggerSamples);

	/**
	 * Original signature : <code>int32 DAQmxCfgAnlgWindowRefTrig(TaskHandle, const char[], int32, float64, float64, uInt32)</code><br>
	 * <i>native declaration : line 2658</i>
	 */
	// int DAQmxCfgAnlgWindowRefTrig(Pointer taskHandle, byte triggerSource[], int triggerWhen, double windowTop, double windowBottom, NativeLong pretriggerSamples);

	/**
	 * Original signature : <code>int32 DAQmxCfgDigPatternRefTrig(TaskHandle, const char[], const char[], int32, uInt32)</code><br>
	 * <i>native declaration : line 2659</i>
	 */
	// int DAQmxCfgDigPatternRefTrig(Pointer taskHandle, byte triggerSource[], byte triggerPattern[], int triggerWhen, NativeLong pretriggerSamples);
	/**
	 * Original signature : <code>int32 DAQmxDisableAdvTrig(TaskHandle)</code><br>
	 * <i>native declaration : line 2661</i>
	 */
	// int DAQmxDisableAdvTrig(Pointer taskHandle);

	/**
	 * Original signature : <code>int32 DAQmxCfgDigEdgeAdvTrig(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 2662</i>
	 */
	// int DAQmxCfgDigEdgeAdvTrig(Pointer taskHandle, byte triggerSource[], int triggerEdge);
	/**
	 * Original signature : <code>int32 DAQmxGetTrigAttribute(TaskHandle, int32, void*, null)</code><br>
	 * <i>native declaration : line 2664</i>
	 */
	// int DAQmxGetTrigAttribute(Pointer taskHandle, int attribute, Pointer value, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxSetTrigAttribute(TaskHandle, int32, null)</code><br>
	 * <i>native declaration : line 2665</i>
	 */
	// int DAQmxSetTrigAttribute(Pointer taskHandle, int attribute, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxResetTrigAttribute(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 2666</i>
	 */
	// int DAQmxResetTrigAttribute(Pointer taskHandle, int attribute);
	/**
	 * Original signature : <code>int32 DAQmxSendSoftwareTrigger(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 2668</i>
	 */
	// int DAQmxSendSoftwareTrigger(Pointer taskHandle, int triggerID);

        /**
	 * /<br>
	 * Original signature : <code>int32 DAQmxReadAnalogF64(TaskHandle, int32, float64, bool32, float64[], uInt32, int32*, bool32*)</code><br>
	 * <i>native declaration : line 2676</i>
	 */
	int DAQmxReadAnalogF64(Pointer taskHandle, int numSampsPerChan, double timeout, NativeLong fillMode, DoubleBuffer readArray, NativeLong arraySizeInSamps, IntBuffer sampsPerChanRead, NativeLongByReference reserved);

	/**
	 * Original signature : <code>int32 DAQmxReadAnalogScalarF64(TaskHandle, float64, float64*, bool32*)</code><br>
	 * <i>native declaration : line 2677</i>
	 */
	// int DAQmxReadAnalogScalarF64(Pointer taskHandle, double timeout, DoubleBuffer value, NativeLongByReference reserved);

	/**
	 * Original signature : <code>int32 DAQmxReadBinaryI16(TaskHandle, int32, float64, bool32, int16[], uInt32, int32*, bool32*)</code><br>
	 * <i>native declaration : line 2679</i>
	 */
	// int DAQmxReadBinaryI16(Pointer taskHandle, int numSampsPerChan, double timeout, NativeLong fillMode, ShortBuffer readArray, NativeLong arraySizeInSamps, IntBuffer sampsPerChanRead, NativeLongByReference reserved);

	/**
	 * Original signature : <code>int32 DAQmxReadBinaryU16(TaskHandle, int32, float64, bool32, uInt16[], uInt32, int32*, bool32*)</code><br>
	 * <i>native declaration : line 2681</i>
	 */
	// int DAQmxReadBinaryU16(Pointer taskHandle, int numSampsPerChan, double timeout, NativeLong fillMode, ShortBuffer readArray, NativeLong arraySizeInSamps, IntBuffer sampsPerChanRead, NativeLongByReference reserved);

	/**
	 * Original signature : <code>int32 DAQmxReadBinaryI32(TaskHandle, int32, float64, bool32, int32[], uInt32, int32*, bool32*)</code><br>
	 * <i>native declaration : line 2683</i>
	 */
	// int DAQmxReadBinaryI32(Pointer taskHandle, int numSampsPerChan, double timeout, NativeLong fillMode, IntBuffer readArray, NativeLong arraySizeInSamps, IntBuffer sampsPerChanRead, NativeLongByReference reserved);

	/**
	 * Original signature : <code>int32 DAQmxReadBinaryU32(TaskHandle, int32, float64, bool32, uInt32[], uInt32, int32*, bool32*)</code><br>
	 * <i>native declaration : line 2685</i>
	 */
	// int DAQmxReadBinaryU32(Pointer taskHandle, int numSampsPerChan, double timeout, NativeLong fillMode, NativeLongByReference readArray, NativeLong arraySizeInSamps, IntBuffer sampsPerChanRead, NativeLongByReference reserved);

	/**
	 * Original signature : <code>int32 DAQmxReadDigitalU8(TaskHandle, int32, float64, bool32, uInt8[], uInt32, int32*, bool32*)</code><br>
	 * <i>native declaration : line 2687</i>
	 */
	// int DAQmxReadDigitalU8(Pointer taskHandle, int numSampsPerChan, double timeout, NativeLong fillMode, ByteBuffer readArray, NativeLong arraySizeInSamps, IntBuffer sampsPerChanRead, NativeLongByReference reserved);

	/**
	 * Original signature : <code>int32 DAQmxReadDigitalU16(TaskHandle, int32, float64, bool32, uInt16[], uInt32, int32*, bool32*)</code><br>
	 * <i>native declaration : line 2688</i>
	 */
	// int DAQmxReadDigitalU16(Pointer taskHandle, int numSampsPerChan, double timeout, NativeLong fillMode, ShortBuffer readArray, NativeLong arraySizeInSamps, IntBuffer sampsPerChanRead, NativeLongByReference reserved);

	/**
	 * Original signature : <code>int32 DAQmxReadDigitalU32(TaskHandle, int32, float64, bool32, uInt32[], uInt32, int32*, bool32*)</code><br>
	 * <i>native declaration : line 2689</i>
	 */
	// int DAQmxReadDigitalU32(Pointer taskHandle, int numSampsPerChan, double timeout, NativeLong fillMode, NativeLongByReference readArray, NativeLong arraySizeInSamps, IntBuffer sampsPerChanRead, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxReadDigitalScalarU32(TaskHandle, float64, uInt32*, bool32*)</code><br>
	 * <i>native declaration : line 2690</i>
	 */
	// int DAQmxReadDigitalScalarU32(Pointer taskHandle, double timeout, NativeLongByReference value, NativeLongByReference reserved);

	/**
	 * Original signature : <code>int32 DAQmxReadDigitalLines(TaskHandle, int32, float64, bool32, uInt8[], uInt32, int32*, int32*, bool32*)</code><br>
	 * <i>native declaration : line 2691</i>
	 */
	// int DAQmxReadDigitalLines(Pointer taskHandle, int numSampsPerChan, double timeout, NativeLong fillMode, ByteBuffer readArray, NativeLong arraySizeInBytes, IntBuffer sampsPerChanRead, IntBuffer numBytesPerSamp, NativeLongByReference reserved);

	/**
	 * Original signature : <code>int32 DAQmxReadCounterF64(TaskHandle, int32, float64, float64[], uInt32, int32*, bool32*)</code><br>
	 * <i>native declaration : line 2693</i>
	 */
	// int DAQmxReadCounterF64(Pointer taskHandle, int numSampsPerChan, double timeout, DoubleBuffer readArray, NativeLong arraySizeInSamps, IntBuffer sampsPerChanRead, NativeLongByReference reserved);

	/**
	 * Original signature : <code>int32 DAQmxReadCounterU32(TaskHandle, int32, float64, uInt32[], uInt32, int32*, bool32*)</code><br>
	 * <i>native declaration : line 2694</i>
	 */
	// int DAQmxReadCounterU32(Pointer taskHandle, int numSampsPerChan, double timeout, NativeLongByReference readArray, NativeLong arraySizeInSamps, IntBuffer sampsPerChanRead, NativeLongByReference reserved);

	/**
	 * Original signature : <code>int32 DAQmxReadCounterF64Ex(TaskHandle, int32, float64, bool32, float64[], uInt32, int32*, bool32*)</code><br>
	 * <i>native declaration : line 2695</i>
	 */
	// int DAQmxReadCounterF64Ex(Pointer taskHandle, int numSampsPerChan, double timeout, NativeLong fillMode, DoubleBuffer readArray, NativeLong arraySizeInSamps, IntBuffer sampsPerChanRead, NativeLongByReference reserved);

	/**
	 * Original signature : <code>int32 DAQmxReadCounterU32Ex(TaskHandle, int32, float64, bool32, uInt32[], uInt32, int32*, bool32*)</code><br>
	 * <i>native declaration : line 2696</i>
	 */
	// int DAQmxReadCounterU32Ex(Pointer taskHandle, int numSampsPerChan, double timeout, NativeLong fillMode, NativeLongByReference readArray, NativeLong arraySizeInSamps, IntBuffer sampsPerChanRead, NativeLongByReference reserved);

	/**
	 * Original signature : <code>int32 DAQmxReadCounterScalarF64(TaskHandle, float64, float64*, bool32*)</code><br>
	 * <i>native declaration : line 2697</i>
	 */
	// int DAQmxReadCounterScalarF64(Pointer taskHandle, double timeout, DoubleBuffer value, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxReadCounterScalarU32(TaskHandle, float64, uInt32*, bool32*)</code><br>
	 * <i>native declaration : line 2698</i>
	 */
	// int DAQmxReadCounterScalarU32(Pointer taskHandle, double timeout, NativeLongByReference value, NativeLongByReference reserved);

	/**
	 * Original signature : <code>int32 DAQmxReadCtrFreq(TaskHandle, int32, float64, bool32, float64[], float64[], uInt32, int32*, bool32*)</code><br>
	 * <i>native declaration : line 2702</i>
	 */
	// int DAQmxReadCtrFreq(Pointer taskHandle, int numSampsPerChan, double timeout, NativeLong interleaved, DoubleBuffer readArrayFrequency, DoubleBuffer readArrayDutyCycle, NativeLong arraySizeInSamps, IntBuffer sampsPerChanRead, NativeLongByReference reserved);

	/**
	 * Original signature : <code>int32 DAQmxReadCtrTime(TaskHandle, int32, float64, bool32, float64[], float64[], uInt32, int32*, bool32*)</code><br>
	 * <i>native declaration : line 2703</i>
	 */
	// int DAQmxReadCtrTime(Pointer taskHandle, int numSampsPerChan, double timeout, NativeLong interleaved, DoubleBuffer readArrayHighTime, DoubleBuffer readArrayLowTime, NativeLong arraySizeInSamps, IntBuffer sampsPerChanRead, NativeLongByReference reserved);

	/**
	 * Original signature : <code>int32 DAQmxReadCtrTicks(TaskHandle, int32, float64, bool32, uInt32[], uInt32[], uInt32, int32*, bool32*)</code><br>
	 * <i>native declaration : line 2704</i>
	 */
	// int DAQmxReadCtrTicks(Pointer taskHandle, int numSampsPerChan, double timeout, NativeLong interleaved, NativeLongByReference readArrayHighTicks, NativeLongByReference readArrayLowTicks, NativeLong arraySizeInSamps, IntBuffer sampsPerChanRead, NativeLongByReference reserved);

	/**
	 * Original signature : <code>int32 DAQmxReadCtrFreqScalar(TaskHandle, float64, float64*, float64*, bool32*)</code><br>
	 * <i>native declaration : line 2706</i>
	 */
	// int DAQmxReadCtrFreqScalar(Pointer taskHandle, double timeout, DoubleBuffer frequency, DoubleBuffer dutyCycle, NativeLongByReference reserved);

	/**
	 * Original signature : <code>int32 DAQmxReadCtrTimeScalar(TaskHandle, float64, float64*, float64*, bool32*)</code><br>
	 * <i>native declaration : line 2707</i>
	 */
	// int DAQmxReadCtrTimeScalar(Pointer taskHandle, double timeout, DoubleBuffer highTime, DoubleBuffer lowTime, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxReadCtrTicksScalar(TaskHandle, float64, uInt32*, uInt32*, bool32*)</code><br>
	 * <i>native declaration : line 2708</i>
	 */
	// int DAQmxReadCtrTicksScalar(Pointer taskHandle, double timeout, NativeLongByReference highTicks, NativeLongByReference lowTicks, NativeLongByReference reserved);

	/**
	 * Original signature : <code>int32 DAQmxReadRaw(TaskHandle, int32, float64, void*, uInt32, int32*, int32*, bool32*)</code><br>
	 * <i>native declaration : line 2712</i>
	 */
	// int DAQmxReadRaw(Pointer taskHandle, int numSampsPerChan, double timeout, Pointer readArray, NativeLong arraySizeInBytes, IntBuffer sampsRead, IntBuffer numBytesPerSamp, NativeLongByReference reserved);

	/**
	 * Original signature : <code>int32 DAQmxGetNthTaskReadChannel(TaskHandle, uInt32, char[], int32)</code><br>
	 * <i>native declaration : line 2714</i>
	 */
	// int DAQmxGetNthTaskReadChannel(Pointer taskHandle, NativeLong index, ByteBuffer buffer, int bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxGetReadAttribute(TaskHandle, int32, void*, null)</code><br>
	 * <i>native declaration : line 2716</i>
	 */
	// int DAQmxGetReadAttribute(Pointer taskHandle, int attribute, Pointer value, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxSetReadAttribute(TaskHandle, int32, null)</code><br>
	 * <i>native declaration : line 2717</i>
	 */
	// int DAQmxSetReadAttribute(Pointer taskHandle, int attribute, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxResetReadAttribute(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 2718</i>
	 */
	// int DAQmxResetReadAttribute(Pointer taskHandle, int attribute);

	/**
	 * Original signature : <code>int32 DAQmxConfigureLogging(TaskHandle, const char[], int32, const char[], int32)</code><br>
	 * <i>native declaration : line 2720</i>
	 */
	int DAQmxConfigureLogging(Pointer taskHandle, byte filePath[], int loggingMode, byte groupName[], int operation);

	/**
	 * Original signature : <code>int32 DAQmxStartNewFile(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 2721</i>
	 */
	// int DAQmxStartNewFile(Pointer taskHandle, byte filePath[]);

	/**
	 * /<br>
	 * Original signature : <code>int32 DAQmxWriteAnalogF64(TaskHandle, int32, bool32, float64, bool32, const float64[], int32*, bool32*)</code><br>
	 * <i>native declaration : line 2729</i>
	 */
	// int DAQmxWriteAnalogF64(Pointer taskHandle, int numSampsPerChan, NativeLong autoStart, double timeout, NativeLong dataLayout, DoubleBuffer writeArray, IntBuffer sampsPerChanWritten, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxWriteAnalogScalarF64(TaskHandle, bool32, float64, float64, bool32*)</code><br>
	 * <i>native declaration : line 2730</i>
	 */
	// int DAQmxWriteAnalogScalarF64(Pointer taskHandle, NativeLong autoStart, double timeout, double value, NativeLongByReference reserved);

	/**
	 * Original signature : <code>int32 DAQmxWriteBinaryI16(TaskHandle, int32, bool32, float64, bool32, const int16[], int32*, bool32*)</code><br>
	 * <i>native declaration : line 2732</i>
	 */
	// int DAQmxWriteBinaryI16(Pointer taskHandle, int numSampsPerChan, NativeLong autoStart, double timeout, NativeLong dataLayout, short writeArray[], IntBuffer sampsPerChanWritten, NativeLongByReference reserved);

	/**
	 * Original signature : <code>int32 DAQmxWriteBinaryU16(TaskHandle, int32, bool32, float64, bool32, const uInt16[], int32*, bool32*)</code><br>
	 * <i>native declaration : line 2733</i>
	 */
	// int DAQmxWriteBinaryU16(Pointer taskHandle, int numSampsPerChan, NativeLong autoStart, double timeout, NativeLong dataLayout, ShortBuffer writeArray, IntBuffer sampsPerChanWritten, NativeLongByReference reserved);

	/**
	 * Original signature : <code>int32 DAQmxWriteBinaryI32(TaskHandle, int32, bool32, float64, bool32, const int32[], int32*, bool32*)</code><br>
	 * <i>native declaration : line 2734</i>
	 */
	// int DAQmxWriteBinaryI32(Pointer taskHandle, int numSampsPerChan, NativeLong autoStart, double timeout, NativeLong dataLayout, int writeArray[], IntBuffer sampsPerChanWritten, NativeLongByReference reserved);

	/**
	 * Original signature : <code>int32 DAQmxWriteBinaryU32(TaskHandle, int32, bool32, float64, bool32, const uInt32[], int32*, bool32*)</code><br>
	 * <i>native declaration : line 2735</i>
	 */
	// int DAQmxWriteBinaryU32(Pointer taskHandle, int numSampsPerChan, NativeLong autoStart, double timeout, NativeLong dataLayout, NativeLongByReference writeArray, IntBuffer sampsPerChanWritten, NativeLongByReference reserved);

	/**
	 * Original signature : <code>int32 DAQmxWriteDigitalU8(TaskHandle, int32, bool32, float64, bool32, const uInt8[], int32*, bool32*)</code><br>
	 * <i>native declaration : line 2737</i>
	 */
	// int DAQmxWriteDigitalU8(Pointer taskHandle, int numSampsPerChan, NativeLong autoStart, double timeout, NativeLong dataLayout, ByteBuffer writeArray, IntBuffer sampsPerChanWritten, NativeLongByReference reserved);

	/**
	 * Original signature : <code>int32 DAQmxWriteDigitalU16(TaskHandle, int32, bool32, float64, bool32, const uInt16[], int32*, bool32*)</code><br>
	 * <i>native declaration : line 2738</i>
	 */
	// int DAQmxWriteDigitalU16(Pointer taskHandle, int numSampsPerChan, NativeLong autoStart, double timeout, NativeLong dataLayout, ShortBuffer writeArray, IntBuffer sampsPerChanWritten, NativeLongByReference reserved);

	/**
	 * Original signature : <code>int32 DAQmxWriteDigitalU32(TaskHandle, int32, bool32, float64, bool32, const uInt32[], int32*, bool32*)</code><br>
	 * <i>native declaration : line 2739</i>
	 */
	// int DAQmxWriteDigitalU32(Pointer taskHandle, int numSampsPerChan, NativeLong autoStart, double timeout, NativeLong dataLayout, NativeLongByReference writeArray, IntBuffer sampsPerChanWritten, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxWriteDigitalScalarU32(TaskHandle, bool32, float64, uInt32, bool32*)</code><br>
	 * <i>native declaration : line 2740</i>
	 */
	// int DAQmxWriteDigitalScalarU32(Pointer taskHandle, NativeLong autoStart, double timeout, NativeLong value, NativeLongByReference reserved);

	/**
	 * Original signature : <code>int32 DAQmxWriteDigitalLines(TaskHandle, int32, bool32, float64, bool32, const uInt8[], int32*, bool32*)</code><br>
	 * <i>native declaration : line 2741</i>
	 */
	// int DAQmxWriteDigitalLines(Pointer taskHandle, int numSampsPerChan, NativeLong autoStart, double timeout, NativeLong dataLayout, ByteBuffer writeArray, IntBuffer sampsPerChanWritten, NativeLongByReference reserved);

	/**
	 * Original signature : <code>int32 DAQmxWriteCtrFreq(TaskHandle, int32, bool32, float64, bool32, const float64[], const float64[], int32*, bool32*)</code><br>
	 * <i>native declaration : line 2743</i>
	 */
	// int DAQmxWriteCtrFreq(Pointer taskHandle, int numSampsPerChan, NativeLong autoStart, double timeout, NativeLong dataLayout, DoubleBuffer frequency, DoubleBuffer dutyCycle, IntBuffer numSampsPerChanWritten, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxWriteCtrFreqScalar(TaskHandle, bool32, float64, float64, float64, bool32*)</code><br>
	 * <i>native declaration : line 2744</i>
	 */
	// int DAQmxWriteCtrFreqScalar(Pointer taskHandle, NativeLong autoStart, double timeout, double frequency, double dutyCycle, NativeLongByReference reserved);

	/**
	 * Original signature : <code>int32 DAQmxWriteCtrTime(TaskHandle, int32, bool32, float64, bool32, const float64[], const float64[], int32*, bool32*)</code><br>
	 * <i>native declaration : line 2745</i>
	 */
	// int DAQmxWriteCtrTime(Pointer taskHandle, int numSampsPerChan, NativeLong autoStart, double timeout, NativeLong dataLayout, DoubleBuffer highTime, DoubleBuffer lowTime, IntBuffer numSampsPerChanWritten, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxWriteCtrTimeScalar(TaskHandle, bool32, float64, float64, float64, bool32*)</code><br>
	 * <i>native declaration : line 2746</i>
	 */
	// int DAQmxWriteCtrTimeScalar(Pointer taskHandle, NativeLong autoStart, double timeout, double highTime, double lowTime, NativeLongByReference reserved);

	/**
	 * Original signature : <code>int32 DAQmxWriteCtrTicks(TaskHandle, int32, bool32, float64, bool32, const uInt32[], const uInt32[], int32*, bool32*)</code><br>
	 * <i>native declaration : line 2747</i>
	 */
	// int DAQmxWriteCtrTicks(Pointer taskHandle, int numSampsPerChan, NativeLong autoStart, double timeout, NativeLong dataLayout, NativeLongByReference highTicks, NativeLongByReference lowTicks, IntBuffer numSampsPerChanWritten, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxWriteCtrTicksScalar(TaskHandle, bool32, float64, uInt32, uInt32, bool32*)</code><br>
	 * <i>native declaration : line 2748</i>
	 */
	// int DAQmxWriteCtrTicksScalar(Pointer taskHandle, NativeLong autoStart, double timeout, NativeLong highTicks, NativeLong lowTicks, NativeLongByReference reserved);

	/**
	 * Original signature : <code>int32 DAQmxWriteRaw(TaskHandle, int32, bool32, float64, const void*, int32*, bool32*)</code><br>
	 * <i>native declaration : line 2750</i>
	 */
	// int DAQmxWriteRaw(Pointer taskHandle, int numSamps, NativeLong autoStart, double timeout, Pointer writeArray, IntBuffer sampsPerChanWritten, NativeLongByReference reserved);
	/**
	 * Original signature : <code>int32 DAQmxGetWriteAttribute(TaskHandle, int32, void*, null)</code><br>
	 * <i>native declaration : line 2752</i>
	 */
	// int DAQmxGetWriteAttribute(Pointer taskHandle, int attribute, Pointer value, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxSetWriteAttribute(TaskHandle, int32, null)</code><br>
	 * <i>native declaration : line 2753</i>
	 */
	// int DAQmxSetWriteAttribute(Pointer taskHandle, int attribute, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxResetWriteAttribute(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 2754</i>
	 */
	// int DAQmxResetWriteAttribute(Pointer taskHandle, int attribute);

	/**
	 * For possible values for parameter signalID see value set Signal in Values section above.<br>
	 * Original signature : <code>int32 DAQmxExportSignal(TaskHandle, int32, const char[])</code><br>
	 * <i>native declaration : line 2765</i>
	 */
	// int DAQmxExportSignal(Pointer taskHandle, int signalID, byte outputTerminal[]);
	/**
	 * Original signature : <code>int32 DAQmxGetExportedSignalAttribute(TaskHandle, int32, void*, null)</code><br>
	 * <i>native declaration : line 2767</i>
	 */
	// int DAQmxGetExportedSignalAttribute(Pointer taskHandle, int attribute, Pointer value, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedSignalAttribute(TaskHandle, int32, null)</code><br>
	 * <i>native declaration : line 2768</i>
	 */
	// int DAQmxSetExportedSignalAttribute(Pointer taskHandle, int attribute, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedSignalAttribute(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 2769</i>
	 */
	// int DAQmxResetExportedSignalAttribute(Pointer taskHandle, int attribute);

	/**
	 * /<br>
	 * Original signature : <code>int32 DAQmxCreateLinScale(const char[], float64, float64, int32, const char[])</code><br>
	 * <i>native declaration : line 2777</i>
	 */
	int DAQmxCreateLinScale(byte name[], double slope, double yIntercept, int preScaledUnits, byte scaledUnits[]);

	/**
	 * Original signature : <code>int32 DAQmxCreateMapScale(const char[], float64, float64, float64, float64, int32, const char[])</code><br>
	 * <i>native declaration : line 2778</i>
	 */
	// int DAQmxCreateMapScale(byte name[], double prescaledMin, double prescaledMax, double scaledMin, double scaledMax, int preScaledUnits, byte scaledUnits[]);

	/**
	 * Original signature : <code>int32 DAQmxCreatePolynomialScale(const char[], const float64[], uInt32, const float64[], uInt32, int32, const char[])</code><br>
	 * <i>native declaration : line 2779</i>
	 */
	// int DAQmxCreatePolynomialScale(byte name[], DoubleBuffer forwardCoeffs, NativeLong numForwardCoeffsIn, DoubleBuffer reverseCoeffs, NativeLong numReverseCoeffsIn, int preScaledUnits, byte scaledUnits[]);

	/**
	 * Original signature : <code>int32 DAQmxCreateTableScale(const char[], const float64[], uInt32, const float64[], uInt32, int32, const char[])</code><br>
	 * <i>native declaration : line 2780</i>
	 */
	// int DAQmxCreateTableScale(byte name[], DoubleBuffer prescaledVals, NativeLong numPrescaledValsIn, DoubleBuffer scaledVals, NativeLong numScaledValsIn, int preScaledUnits, byte scaledUnits[]);

	/**
	 * Original signature : <code>int32 DAQmxCalculateReversePolyCoeff(const float64[], uInt32, float64, float64, int32, int32, float64[])</code><br>
	 * <i>native declaration : line 2781</i>
	 */
	// int DAQmxCalculateReversePolyCoeff(DoubleBuffer forwardCoeffs, NativeLong numForwardCoeffsIn, double minValX, double maxValX, int numPointsToCompute, int reversePolyOrder, DoubleBuffer reverseCoeffs);

	/**
	 * Original signature : <code>int32 DAQmxGetScaleAttribute(const char[], int32, void*, null)</code><br>
	 * <i>native declaration : line 2783</i>
	 */
	// int DAQmxGetScaleAttribute(byte scaleName[], int attribute, Pointer value, Object... varArgs1);

	/**
	 * Original signature : <code>int32 DAQmxSetScaleAttribute(const char[], int32, null)</code><br>
	 * <i>native declaration : line 2784</i>
	 */
	// int DAQmxSetScaleAttribute(byte scaleName[], int attribute, Object... varArgs1);
	/**
	 * /<br>
	 * Original signature : <code>int32 DAQmxCfgInputBuffer(TaskHandle, uInt32)</code><br>
	 * <i>native declaration : line 2792</i>
	 */
	// int DAQmxCfgInputBuffer(Pointer taskHandle, NativeLong numSampsPerChan);
	/**
	 * Original signature : <code>int32 DAQmxCfgOutputBuffer(TaskHandle, uInt32)</code><br>
	 * <i>native declaration : line 2793</i>
	 */
	// int DAQmxCfgOutputBuffer(Pointer taskHandle, NativeLong numSampsPerChan);
	/**
	 * Original signature : <code>int32 DAQmxGetBufferAttribute(TaskHandle, int32, void*)</code><br>
	 * <i>native declaration : line 2795</i>
	 */
	// int DAQmxGetBufferAttribute(Pointer taskHandle, int attribute, Pointer value);
	/**
	 * Original signature : <code>int32 DAQmxSetBufferAttribute(TaskHandle, int32, null)</code><br>
	 * <i>native declaration : line 2796</i>
	 */
	// int DAQmxSetBufferAttribute(Pointer taskHandle, int attribute, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxResetBufferAttribute(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 2797</i>
	 */
	// int DAQmxResetBufferAttribute(Pointer taskHandle, int attribute);

	/**
	 * Use NI-SWITCH for the most up-to-date VIs and functions<br>
	 * Original signature : <code>int32 DAQmxSwitchCreateScanList(const char[], TaskHandle*)</code><br>
	 * <i>native declaration : line 2807</i>
	 */
	// int DAQmxSwitchCreateScanList(byte scanList[], PointerByReference taskHandle);

	/**
	 * Original signature : <code>int32 DAQmxSwitchConnect(const char[], const char[], bool32)</code><br>
	 * <i>native declaration : line 2809</i>
	 */
	// int DAQmxSwitchConnect(byte switchChannel1[], byte switchChannel2[], NativeLong waitForSettling);

	/**
	 * Original signature : <code>int32 DAQmxSwitchConnectMulti(const char[], bool32)</code><br>
	 * <i>native declaration : line 2810</i>
	 */
	// int DAQmxSwitchConnectMulti(byte connectionList[], NativeLong waitForSettling);

	/**
	 * Original signature : <code>int32 DAQmxSwitchDisconnect(const char[], const char[], bool32)</code><br>
	 * <i>native declaration : line 2811</i>
	 */
	// int DAQmxSwitchDisconnect(byte switchChannel1[], byte switchChannel2[], NativeLong waitForSettling);

	/**
	 * Original signature : <code>int32 DAQmxSwitchDisconnectMulti(const char[], bool32)</code><br>
	 * <i>native declaration : line 2812</i>
	 */
	// int DAQmxSwitchDisconnectMulti(byte connectionList[], NativeLong waitForSettling);

	/**
	 * Original signature : <code>int32 DAQmxSwitchDisconnectAll(const char[], bool32)</code><br>
	 * <i>native declaration : line 2813</i>
	 */
	// int DAQmxSwitchDisconnectAll(byte deviceName[], NativeLong waitForSettling);

	/**
	 * Switch Topologies<br>
	 * Original signature : <code>int32 DAQmxSwitchSetTopologyAndReset(const char[], const char[])</code><br>
	 * <i>native declaration : line 3002</i>
	 */
	// int DAQmxSwitchSetTopologyAndReset(byte deviceName[], byte newTopology[]);

	/**
	 * For possible values of the output parameter pathStatus see value set SwitchPathType in Values section above.<br>
	 * Original signature : <code>int32 DAQmxSwitchFindPath(const char[], const char[], char[], uInt32, int32*)</code><br>
	 * <i>native declaration : line 3005</i>
	 */
	// int DAQmxSwitchFindPath(byte switchChannel1[], byte switchChannel2[], ByteBuffer path, NativeLong pathBufferSize, IntBuffer pathStatus);

	/**
	 * Original signature : <code>int32 DAQmxSwitchOpenRelays(const char[], bool32)</code><br>
	 * <i>native declaration : line 3007</i>
	 */
	// int DAQmxSwitchOpenRelays(byte relayList[], NativeLong waitForSettling);

	/**
	 * Original signature : <code>int32 DAQmxSwitchCloseRelays(const char[], bool32)</code><br>
	 * <i>native declaration : line 3008</i>
	 */
	// int DAQmxSwitchCloseRelays(byte relayList[], NativeLong waitForSettling);

	/**
	 * Original signature : <code>int32 DAQmxSwitchGetSingleRelayCount(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 3010</i>
	 */
	// int DAQmxSwitchGetSingleRelayCount(byte relayName[], NativeLongByReference count);

	/**
	 * Original signature : <code>int32 DAQmxSwitchGetMultiRelayCount(const char[], uInt32[], uInt32, uInt32*)</code><br>
	 * <i>native declaration : line 3011</i>
	 */
	// int DAQmxSwitchGetMultiRelayCount(byte relayList[], NativeLongByReference count, NativeLong countArraySize, NativeLongByReference numRelayCountsRead);

	/**
	 * For possible values of the output parameter relayPos see value set RelayPos in Values section above.<br>
	 * Original signature : <code>int32 DAQmxSwitchGetSingleRelayPos(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 3013</i>
	 */
	// int DAQmxSwitchGetSingleRelayPos(byte relayName[], NativeLongByReference relayPos);

	/**
	 * For possible values in the output array relayPos see value set RelayPos in Values section above.<br>
	 * Original signature : <code>int32 DAQmxSwitchGetMultiRelayPos(const char[], uInt32[], uInt32, uInt32*)</code><br>
	 * <i>native declaration : line 3015</i>
	 */
	// int DAQmxSwitchGetMultiRelayPos(byte relayList[], NativeLongByReference relayPos, NativeLong relayPosArraySize, NativeLongByReference numRelayPossRead);

	/**
	 * Original signature : <code>int32 DAQmxSwitchWaitForSettling(const char[])</code><br>
	 * <i>native declaration : line 3017</i>
	 */
	// int DAQmxSwitchWaitForSettling(byte deviceName[]);

	/**
	 * Original signature : <code>int32 DAQmxGetSwitchChanAttribute(const char[], int32, void*)</code><br>
	 * <i>native declaration : line 3019</i>
	 */
	// int DAQmxGetSwitchChanAttribute(byte switchChannelName[], int attribute, Pointer value);

	/**
	 * Original signature : <code>int32 DAQmxSetSwitchChanAttribute(const char[], int32, null)</code><br>
	 * <i>native declaration : line 3020</i>
	 */
	// int DAQmxSetSwitchChanAttribute(byte switchChannelName[], int attribute, Object... varArgs1);

	/**
	 * Original signature : <code>int32 DAQmxGetSwitchDeviceAttribute(const char[], int32, void*, null)</code><br>
	 * <i>native declaration : line 3022</i>
	 */
	// int DAQmxGetSwitchDeviceAttribute(byte deviceName[], int attribute, Pointer value, Object... varArgs1);

	/**
	 * Original signature : <code>int32 DAQmxSetSwitchDeviceAttribute(const char[], int32, null)</code><br>
	 * <i>native declaration : line 3023</i>
	 */
	// int DAQmxSetSwitchDeviceAttribute(byte deviceName[], int attribute, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxGetSwitchScanAttribute(TaskHandle, int32, void*)</code><br>
	 * <i>native declaration : line 3025</i>
	 */
	// int DAQmxGetSwitchScanAttribute(Pointer taskHandle, int attribute, Pointer value);
	/**
	 * Original signature : <code>int32 DAQmxSetSwitchScanAttribute(TaskHandle, int32, null)</code><br>
	 * <i>native declaration : line 3026</i>
	 */
	// int DAQmxSetSwitchScanAttribute(Pointer taskHandle, int attribute, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxResetSwitchScanAttribute(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 3027</i>
	 */
	// int DAQmxResetSwitchScanAttribute(Pointer taskHandle, int attribute);

	/**
	 * /<br>
	 * Original signature : <code>int32 DAQmxConnectTerms(const char[], const char[], int32)</code><br>
	 * <i>native declaration : line 3036</i>
	 */
	// int DAQmxConnectTerms(byte sourceTerminal[], byte destinationTerminal[], int signalModifiers);

	/**
	 * Original signature : <code>int32 DAQmxDisconnectTerms(const char[], const char[])</code><br>
	 * <i>native declaration : line 3037</i>
	 */
	// int DAQmxDisconnectTerms(byte sourceTerminal[], byte destinationTerminal[]);

	/**
	 * Original signature : <code>int32 DAQmxTristateOutputTerm(const char[])</code><br>
	 * <i>native declaration : line 3038</i>
	 */
	// int DAQmxTristateOutputTerm(byte outputTerminal[]);

	/**
	 * /<br>
	 * Original signature : <code>int32 DAQmxResetDevice(const char[])</code><br>
	 * <i>native declaration : line 3046</i>
	 */
	// int DAQmxResetDevice(byte deviceName[]);

	/**
	 * Original signature : <code>int32 DAQmxSelfTestDevice(const char[])</code><br>
	 * <i>native declaration : line 3048</i>
	 */
	// int DAQmxSelfTestDevice(byte deviceName[]);

	/**
	 * Original signature : <code>int32 DAQmxGetDeviceAttribute(const char[], int32, void*, null)</code><br>
	 * <i>native declaration : line 3050</i>
	 */
	// int DAQmxGetDeviceAttribute(byte deviceName[], int attribute, Pointer value, Object... varArgs1);
	/**

	/**
	 * /<br>
	 * Original signature : <code>int32 DAQmxCreateWatchdogTimerTask(const char[], const char[], TaskHandle*, float64, const char[], int32, null)</code><br>
	 * <i>native declaration : line 3057</i>
	 */
	// int DAQmxCreateWatchdogTimerTask(byte deviceName[], byte taskName[], PointerByReference taskHandle, double timeout, byte lines[], int expState, Object... varArgs1);

	/**
	 * Original signature : <code>int32 DAQmxCreateWatchdogTimerTaskEx(const char[], const char[], TaskHandle*, float64)</code><br>
	 * <i>native declaration : line 3058</i>
	 */
	// int DAQmxCreateWatchdogTimerTaskEx(byte deviceName[], byte taskName[], PointerByReference taskHandle, double timeout);
	/**
	 * Original signature : <code>int32 DAQmxControlWatchdogTask(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 3059</i>
	 */
	// int DAQmxControlWatchdogTask(Pointer taskHandle, int action);

	/**
	 * Original signature : <code>int32 DAQmxCfgWatchdogAOExpirStates(TaskHandle, const char[], const float64[], const int32[], uInt32)</code><br>
	 * <i>native declaration : line 3061</i>
	 */
	// int DAQmxCfgWatchdogAOExpirStates(Pointer taskHandle, byte channelNames[], DoubleBuffer expirStateArray, int outputTypeArray[], NativeLong arraySize);

	/**
	 * Original signature : <code>int32 DAQmxCfgWatchdogCOExpirStates(TaskHandle, const char[], const int32[], uInt32)</code><br>
	 * <i>native declaration : line 3062</i>
	 */
	// int DAQmxCfgWatchdogCOExpirStates(Pointer taskHandle, byte channelNames[], int expirStateArray[], NativeLong arraySize);

	/**
	 * Original signature : <code>int32 DAQmxCfgWatchdogDOExpirStates(TaskHandle, const char[], const int32[], uInt32)</code><br>
	 * <i>native declaration : line 3063</i>
	 */
	// int DAQmxCfgWatchdogDOExpirStates(Pointer taskHandle, byte channelNames[], int expirStateArray[], NativeLong arraySize);

	/**
	 * Original signature : <code>int32 DAQmxGetWatchdogAttribute(TaskHandle, const char[], int32, void*, null)</code><br>
	 * <i>native declaration : line 3065</i>
	 */
	// int DAQmxGetWatchdogAttribute(Pointer taskHandle, byte lines[], int attribute, Pointer value, Object... varArgs1);

	/**
	 * Original signature : <code>int32 DAQmxSetWatchdogAttribute(TaskHandle, const char[], int32, null)</code><br>
	 * <i>native declaration : line 3066</i>
	 */
	// int DAQmxSetWatchdogAttribute(Pointer taskHandle, byte lines[], int attribute, Object... varArgs1);

	/**
	 * Original signature : <code>int32 DAQmxResetWatchdogAttribute(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3067</i>
	 */
	// int DAQmxResetWatchdogAttribute(Pointer taskHandle, byte lines[], int attribute);

	/**
	 * /<br>
	 * Original signature : <code>int32 DAQmxSelfCal(const char[])</code><br>
	 * <i>native declaration : line 3075</i>
	 */
	// int DAQmxSelfCal(byte deviceName[]);

	/**
	 * Original signature : <code>int32 DAQmxPerformBridgeOffsetNullingCal(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3076</i>
	 */
	// int DAQmxPerformBridgeOffsetNullingCal(Pointer taskHandle, byte channel[]);

	/**
	 * Original signature : <code>int32 DAQmxPerformBridgeOffsetNullingCalEx(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 3077</i>
	 */
	// int DAQmxPerformBridgeOffsetNullingCalEx(Pointer taskHandle, byte channel[], NativeLong skipUnsupportedChannels);

	/**
	 * Original signature : <code>int32 DAQmxPerformThrmcplLeadOffsetNullingCal(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 3078</i>
	 */
	// int DAQmxPerformThrmcplLeadOffsetNullingCal(Pointer taskHandle, byte channel[], NativeLong skipUnsupportedChannels);

	/**
	 * Original signature : <code>int32 DAQmxPerformStrainShuntCalEx(TaskHandle, const char[], float64, int32, int32, int32, bool32)</code><br>
	 * <i>native declaration : line 3081</i>
	 */
	// int DAQmxPerformStrainShuntCalEx(Pointer taskHandle, byte channel[], double shuntResistorValue, int shuntResistorLocation, int shuntResistorSelect, int shuntResistorSource, NativeLong skipUnsupportedChannels);

	/**
	 * Original signature : <code>int32 DAQmxPerformBridgeShuntCalEx(TaskHandle, const char[], float64, int32, int32, int32, float64, bool32)</code><br>
	 * <i>native declaration : line 3084</i>
	 */
	// int DAQmxPerformBridgeShuntCalEx(Pointer taskHandle, byte channel[], double shuntResistorValue, int shuntResistorLocation, int shuntResistorSelect, int shuntResistorSource, double bridgeResistance, NativeLong skipUnsupportedChannels);

	/**
	 * Original signature : <code>int32 DAQmxGetSelfCalLastDateAndTime(const char[], uInt32*, uInt32*, uInt32*, uInt32*, uInt32*)</code><br>
	 * <i>native declaration : line 3085</i>
	 */
	// int DAQmxGetSelfCalLastDateAndTime(byte deviceName[], NativeLongByReference year, NativeLongByReference month, NativeLongByReference day, NativeLongByReference hour, NativeLongByReference minute);

	/**
	 * Original signature : <code>int32 DAQmxGetExtCalLastDateAndTime(const char[], uInt32*, uInt32*, uInt32*, uInt32*, uInt32*)</code><br>
	 * <i>native declaration : line 3086</i>
	 */
	// int DAQmxGetExtCalLastDateAndTime(byte deviceName[], NativeLongByReference year, NativeLongByReference month, NativeLongByReference day, NativeLongByReference hour, NativeLongByReference minute);

	/**
	 * Original signature : <code>int32 DAQmxRestoreLastExtCalConst(const char[])</code><br>
	 * <i>native declaration : line 3087</i>
	 */
	// int DAQmxRestoreLastExtCalConst(byte deviceName[]);
	/**
	 * Original signature : <code>int32 DAQmxESeriesCalAdjust(CalHandle, float64)</code><br>
	 * <i>native declaration : line 3089</i>
	 */
	// int DAQmxESeriesCalAdjust(NativeLong calHandle, double referenceVoltage);

	/**
	 * Original signature : <code>int32 DAQmxMSeriesCalAdjust(CalHandle, float64)</code><br>
	 * <i>native declaration : line 3090</i>
	 */
	// int DAQmxMSeriesCalAdjust(NativeLong calHandle, double referenceVoltage);
	/**
	 * Original signature : <code>int32 DAQmxSSeriesCalAdjust(CalHandle, float64)</code><br>
	 * <i>native declaration : line 3091</i>
	 */
	// int DAQmxSSeriesCalAdjust(NativeLong calHandle, double referenceVoltage);
	/**
	 * Original signature : <code>int32 DAQmxSCBaseboardCalAdjust(CalHandle, float64)</code><br>
	 * <i>native declaration : line 3092</i>
	 */
	// int DAQmxSCBaseboardCalAdjust(NativeLong calHandle, double referenceVoltage);
	/**
	 * Original signature : <code>int32 DAQmxAOSeriesCalAdjust(CalHandle, float64)</code><br>
	 * <i>native declaration : line 3093</i>
	 */
	// int DAQmxAOSeriesCalAdjust(NativeLong calHandle, double referenceVoltage);
	/**
	 * Original signature : <code>int32 DAQmxXSeriesCalAdjust(CalHandle, float64)</code><br>
	 * <i>native declaration : line 3094</i>
	 */
	// int DAQmxXSeriesCalAdjust(NativeLong calHandle, double referenceVoltage);

	/**
	 * Original signature : <code>int32 DAQmxDeviceSupportsCal(const char[], bool32*)</code><br>
	 * <i>native declaration : line 3096</i>
	 */
	// int DAQmxDeviceSupportsCal(byte deviceName[], NativeLongByReference calSupported);

	/**
	 * Original signature : <code>int32 DAQmxGetCalInfoAttribute(const char[], int32, void*, null)</code><br>
	 * <i>native declaration : line 3098</i>
	 */
	// int DAQmxGetCalInfoAttribute(byte deviceName[], int attribute, Pointer value, Object... varArgs1);

	/**
	 * Original signature : <code>int32 DAQmxSetCalInfoAttribute(const char[], int32, null)</code><br>
	 * <i>native declaration : line 3099</i>
	 */
	// int DAQmxSetCalInfoAttribute(byte deviceName[], int attribute, Object... varArgs1);

	/**
	 * Original signature : <code>int32 DAQmxInitExtCal(const char[], const char[], CalHandle*)</code><br>
	 * <i>native declaration : line 3101</i>
	 */
	// int DAQmxInitExtCal(byte deviceName[], byte password[], NativeLongByReference calHandle);
	/**
	 * Original signature : <code>int32 DAQmxCloseExtCal(CalHandle, int32)</code><br>
	 * <i>native declaration : line 3102</i>
	 */
	// int DAQmxCloseExtCal(NativeLong calHandle, int action);

	/**
	 * Original signature : <code>int32 DAQmxChangeExtCalPassword(const char[], const char[], const char[])</code><br>
	 * <i>native declaration : line 3103</i>
	 */
	// int DAQmxChangeExtCalPassword(byte deviceName[], byte password[], byte newPassword[]);
	/**
	 * Original signature : <code>int32 DAQmxDSASetCalTemp(CalHandle, float64)</code><br>
	 * <i>native declaration : line 3105</i>
	 */
	// int DAQmxDSASetCalTemp(NativeLong calHandle, double temperature);
	/**
	 * Original signature : <code>int32 DAQmxAdjustDSAAICal(CalHandle, float64)</code><br>
	 * <i>native declaration : line 3106</i>
	 */
	// int DAQmxAdjustDSAAICal(NativeLong calHandle, double referenceVoltage);
	/**
	 * Original signature : <code>int32 DAQmxAdjustDSAAICalEx(CalHandle, float64, bool32)</code><br>
	 * <i>native declaration : line 3107</i>
	 */
	// int DAQmxAdjustDSAAICalEx(NativeLong calHandle, double referenceVoltage, NativeLong inputsShorted);
	/**
	 * Original signature : <code>int32 DAQmxAdjustDSAAICalWithGainAndCoupling(CalHandle, int32, float64, float64)</code><br>
	 * <i>native declaration : line 3108</i>
	 */
	// int DAQmxAdjustDSAAICalWithGainAndCoupling(NativeLong calHandle, int coupling, double gain, double referenceVoltage);
	/**
	 * Original signature : <code>int32 DAQmxAdjustDSAAOCal(CalHandle, uInt32, float64, float64, float64, float64, float64)</code><br>
	 * <i>native declaration : line 3109</i>
	 */
	// int DAQmxAdjustDSAAOCal(NativeLong calHandle, NativeLong channel, double requestedLowVoltage, double actualLowVoltage, double requestedHighVoltage, double actualHighVoltage, double gainSetting);

	/**
	 * Original signature : <code>int32 DAQmxAdjust4610Cal(CalHandle, const char[], float64, float64)</code><br>
	 * <i>native declaration : line 3110</i>
	 */
	// int DAQmxAdjust4610Cal(NativeLong calHandle, byte channelName[], double gain, double offset);
	/**
	 * Original signature : <code>int32 DAQmxAdjustDSATimebaseCal(CalHandle, float64)</code><br>
	 * <i>native declaration : line 3111</i>
	 */
	// int DAQmxAdjustDSATimebaseCal(NativeLong calHandle, double referenceFrequency);
	/**
	 * Original signature : <code>int32 DAQmxAdjustDSAAOTimebaseCal(CalHandle, float64, bool32*)</code><br>
	 * <i>native declaration : line 3112</i>
	 */
	// int DAQmxAdjustDSAAOTimebaseCal(NativeLong calHandle, double measuredFrequency, NativeLongByReference calComplete);

	/**
	 * Original signature : <code>int32 DAQmxSetupDSAAOTimebaseCal(CalHandle, float64*)</code><br>
	 * <i>native declaration : line 3113</i>
	 */
	// int DAQmxSetupDSAAOTimebaseCal(NativeLong calHandle, DoubleBuffer expectedFrequency);

	/**
	 * Original signature : <code>int32 DAQmxGet4463AdjustPoints(CalHandle, int32, float64, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3114</i>
	 */
	// int DAQmxGet4463AdjustPoints(NativeLong calHandle, int terminalConfig, double gain, DoubleBuffer adjustmentPoints, NativeLong bufferSize);

	/**
	 * Original signature : <code>int32 DAQmxAdjust4463Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3115</i>
	 */
	// int DAQmxAdjust4463Cal(NativeLong calHandle, byte channelNames[], double referenceVoltage);

	/**
	 * Original signature : <code>int32 DAQmxSetup4463Cal(CalHandle, const char[], int32, float64, float64)</code><br>
	 * <i>native declaration : line 3116</i>
	 */
	// int DAQmxSetup4463Cal(NativeLong calHandle, byte channelNames[], int terminalConfig, double gain, double outputVoltage);
	/**
	 * Original signature : <code>int32 DAQmxAdjustTIOTimebaseCal(CalHandle, float64)</code><br>
	 * <i>native declaration : line 3119</i>
	 */
	// int DAQmxAdjustTIOTimebaseCal(NativeLong calHandle, double referenceFrequency);

	/**
	 * Original signature : <code>int32 DAQmxAdjust4204Cal(CalHandle, const char[], float64, bool32, float64)</code><br>
	 * <i>native declaration : line 3121</i>
	 */
	// int DAQmxAdjust4204Cal(NativeLong calHandle, byte channelNames[], double lowPassFreq, NativeLong trackHoldEnabled, double inputVal);

	/**
	 * Original signature : <code>int32 DAQmxAdjust4220Cal(CalHandle, const char[], float64, float64)</code><br>
	 * <i>native declaration : line 3122</i>
	 */
	// int DAQmxAdjust4220Cal(NativeLong calHandle, byte channelNames[], double gain, double inputVal);

	/**
	 * Original signature : <code>int32 DAQmxAdjust4224Cal(CalHandle, const char[], float64, float64)</code><br>
	 * <i>native declaration : line 3123</i>
	 */
	// int DAQmxAdjust4224Cal(NativeLong calHandle, byte channelNames[], double gain, double inputVal);

	/**
	 * Note: This function is obsolete and now always returns zero.<br>
	 * Original signature : <code>int32 DAQmxAdjust4225Cal(CalHandle, const char[], float64, float64)</code><br>
	 * <i>native declaration : line 3127</i>
	 */
	// int DAQmxAdjust4225Cal(NativeLong calHandle, byte channelNames[], double gain, double inputVal);

	/**
	 * Original signature : <code>int32 DAQmxSetup433xCal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3129</i>
	 */
	// int DAQmxSetup433xCal(NativeLong calHandle, byte channelNames[], double excitationVoltage);
	/**
	 * Original signature : <code>int32 DAQmxAdjust433xCal(CalHandle, float64, float64, int32)</code><br>
	 * <i>native declaration : line 3130</i>
	 */
	// int DAQmxAdjust433xCal(NativeLong calHandle, double refVoltage, double refExcitation, int shuntLocation);

	/**
	 * Original signature : <code>int32 DAQmxSetup4339Cal(CalHandle, const char[], int32, float64, float64, float64)</code><br>
	 * <i>native declaration : line 3131</i>
	 */
	// int DAQmxSetup4339Cal(NativeLong calHandle, byte channelNames[], int calMode, double rangeMax, double rangeMin, double excitationVoltage);
	/**
	 * Original signature : <code>int32 DAQmxAdjust4339Cal(CalHandle, float64)</code><br>
	 * <i>native declaration : line 3132</i>
	 */
	// int DAQmxAdjust4339Cal(NativeLong calHandle, double refVoltage);

	/**
	 * Original signature : <code>int32 DAQmxGet4339CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3133</i>
	 */
	// int DAQmxGet4339CalAdjustPoints(NativeLong calHandle, DoubleBuffer adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxAdjust4300Cal(CalHandle, float64)</code><br>
	 * <i>native declaration : line 3134</i>
	 */
	// int DAQmxAdjust4300Cal(NativeLong calHandle, double refVoltage);

	/**
	 * Original signature : <code>int32 DAQmxSetup4302Cal(CalHandle, const char[], float64, float64)</code><br>
	 * <i>native declaration : line 3135</i>
	 */
	// int DAQmxSetup4302Cal(NativeLong calHandle, byte channelNames[], double rangeMin, double rangeMax);

	/**
	 * Original signature : <code>int32 DAQmxGet4302CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3136</i>
	 */
	// int DAQmxGet4302CalAdjustPoints(NativeLong calHandle, DoubleBuffer adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxAdjust4302Cal(CalHandle, float64)</code><br>
	 * <i>native declaration : line 3137</i>
	 */
	// int DAQmxAdjust4302Cal(NativeLong calHandle, double refVoltage);

	/**
	 * Original signature : <code>int32 DAQmxSetup4303Cal(CalHandle, const char[], float64, float64)</code><br>
	 * <i>native declaration : line 3138</i>
	 */
	// int DAQmxSetup4303Cal(NativeLong calHandle, byte channelNames[], double rangeMin, double rangeMax);

	/**
	 * Original signature : <code>int32 DAQmxGet4303CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3139</i>
	 */
	// int DAQmxGet4303CalAdjustPoints(NativeLong calHandle, DoubleBuffer adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxAdjust4303Cal(CalHandle, float64)</code><br>
	 * <i>native declaration : line 3140</i>
	 */
	// int DAQmxAdjust4303Cal(NativeLong calHandle, double refVoltage);

	/**
	 * Original signature : <code>int32 DAQmxSetup4304Cal(CalHandle, const char[], float64, float64)</code><br>
	 * <i>native declaration : line 3141</i>
	 */
	// int DAQmxSetup4304Cal(NativeLong calHandle, byte channelNames[], double rangeMin, double rangeMax);

	/**
	 * Original signature : <code>int32 DAQmxGet4304CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3142</i>
	 */
	// int DAQmxGet4304CalAdjustPoints(NativeLong calHandle, DoubleBuffer adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxAdjust4304Cal(CalHandle, float64)</code><br>
	 * <i>native declaration : line 3143</i>
	 */
	// int DAQmxAdjust4304Cal(NativeLong calHandle, double refVoltage);

	/**
	 * Original signature : <code>int32 DAQmxSetup4305Cal(CalHandle, const char[], float64, float64)</code><br>
	 * <i>native declaration : line 3144</i>
	 */
	// int DAQmxSetup4305Cal(NativeLong calHandle, byte channelNames[], double rangeMin, double rangeMax);

	/**
	 * Original signature : <code>int32 DAQmxGet4305CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3145</i>
	 */
	// int DAQmxGet4305CalAdjustPoints(NativeLong calHandle, DoubleBuffer adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxAdjust4305Cal(CalHandle, float64)</code><br>
	 * <i>native declaration : line 3146</i>
	 */
	// int DAQmxAdjust4305Cal(NativeLong calHandle, double refVoltage);

	/**
	 * Original signature : <code>int32 DAQmxAdjust4353Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3147</i>
	 */
	// int DAQmxAdjust4353Cal(NativeLong calHandle, byte channelNames[], double refVal);
	/**

	/**
	 * Original signature : <code>int32 DAQmxAdjust4357Cal(CalHandle, const char[], const float64[], int32)</code><br>
	 * <i>native declaration : line 3148</i>
	 */
	// int DAQmxAdjust4357Cal(NativeLong calHandle, byte channelNames[], DoubleBuffer refVals, int numRefVals);

	/**
	 * Original signature : <code>int32 DAQmxSetup4322Cal(CalHandle, const char[], int32, float64)</code><br>
	 * <i>native declaration : line 3149</i>
	 */
	// int DAQmxSetup4322Cal(NativeLong calHandle, byte channelNames[], int outputType, double outputVal);

	/**
	 * Original signature : <code>int32 DAQmxAdjust4322Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3150</i>
	 */
	// int DAQmxAdjust4322Cal(NativeLong calHandle, byte channelNames[], double refVal);

	/**
	 * Original signature : <code>int32 DAQmxGet4322CalAdjustPoints(CalHandle, int32, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3151</i>
	 */
	// int DAQmxGet4322CalAdjustPoints(NativeLong calHandle, int outputType, DoubleBuffer adjustmentPoints, NativeLong bufferSize);

	/**
	 * Original signature : <code>int32 DAQmxConnectSCExpressCalAccChans(CalHandle, const char[], const char[])</code><br>
	 * <i>native declaration : line 3152</i>
	 */
	// int DAQmxConnectSCExpressCalAccChans(NativeLong calHandle, byte channelNames[], byte connection[]);
	/**
	 * Original signature : <code>int32 DAQmxDisconnectSCExpressCalAccChans(CalHandle)</code><br>
	 * <i>native declaration : line 3153</i>
	 */
	// int DAQmxDisconnectSCExpressCalAccChans(NativeLong calHandle);

	/**
	 * Original signature : <code>int32 DAQmxGetPossibleSCExpressCalAccConnections(const char[], const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 3154</i>
	 */
	// int DAQmxGetPossibleSCExpressCalAccConnections(byte deviceName[], byte channelNames[], ByteBuffer connections, NativeLong connectionsBufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetSCExpressCalAccBridgeOutput(CalHandle, float64)</code><br>
	 * <i>native declaration : line 3155</i>
	 */
	// int DAQmxSetSCExpressCalAccBridgeOutput(NativeLong calHandle, double voltsPerVolt);

	/**
	 * Original signature : <code>int32 DAQmxGet9201CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3157</i>
	 */
	// int DAQmxGet9201CalAdjustPoints(NativeLong calHandle, DoubleBuffer adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxCSeriesSetCalTemp(CalHandle, float64)</code><br>
	 * <i>native declaration : line 3158</i>
	 */
	// int DAQmxCSeriesSetCalTemp(NativeLong calHandle, double temperature);

	/**
	 * Original signature : <code>int32 DAQmxAdjust9201Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3159</i>
	 */
	// int DAQmxAdjust9201Cal(NativeLong calHandle, byte channelNames[], double value);

	/**
	 * Original signature : <code>int32 DAQmxGet9203CalAdjustPoints(CalHandle, float64, float64, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3160</i>
	 */
	// int DAQmxGet9203CalAdjustPoints(NativeLong calHandle, double rangeMin, double rangeMax, DoubleBuffer adjustmentPoints, NativeLong bufferSize);

	/**
	 * Original signature : <code>int32 DAQmxAdjust9203GainCal(CalHandle, const char[], float64, float64, float64)</code><br>
	 * <i>native declaration : line 3161</i>
	 */
	// int DAQmxAdjust9203GainCal(NativeLong calHandle, byte channelNames[], double rangeMin, double rangeMax, double value);

	/**
	 * Original signature : <code>int32 DAQmxAdjust9203OffsetCal(CalHandle, const char[], float64, float64)</code><br>
	 * <i>native declaration : line 3162</i>
	 */
	// int DAQmxAdjust9203OffsetCal(NativeLong calHandle, byte channelNames[], double rangeMin, double rangeMax);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9205Cal(CalHandle, float64)</code><br>
	 * <i>native declaration : line 3163</i>
	 */
	// int DAQmxAdjust9205Cal(NativeLong calHandle, double value);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9206Cal(CalHandle, float64)</code><br>
	 * <i>native declaration : line 3164</i>
	 */
	// int DAQmxAdjust9206Cal(NativeLong calHandle, double value);

	/**
	 * Original signature : <code>int32 DAQmxGet9207CalAdjustPoints(CalHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 3165</i>
	 */
	// int DAQmxGet9207CalAdjustPoints(NativeLong calHandle, byte channelNames[], DoubleBuffer adjustmentPoints, NativeLong bufferSize);

	/**
	 * Original signature : <code>int32 DAQmxAdjust9207GainCal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3166</i>
	 */
	// int DAQmxAdjust9207GainCal(NativeLong calHandle, byte channelNames[], double value);

	/**
	 * Original signature : <code>int32 DAQmxAdjust9207OffsetCal(CalHandle, const char[])</code><br>
	 * <i>native declaration : line 3167</i>
	 */
	// int DAQmxAdjust9207OffsetCal(NativeLong calHandle, byte channelNames[]);

	/**
	 * Original signature : <code>int32 DAQmxGet9208CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3168</i>
	 */
	// int DAQmxGet9208CalAdjustPoints(NativeLong calHandle, DoubleBuffer adjustmentPoints, NativeLong bufferSize);

	/**
	 * Original signature : <code>int32 DAQmxAdjust9208GainCal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3169</i>
	 */
	// int DAQmxAdjust9208GainCal(NativeLong calHandle, byte channelNames[], double value);

	/**
	 * Original signature : <code>int32 DAQmxAdjust9208OffsetCal(CalHandle, const char[])</code><br>
	 * <i>native declaration : line 3170</i>
	 */
	// int DAQmxAdjust9208OffsetCal(NativeLong calHandle, byte channelNames[]);

	/**
	 * Original signature : <code>int32 DAQmxGet9209CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3171</i>
	 */
	// int DAQmxGet9209CalAdjustPoints(NativeLong calHandle, DoubleBuffer adjustmentPoints, NativeLong bufferSize);

	/**
	 * Original signature : <code>int32 DAQmxAdjust9209GainCal(CalHandle, const char[], int32, float64)</code><br>
	 * <i>native declaration : line 3172</i>
	 */
	// int DAQmxAdjust9209GainCal(NativeLong calHandle, byte channelNames[], int terminalConfig, double value);

	/**
	 * Original signature : <code>int32 DAQmxAdjust9209OffsetCal(CalHandle, const char[])</code><br>
	 * <i>native declaration : line 3173</i>
	 */
	// int DAQmxAdjust9209OffsetCal(NativeLong calHandle, byte channelNames[]);

	/**
	 * Original signature : <code>int32 DAQmxAdjust9211Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3174</i>
	 */
	// int DAQmxAdjust9211Cal(NativeLong calHandle, byte channelNames[], double value);

	/**
	 * Original signature : <code>int32 DAQmxGet9212CalAdjustPoints(CalHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 3175</i>
	 */
	// int DAQmxGet9212CalAdjustPoints(NativeLong calHandle, byte channelNames[], DoubleBuffer adjustmentPoints, NativeLong bufferSize);

	/**
	 * Original signature : <code>int32 DAQmxAdjust9212Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3176</i>
	 */
	// int DAQmxAdjust9212Cal(NativeLong calHandle, byte channelNames[], double value);

	/**
	 * Original signature : <code>int32 DAQmxGet9213CalAdjustPoints(CalHandle, float64, float64, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3177</i>
	 */
	// int DAQmxGet9213CalAdjustPoints(NativeLong calHandle, double rangeMin, double rangeMax, DoubleBuffer adjustmentPoints, NativeLong bufferSize);

	/**
	 * Original signature : <code>int32 DAQmxAdjust9213Cal(CalHandle, const char[], float64, float64, float64)</code><br>
	 * <i>native declaration : line 3178</i>
	 */
	// int DAQmxAdjust9213Cal(NativeLong calHandle, byte channelNames[], double rangeMin, double rangeMax, double value);

	/**
	 * Original signature : <code>int32 DAQmxGet9214CalAdjustPoints(CalHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 3179</i>
	 */
	// int DAQmxGet9214CalAdjustPoints(NativeLong calHandle, byte channelNames[], DoubleBuffer adjustmentPoints, NativeLong bufferSize);

	/**
	 * Original signature : <code>int32 DAQmxAdjust9214Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3180</i>
	 */
	// int DAQmxAdjust9214Cal(NativeLong calHandle, byte channelNames[], double value);

	/**
	 * Original signature : <code>int32 DAQmxGet9215CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3181</i>
	 */
	// int DAQmxGet9215CalAdjustPoints(NativeLong calHandle, DoubleBuffer adjustmentPoints, NativeLong bufferSize);
	/**

	/**
	 * Original signature : <code>int32 DAQmxAdjust9215Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3182</i>
	 */
	// int DAQmxAdjust9215Cal(NativeLong calHandle, byte channelNames[], double value);

	/**
	 * Original signature : <code>int32 DAQmxGet9216CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3183</i>
	 */
	// int DAQmxGet9216CalAdjustPoints(NativeLong calHandle, DoubleBuffer adjustmentPoints, NativeLong bufferSize);

	/**
	 * Original signature : <code>int32 DAQmxAdjust9216Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3184</i>
	 */
	// int DAQmxAdjust9216Cal(NativeLong calHandle, byte channelNames[], double value);

	/**
	 * Original signature : <code>int32 DAQmxGet9217CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3185</i>
	 */
	// int DAQmxGet9217CalAdjustPoints(NativeLong calHandle, DoubleBuffer adjustmentPoints, NativeLong bufferSize);

	/**
	 * Original signature : <code>int32 DAQmxAdjust9217Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3186</i>
	 */
	// int DAQmxAdjust9217Cal(NativeLong calHandle, byte channelNames[], double value);

	/**
	 * Original signature : <code>int32 DAQmxSetup9218Cal(CalHandle, const char[], float64, float64, int32)</code><br>
	 * <i>native declaration : line 3187</i>
	 */
	// int DAQmxSetup9218Cal(NativeLong calHandle, byte channelNames[], double rangeMin, double rangeMax, int measType);

	/**
	 * Original signature : <code>int32 DAQmxGet9218CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3188</i>
	 */
	// int DAQmxGet9218CalAdjustPoints(NativeLong calHandle, DoubleBuffer adjustmentPoints, NativeLong bufferSize);

	/**
	 * Original signature : <code>int32 DAQmxAdjust9218Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3189</i>
	 */
	// int DAQmxAdjust9218Cal(NativeLong calHandle, byte channelNames[], double value);

	/**
	 * Original signature : <code>int32 DAQmxSetup9219Cal(CalHandle, const char[], float64, float64, int32, int32)</code><br>
	 * <i>native declaration : line 3190</i>
	 */
	// int DAQmxSetup9219Cal(NativeLong calHandle, byte channelNames[], double rangeMin, double rangeMax, int measType, int bridgeConfig);

	/**
	 * Original signature : <code>int32 DAQmxGet9219CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3191</i>
	 */
	// int DAQmxGet9219CalAdjustPoints(NativeLong calHandle, DoubleBuffer adjustmentPoints, NativeLong bufferSize);

	/**
	 * Original signature : <code>int32 DAQmxAdjust9219Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3192</i>
	 */
	// int DAQmxAdjust9219Cal(NativeLong calHandle, byte channelNames[], double value);

	/**
	 * Original signature : <code>int32 DAQmxGet9220CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3193</i>
	 */
	// int DAQmxGet9220CalAdjustPoints(NativeLong calHandle, DoubleBuffer adjustmentPoints, NativeLong bufferSize);

	/**
	 * Original signature : <code>int32 DAQmxAdjust9220Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3194</i>
	 */
	// int DAQmxAdjust9220Cal(NativeLong calHandle, byte channelNames[], double value);

	/**
	 * Original signature : <code>int32 DAQmxGet9221CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3195</i>
	 */
	// int DAQmxGet9221CalAdjustPoints(NativeLong calHandle, DoubleBuffer adjustmentPoints, NativeLong bufferSize);

	/**
	 * Original signature : <code>int32 DAQmxAdjust9221Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3196</i>
	 */
	// int DAQmxAdjust9221Cal(NativeLong calHandle, byte channelNames[], double value);

	/**
	 * Original signature : <code>int32 DAQmxGet9222CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3197</i>
	 */
	// int DAQmxGet9222CalAdjustPoints(NativeLong calHandle, DoubleBuffer adjustmentPoints, NativeLong bufferSize);

	/**
	 * Original signature : <code>int32 DAQmxAdjust9222Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3198</i>
	 */
	// int DAQmxAdjust9222Cal(NativeLong calHandle, byte channelNames[], double value);

	/**
	 * Original signature : <code>int32 DAQmxGet9223CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3199</i>
	 */
	// int DAQmxGet9223CalAdjustPoints(NativeLong calHandle, DoubleBuffer adjustmentPoints, NativeLong bufferSize);

	/**
	 * Original signature : <code>int32 DAQmxAdjust9223Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3200</i>
	 */
	// int DAQmxAdjust9223Cal(NativeLong calHandle, byte channelNames[], double value);

	/**
	 * Original signature : <code>int32 DAQmxGet9225CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3201</i>
	 */
	// int DAQmxGet9225CalAdjustPoints(NativeLong calHandle, DoubleBuffer adjustmentPoints, NativeLong bufferSize);

	/**
	 * Original signature : <code>int32 DAQmxAdjust9225Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3202</i>
	 */
	// int DAQmxAdjust9225Cal(NativeLong calHandle, byte channelNames[], double value);

	/**
	 * Original signature : <code>int32 DAQmxGet9226CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3203</i>
	 */
	// int DAQmxGet9226CalAdjustPoints(NativeLong calHandle, DoubleBuffer adjustmentPoints, NativeLong bufferSize);

	/**
	 * Original signature : <code>int32 DAQmxAdjust9226Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3204</i>
	 */
	// int DAQmxAdjust9226Cal(NativeLong calHandle, byte channelNames[], double value);

	/**
	 * Original signature : <code>int32 DAQmxGet9227CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3205</i>
	 */
	// int DAQmxGet9227CalAdjustPoints(NativeLong calHandle, DoubleBuffer adjustmentPoints, NativeLong bufferSize);

	/**
	 * Original signature : <code>int32 DAQmxAdjust9227Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3206</i>
	 */
	// int DAQmxAdjust9227Cal(NativeLong calHandle, byte channelNames[], double value);

	/**
	 * Original signature : <code>int32 DAQmxGet9229CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3207</i>
	 */
	// int DAQmxGet9229CalAdjustPoints(NativeLong calHandle, DoubleBuffer adjustmentPoints, NativeLong bufferSize);

	/**
	 * Original signature : <code>int32 DAQmxAdjust9229Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3208</i>
	 */
	// int DAQmxAdjust9229Cal(NativeLong calHandle, byte channelNames[], double value);

	/**
	 * Original signature : <code>int32 DAQmxGet9230CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3209</i>
	 */
	// int DAQmxGet9230CalAdjustPoints(NativeLong calHandle, DoubleBuffer adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9230Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3210</i><br>
	 * @deprecated use the safer methods {@link #DAQmxAdjust9230Cal(com.sun.jna.NativeLong, byte[], double)} and {@link #DAQmxAdjust9230Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxAdjust9230Cal(NativeLong calHandle, Pointer channelNames, double value);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9230Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3210</i>
	 */
	// int DAQmxAdjust9230Cal(NativeLong calHandle, byte channelNames[], double value);
	/**
	 * Original signature : <code>int32 DAQmxGet9232CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3211</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGet9232CalAdjustPoints(com.sun.jna.NativeLong, java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGet9232CalAdjustPoints(com.sun.jna.NativeLong, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGet9232CalAdjustPoints(NativeLong calHandle, DoubleByReference adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxGet9232CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3211</i>
	 */
	// int DAQmxGet9232CalAdjustPoints(NativeLong calHandle, DoubleBuffer adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9232Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3212</i><br>
	 * @deprecated use the safer methods {@link #DAQmxAdjust9232Cal(com.sun.jna.NativeLong, byte[], double)} and {@link #DAQmxAdjust9232Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxAdjust9232Cal(NativeLong calHandle, Pointer channelNames, double value);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9232Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3212</i>
	 */
	// int DAQmxAdjust9232Cal(NativeLong calHandle, byte channelNames[], double value);
	/**
	 * Original signature : <code>int32 DAQmxGet9234CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3213</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGet9234CalAdjustPoints(com.sun.jna.NativeLong, java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGet9234CalAdjustPoints(com.sun.jna.NativeLong, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGet9234CalAdjustPoints(NativeLong calHandle, DoubleByReference adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxGet9234CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3213</i>
	 */
	// int DAQmxGet9234CalAdjustPoints(NativeLong calHandle, DoubleBuffer adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9234GainCal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3214</i><br>
	 * @deprecated use the safer methods {@link #DAQmxAdjust9234GainCal(com.sun.jna.NativeLong, byte[], double)} and {@link #DAQmxAdjust9234GainCal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxAdjust9234GainCal(NativeLong calHandle, Pointer channelNames, double value);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9234GainCal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3214</i>
	 */
	// int DAQmxAdjust9234GainCal(NativeLong calHandle, byte channelNames[], double value);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9234OffsetCal(CalHandle, const char[])</code><br>
	 * <i>native declaration : line 3215</i><br>
	 * @deprecated use the safer methods {@link #DAQmxAdjust9234OffsetCal(com.sun.jna.NativeLong, byte[])} and {@link #DAQmxAdjust9234OffsetCal(com.sun.jna.NativeLong, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxAdjust9234OffsetCal(NativeLong calHandle, Pointer channelNames);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9234OffsetCal(CalHandle, const char[])</code><br>
	 * <i>native declaration : line 3215</i>
	 */
	// int DAQmxAdjust9234OffsetCal(NativeLong calHandle, byte channelNames[]);
	/**
	 * Original signature : <code>int32 DAQmxGet9238CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3216</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGet9238CalAdjustPoints(com.sun.jna.NativeLong, java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGet9238CalAdjustPoints(com.sun.jna.NativeLong, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGet9238CalAdjustPoints(NativeLong calHandle, DoubleByReference adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxGet9238CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3216</i>
	 */
	// int DAQmxGet9238CalAdjustPoints(NativeLong calHandle, DoubleBuffer adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9238Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3217</i><br>
	 * @deprecated use the safer methods {@link #DAQmxAdjust9238Cal(com.sun.jna.NativeLong, byte[], double)} and {@link #DAQmxAdjust9238Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxAdjust9238Cal(NativeLong calHandle, Pointer channelNames, double value);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9238Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3217</i>
	 */
	// int DAQmxAdjust9238Cal(NativeLong calHandle, byte channelNames[], double value);
	/**
	 * Original signature : <code>int32 DAQmxGet9239CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3218</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGet9239CalAdjustPoints(com.sun.jna.NativeLong, java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGet9239CalAdjustPoints(com.sun.jna.NativeLong, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGet9239CalAdjustPoints(NativeLong calHandle, DoubleByReference adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxGet9239CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3218</i>
	 */
	// int DAQmxGet9239CalAdjustPoints(NativeLong calHandle, DoubleBuffer adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9239Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3219</i><br>
	 * @deprecated use the safer methods {@link #DAQmxAdjust9239Cal(com.sun.jna.NativeLong, byte[], double)} and {@link #DAQmxAdjust9239Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxAdjust9239Cal(NativeLong calHandle, Pointer channelNames, double value);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9239Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3219</i>
	 */
	// int DAQmxAdjust9239Cal(NativeLong calHandle, byte channelNames[], double value);
	/**
	 * Original signature : <code>int32 DAQmxGet9242CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3220</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGet9242CalAdjustPoints(com.sun.jna.NativeLong, java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGet9242CalAdjustPoints(com.sun.jna.NativeLong, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGet9242CalAdjustPoints(NativeLong calHandle, DoubleByReference adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxGet9242CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3220</i>
	 */
	// int DAQmxGet9242CalAdjustPoints(NativeLong calHandle, DoubleBuffer adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetup9242Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3221</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetup9242Cal(com.sun.jna.NativeLong, byte[], double)} and {@link #DAQmxSetup9242Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetup9242Cal(NativeLong calHandle, Pointer channelNames, double value);
	/**
	 * Original signature : <code>int32 DAQmxSetup9242Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3221</i>
	 */
	// int DAQmxSetup9242Cal(NativeLong calHandle, byte channelNames[], double value);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9242Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3222</i><br>
	 * @deprecated use the safer methods {@link #DAQmxAdjust9242Cal(com.sun.jna.NativeLong, byte[], double)} and {@link #DAQmxAdjust9242Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxAdjust9242Cal(NativeLong calHandle, Pointer channelNames, double value);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9242Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3222</i>
	 */
	// int DAQmxAdjust9242Cal(NativeLong calHandle, byte channelNames[], double value);
	/**
	 * Original signature : <code>int32 DAQmxGet9244CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3223</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGet9244CalAdjustPoints(com.sun.jna.NativeLong, java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGet9244CalAdjustPoints(com.sun.jna.NativeLong, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGet9244CalAdjustPoints(NativeLong calHandle, DoubleByReference adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxGet9244CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3223</i>
	 */
	// int DAQmxGet9244CalAdjustPoints(NativeLong calHandle, DoubleBuffer adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetup9244Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3224</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetup9244Cal(com.sun.jna.NativeLong, byte[], double)} and {@link #DAQmxSetup9244Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetup9244Cal(NativeLong calHandle, Pointer channelNames, double value);
	/**
	 * Original signature : <code>int32 DAQmxSetup9244Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3224</i>
	 */
	// int DAQmxSetup9244Cal(NativeLong calHandle, byte channelNames[], double value);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9244Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3225</i><br>
	 * @deprecated use the safer methods {@link #DAQmxAdjust9244Cal(com.sun.jna.NativeLong, byte[], double)} and {@link #DAQmxAdjust9244Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxAdjust9244Cal(NativeLong calHandle, Pointer channelNames, double value);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9244Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3225</i>
	 */
	// int DAQmxAdjust9244Cal(NativeLong calHandle, byte channelNames[], double value);
	/**
	 * Original signature : <code>int32 DAQmxGet9246CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3226</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGet9246CalAdjustPoints(com.sun.jna.NativeLong, java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGet9246CalAdjustPoints(com.sun.jna.NativeLong, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGet9246CalAdjustPoints(NativeLong calHandle, DoubleByReference adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxGet9246CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3226</i>
	 */
	// int DAQmxGet9246CalAdjustPoints(NativeLong calHandle, DoubleBuffer adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9246Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3227</i><br>
	 * @deprecated use the safer methods {@link #DAQmxAdjust9246Cal(com.sun.jna.NativeLong, byte[], double)} and {@link #DAQmxAdjust9246Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxAdjust9246Cal(NativeLong calHandle, Pointer channelNames, double value);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9246Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3227</i>
	 */
	// int DAQmxAdjust9246Cal(NativeLong calHandle, byte channelNames[], double value);
	/**
	 * Original signature : <code>int32 DAQmxGet9247CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3228</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGet9247CalAdjustPoints(com.sun.jna.NativeLong, java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGet9247CalAdjustPoints(com.sun.jna.NativeLong, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGet9247CalAdjustPoints(NativeLong calHandle, DoubleByReference adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxGet9247CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3228</i>
	 */
	// int DAQmxGet9247CalAdjustPoints(NativeLong calHandle, DoubleBuffer adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9247Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3229</i><br>
	 * @deprecated use the safer methods {@link #DAQmxAdjust9247Cal(com.sun.jna.NativeLong, byte[], double)} and {@link #DAQmxAdjust9247Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxAdjust9247Cal(NativeLong calHandle, Pointer channelNames, double value);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9247Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3229</i>
	 */
	// int DAQmxAdjust9247Cal(NativeLong calHandle, byte channelNames[], double value);
	/**
	 * Original signature : <code>int32 DAQmxGet9251CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3230</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGet9251CalAdjustPoints(com.sun.jna.NativeLong, java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGet9251CalAdjustPoints(com.sun.jna.NativeLong, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGet9251CalAdjustPoints(NativeLong calHandle, DoubleByReference adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxGet9251CalAdjustPoints(CalHandle, float64*, uInt32)</code><br>
	 * <i>native declaration : line 3230</i>
	 */
	// int DAQmxGet9251CalAdjustPoints(NativeLong calHandle, DoubleBuffer adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9251Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3231</i><br>
	 * @deprecated use the safer methods {@link #DAQmxAdjust9251Cal(com.sun.jna.NativeLong, byte[], double)} and {@link #DAQmxAdjust9251Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxAdjust9251Cal(NativeLong calHandle, Pointer channelNames, double value);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9251Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3231</i>
	 */
	// int DAQmxAdjust9251Cal(NativeLong calHandle, byte channelNames[], double value);
	/**
	 * Original signature : <code>int32 DAQmxGet9260CalAdjustPoints(CalHandle, int32*, uInt32)</code><br>
	 * <i>native declaration : line 3232</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGet9260CalAdjustPoints(com.sun.jna.NativeLong, java.nio.IntBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGet9260CalAdjustPoints(com.sun.jna.NativeLong, com.sun.jna.ptr.IntByReference, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGet9260CalAdjustPoints(NativeLong calHandle, IntByReference adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxGet9260CalAdjustPoints(CalHandle, int32*, uInt32)</code><br>
	 * <i>native declaration : line 3232</i>
	 */
	// int DAQmxGet9260CalAdjustPoints(NativeLong calHandle, IntBuffer adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetup9260Cal(CalHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3233</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetup9260Cal(com.sun.jna.NativeLong, byte[], int)} and {@link #DAQmxSetup9260Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetup9260Cal(NativeLong calHandle, Pointer channelNames, int value);
	/**
	 * Original signature : <code>int32 DAQmxSetup9260Cal(CalHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3233</i>
	 */
	// int DAQmxSetup9260Cal(NativeLong calHandle, byte channelNames[], int value);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9260Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3234</i><br>
	 * @deprecated use the safer methods {@link #DAQmxAdjust9260Cal(com.sun.jna.NativeLong, byte[], double)} and {@link #DAQmxAdjust9260Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxAdjust9260Cal(NativeLong calHandle, Pointer channelNames, double value);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9260Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3234</i>
	 */
	// int DAQmxAdjust9260Cal(NativeLong calHandle, byte channelNames[], double value);
	/**
	 * Original signature : <code>int32 DAQmxGet9263CalAdjustPoints(CalHandle, int32*, uInt32)</code><br>
	 * <i>native declaration : line 3235</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGet9263CalAdjustPoints(com.sun.jna.NativeLong, java.nio.IntBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGet9263CalAdjustPoints(com.sun.jna.NativeLong, com.sun.jna.ptr.IntByReference, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGet9263CalAdjustPoints(NativeLong calHandle, IntByReference adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxGet9263CalAdjustPoints(CalHandle, int32*, uInt32)</code><br>
	 * <i>native declaration : line 3235</i>
	 */
	// int DAQmxGet9263CalAdjustPoints(NativeLong calHandle, IntBuffer adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetup9263Cal(CalHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3236</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetup9263Cal(com.sun.jna.NativeLong, byte[], int)} and {@link #DAQmxSetup9263Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetup9263Cal(NativeLong calHandle, Pointer channelNames, int value);
	/**
	 * Original signature : <code>int32 DAQmxSetup9263Cal(CalHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3236</i>
	 */
	// int DAQmxSetup9263Cal(NativeLong calHandle, byte channelNames[], int value);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9263Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3237</i><br>
	 * @deprecated use the safer methods {@link #DAQmxAdjust9263Cal(com.sun.jna.NativeLong, byte[], double)} and {@link #DAQmxAdjust9263Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxAdjust9263Cal(NativeLong calHandle, Pointer channelNames, double value);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9263Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3237</i>
	 */
	// int DAQmxAdjust9263Cal(NativeLong calHandle, byte channelNames[], double value);
	/**
	 * Original signature : <code>int32 DAQmxGet9264CalAdjustPoints(CalHandle, int32*, uInt32)</code><br>
	 * <i>native declaration : line 3238</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGet9264CalAdjustPoints(com.sun.jna.NativeLong, java.nio.IntBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGet9264CalAdjustPoints(com.sun.jna.NativeLong, com.sun.jna.ptr.IntByReference, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGet9264CalAdjustPoints(NativeLong calHandle, IntByReference adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxGet9264CalAdjustPoints(CalHandle, int32*, uInt32)</code><br>
	 * <i>native declaration : line 3238</i>
	 */
	// int DAQmxGet9264CalAdjustPoints(NativeLong calHandle, IntBuffer adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetup9264Cal(CalHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3239</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetup9264Cal(com.sun.jna.NativeLong, byte[], int)} and {@link #DAQmxSetup9264Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetup9264Cal(NativeLong calHandle, Pointer channelNames, int value);
	/**
	 * Original signature : <code>int32 DAQmxSetup9264Cal(CalHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3239</i>
	 */
	// int DAQmxSetup9264Cal(NativeLong calHandle, byte channelNames[], int value);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9264Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3240</i><br>
	 * @deprecated use the safer methods {@link #DAQmxAdjust9264Cal(com.sun.jna.NativeLong, byte[], double)} and {@link #DAQmxAdjust9264Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxAdjust9264Cal(NativeLong calHandle, Pointer channelNames, double value);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9264Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3240</i>
	 */
	// int DAQmxAdjust9264Cal(NativeLong calHandle, byte channelNames[], double value);
	/**
	 * Original signature : <code>int32 DAQmxGet9265CalAdjustPoints(CalHandle, int32*, uInt32)</code><br>
	 * <i>native declaration : line 3241</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGet9265CalAdjustPoints(com.sun.jna.NativeLong, java.nio.IntBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGet9265CalAdjustPoints(com.sun.jna.NativeLong, com.sun.jna.ptr.IntByReference, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGet9265CalAdjustPoints(NativeLong calHandle, IntByReference adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxGet9265CalAdjustPoints(CalHandle, int32*, uInt32)</code><br>
	 * <i>native declaration : line 3241</i>
	 */
	// int DAQmxGet9265CalAdjustPoints(NativeLong calHandle, IntBuffer adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetup9265Cal(CalHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3242</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetup9265Cal(com.sun.jna.NativeLong, byte[], int)} and {@link #DAQmxSetup9265Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetup9265Cal(NativeLong calHandle, Pointer channelNames, int value);
	/**
	 * Original signature : <code>int32 DAQmxSetup9265Cal(CalHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3242</i>
	 */
	// int DAQmxSetup9265Cal(NativeLong calHandle, byte channelNames[], int value);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9265Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3243</i><br>
	 * @deprecated use the safer methods {@link #DAQmxAdjust9265Cal(com.sun.jna.NativeLong, byte[], double)} and {@link #DAQmxAdjust9265Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxAdjust9265Cal(NativeLong calHandle, Pointer channelNames, double value);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9265Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3243</i>
	 */
	// int DAQmxAdjust9265Cal(NativeLong calHandle, byte channelNames[], double value);
	/**
	 * Original signature : <code>int32 DAQmxGet9269CalAdjustPoints(CalHandle, int32*, uInt32)</code><br>
	 * <i>native declaration : line 3244</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGet9269CalAdjustPoints(com.sun.jna.NativeLong, java.nio.IntBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGet9269CalAdjustPoints(com.sun.jna.NativeLong, com.sun.jna.ptr.IntByReference, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGet9269CalAdjustPoints(NativeLong calHandle, IntByReference adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxGet9269CalAdjustPoints(CalHandle, int32*, uInt32)</code><br>
	 * <i>native declaration : line 3244</i>
	 */
	// int DAQmxGet9269CalAdjustPoints(NativeLong calHandle, IntBuffer adjustmentPoints, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetup9269Cal(CalHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3245</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetup9269Cal(com.sun.jna.NativeLong, byte[], int)} and {@link #DAQmxSetup9269Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetup9269Cal(NativeLong calHandle, Pointer channelNames, int value);
	/**
	 * Original signature : <code>int32 DAQmxSetup9269Cal(CalHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3245</i>
	 */
	// int DAQmxSetup9269Cal(NativeLong calHandle, byte channelNames[], int value);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9269Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3246</i><br>
	 * @deprecated use the safer methods {@link #DAQmxAdjust9269Cal(com.sun.jna.NativeLong, byte[], double)} and {@link #DAQmxAdjust9269Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxAdjust9269Cal(NativeLong calHandle, Pointer channelNames, double value);
	/**
	 * Original signature : <code>int32 DAQmxAdjust9269Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3246</i>
	 */
	// int DAQmxAdjust9269Cal(NativeLong calHandle, byte channelNames[], double value);
	/**
	 * Original signature : <code>int32 DAQmxSetup1102Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3248</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetup1102Cal(com.sun.jna.NativeLong, byte[], double)} and {@link #DAQmxSetup1102Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetup1102Cal(NativeLong calHandle, Pointer channelName, double gain);
	/**
	 * Original signature : <code>int32 DAQmxSetup1102Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3248</i>
	 */
	// int DAQmxSetup1102Cal(NativeLong calHandle, byte channelName[], double gain);
	/**
	 * Original signature : <code>int32 DAQmxAdjust1102Cal(CalHandle, float64, float64)</code><br>
	 * <i>native declaration : line 3249</i>
	 */
	// int DAQmxAdjust1102Cal(NativeLong calHandle, double refVoltage, double measOutput);
	/**
	 * Original signature : <code>int32 DAQmxSetup1104Cal(CalHandle, const char[])</code><br>
	 * <i>native declaration : line 3251</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetup1104Cal(com.sun.jna.NativeLong, byte[])} and {@link #DAQmxSetup1104Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetup1104Cal(NativeLong calHandle, Pointer channelName);
	/**
	 * Original signature : <code>int32 DAQmxSetup1104Cal(CalHandle, const char[])</code><br>
	 * <i>native declaration : line 3251</i>
	 */
	// int DAQmxSetup1104Cal(NativeLong calHandle, byte channelName[]);
	/**
	 * Original signature : <code>int32 DAQmxAdjust1104Cal(CalHandle, float64, float64)</code><br>
	 * <i>native declaration : line 3252</i>
	 */
	// int DAQmxAdjust1104Cal(NativeLong calHandle, double refVoltage, double measOutput);
	/**
	 * Original signature : <code>int32 DAQmxSetup1112Cal(CalHandle, const char[])</code><br>
	 * <i>native declaration : line 3254</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetup1112Cal(com.sun.jna.NativeLong, byte[])} and {@link #DAQmxSetup1112Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetup1112Cal(NativeLong calHandle, Pointer channelName);
	/**
	 * Original signature : <code>int32 DAQmxSetup1112Cal(CalHandle, const char[])</code><br>
	 * <i>native declaration : line 3254</i>
	 */
	// int DAQmxSetup1112Cal(NativeLong calHandle, byte channelName[]);
	/**
	 * Original signature : <code>int32 DAQmxAdjust1112Cal(CalHandle, float64, float64)</code><br>
	 * <i>native declaration : line 3255</i>
	 */
	// int DAQmxAdjust1112Cal(NativeLong calHandle, double refVoltage, double measOutput);
	/**
	 * Original signature : <code>int32 DAQmxSetup1122Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3257</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetup1122Cal(com.sun.jna.NativeLong, byte[], double)} and {@link #DAQmxSetup1122Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetup1122Cal(NativeLong calHandle, Pointer channelName, double gain);
	/**
	 * Original signature : <code>int32 DAQmxSetup1122Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3257</i>
	 */
	// int DAQmxSetup1122Cal(NativeLong calHandle, byte channelName[], double gain);
	/**
	 * Original signature : <code>int32 DAQmxAdjust1122Cal(CalHandle, float64, float64)</code><br>
	 * <i>native declaration : line 3258</i>
	 */
	// int DAQmxAdjust1122Cal(NativeLong calHandle, double refVoltage, double measOutput);
	/**
	 * Original signature : <code>int32 DAQmxSetup1124Cal(CalHandle, const char[], int32, uInt32)</code><br>
	 * <i>native declaration : line 3260</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetup1124Cal(com.sun.jna.NativeLong, byte[], int, com.sun.jna.NativeLong)} and {@link #DAQmxSetup1124Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, int, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetup1124Cal(NativeLong calHandle, Pointer channelName, int range, NativeLong dacValue);
	/**
	 * Original signature : <code>int32 DAQmxSetup1124Cal(CalHandle, const char[], int32, uInt32)</code><br>
	 * <i>native declaration : line 3260</i>
	 */
	// int DAQmxSetup1124Cal(NativeLong calHandle, byte channelName[], int range, NativeLong dacValue);
	/**
	 * Original signature : <code>int32 DAQmxAdjust1124Cal(CalHandle, float64)</code><br>
	 * <i>native declaration : line 3261</i>
	 */
	// int DAQmxAdjust1124Cal(NativeLong calHandle, double measOutput);
	/**
	 * Original signature : <code>int32 DAQmxSetup1125Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3263</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetup1125Cal(com.sun.jna.NativeLong, byte[], double)} and {@link #DAQmxSetup1125Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetup1125Cal(NativeLong calHandle, Pointer channelName, double gain);
	/**
	 * Original signature : <code>int32 DAQmxSetup1125Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3263</i>
	 */
	// int DAQmxSetup1125Cal(NativeLong calHandle, byte channelName[], double gain);
	/**
	 * Original signature : <code>int32 DAQmxAdjust1125Cal(CalHandle, float64, float64)</code><br>
	 * <i>native declaration : line 3264</i>
	 */
	// int DAQmxAdjust1125Cal(NativeLong calHandle, double refVoltage, double measOutput);
	/**
	 * Original signature : <code>int32 DAQmxSetup1126Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3266</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetup1126Cal(com.sun.jna.NativeLong, byte[], double)} and {@link #DAQmxSetup1126Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetup1126Cal(NativeLong calHandle, Pointer channelName, double upperFreqLimit);
	/**
	 * Original signature : <code>int32 DAQmxSetup1126Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3266</i>
	 */
	// int DAQmxSetup1126Cal(NativeLong calHandle, byte channelName[], double upperFreqLimit);
	/**
	 * Original signature : <code>int32 DAQmxAdjust1126Cal(CalHandle, float64, float64)</code><br>
	 * <i>native declaration : line 3267</i>
	 */
	// int DAQmxAdjust1126Cal(NativeLong calHandle, double refFreq, double measOutput);
	/**
	 * Original signature : <code>int32 DAQmxSetup1141Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3269</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetup1141Cal(com.sun.jna.NativeLong, byte[], double)} and {@link #DAQmxSetup1141Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetup1141Cal(NativeLong calHandle, Pointer channelName, double gain);
	/**
	 * Original signature : <code>int32 DAQmxSetup1141Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3269</i>
	 */
	// int DAQmxSetup1141Cal(NativeLong calHandle, byte channelName[], double gain);
	/**
	 * Original signature : <code>int32 DAQmxAdjust1141Cal(CalHandle, float64, float64)</code><br>
	 * <i>native declaration : line 3270</i>
	 */
	// int DAQmxAdjust1141Cal(NativeLong calHandle, double refVoltage, double measOutput);
	/**
	 * Original signature : <code>int32 DAQmxSetup1142Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3271</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetup1142Cal(com.sun.jna.NativeLong, byte[], double)} and {@link #DAQmxSetup1142Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetup1142Cal(NativeLong calHandle, Pointer channelName, double gain);
	/**
	 * Original signature : <code>int32 DAQmxSetup1142Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3271</i>
	 */
	// int DAQmxSetup1142Cal(NativeLong calHandle, byte channelName[], double gain);
	/**
	 * Original signature : <code>int32 DAQmxAdjust1142Cal(CalHandle, float64, float64)</code><br>
	 * <i>native declaration : line 3272</i>
	 */
	// int DAQmxAdjust1142Cal(NativeLong calHandle, double refVoltage, double measOutput);
	/**
	 * Original signature : <code>int32 DAQmxSetup1143Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3273</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetup1143Cal(com.sun.jna.NativeLong, byte[], double)} and {@link #DAQmxSetup1143Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetup1143Cal(NativeLong calHandle, Pointer channelName, double gain);
	/**
	 * Original signature : <code>int32 DAQmxSetup1143Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3273</i>
	 */
	// int DAQmxSetup1143Cal(NativeLong calHandle, byte channelName[], double gain);
	/**
	 * Original signature : <code>int32 DAQmxAdjust1143Cal(CalHandle, float64, float64)</code><br>
	 * <i>native declaration : line 3274</i>
	 */
	// int DAQmxAdjust1143Cal(NativeLong calHandle, double refVoltage, double measOutput);
	/**
	 * Original signature : <code>int32 DAQmxSetup1502Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3277</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetup1502Cal(com.sun.jna.NativeLong, byte[], double)} and {@link #DAQmxSetup1502Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetup1502Cal(NativeLong calHandle, Pointer channelName, double gain);
	/**
	 * Original signature : <code>int32 DAQmxSetup1502Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3277</i>
	 */
	// int DAQmxSetup1502Cal(NativeLong calHandle, byte channelName[], double gain);
	/**
	 * Original signature : <code>int32 DAQmxAdjust1502Cal(CalHandle, float64, float64)</code><br>
	 * <i>native declaration : line 3278</i>
	 */
	// int DAQmxAdjust1502Cal(NativeLong calHandle, double refVoltage, double measOutput);
	/**
	 * Original signature : <code>int32 DAQmxSetup1503Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3280</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetup1503Cal(com.sun.jna.NativeLong, byte[], double)} and {@link #DAQmxSetup1503Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetup1503Cal(NativeLong calHandle, Pointer channelName, double gain);
	/**
	 * Original signature : <code>int32 DAQmxSetup1503Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3280</i>
	 */
	// int DAQmxSetup1503Cal(NativeLong calHandle, byte channelName[], double gain);
	/**
	 * Original signature : <code>int32 DAQmxAdjust1503Cal(CalHandle, float64, float64)</code><br>
	 * <i>native declaration : line 3281</i>
	 */
	// int DAQmxAdjust1503Cal(NativeLong calHandle, double refVoltage, double measOutput);
	/**
	 * Original signature : <code>int32 DAQmxAdjust1503CurrentCal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3282</i><br>
	 * @deprecated use the safer methods {@link #DAQmxAdjust1503CurrentCal(com.sun.jna.NativeLong, byte[], double)} and {@link #DAQmxAdjust1503CurrentCal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxAdjust1503CurrentCal(NativeLong calHandle, Pointer channelName, double measCurrent);
	/**
	 * Original signature : <code>int32 DAQmxAdjust1503CurrentCal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3282</i>
	 */
	// int DAQmxAdjust1503CurrentCal(NativeLong calHandle, byte channelName[], double measCurrent);
	/**
	 * Original signature : <code>int32 DAQmxSetup1520Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3284</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetup1520Cal(com.sun.jna.NativeLong, byte[], double)} and {@link #DAQmxSetup1520Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetup1520Cal(NativeLong calHandle, Pointer channelName, double gain);
	/**
	 * Original signature : <code>int32 DAQmxSetup1520Cal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3284</i>
	 */
	// int DAQmxSetup1520Cal(NativeLong calHandle, byte channelName[], double gain);
	/**
	 * Original signature : <code>int32 DAQmxAdjust1520Cal(CalHandle, float64, float64)</code><br>
	 * <i>native declaration : line 3285</i>
	 */
	// int DAQmxAdjust1520Cal(NativeLong calHandle, double refVoltage, double measOutput);
	/**
	 * Original signature : <code>int32 DAQmxSetup1521Cal(CalHandle, const char[])</code><br>
	 * <i>native declaration : line 3287</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetup1521Cal(com.sun.jna.NativeLong, byte[])} and {@link #DAQmxSetup1521Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetup1521Cal(NativeLong calHandle, Pointer channelName);
	/**
	 * Original signature : <code>int32 DAQmxSetup1521Cal(CalHandle, const char[])</code><br>
	 * <i>native declaration : line 3287</i>
	 */
	// int DAQmxSetup1521Cal(NativeLong calHandle, byte channelName[]);
	/**
	 * Original signature : <code>int32 DAQmxAdjust1521Cal(CalHandle, float64, float64)</code><br>
	 * <i>native declaration : line 3288</i>
	 */
	// int DAQmxAdjust1521Cal(NativeLong calHandle, double refVoltage, double measOutput);
	/**
	 * Original signature : <code>int32 DAQmxSetup153xCal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3290</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetup153xCal(com.sun.jna.NativeLong, byte[], double)} and {@link #DAQmxSetup153xCal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetup153xCal(NativeLong calHandle, Pointer channelName, double gain);
	/**
	 * Original signature : <code>int32 DAQmxSetup153xCal(CalHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3290</i>
	 */
	// int DAQmxSetup153xCal(NativeLong calHandle, byte channelName[], double gain);
	/**
	 * Original signature : <code>int32 DAQmxAdjust153xCal(CalHandle, float64, float64)</code><br>
	 * <i>native declaration : line 3291</i>
	 */
	// int DAQmxAdjust153xCal(NativeLong calHandle, double refVoltage, double measOutput);
	/**
	 * Original signature : <code>int32 DAQmxSetup1540Cal(CalHandle, const char[], float64, float64)</code><br>
	 * <i>native declaration : line 3293</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetup1540Cal(com.sun.jna.NativeLong, byte[], double, double)} and {@link #DAQmxSetup1540Cal(com.sun.jna.NativeLong, com.sun.jna.Pointer, double, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetup1540Cal(NativeLong calHandle, Pointer channelName, double excitationVoltage, double excitationFreq);
	/**
	 * Original signature : <code>int32 DAQmxSetup1540Cal(CalHandle, const char[], float64, float64)</code><br>
	 * <i>native declaration : line 3293</i>
	 */
	// int DAQmxSetup1540Cal(NativeLong calHandle, byte channelName[], double excitationVoltage, double excitationFreq);
	/**
	 * Original signature : <code>int32 DAQmxAdjust1540Cal(CalHandle, float64, float64, int32)</code><br>
	 * <i>native declaration : line 3294</i>
	 */
	// int DAQmxAdjust1540Cal(NativeLong calHandle, double refVoltage, double measOutput, int inputCalSource);
	/**
	 * /<br>
	 * Original signature : <code>int32 DAQmxConfigureTEDS(const char[], const char[])</code><br>
	 * <i>native declaration : line 3301</i><br>
	 * @deprecated use the safer methods {@link #DAQmxConfigureTEDS(byte[], byte[])} and {@link #DAQmxConfigureTEDS(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxConfigureTEDS(Pointer physicalChannel, Pointer filePath);
	/**
	 * /<br>
	 * Original signature : <code>int32 DAQmxConfigureTEDS(const char[], const char[])</code><br>
	 * <i>native declaration : line 3301</i>
	 */
	// int DAQmxConfigureTEDS(byte physicalChannel[], byte filePath[]);
	/**
	 * Original signature : <code>int32 DAQmxClearTEDS(const char[])</code><br>
	 * <i>native declaration : line 3302</i><br>
	 * @deprecated use the safer methods {@link #DAQmxClearTEDS(byte[])} and {@link #DAQmxClearTEDS(com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxClearTEDS(Pointer physicalChannel);
	/**
	 * Original signature : <code>int32 DAQmxClearTEDS(const char[])</code><br>
	 * <i>native declaration : line 3302</i>
	 */
	// int DAQmxClearTEDS(byte physicalChannel[]);
	/**
	 * Original signature : <code>int32 DAQmxWriteToTEDSFromArray(const char[], const uInt8[], uInt32, int32)</code><br>
	 * <i>native declaration : line 3303</i><br>
	 * @deprecated use the safer methods {@link #DAQmxWriteToTEDSFromArray(byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong, int)} and {@link #DAQmxWriteToTEDSFromArray(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong, int)} instead
	 */
	//Deprecated 
	// int DAQmxWriteToTEDSFromArray(Pointer physicalChannel, Pointer bitStream, NativeLong arraySize, int basicTEDSOptions);
	/**
	 * Original signature : <code>int32 DAQmxWriteToTEDSFromArray(const char[], const uInt8[], uInt32, int32)</code><br>
	 * <i>native declaration : line 3303</i>
	 */
	// int DAQmxWriteToTEDSFromArray(byte physicalChannel[], ByteBuffer bitStream, NativeLong arraySize, int basicTEDSOptions);
	/**
	 * Original signature : <code>int32 DAQmxWriteToTEDSFromFile(const char[], const char[], int32)</code><br>
	 * <i>native declaration : line 3304</i><br>
	 * @deprecated use the safer methods {@link #DAQmxWriteToTEDSFromFile(byte[], byte[], int)} and {@link #DAQmxWriteToTEDSFromFile(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxWriteToTEDSFromFile(Pointer physicalChannel, Pointer filePath, int basicTEDSOptions);
	/**
	 * Original signature : <code>int32 DAQmxWriteToTEDSFromFile(const char[], const char[], int32)</code><br>
	 * <i>native declaration : line 3304</i>
	 */
	// int DAQmxWriteToTEDSFromFile(byte physicalChannel[], byte filePath[], int basicTEDSOptions);
	/**
	 * Original signature : <code>int32 DAQmxGetPhysicalChanAttribute(const char[], int32, void*, null)</code><br>
	 * <i>native declaration : line 3305</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetPhysicalChanAttribute(byte[], int, com.sun.jna.Pointer, java.lang.Object)} and {@link #DAQmxGetPhysicalChanAttribute(com.sun.jna.Pointer, int, com.sun.jna.Pointer, java.lang.Object)} instead
	 */
	//Deprecated 
	// int DAQmxGetPhysicalChanAttribute(Pointer physicalChannel, int attribute, Pointer value, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxGetPhysicalChanAttribute(const char[], int32, void*, null)</code><br>
	 * <i>native declaration : line 3305</i>
	 */
	// int DAQmxGetPhysicalChanAttribute(byte physicalChannel[], int attribute, Pointer value, Object... varArgs1);
	/**
	 * /<br>
	 * Original signature : <code>int32 DAQmxWaitForNextSampleClock(TaskHandle, float64, bool32*)</code><br>
	 * <i>native declaration : line 3312</i>
	 */
	// int DAQmxWaitForNextSampleClock(Pointer taskHandle, double timeout, NativeLongByReference isLate);
	/**
	 * Original signature : <code>int32 DAQmxGetRealTimeAttribute(TaskHandle, int32, void*, null)</code><br>
	 * <i>native declaration : line 3313</i>
	 */
	// int DAQmxGetRealTimeAttribute(Pointer taskHandle, int attribute, Pointer value, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxSetRealTimeAttribute(TaskHandle, int32, null)</code><br>
	 * <i>native declaration : line 3314</i>
	 */
	// int DAQmxSetRealTimeAttribute(Pointer taskHandle, int attribute, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxResetRealTimeAttribute(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 3315</i>
	 */
	// int DAQmxResetRealTimeAttribute(Pointer taskHandle, int attribute);
	/**
	 * Note: This function is obsolete and now always returns zero.<br>
	 * Original signature : <code>bool32 DAQmxIsReadOrWriteLate(int32)</code><br>
	 * <i>native declaration : line 3318</i>
	 */
	NativeLong DAQmxIsReadOrWriteLate(int errorCode);
	/**
	 * /<br>
	 * Original signature : <code>int32 DAQmxSaveTask(TaskHandle, const char[], const char[], uInt32)</code><br>
	 * <i>native declaration : line 3325</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSaveTask(com.sun.jna.Pointer, byte[], byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSaveTask(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSaveTask(Pointer taskHandle, Pointer saveAs, Pointer author, NativeLong options);
	/**
	 * /<br>
	 * Original signature : <code>int32 DAQmxSaveTask(TaskHandle, const char[], const char[], uInt32)</code><br>
	 * <i>native declaration : line 3325</i>
	 */
	// int DAQmxSaveTask(Pointer taskHandle, byte saveAs[], byte author[], NativeLong options);
	/**
	 * Original signature : <code>int32 DAQmxSaveGlobalChan(TaskHandle, const char[], const char[], const char[], uInt32)</code><br>
	 * <i>native declaration : line 3326</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSaveGlobalChan(com.sun.jna.Pointer, byte[], byte[], byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSaveGlobalChan(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSaveGlobalChan(Pointer taskHandle, Pointer channelName, Pointer saveAs, Pointer author, NativeLong options);
	/**
	 * Original signature : <code>int32 DAQmxSaveGlobalChan(TaskHandle, const char[], const char[], const char[], uInt32)</code><br>
	 * <i>native declaration : line 3326</i>
	 */
	// int DAQmxSaveGlobalChan(Pointer taskHandle, byte channelName[], byte saveAs[], byte author[], NativeLong options);
	/**
	 * Original signature : <code>int32 DAQmxSaveScale(const char[], const char[], const char[], uInt32)</code><br>
	 * <i>native declaration : line 3327</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSaveScale(byte[], byte[], byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSaveScale(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSaveScale(Pointer scaleName, Pointer saveAs, Pointer author, NativeLong options);
	/**
	 * Original signature : <code>int32 DAQmxSaveScale(const char[], const char[], const char[], uInt32)</code><br>
	 * <i>native declaration : line 3327</i>
	 */
	// int DAQmxSaveScale(byte scaleName[], byte saveAs[], byte author[], NativeLong options);
	/**
	 * Original signature : <code>int32 DAQmxDeleteSavedTask(const char[])</code><br>
	 * <i>native declaration : line 3328</i><br>
	 * @deprecated use the safer methods {@link #DAQmxDeleteSavedTask(byte[])} and {@link #DAQmxDeleteSavedTask(com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxDeleteSavedTask(Pointer taskName);
	/**
	 * Original signature : <code>int32 DAQmxDeleteSavedTask(const char[])</code><br>
	 * <i>native declaration : line 3328</i>
	 */
	// int DAQmxDeleteSavedTask(byte taskName[]);
	/**
	 * Original signature : <code>int32 DAQmxDeleteSavedGlobalChan(const char[])</code><br>
	 * <i>native declaration : line 3329</i><br>
	 * @deprecated use the safer methods {@link #DAQmxDeleteSavedGlobalChan(byte[])} and {@link #DAQmxDeleteSavedGlobalChan(com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxDeleteSavedGlobalChan(Pointer channelName);
	/**
	 * Original signature : <code>int32 DAQmxDeleteSavedGlobalChan(const char[])</code><br>
	 * <i>native declaration : line 3329</i>
	 */
	// int DAQmxDeleteSavedGlobalChan(byte channelName[]);
	/**
	 * Original signature : <code>int32 DAQmxDeleteSavedScale(const char[])</code><br>
	 * <i>native declaration : line 3330</i><br>
	 * @deprecated use the safer methods {@link #DAQmxDeleteSavedScale(byte[])} and {@link #DAQmxDeleteSavedScale(com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxDeleteSavedScale(Pointer scaleName);
	/**
	 * Original signature : <code>int32 DAQmxDeleteSavedScale(const char[])</code><br>
	 * <i>native declaration : line 3330</i>
	 */
	// int DAQmxDeleteSavedScale(byte scaleName[]);
	/**
	 * Original signature : <code>int32 DAQmxGetPersistedTaskAttribute(const char[], int32, void*, null)</code><br>
	 * <i>native declaration : line 3332</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetPersistedTaskAttribute(byte[], int, com.sun.jna.Pointer, java.lang.Object)} and {@link #DAQmxGetPersistedTaskAttribute(com.sun.jna.Pointer, int, com.sun.jna.Pointer, java.lang.Object)} instead
	 */
	//Deprecated 
	// int DAQmxGetPersistedTaskAttribute(Pointer taskName, int attribute, Pointer value, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxGetPersistedTaskAttribute(const char[], int32, void*, null)</code><br>
	 * <i>native declaration : line 3332</i>
	 */
	// int DAQmxGetPersistedTaskAttribute(byte taskName[], int attribute, Pointer value, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxGetPersistedChanAttribute(const char[], int32, void*, null)</code><br>
	 * <i>native declaration : line 3333</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetPersistedChanAttribute(byte[], int, com.sun.jna.Pointer, java.lang.Object)} and {@link #DAQmxGetPersistedChanAttribute(com.sun.jna.Pointer, int, com.sun.jna.Pointer, java.lang.Object)} instead
	 */
	//Deprecated 
	// int DAQmxGetPersistedChanAttribute(Pointer channel, int attribute, Pointer value, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxGetPersistedChanAttribute(const char[], int32, void*, null)</code><br>
	 * <i>native declaration : line 3333</i>
	 */
	// int DAQmxGetPersistedChanAttribute(byte channel[], int attribute, Pointer value, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxGetPersistedScaleAttribute(const char[], int32, void*, null)</code><br>
	 * <i>native declaration : line 3334</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetPersistedScaleAttribute(byte[], int, com.sun.jna.Pointer, java.lang.Object)} and {@link #DAQmxGetPersistedScaleAttribute(com.sun.jna.Pointer, int, com.sun.jna.Pointer, java.lang.Object)} instead
	 */
	//Deprecated 
	// int DAQmxGetPersistedScaleAttribute(Pointer scaleName, int attribute, Pointer value, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxGetPersistedScaleAttribute(const char[], int32, void*, null)</code><br>
	 * <i>native declaration : line 3334</i>
	 */
	// int DAQmxGetPersistedScaleAttribute(byte scaleName[], int attribute, Pointer value, Object... varArgs1);
	/**
	 * /<br>
	 * Original signature : <code>int32 DAQmxGetSystemInfoAttribute(int32, void*, null)</code><br>
	 * <i>native declaration : line 3341</i>
	 */
	// int DAQmxGetSystemInfoAttribute(int attribute, Pointer value, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxSetDigitalPowerUpStates(const char[], const char[], int32, null)</code><br>
	 * <i>native declaration : line 3342</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetDigitalPowerUpStates(byte[], byte[], int, java.lang.Object)} and {@link #DAQmxSetDigitalPowerUpStates(com.sun.jna.Pointer, com.sun.jna.Pointer, int, java.lang.Object)} instead
	 */
	//Deprecated 
	// int DAQmxSetDigitalPowerUpStates(Pointer deviceName, Pointer channelNames, int state, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxSetDigitalPowerUpStates(const char[], const char[], int32, null)</code><br>
	 * <i>native declaration : line 3342</i>
	 */
	// int DAQmxSetDigitalPowerUpStates(byte deviceName[], byte channelNames[], int state, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxGetDigitalPowerUpStates(const char[], const char[], int32*, null)</code><br>
	 * <i>native declaration : line 3343</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDigitalPowerUpStates(byte[], byte[], java.nio.IntBuffer, java.lang.Object)} and {@link #DAQmxGetDigitalPowerUpStates(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference, java.lang.Object)} instead
	 */
	//Deprecated 
	// int DAQmxGetDigitalPowerUpStates(Pointer deviceName, Pointer channelName, IntByReference state, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxGetDigitalPowerUpStates(const char[], const char[], int32*, null)</code><br>
	 * <i>native declaration : line 3343</i>
	 */
	// int DAQmxGetDigitalPowerUpStates(byte deviceName[], byte channelName[], IntBuffer state, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxSetDigitalPullUpPullDownStates(const char[], const char[], int32, null)</code><br>
	 * <i>native declaration : line 3344</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetDigitalPullUpPullDownStates(byte[], byte[], int, java.lang.Object)} and {@link #DAQmxSetDigitalPullUpPullDownStates(com.sun.jna.Pointer, com.sun.jna.Pointer, int, java.lang.Object)} instead
	 */
	//Deprecated 
	// int DAQmxSetDigitalPullUpPullDownStates(Pointer deviceName, Pointer channelName, int state, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxSetDigitalPullUpPullDownStates(const char[], const char[], int32, null)</code><br>
	 * <i>native declaration : line 3344</i>
	 */
	// int DAQmxSetDigitalPullUpPullDownStates(byte deviceName[], byte channelName[], int state, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxGetDigitalPullUpPullDownStates(const char[], const char[], int32*, null)</code><br>
	 * <i>native declaration : line 3345</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDigitalPullUpPullDownStates(byte[], byte[], java.nio.IntBuffer, java.lang.Object)} and {@link #DAQmxGetDigitalPullUpPullDownStates(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference, java.lang.Object)} instead
	 */
	//Deprecated 
	// int DAQmxGetDigitalPullUpPullDownStates(Pointer deviceName, Pointer channelName, IntByReference state, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxGetDigitalPullUpPullDownStates(const char[], const char[], int32*, null)</code><br>
	 * <i>native declaration : line 3345</i>
	 */
	// int DAQmxGetDigitalPullUpPullDownStates(byte deviceName[], byte channelName[], IntBuffer state, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxSetAnalogPowerUpStates(const char[], const char[], float64, int32, null)</code><br>
	 * <i>native declaration : line 3346</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAnalogPowerUpStates(byte[], byte[], double, int, java.lang.Object)} and {@link #DAQmxSetAnalogPowerUpStates(com.sun.jna.Pointer, com.sun.jna.Pointer, double, int, java.lang.Object)} instead
	 */
	//Deprecated 
	// int DAQmxSetAnalogPowerUpStates(Pointer deviceName, Pointer channelNames, double state, int channelType, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxSetAnalogPowerUpStates(const char[], const char[], float64, int32, null)</code><br>
	 * <i>native declaration : line 3346</i>
	 */
	// int DAQmxSetAnalogPowerUpStates(byte deviceName[], byte channelNames[], double state, int channelType, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxSetAnalogPowerUpStatesWithOutputType(const char[], const float64[], const int32[], uInt32)</code><br>
	 * <i>native declaration : line 3347</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAnalogPowerUpStatesWithOutputType(byte[], java.nio.DoubleBuffer, int[], com.sun.jna.NativeLong)} and {@link #DAQmxSetAnalogPowerUpStatesWithOutputType(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetAnalogPowerUpStatesWithOutputType(Pointer channelNames, DoubleByReference stateArray, IntByReference channelTypeArray, NativeLong arraySize);
	/**
	 * Original signature : <code>int32 DAQmxSetAnalogPowerUpStatesWithOutputType(const char[], const float64[], const int32[], uInt32)</code><br>
	 * <i>native declaration : line 3347</i>
	 */
	// int DAQmxSetAnalogPowerUpStatesWithOutputType(byte channelNames[], DoubleBuffer stateArray, int channelTypeArray[], NativeLong arraySize);
	/**
	 * Original signature : <code>int32 DAQmxGetAnalogPowerUpStates(const char[], const char[], float64*, int32, null)</code><br>
	 * <i>native declaration : line 3348</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAnalogPowerUpStates(byte[], byte[], java.nio.DoubleBuffer, int, java.lang.Object)} and {@link #DAQmxGetAnalogPowerUpStates(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, int, java.lang.Object)} instead
	 */
	//Deprecated 
	// int DAQmxGetAnalogPowerUpStates(Pointer deviceName, Pointer channelName, DoubleByReference state, int channelType, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxGetAnalogPowerUpStates(const char[], const char[], float64*, int32, null)</code><br>
	 * <i>native declaration : line 3348</i>
	 */
	// int DAQmxGetAnalogPowerUpStates(byte deviceName[], byte channelName[], DoubleBuffer state, int channelType, Object... varArgs1);
	/**
	 * Original signature : <code>int32 DAQmxGetAnalogPowerUpStatesWithOutputType(const char[], float64[], int32[], uInt32*)</code><br>
	 * <i>native declaration : line 3349</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAnalogPowerUpStatesWithOutputType(byte[], java.nio.DoubleBuffer, java.nio.IntBuffer, com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetAnalogPowerUpStatesWithOutputType(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.ptr.IntByReference, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAnalogPowerUpStatesWithOutputType(Pointer channelNames, DoubleByReference stateArray, IntByReference channelTypeArray, NativeLongByReference arraySizePtr);
	/**
	 * Original signature : <code>int32 DAQmxGetAnalogPowerUpStatesWithOutputType(const char[], float64[], int32[], uInt32*)</code><br>
	 * <i>native declaration : line 3349</i>
	 */
	// int DAQmxGetAnalogPowerUpStatesWithOutputType(byte channelNames[], DoubleBuffer stateArray, IntBuffer channelTypeArray, NativeLongByReference arraySizePtr);
	/**
	 * Original signature : <code>int32 DAQmxSetDigitalLogicFamilyPowerUpState(const char[], int32)</code><br>
	 * <i>native declaration : line 3350</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetDigitalLogicFamilyPowerUpState(byte[], int)} and {@link #DAQmxSetDigitalLogicFamilyPowerUpState(com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetDigitalLogicFamilyPowerUpState(Pointer deviceName, int logicFamily);
	/**
	 * Original signature : <code>int32 DAQmxSetDigitalLogicFamilyPowerUpState(const char[], int32)</code><br>
	 * <i>native declaration : line 3350</i>
	 */
	// int DAQmxSetDigitalLogicFamilyPowerUpState(byte deviceName[], int logicFamily);
	/**
	 * Original signature : <code>int32 DAQmxGetDigitalLogicFamilyPowerUpState(const char[], int32*)</code><br>
	 * <i>native declaration : line 3351</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDigitalLogicFamilyPowerUpState(byte[], java.nio.IntBuffer)} and {@link #DAQmxGetDigitalLogicFamilyPowerUpState(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDigitalLogicFamilyPowerUpState(Pointer deviceName, IntByReference logicFamily);
	/**
	 * Original signature : <code>int32 DAQmxGetDigitalLogicFamilyPowerUpState(const char[], int32*)</code><br>
	 * <i>native declaration : line 3351</i>
	 */
	// int DAQmxGetDigitalLogicFamilyPowerUpState(byte deviceName[], IntBuffer logicFamily);
	/**
	 * Original signature : <code>int32 DAQmxAddNetworkDevice(const char[], const char[], bool32, float64, char[], uInt32)</code><br>
	 * <i>native declaration : line 3352</i><br>
	 * @deprecated use the safer methods {@link #DAQmxAddNetworkDevice(byte[], byte[], com.sun.jna.NativeLong, double, java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxAddNetworkDevice(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong, double, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxAddNetworkDevice(Pointer IPAddress, Pointer deviceName, NativeLong attemptReservation, double timeout, Pointer deviceNameOut, NativeLong deviceNameOutBufferSize);
	/**
	 * Original signature : <code>int32 DAQmxAddNetworkDevice(const char[], const char[], bool32, float64, char[], uInt32)</code><br>
	 * <i>native declaration : line 3352</i>
	 */
	// int DAQmxAddNetworkDevice(byte IPAddress[], byte deviceName[], NativeLong attemptReservation, double timeout, ByteBuffer deviceNameOut, NativeLong deviceNameOutBufferSize);
	/**
	 * Original signature : <code>int32 DAQmxDeleteNetworkDevice(const char[])</code><br>
	 * <i>native declaration : line 3353</i><br>
	 * @deprecated use the safer methods {@link #DAQmxDeleteNetworkDevice(byte[])} and {@link #DAQmxDeleteNetworkDevice(com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxDeleteNetworkDevice(Pointer deviceName);
	/**
	 * Original signature : <code>int32 DAQmxDeleteNetworkDevice(const char[])</code><br>
	 * <i>native declaration : line 3353</i>
	 */
	// int DAQmxDeleteNetworkDevice(byte deviceName[]);
	/**
	 * Original signature : <code>int32 DAQmxReserveNetworkDevice(const char[], bool32)</code><br>
	 * <i>native declaration : line 3354</i><br>
	 * @deprecated use the safer methods {@link #DAQmxReserveNetworkDevice(byte[], com.sun.jna.NativeLong)} and {@link #DAQmxReserveNetworkDevice(com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxReserveNetworkDevice(Pointer deviceName, NativeLong overrideReservation);
	/**
	 * Original signature : <code>int32 DAQmxReserveNetworkDevice(const char[], bool32)</code><br>
	 * <i>native declaration : line 3354</i>
	 */
	// int DAQmxReserveNetworkDevice(byte deviceName[], NativeLong overrideReservation);
	/**
	 * Original signature : <code>int32 DAQmxUnreserveNetworkDevice(const char[])</code><br>
	 * <i>native declaration : line 3355</i><br>
	 * @deprecated use the safer methods {@link #DAQmxUnreserveNetworkDevice(byte[])} and {@link #DAQmxUnreserveNetworkDevice(com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxUnreserveNetworkDevice(Pointer deviceName);
	/**
	 * Original signature : <code>int32 DAQmxUnreserveNetworkDevice(const char[])</code><br>
	 * <i>native declaration : line 3355</i>
	 */
	// int DAQmxUnreserveNetworkDevice(byte deviceName[]);
	/**
	 * /<br>
	 * Original signature : <code>int32 DAQmxAutoConfigureCDAQSyncConnections(const char[], float64)</code><br>
	 * <i>native declaration : line 3362</i><br>
	 * @deprecated use the safer methods {@link #DAQmxAutoConfigureCDAQSyncConnections(byte[], double)} and {@link #DAQmxAutoConfigureCDAQSyncConnections(com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxAutoConfigureCDAQSyncConnections(Pointer chassisDevicesPorts, double timeout);
	/**
	 * /<br>
	 * Original signature : <code>int32 DAQmxAutoConfigureCDAQSyncConnections(const char[], float64)</code><br>
	 * <i>native declaration : line 3362</i>
	 */
	// int DAQmxAutoConfigureCDAQSyncConnections(byte chassisDevicesPorts[], double timeout);
	/**
	 * Original signature : <code>int32 DAQmxGetAutoConfiguredCDAQSyncConnections(char[], uInt32)</code><br>
	 * <i>native declaration : line 3363</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAutoConfiguredCDAQSyncConnections(java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetAutoConfiguredCDAQSyncConnections(com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetAutoConfiguredCDAQSyncConnections(Pointer portList, NativeLong portListSize);
	/**
	 * Original signature : <code>int32 DAQmxGetAutoConfiguredCDAQSyncConnections(char[], uInt32)</code><br>
	 * <i>native declaration : line 3363</i>
	 */
	// int DAQmxGetAutoConfiguredCDAQSyncConnections(ByteBuffer portList, NativeLong portListSize);
	/**
	 * Original signature : <code>int32 DAQmxAreConfiguredCDAQSyncPortsDisconnected(const char[], float64, bool32*)</code><br>
	 * <i>native declaration : line 3364</i><br>
	 * @deprecated use the safer methods {@link #DAQmxAreConfiguredCDAQSyncPortsDisconnected(byte[], double, com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxAreConfiguredCDAQSyncPortsDisconnected(com.sun.jna.Pointer, double, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxAreConfiguredCDAQSyncPortsDisconnected(Pointer chassisDevicesPorts, double timeout, NativeLongByReference disconnectedPortsExist);
	/**
	 * Original signature : <code>int32 DAQmxAreConfiguredCDAQSyncPortsDisconnected(const char[], float64, bool32*)</code><br>
	 * <i>native declaration : line 3364</i>
	 */
	// int DAQmxAreConfiguredCDAQSyncPortsDisconnected(byte chassisDevicesPorts[], double timeout, NativeLongByReference disconnectedPortsExist);
	/**
	 * Original signature : <code>int32 DAQmxGetDisconnectedCDAQSyncPorts(char[], uInt32)</code><br>
	 * <i>native declaration : line 3365</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDisconnectedCDAQSyncPorts(java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetDisconnectedCDAQSyncPorts(com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetDisconnectedCDAQSyncPorts(Pointer portList, NativeLong portListSize);
	/**
	 * Original signature : <code>int32 DAQmxGetDisconnectedCDAQSyncPorts(char[], uInt32)</code><br>
	 * <i>native declaration : line 3365</i>
	 */
	// int DAQmxGetDisconnectedCDAQSyncPorts(ByteBuffer portList, NativeLong portListSize);
	/**
	 * Original signature : <code>int32 DAQmxAddCDAQSyncConnection(const char[])</code><br>
	 * <i>native declaration : line 3366</i><br>
	 * @deprecated use the safer methods {@link #DAQmxAddCDAQSyncConnection(byte[])} and {@link #DAQmxAddCDAQSyncConnection(com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxAddCDAQSyncConnection(Pointer portList);
	/**
	 * Original signature : <code>int32 DAQmxAddCDAQSyncConnection(const char[])</code><br>
	 * <i>native declaration : line 3366</i>
	 */
	// int DAQmxAddCDAQSyncConnection(byte portList[]);
	/**
	 * Original signature : <code>int32 DAQmxRemoveCDAQSyncConnection(const char[])</code><br>
	 * <i>native declaration : line 3367</i><br>
	 * @deprecated use the safer methods {@link #DAQmxRemoveCDAQSyncConnection(byte[])} and {@link #DAQmxRemoveCDAQSyncConnection(com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxRemoveCDAQSyncConnection(Pointer portList);
	/**
	 * Original signature : <code>int32 DAQmxRemoveCDAQSyncConnection(const char[])</code><br>
	 * <i>native declaration : line 3367</i>
	 */
	// int DAQmxRemoveCDAQSyncConnection(byte portList[]);

    /**
	 * /<br>
	 * Original signature : <code>int32 DAQmxGetErrorString(int32, char[], uInt32)</code><br>
	 * <i>native declaration : line 3376</i>
	 */
	int DAQmxGetErrorString(int errorCode, ByteBuffer errorString, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxGetExtendedErrorInfo(char[], uInt32)</code><br>
	 * <i>native declaration : line 3377</i>
	 */
	int DAQmxGetExtendedErrorInfo(ByteBuffer errorString, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Buf_Input_BufSize ***<br>
	 * Original signature : <code>int32 DAQmxGetBufInputBufSize(TaskHandle, uInt32*)</code><br>
	 * <i>native declaration : line 3386</i>
	 */
	// int DAQmxGetBufInputBufSize(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetBufInputBufSize(TaskHandle, uInt32)</code><br>
	 * <i>native declaration : line 3387</i>
	 */
	// int DAQmxSetBufInputBufSize(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetBufInputBufSize(TaskHandle)</code><br>
	 * <i>native declaration : line 3388</i>
	 */
	// int DAQmxResetBufInputBufSize(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Buf_Input_OnbrdBufSize ***<br>
	 * Original signature : <code>int32 DAQmxGetBufInputOnbrdBufSize(TaskHandle, uInt32*)</code><br>
	 * <i>native declaration : line 3390</i>
	 */
	// int DAQmxGetBufInputOnbrdBufSize(Pointer taskHandle, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Buf_Output_BufSize ***<br>
	 * Original signature : <code>int32 DAQmxGetBufOutputBufSize(TaskHandle, uInt32*)</code><br>
	 * <i>native declaration : line 3392</i>
	 */
	// int DAQmxGetBufOutputBufSize(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetBufOutputBufSize(TaskHandle, uInt32)</code><br>
	 * <i>native declaration : line 3393</i>
	 */
	// int DAQmxSetBufOutputBufSize(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetBufOutputBufSize(TaskHandle)</code><br>
	 * <i>native declaration : line 3394</i>
	 */
	// int DAQmxResetBufOutputBufSize(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Buf_Output_OnbrdBufSize ***<br>
	 * Original signature : <code>int32 DAQmxGetBufOutputOnbrdBufSize(TaskHandle, uInt32*)</code><br>
	 * <i>native declaration : line 3396</i>
	 */
	// int DAQmxGetBufOutputOnbrdBufSize(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetBufOutputOnbrdBufSize(TaskHandle, uInt32)</code><br>
	 * <i>native declaration : line 3397</i>
	 */
	// int DAQmxSetBufOutputOnbrdBufSize(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetBufOutputOnbrdBufSize(TaskHandle)</code><br>
	 * <i>native declaration : line 3398</i>
	 */
	// int DAQmxResetBufOutputOnbrdBufSize(Pointer taskHandle);

	/**
	 * *** Set/Get functions for DAQmx_SelfCal_Supported ***<br>
	 * Original signature : <code>int32 DAQmxGetSelfCalSupported(const char[], bool32*)</code><br>
	 * <i>native declaration : line 3402</i>
	 */
	// int DAQmxGetSelfCalSupported(byte deviceName[], NativeLongByReference data);

	/**
	 * *** Set/Get functions for DAQmx_SelfCal_LastTemp ***<br>
	 * Original signature : <code>int32 DAQmxGetSelfCalLastTemp(const char[], float64*)</code><br>
	 * <i>native declaration : line 3404</i>
	 */
	// int DAQmxGetSelfCalLastTemp(byte deviceName[], DoubleBuffer data);

	/**
	 * *** Set/Get functions for DAQmx_ExtCal_RecommendedInterval ***<br>
	 * Original signature : <code>int32 DAQmxGetExtCalRecommendedInterval(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 3406</i>
	 */
	// int DAQmxGetExtCalRecommendedInterval(byte deviceName[], NativeLongByReference data);

	/**
	 * *** Set/Get functions for DAQmx_ExtCal_LastTemp ***<br>
	 * Original signature : <code>int32 DAQmxGetExtCalLastTemp(const char[], float64*)</code><br>
	 * <i>native declaration : line 3408</i>
	 */
	// int DAQmxGetExtCalLastTemp(byte deviceName[], DoubleBuffer data);

	/**
	 * *** Set/Get functions for DAQmx_Cal_UserDefinedInfo ***<br>
	 * Original signature : <code>int32 DAQmxGetCalUserDefinedInfo(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 3410</i>
	 */
	// int DAQmxGetCalUserDefinedInfo(byte deviceName[], ByteBuffer data, NativeLong bufferSize);

	/**
	 * Original signature : <code>int32 DAQmxSetCalUserDefinedInfo(const char[], const char*)</code><br>
	 * <i>native declaration : line 3411</i>
	 */
	// int DAQmxSetCalUserDefinedInfo(byte deviceName[], String data);

	/**
	 * *** Set/Get functions for DAQmx_Cal_UserDefinedInfo_MaxSize ***<br>
	 * Original signature : <code>int32 DAQmxGetCalUserDefinedInfoMaxSize(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 3413</i>
	 */
	// int DAQmxGetCalUserDefinedInfoMaxSize(byte deviceName[], NativeLongByReference data);

	/**
	 * *** Set/Get functions for DAQmx_Cal_DevTemp ***<br>
	 * Original signature : <code>int32 DAQmxGetCalDevTemp(const char[], float64*)</code><br>
	 * <i>native declaration : line 3415</i>
	 */
	// int DAQmxGetCalDevTemp(byte deviceName[], DoubleBuffer data);

	/**
	 * *** Set/Get functions for DAQmx_Cal_AccConnectionCount ***<br>
	 * Original signature : <code>int32 DAQmxGetCalAccConnectionCount(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 3417</i>
	 */
	// int DAQmxGetCalAccConnectionCount(byte deviceName[], NativeLongByReference data);

	/**
	 * Original signature : <code>int32 DAQmxSetCalAccConnectionCount(const char[], uInt32)</code><br>
	 * <i>native declaration : line 3418</i>
	 */
	// int DAQmxSetCalAccConnectionCount(byte deviceName[], NativeLong data);

	/**
	 * *** Set/Get functions for DAQmx_Cal_RecommendedAccConnectionCountLimit ***<br>
	 * Original signature : <code>int32 DAQmxGetCalRecommendedAccConnectionCountLimit(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 3420</i>
	 */
	// int DAQmxGetCalRecommendedAccConnectionCountLimit(byte deviceName[], NativeLongByReference data);

	/**
	 * *** Set/Get functions for DAQmx_AI_Max ***<br>
	 * Original signature : <code>int32 DAQmxGetAIMax(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3424</i>
	 */
	// int DAQmxGetAIMax(Pointer taskHandle, byte channel[], DoubleBuffer data);

	/**
	 * Original signature : <code>int32 DAQmxSetAIMax(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3425</i>
	 */
	// int DAQmxSetAIMax(Pointer taskHandle, byte channel[], double data);

	/**
	 * Original signature : <code>int32 DAQmxResetAIMax(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3426</i>
	 */
	// int DAQmxResetAIMax(Pointer taskHandle, byte channel[]);

	/**
	 * *** Set/Get functions for DAQmx_AI_Min ***<br>
	 * Original signature : <code>int32 DAQmxGetAIMin(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3428</i>
	 */
	// int DAQmxGetAIMin(Pointer taskHandle, byte channel[], DoubleBuffer data);

	/**
	 * Original signature : <code>int32 DAQmxSetAIMin(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3429</i>
	 */
	// int DAQmxSetAIMin(Pointer taskHandle, byte channel[], double data);

	/**
	 * Original signature : <code>int32 DAQmxResetAIMin(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3430</i>
	 */
	// int DAQmxResetAIMin(Pointer taskHandle, byte channel[]);

	/**
	 * *** Set/Get functions for DAQmx_AI_CustomScaleName ***<br>
	 * Original signature : <code>int32 DAQmxGetAICustomScaleName(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 3432</i>
	 */
	// int DAQmxGetAICustomScaleName(Pointer taskHandle, byte channel[], ByteBuffer data, NativeLong bufferSize);

	/**
	 * Original signature : <code>int32 DAQmxSetAICustomScaleName(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 3433</i>
	 */
	// int DAQmxSetAICustomScaleName(Pointer taskHandle, byte channel[], String data);

	/**
	 * Original signature : <code>int32 DAQmxResetAICustomScaleName(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3434</i>
	 */
	// int DAQmxResetAICustomScaleName(Pointer taskHandle, byte channel[]);

	/**
	 * Uses value set AIMeasurementType<br>
	 * Original signature : <code>int32 DAQmxGetAIMeasType(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3437</i>
	 */
	// int DAQmxGetAIMeasType(Pointer taskHandle, byte channel[], IntBuffer data);

	/**
	 * Uses value set VoltageUnits1<br>
	 * Original signature : <code>int32 DAQmxGetAIVoltageUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3440</i>
	 */
	// int DAQmxGetAIVoltageUnits(Pointer taskHandle, byte channel[], IntBuffer data);

	/**
	 * Original signature : <code>int32 DAQmxSetAIVoltageUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3441</i>
	 */
	// int DAQmxSetAIVoltageUnits(Pointer taskHandle, byte channel[], int data);

	/**
	 * Original signature : <code>int32 DAQmxResetAIVoltageUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3442</i>
	 */
	// int DAQmxResetAIVoltageUnits(Pointer taskHandle, byte channel[]);

	/**
	 * *** Set/Get functions for DAQmx_AI_Voltage_dBRef ***<br>
	 * Original signature : <code>int32 DAQmxGetAIVoltagedBRef(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3444</i>
	 */
	// int DAQmxGetAIVoltagedBRef(Pointer taskHandle, byte channel[], DoubleBuffer data);

	/**
	 * Original signature : <code>int32 DAQmxSetAIVoltagedBRef(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3445</i>
	 */
	// int DAQmxSetAIVoltagedBRef(Pointer taskHandle, byte channel[], double data);

	/**
	 * Original signature : <code>int32 DAQmxResetAIVoltagedBRef(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3446</i>
	 */
	// int DAQmxResetAIVoltagedBRef(Pointer taskHandle, byte channel[]);

	/**
	 * Uses value set VoltageUnits1<br>
	 * Original signature : <code>int32 DAQmxGetAIVoltageACRMSUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3449</i>
	 */
	// int DAQmxGetAIVoltageACRMSUnits(Pointer taskHandle, byte channel[], IntBuffer data);

	/**
	 * Original signature : <code>int32 DAQmxSetAIVoltageACRMSUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3450</i>
	 */
	// int DAQmxSetAIVoltageACRMSUnits(Pointer taskHandle, byte channel[], int data);

	/**
	 * Original signature : <code>int32 DAQmxResetAIVoltageACRMSUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3451</i>
	 */
	// int DAQmxResetAIVoltageACRMSUnits(Pointer taskHandle, byte channel[]);

	/**
	 * Uses value set TemperatureUnits1<br>
	 * Original signature : <code>int32 DAQmxGetAITempUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3454</i>
	 */
	// int DAQmxGetAITempUnits(Pointer taskHandle, byte channel[], IntBuffer data);

	/**
	 * Original signature : <code>int32 DAQmxSetAITempUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3455</i>
	 */
	// int DAQmxSetAITempUnits(Pointer taskHandle, byte channel[], int data);

	/**
	 * Original signature : <code>int32 DAQmxResetAITempUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3456</i>
	 */
	// int DAQmxResetAITempUnits(Pointer taskHandle, byte channel[]);

	/**
	 * Uses value set ThermocoupleType1<br>
	 * Original signature : <code>int32 DAQmxGetAIThrmcplType(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3459</i>
	 */
	// int DAQmxGetAIThrmcplType(Pointer taskHandle, byte channel[], IntBuffer data);

	/**
	 * Original signature : <code>int32 DAQmxSetAIThrmcplType(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3460</i>
	 */
	// int DAQmxSetAIThrmcplType(Pointer taskHandle, byte channel[], int data);

	/**
	 * Original signature : <code>int32 DAQmxResetAIThrmcplType(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3461</i>
	 */
	// int DAQmxResetAIThrmcplType(Pointer taskHandle, byte channel[]);

	/**
	 * Uses value set ScaleType2<br>
	 * Original signature : <code>int32 DAQmxGetAIThrmcplScaleType(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3464</i>
	 */
	// int DAQmxGetAIThrmcplScaleType(Pointer taskHandle, byte channel[], IntBuffer data);

	/**
	 * Original signature : <code>int32 DAQmxSetAIThrmcplScaleType(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3465</i>
	 */
	// int DAQmxSetAIThrmcplScaleType(Pointer taskHandle, byte channel[], int data);

	/**
	 * Original signature : <code>int32 DAQmxResetAIThrmcplScaleType(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3466</i>
	 */
	// int DAQmxResetAIThrmcplScaleType(Pointer taskHandle, byte channel[]);

	/**
	 * Uses value set CJCSource1<br>
	 * Original signature : <code>int32 DAQmxGetAIThrmcplCJCSrc(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3469</i>
	 */
	// int DAQmxGetAIThrmcplCJCSrc(Pointer taskHandle, byte channel[], IntBuffer data);

	/**
	 * *** Set/Get functions for DAQmx_AI_Thrmcpl_CJCVal ***<br>
	 * Original signature : <code>int32 DAQmxGetAIThrmcplCJCVal(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3471</i>
	 */
	// int DAQmxGetAIThrmcplCJCVal(Pointer taskHandle, byte channel[], DoubleBuffer data);

	/**
	 * Original signature : <code>int32 DAQmxSetAIThrmcplCJCVal(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3472</i>
	 */
	// int DAQmxSetAIThrmcplCJCVal(Pointer taskHandle, byte channel[], double data);

	/**
	 * Original signature : <code>int32 DAQmxResetAIThrmcplCJCVal(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3473</i>
	 */
	// int DAQmxResetAIThrmcplCJCVal(Pointer taskHandle, byte channel[]);

	/**
	 * *** Set/Get functions for DAQmx_AI_Thrmcpl_CJCChan ***<br>
	 * Original signature : <code>int32 DAQmxGetAIThrmcplCJCChan(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 3475</i>
	 */
	// int DAQmxGetAIThrmcplCJCChan(Pointer taskHandle, byte channel[], ByteBuffer data, NativeLong bufferSize);
	/**
	 * Uses value set RTDType1<br>
	 * Original signature : <code>int32 DAQmxGetAIRTDType(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3478</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIRTDType(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetAIRTDType(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIRTDType(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set RTDType1<br>
	 * Original signature : <code>int32 DAQmxGetAIRTDType(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3478</i>
	 */
	// int DAQmxGetAIRTDType(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIRTDType(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3479</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIRTDType(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetAIRTDType(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIRTDType(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIRTDType(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3479</i>
	 */
	// int DAQmxSetAIRTDType(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIRTDType(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3480</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIRTDType(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIRTDType(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIRTDType(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIRTDType(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3480</i>
	 */
	// int DAQmxResetAIRTDType(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_RTD_R0 ***<br>
	 * Original signature : <code>int32 DAQmxGetAIRTDR0(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3482</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIRTDR0(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAIRTDR0(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIRTDR0(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_RTD_R0 ***<br>
	 * Original signature : <code>int32 DAQmxGetAIRTDR0(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3482</i>
	 */
	// int DAQmxGetAIRTDR0(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIRTDR0(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3483</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIRTDR0(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetAIRTDR0(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIRTDR0(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIRTDR0(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3483</i>
	 */
	// int DAQmxSetAIRTDR0(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIRTDR0(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3484</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIRTDR0(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIRTDR0(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIRTDR0(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIRTDR0(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3484</i>
	 */
	// int DAQmxResetAIRTDR0(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_RTD_A ***<br>
	 * Original signature : <code>int32 DAQmxGetAIRTDA(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3486</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIRTDA(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAIRTDA(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIRTDA(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_RTD_A ***<br>
	 * Original signature : <code>int32 DAQmxGetAIRTDA(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3486</i>
	 */
	// int DAQmxGetAIRTDA(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIRTDA(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3487</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIRTDA(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetAIRTDA(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIRTDA(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIRTDA(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3487</i>
	 */
	// int DAQmxSetAIRTDA(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIRTDA(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3488</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIRTDA(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIRTDA(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIRTDA(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIRTDA(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3488</i>
	 */
	// int DAQmxResetAIRTDA(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_RTD_B ***<br>
	 * Original signature : <code>int32 DAQmxGetAIRTDB(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3490</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIRTDB(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAIRTDB(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIRTDB(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_RTD_B ***<br>
	 * Original signature : <code>int32 DAQmxGetAIRTDB(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3490</i>
	 */
	// int DAQmxGetAIRTDB(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIRTDB(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3491</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIRTDB(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetAIRTDB(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIRTDB(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIRTDB(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3491</i>
	 */
	// int DAQmxSetAIRTDB(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIRTDB(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3492</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIRTDB(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIRTDB(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIRTDB(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIRTDB(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3492</i>
	 */
	// int DAQmxResetAIRTDB(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_RTD_C ***<br>
	 * Original signature : <code>int32 DAQmxGetAIRTDC(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3494</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIRTDC(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAIRTDC(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIRTDC(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_RTD_C ***<br>
	 * Original signature : <code>int32 DAQmxGetAIRTDC(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3494</i>
	 */
	// int DAQmxGetAIRTDC(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIRTDC(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3495</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIRTDC(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetAIRTDC(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIRTDC(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIRTDC(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3495</i>
	 */
	// int DAQmxSetAIRTDC(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIRTDC(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3496</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIRTDC(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIRTDC(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIRTDC(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIRTDC(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3496</i>
	 */
	// int DAQmxResetAIRTDC(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Thrmstr_A ***<br>
	 * Original signature : <code>int32 DAQmxGetAIThrmstrA(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3498</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIThrmstrA(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAIThrmstrA(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIThrmstrA(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Thrmstr_A ***<br>
	 * Original signature : <code>int32 DAQmxGetAIThrmstrA(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3498</i>
	 */
	// int DAQmxGetAIThrmstrA(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIThrmstrA(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3499</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIThrmstrA(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetAIThrmstrA(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIThrmstrA(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIThrmstrA(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3499</i>
	 */
	// int DAQmxSetAIThrmstrA(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIThrmstrA(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3500</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIThrmstrA(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIThrmstrA(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIThrmstrA(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIThrmstrA(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3500</i>
	 */
	// int DAQmxResetAIThrmstrA(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Thrmstr_B ***<br>
	 * Original signature : <code>int32 DAQmxGetAIThrmstrB(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3502</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIThrmstrB(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAIThrmstrB(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIThrmstrB(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Thrmstr_B ***<br>
	 * Original signature : <code>int32 DAQmxGetAIThrmstrB(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3502</i>
	 */
	// int DAQmxGetAIThrmstrB(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIThrmstrB(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3503</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIThrmstrB(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetAIThrmstrB(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIThrmstrB(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIThrmstrB(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3503</i>
	 */
	// int DAQmxSetAIThrmstrB(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIThrmstrB(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3504</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIThrmstrB(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIThrmstrB(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIThrmstrB(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIThrmstrB(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3504</i>
	 */
	// int DAQmxResetAIThrmstrB(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Thrmstr_C ***<br>
	 * Original signature : <code>int32 DAQmxGetAIThrmstrC(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3506</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIThrmstrC(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAIThrmstrC(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIThrmstrC(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Thrmstr_C ***<br>
	 * Original signature : <code>int32 DAQmxGetAIThrmstrC(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3506</i>
	 */
	// int DAQmxGetAIThrmstrC(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIThrmstrC(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3507</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIThrmstrC(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetAIThrmstrC(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIThrmstrC(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIThrmstrC(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3507</i>
	 */
	// int DAQmxSetAIThrmstrC(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIThrmstrC(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3508</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIThrmstrC(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIThrmstrC(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIThrmstrC(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIThrmstrC(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3508</i>
	 */
	// int DAQmxResetAIThrmstrC(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Thrmstr_R1 ***<br>
	 * Original signature : <code>int32 DAQmxGetAIThrmstrR1(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3510</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIThrmstrR1(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAIThrmstrR1(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIThrmstrR1(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Thrmstr_R1 ***<br>
	 * Original signature : <code>int32 DAQmxGetAIThrmstrR1(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3510</i>
	 */
	// int DAQmxGetAIThrmstrR1(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIThrmstrR1(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3511</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIThrmstrR1(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetAIThrmstrR1(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIThrmstrR1(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIThrmstrR1(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3511</i>
	 */
	// int DAQmxSetAIThrmstrR1(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIThrmstrR1(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3512</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIThrmstrR1(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIThrmstrR1(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIThrmstrR1(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIThrmstrR1(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3512</i>
	 */
	// int DAQmxResetAIThrmstrR1(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_ForceReadFromChan ***<br>
	 * Original signature : <code>int32 DAQmxGetAIForceReadFromChan(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 3514</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIForceReadFromChan(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetAIForceReadFromChan(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIForceReadFromChan(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_ForceReadFromChan ***<br>
	 * Original signature : <code>int32 DAQmxGetAIForceReadFromChan(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 3514</i>
	 */
	// int DAQmxGetAIForceReadFromChan(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIForceReadFromChan(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 3515</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIForceReadFromChan(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetAIForceReadFromChan(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIForceReadFromChan(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIForceReadFromChan(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 3515</i>
	 */
	// int DAQmxSetAIForceReadFromChan(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIForceReadFromChan(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3516</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIForceReadFromChan(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIForceReadFromChan(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIForceReadFromChan(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIForceReadFromChan(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3516</i>
	 */
	// int DAQmxResetAIForceReadFromChan(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set CurrentUnits1<br>
	 * Original signature : <code>int32 DAQmxGetAICurrentUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3519</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAICurrentUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetAICurrentUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAICurrentUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set CurrentUnits1<br>
	 * Original signature : <code>int32 DAQmxGetAICurrentUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3519</i>
	 */
	// int DAQmxGetAICurrentUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAICurrentUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3520</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAICurrentUnits(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetAICurrentUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetAICurrentUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAICurrentUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3520</i>
	 */
	// int DAQmxSetAICurrentUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAICurrentUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3521</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAICurrentUnits(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAICurrentUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAICurrentUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAICurrentUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3521</i>
	 */
	// int DAQmxResetAICurrentUnits(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set CurrentUnits1<br>
	 * Original signature : <code>int32 DAQmxGetAICurrentACRMSUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3524</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAICurrentACRMSUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetAICurrentACRMSUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAICurrentACRMSUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set CurrentUnits1<br>
	 * Original signature : <code>int32 DAQmxGetAICurrentACRMSUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3524</i>
	 */
	// int DAQmxGetAICurrentACRMSUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAICurrentACRMSUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3525</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAICurrentACRMSUnits(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetAICurrentACRMSUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetAICurrentACRMSUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAICurrentACRMSUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3525</i>
	 */
	// int DAQmxSetAICurrentACRMSUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAICurrentACRMSUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3526</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAICurrentACRMSUnits(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAICurrentACRMSUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAICurrentACRMSUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAICurrentACRMSUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3526</i>
	 */
	// int DAQmxResetAICurrentACRMSUnits(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set StrainUnits1<br>
	 * Original signature : <code>int32 DAQmxGetAIStrainUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3529</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIStrainUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetAIStrainUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIStrainUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set StrainUnits1<br>
	 * Original signature : <code>int32 DAQmxGetAIStrainUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3529</i>
	 */
	// int DAQmxGetAIStrainUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIStrainUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3530</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIStrainUnits(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetAIStrainUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIStrainUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIStrainUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3530</i>
	 */
	// int DAQmxSetAIStrainUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIStrainUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3531</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIStrainUnits(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIStrainUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIStrainUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIStrainUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3531</i>
	 */
	// int DAQmxResetAIStrainUnits(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_StrainGage_ForceReadFromChan ***<br>
	 * Original signature : <code>int32 DAQmxGetAIStrainGageForceReadFromChan(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 3533</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIStrainGageForceReadFromChan(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetAIStrainGageForceReadFromChan(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIStrainGageForceReadFromChan(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_StrainGage_ForceReadFromChan ***<br>
	 * Original signature : <code>int32 DAQmxGetAIStrainGageForceReadFromChan(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 3533</i>
	 */
	// int DAQmxGetAIStrainGageForceReadFromChan(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIStrainGageForceReadFromChan(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 3534</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIStrainGageForceReadFromChan(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetAIStrainGageForceReadFromChan(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIStrainGageForceReadFromChan(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIStrainGageForceReadFromChan(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 3534</i>
	 */
	// int DAQmxSetAIStrainGageForceReadFromChan(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIStrainGageForceReadFromChan(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3535</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIStrainGageForceReadFromChan(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIStrainGageForceReadFromChan(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIStrainGageForceReadFromChan(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIStrainGageForceReadFromChan(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3535</i>
	 */
	// int DAQmxResetAIStrainGageForceReadFromChan(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_StrainGage_GageFactor ***<br>
	 * Original signature : <code>int32 DAQmxGetAIStrainGageGageFactor(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3537</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIStrainGageGageFactor(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAIStrainGageGageFactor(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIStrainGageGageFactor(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_StrainGage_GageFactor ***<br>
	 * Original signature : <code>int32 DAQmxGetAIStrainGageGageFactor(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3537</i>
	 */
	// int DAQmxGetAIStrainGageGageFactor(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIStrainGageGageFactor(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3538</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIStrainGageGageFactor(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetAIStrainGageGageFactor(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIStrainGageGageFactor(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIStrainGageGageFactor(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3538</i>
	 */
	// int DAQmxSetAIStrainGageGageFactor(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIStrainGageGageFactor(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3539</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIStrainGageGageFactor(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIStrainGageGageFactor(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIStrainGageGageFactor(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIStrainGageGageFactor(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3539</i>
	 */
	// int DAQmxResetAIStrainGageGageFactor(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_StrainGage_PoissonRatio ***<br>
	 * Original signature : <code>int32 DAQmxGetAIStrainGagePoissonRatio(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3541</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIStrainGagePoissonRatio(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAIStrainGagePoissonRatio(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIStrainGagePoissonRatio(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_StrainGage_PoissonRatio ***<br>
	 * Original signature : <code>int32 DAQmxGetAIStrainGagePoissonRatio(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3541</i>
	 */
	// int DAQmxGetAIStrainGagePoissonRatio(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIStrainGagePoissonRatio(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3542</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIStrainGagePoissonRatio(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetAIStrainGagePoissonRatio(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIStrainGagePoissonRatio(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIStrainGagePoissonRatio(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3542</i>
	 */
	// int DAQmxSetAIStrainGagePoissonRatio(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIStrainGagePoissonRatio(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3543</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIStrainGagePoissonRatio(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIStrainGagePoissonRatio(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIStrainGagePoissonRatio(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIStrainGagePoissonRatio(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3543</i>
	 */
	// int DAQmxResetAIStrainGagePoissonRatio(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set StrainGageBridgeType1<br>
	 * Original signature : <code>int32 DAQmxGetAIStrainGageCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3546</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIStrainGageCfg(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetAIStrainGageCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIStrainGageCfg(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set StrainGageBridgeType1<br>
	 * Original signature : <code>int32 DAQmxGetAIStrainGageCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3546</i>
	 */
	// int DAQmxGetAIStrainGageCfg(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIStrainGageCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3547</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIStrainGageCfg(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetAIStrainGageCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIStrainGageCfg(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIStrainGageCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3547</i>
	 */
	// int DAQmxSetAIStrainGageCfg(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIStrainGageCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3548</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIStrainGageCfg(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIStrainGageCfg(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIStrainGageCfg(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIStrainGageCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3548</i>
	 */
	// int DAQmxResetAIStrainGageCfg(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set StrainGageRosetteType<br>
	 * Original signature : <code>int32 DAQmxGetAIRosetteStrainGageRosetteType(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3551</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIRosetteStrainGageRosetteType(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetAIRosetteStrainGageRosetteType(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIRosetteStrainGageRosetteType(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set StrainGageRosetteType<br>
	 * Original signature : <code>int32 DAQmxGetAIRosetteStrainGageRosetteType(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3551</i>
	 */
	// int DAQmxGetAIRosetteStrainGageRosetteType(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_AI_RosetteStrainGage_Orientation ***<br>
	 * Original signature : <code>int32 DAQmxGetAIRosetteStrainGageOrientation(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3553</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIRosetteStrainGageOrientation(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAIRosetteStrainGageOrientation(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIRosetteStrainGageOrientation(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_RosetteStrainGage_Orientation ***<br>
	 * Original signature : <code>int32 DAQmxGetAIRosetteStrainGageOrientation(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3553</i>
	 */
	// int DAQmxGetAIRosetteStrainGageOrientation(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIRosetteStrainGageOrientation(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3554</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIRosetteStrainGageOrientation(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetAIRosetteStrainGageOrientation(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIRosetteStrainGageOrientation(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIRosetteStrainGageOrientation(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3554</i>
	 */
	// int DAQmxSetAIRosetteStrainGageOrientation(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIRosetteStrainGageOrientation(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3555</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIRosetteStrainGageOrientation(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIRosetteStrainGageOrientation(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIRosetteStrainGageOrientation(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIRosetteStrainGageOrientation(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3555</i>
	 */
	// int DAQmxResetAIRosetteStrainGageOrientation(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_RosetteStrainGage_StrainChans ***<br>
	 * Original signature : <code>int32 DAQmxGetAIRosetteStrainGageStrainChans(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 3557</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIRosetteStrainGageStrainChans(com.sun.jna.Pointer, byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetAIRosetteStrainGageStrainChans(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIRosetteStrainGageStrainChans(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_AI_RosetteStrainGage_StrainChans ***<br>
	 * Original signature : <code>int32 DAQmxGetAIRosetteStrainGageStrainChans(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 3557</i>
	 */
	// int DAQmxGetAIRosetteStrainGageStrainChans(Pointer taskHandle, byte channel[], ByteBuffer data, NativeLong bufferSize);
	/**
	 * Uses value set StrainGageRosetteMeasurementType<br>
	 * Original signature : <code>int32 DAQmxGetAIRosetteStrainGageRosetteMeasType(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3560</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIRosetteStrainGageRosetteMeasType(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetAIRosetteStrainGageRosetteMeasType(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIRosetteStrainGageRosetteMeasType(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set StrainGageRosetteMeasurementType<br>
	 * Original signature : <code>int32 DAQmxGetAIRosetteStrainGageRosetteMeasType(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3560</i>
	 */
	// int DAQmxGetAIRosetteStrainGageRosetteMeasType(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIRosetteStrainGageRosetteMeasType(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3561</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIRosetteStrainGageRosetteMeasType(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetAIRosetteStrainGageRosetteMeasType(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIRosetteStrainGageRosetteMeasType(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIRosetteStrainGageRosetteMeasType(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3561</i>
	 */
	// int DAQmxSetAIRosetteStrainGageRosetteMeasType(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIRosetteStrainGageRosetteMeasType(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3562</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIRosetteStrainGageRosetteMeasType(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIRosetteStrainGageRosetteMeasType(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIRosetteStrainGageRosetteMeasType(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIRosetteStrainGageRosetteMeasType(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3562</i>
	 */
	// int DAQmxResetAIRosetteStrainGageRosetteMeasType(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set ResistanceUnits1<br>
	 * Original signature : <code>int32 DAQmxGetAIResistanceUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3565</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIResistanceUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetAIResistanceUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIResistanceUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set ResistanceUnits1<br>
	 * Original signature : <code>int32 DAQmxGetAIResistanceUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3565</i>
	 */
	// int DAQmxGetAIResistanceUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIResistanceUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3566</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIResistanceUnits(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetAIResistanceUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIResistanceUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIResistanceUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3566</i>
	 */
	// int DAQmxSetAIResistanceUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIResistanceUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3567</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIResistanceUnits(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIResistanceUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIResistanceUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIResistanceUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3567</i>
	 */
	// int DAQmxResetAIResistanceUnits(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set FrequencyUnits<br>
	 * Original signature : <code>int32 DAQmxGetAIFreqUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3570</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIFreqUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetAIFreqUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIFreqUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set FrequencyUnits<br>
	 * Original signature : <code>int32 DAQmxGetAIFreqUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3570</i>
	 */
	// int DAQmxGetAIFreqUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIFreqUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3571</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIFreqUnits(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetAIFreqUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIFreqUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIFreqUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3571</i>
	 */
	// int DAQmxSetAIFreqUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIFreqUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3572</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIFreqUnits(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIFreqUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIFreqUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIFreqUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3572</i>
	 */
	// int DAQmxResetAIFreqUnits(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Freq_ThreshVoltage ***<br>
	 * Original signature : <code>int32 DAQmxGetAIFreqThreshVoltage(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3574</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIFreqThreshVoltage(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAIFreqThreshVoltage(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIFreqThreshVoltage(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Freq_ThreshVoltage ***<br>
	 * Original signature : <code>int32 DAQmxGetAIFreqThreshVoltage(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3574</i>
	 */
	// int DAQmxGetAIFreqThreshVoltage(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIFreqThreshVoltage(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3575</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIFreqThreshVoltage(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetAIFreqThreshVoltage(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIFreqThreshVoltage(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIFreqThreshVoltage(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3575</i>
	 */
	// int DAQmxSetAIFreqThreshVoltage(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIFreqThreshVoltage(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3576</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIFreqThreshVoltage(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIFreqThreshVoltage(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIFreqThreshVoltage(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIFreqThreshVoltage(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3576</i>
	 */
	// int DAQmxResetAIFreqThreshVoltage(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Freq_Hyst ***<br>
	 * Original signature : <code>int32 DAQmxGetAIFreqHyst(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3578</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIFreqHyst(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAIFreqHyst(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIFreqHyst(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Freq_Hyst ***<br>
	 * Original signature : <code>int32 DAQmxGetAIFreqHyst(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3578</i>
	 */
	// int DAQmxGetAIFreqHyst(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIFreqHyst(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3579</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIFreqHyst(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetAIFreqHyst(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIFreqHyst(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIFreqHyst(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3579</i>
	 */
	// int DAQmxSetAIFreqHyst(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIFreqHyst(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3580</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIFreqHyst(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIFreqHyst(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIFreqHyst(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIFreqHyst(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3580</i>
	 */
	// int DAQmxResetAIFreqHyst(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set LengthUnits2<br>
	 * Original signature : <code>int32 DAQmxGetAILVDTUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3583</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAILVDTUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetAILVDTUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAILVDTUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set LengthUnits2<br>
	 * Original signature : <code>int32 DAQmxGetAILVDTUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3583</i>
	 */
	// int DAQmxGetAILVDTUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAILVDTUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3584</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAILVDTUnits(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetAILVDTUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetAILVDTUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAILVDTUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3584</i>
	 */
	// int DAQmxSetAILVDTUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAILVDTUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3585</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAILVDTUnits(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAILVDTUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAILVDTUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAILVDTUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3585</i>
	 */
	// int DAQmxResetAILVDTUnits(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_LVDT_Sensitivity ***<br>
	 * Original signature : <code>int32 DAQmxGetAILVDTSensitivity(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3587</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAILVDTSensitivity(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAILVDTSensitivity(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAILVDTSensitivity(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_LVDT_Sensitivity ***<br>
	 * Original signature : <code>int32 DAQmxGetAILVDTSensitivity(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3587</i>
	 */
	// int DAQmxGetAILVDTSensitivity(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAILVDTSensitivity(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3588</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAILVDTSensitivity(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetAILVDTSensitivity(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetAILVDTSensitivity(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAILVDTSensitivity(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3588</i>
	 */
	// int DAQmxSetAILVDTSensitivity(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAILVDTSensitivity(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3589</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAILVDTSensitivity(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAILVDTSensitivity(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAILVDTSensitivity(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAILVDTSensitivity(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3589</i>
	 */
	// int DAQmxResetAILVDTSensitivity(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set LVDTSensitivityUnits1<br>
	 * Original signature : <code>int32 DAQmxGetAILVDTSensitivityUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3592</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAILVDTSensitivityUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetAILVDTSensitivityUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAILVDTSensitivityUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set LVDTSensitivityUnits1<br>
	 * Original signature : <code>int32 DAQmxGetAILVDTSensitivityUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3592</i>
	 */
	// int DAQmxGetAILVDTSensitivityUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAILVDTSensitivityUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3593</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAILVDTSensitivityUnits(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetAILVDTSensitivityUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetAILVDTSensitivityUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAILVDTSensitivityUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3593</i>
	 */
	// int DAQmxSetAILVDTSensitivityUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAILVDTSensitivityUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3594</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAILVDTSensitivityUnits(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAILVDTSensitivityUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAILVDTSensitivityUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAILVDTSensitivityUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3594</i>
	 */
	// int DAQmxResetAILVDTSensitivityUnits(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set AngleUnits1<br>
	 * Original signature : <code>int32 DAQmxGetAIRVDTUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3597</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIRVDTUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetAIRVDTUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIRVDTUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set AngleUnits1<br>
	 * Original signature : <code>int32 DAQmxGetAIRVDTUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3597</i>
	 */
	// int DAQmxGetAIRVDTUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIRVDTUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3598</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIRVDTUnits(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetAIRVDTUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIRVDTUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIRVDTUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3598</i>
	 */
	// int DAQmxSetAIRVDTUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIRVDTUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3599</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIRVDTUnits(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIRVDTUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIRVDTUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIRVDTUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3599</i>
	 */
	// int DAQmxResetAIRVDTUnits(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_RVDT_Sensitivity ***<br>
	 * Original signature : <code>int32 DAQmxGetAIRVDTSensitivity(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3601</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIRVDTSensitivity(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAIRVDTSensitivity(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIRVDTSensitivity(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_RVDT_Sensitivity ***<br>
	 * Original signature : <code>int32 DAQmxGetAIRVDTSensitivity(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3601</i>
	 */
	// int DAQmxGetAIRVDTSensitivity(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIRVDTSensitivity(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3602</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIRVDTSensitivity(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetAIRVDTSensitivity(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIRVDTSensitivity(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIRVDTSensitivity(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3602</i>
	 */
	// int DAQmxSetAIRVDTSensitivity(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIRVDTSensitivity(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3603</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIRVDTSensitivity(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIRVDTSensitivity(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIRVDTSensitivity(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIRVDTSensitivity(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3603</i>
	 */
	// int DAQmxResetAIRVDTSensitivity(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set RVDTSensitivityUnits1<br>
	 * Original signature : <code>int32 DAQmxGetAIRVDTSensitivityUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3606</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIRVDTSensitivityUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetAIRVDTSensitivityUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIRVDTSensitivityUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set RVDTSensitivityUnits1<br>
	 * Original signature : <code>int32 DAQmxGetAIRVDTSensitivityUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3606</i>
	 */
	// int DAQmxGetAIRVDTSensitivityUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIRVDTSensitivityUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3607</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIRVDTSensitivityUnits(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetAIRVDTSensitivityUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIRVDTSensitivityUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIRVDTSensitivityUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3607</i>
	 */
	// int DAQmxSetAIRVDTSensitivityUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIRVDTSensitivityUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3608</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIRVDTSensitivityUnits(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIRVDTSensitivityUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIRVDTSensitivityUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIRVDTSensitivityUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3608</i>
	 */
	// int DAQmxResetAIRVDTSensitivityUnits(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set LengthUnits2<br>
	 * Original signature : <code>int32 DAQmxGetAIEddyCurrentProxProbeUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3611</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIEddyCurrentProxProbeUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetAIEddyCurrentProxProbeUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIEddyCurrentProxProbeUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set LengthUnits2<br>
	 * Original signature : <code>int32 DAQmxGetAIEddyCurrentProxProbeUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3611</i>
	 */
	// int DAQmxGetAIEddyCurrentProxProbeUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIEddyCurrentProxProbeUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3612</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIEddyCurrentProxProbeUnits(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetAIEddyCurrentProxProbeUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIEddyCurrentProxProbeUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIEddyCurrentProxProbeUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3612</i>
	 */
	// int DAQmxSetAIEddyCurrentProxProbeUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIEddyCurrentProxProbeUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3613</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIEddyCurrentProxProbeUnits(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIEddyCurrentProxProbeUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIEddyCurrentProxProbeUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIEddyCurrentProxProbeUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3613</i>
	 */
	// int DAQmxResetAIEddyCurrentProxProbeUnits(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_EddyCurrentProxProbe_Sensitivity ***<br>
	 * Original signature : <code>int32 DAQmxGetAIEddyCurrentProxProbeSensitivity(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3615</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIEddyCurrentProxProbeSensitivity(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAIEddyCurrentProxProbeSensitivity(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIEddyCurrentProxProbeSensitivity(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_EddyCurrentProxProbe_Sensitivity ***<br>
	 * Original signature : <code>int32 DAQmxGetAIEddyCurrentProxProbeSensitivity(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3615</i>
	 */
	// int DAQmxGetAIEddyCurrentProxProbeSensitivity(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIEddyCurrentProxProbeSensitivity(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3616</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIEddyCurrentProxProbeSensitivity(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetAIEddyCurrentProxProbeSensitivity(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIEddyCurrentProxProbeSensitivity(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIEddyCurrentProxProbeSensitivity(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3616</i>
	 */
	// int DAQmxSetAIEddyCurrentProxProbeSensitivity(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIEddyCurrentProxProbeSensitivity(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3617</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIEddyCurrentProxProbeSensitivity(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIEddyCurrentProxProbeSensitivity(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIEddyCurrentProxProbeSensitivity(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIEddyCurrentProxProbeSensitivity(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3617</i>
	 */
	// int DAQmxResetAIEddyCurrentProxProbeSensitivity(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set EddyCurrentProxProbeSensitivityUnits<br>
	 * Original signature : <code>int32 DAQmxGetAIEddyCurrentProxProbeSensitivityUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3620</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIEddyCurrentProxProbeSensitivityUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetAIEddyCurrentProxProbeSensitivityUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIEddyCurrentProxProbeSensitivityUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set EddyCurrentProxProbeSensitivityUnits<br>
	 * Original signature : <code>int32 DAQmxGetAIEddyCurrentProxProbeSensitivityUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3620</i>
	 */
	// int DAQmxGetAIEddyCurrentProxProbeSensitivityUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIEddyCurrentProxProbeSensitivityUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3621</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIEddyCurrentProxProbeSensitivityUnits(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetAIEddyCurrentProxProbeSensitivityUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIEddyCurrentProxProbeSensitivityUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIEddyCurrentProxProbeSensitivityUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3621</i>
	 */
	// int DAQmxSetAIEddyCurrentProxProbeSensitivityUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIEddyCurrentProxProbeSensitivityUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3622</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIEddyCurrentProxProbeSensitivityUnits(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIEddyCurrentProxProbeSensitivityUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIEddyCurrentProxProbeSensitivityUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIEddyCurrentProxProbeSensitivityUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3622</i>
	 */
	// int DAQmxResetAIEddyCurrentProxProbeSensitivityUnits(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_SoundPressure_MaxSoundPressureLvl ***<br>
	 * Original signature : <code>int32 DAQmxGetAISoundPressureMaxSoundPressureLvl(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3624</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAISoundPressureMaxSoundPressureLvl(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAISoundPressureMaxSoundPressureLvl(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAISoundPressureMaxSoundPressureLvl(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_SoundPressure_MaxSoundPressureLvl ***<br>
	 * Original signature : <code>int32 DAQmxGetAISoundPressureMaxSoundPressureLvl(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3624</i>
	 */
	// int DAQmxGetAISoundPressureMaxSoundPressureLvl(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAISoundPressureMaxSoundPressureLvl(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3625</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAISoundPressureMaxSoundPressureLvl(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetAISoundPressureMaxSoundPressureLvl(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetAISoundPressureMaxSoundPressureLvl(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAISoundPressureMaxSoundPressureLvl(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3625</i>
	 */
	// int DAQmxSetAISoundPressureMaxSoundPressureLvl(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAISoundPressureMaxSoundPressureLvl(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3626</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAISoundPressureMaxSoundPressureLvl(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAISoundPressureMaxSoundPressureLvl(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAISoundPressureMaxSoundPressureLvl(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAISoundPressureMaxSoundPressureLvl(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3626</i>
	 */
	// int DAQmxResetAISoundPressureMaxSoundPressureLvl(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set SoundPressureUnits1<br>
	 * Original signature : <code>int32 DAQmxGetAISoundPressureUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3629</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAISoundPressureUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetAISoundPressureUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAISoundPressureUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set SoundPressureUnits1<br>
	 * Original signature : <code>int32 DAQmxGetAISoundPressureUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3629</i>
	 */
	// int DAQmxGetAISoundPressureUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAISoundPressureUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3630</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAISoundPressureUnits(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetAISoundPressureUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetAISoundPressureUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAISoundPressureUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3630</i>
	 */
	// int DAQmxSetAISoundPressureUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAISoundPressureUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3631</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAISoundPressureUnits(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAISoundPressureUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAISoundPressureUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAISoundPressureUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3631</i>
	 */
	// int DAQmxResetAISoundPressureUnits(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_SoundPressure_dBRef ***<br>
	 * Original signature : <code>int32 DAQmxGetAISoundPressuredBRef(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3633</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAISoundPressuredBRef(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAISoundPressuredBRef(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAISoundPressuredBRef(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_SoundPressure_dBRef ***<br>
	 * Original signature : <code>int32 DAQmxGetAISoundPressuredBRef(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3633</i>
	 */
	// int DAQmxGetAISoundPressuredBRef(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAISoundPressuredBRef(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3634</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAISoundPressuredBRef(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetAISoundPressuredBRef(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetAISoundPressuredBRef(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAISoundPressuredBRef(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3634</i>
	 */
	// int DAQmxSetAISoundPressuredBRef(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAISoundPressuredBRef(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3635</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAISoundPressuredBRef(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAISoundPressuredBRef(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAISoundPressuredBRef(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAISoundPressuredBRef(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3635</i>
	 */
	// int DAQmxResetAISoundPressuredBRef(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Microphone_Sensitivity ***<br>
	 * Original signature : <code>int32 DAQmxGetAIMicrophoneSensitivity(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3637</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIMicrophoneSensitivity(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAIMicrophoneSensitivity(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIMicrophoneSensitivity(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Microphone_Sensitivity ***<br>
	 * Original signature : <code>int32 DAQmxGetAIMicrophoneSensitivity(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3637</i>
	 */
	// int DAQmxGetAIMicrophoneSensitivity(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIMicrophoneSensitivity(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3638</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIMicrophoneSensitivity(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetAIMicrophoneSensitivity(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIMicrophoneSensitivity(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIMicrophoneSensitivity(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3638</i>
	 */
	// int DAQmxSetAIMicrophoneSensitivity(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIMicrophoneSensitivity(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3639</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIMicrophoneSensitivity(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIMicrophoneSensitivity(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIMicrophoneSensitivity(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIMicrophoneSensitivity(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3639</i>
	 */
	// int DAQmxResetAIMicrophoneSensitivity(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set AccelUnits2<br>
	 * Original signature : <code>int32 DAQmxGetAIAccelUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3642</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIAccelUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetAIAccelUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIAccelUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set AccelUnits2<br>
	 * Original signature : <code>int32 DAQmxGetAIAccelUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3642</i>
	 */
	// int DAQmxGetAIAccelUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIAccelUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3643</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIAccelUnits(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetAIAccelUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIAccelUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIAccelUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3643</i>
	 */
	// int DAQmxSetAIAccelUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIAccelUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3644</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIAccelUnits(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIAccelUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIAccelUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIAccelUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3644</i>
	 */
	// int DAQmxResetAIAccelUnits(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Accel_dBRef ***<br>
	 * Original signature : <code>int32 DAQmxGetAIAcceldBRef(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3646</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIAcceldBRef(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAIAcceldBRef(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIAcceldBRef(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Accel_dBRef ***<br>
	 * Original signature : <code>int32 DAQmxGetAIAcceldBRef(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3646</i>
	 */
	// int DAQmxGetAIAcceldBRef(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIAcceldBRef(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3647</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIAcceldBRef(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetAIAcceldBRef(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIAcceldBRef(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIAcceldBRef(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3647</i>
	 */
	// int DAQmxSetAIAcceldBRef(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIAcceldBRef(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3648</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIAcceldBRef(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIAcceldBRef(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIAcceldBRef(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIAcceldBRef(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3648</i>
	 */
	// int DAQmxResetAIAcceldBRef(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Accel_Sensitivity ***<br>
	 * Original signature : <code>int32 DAQmxGetAIAccelSensitivity(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3650</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIAccelSensitivity(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAIAccelSensitivity(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIAccelSensitivity(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Accel_Sensitivity ***<br>
	 * Original signature : <code>int32 DAQmxGetAIAccelSensitivity(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3650</i>
	 */
	// int DAQmxGetAIAccelSensitivity(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIAccelSensitivity(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3651</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIAccelSensitivity(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetAIAccelSensitivity(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIAccelSensitivity(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIAccelSensitivity(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3651</i>
	 */
	// int DAQmxSetAIAccelSensitivity(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIAccelSensitivity(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3652</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIAccelSensitivity(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIAccelSensitivity(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIAccelSensitivity(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIAccelSensitivity(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3652</i>
	 */
	// int DAQmxResetAIAccelSensitivity(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set AccelSensitivityUnits1<br>
	 * Original signature : <code>int32 DAQmxGetAIAccelSensitivityUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3655</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIAccelSensitivityUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetAIAccelSensitivityUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIAccelSensitivityUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set AccelSensitivityUnits1<br>
	 * Original signature : <code>int32 DAQmxGetAIAccelSensitivityUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3655</i>
	 */
	// int DAQmxGetAIAccelSensitivityUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIAccelSensitivityUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3656</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIAccelSensitivityUnits(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetAIAccelSensitivityUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIAccelSensitivityUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIAccelSensitivityUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3656</i>
	 */
	// int DAQmxSetAIAccelSensitivityUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIAccelSensitivityUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3657</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIAccelSensitivityUnits(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIAccelSensitivityUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIAccelSensitivityUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIAccelSensitivityUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3657</i>
	 */
	// int DAQmxResetAIAccelSensitivityUnits(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set VelocityUnits<br>
	 * Original signature : <code>int32 DAQmxGetAIVelocityUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3660</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIVelocityUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetAIVelocityUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIVelocityUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set VelocityUnits<br>
	 * Original signature : <code>int32 DAQmxGetAIVelocityUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3660</i>
	 */
	// int DAQmxGetAIVelocityUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIVelocityUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3661</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIVelocityUnits(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetAIVelocityUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIVelocityUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIVelocityUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3661</i>
	 */
	// int DAQmxSetAIVelocityUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIVelocityUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3662</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIVelocityUnits(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIVelocityUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIVelocityUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIVelocityUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3662</i>
	 */
	// int DAQmxResetAIVelocityUnits(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Velocity_IEPESensor_dBRef ***<br>
	 * Original signature : <code>int32 DAQmxGetAIVelocityIEPESensordBRef(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3664</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIVelocityIEPESensordBRef(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAIVelocityIEPESensordBRef(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIVelocityIEPESensordBRef(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Velocity_IEPESensor_dBRef ***<br>
	 * Original signature : <code>int32 DAQmxGetAIVelocityIEPESensordBRef(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3664</i>
	 */
	// int DAQmxGetAIVelocityIEPESensordBRef(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIVelocityIEPESensordBRef(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3665</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIVelocityIEPESensordBRef(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetAIVelocityIEPESensordBRef(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIVelocityIEPESensordBRef(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIVelocityIEPESensordBRef(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3665</i>
	 */
	// int DAQmxSetAIVelocityIEPESensordBRef(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIVelocityIEPESensordBRef(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3666</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIVelocityIEPESensordBRef(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIVelocityIEPESensordBRef(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIVelocityIEPESensordBRef(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIVelocityIEPESensordBRef(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3666</i>
	 */
	// int DAQmxResetAIVelocityIEPESensordBRef(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Velocity_IEPESensor_Sensitivity ***<br>
	 * Original signature : <code>int32 DAQmxGetAIVelocityIEPESensorSensitivity(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3668</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIVelocityIEPESensorSensitivity(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAIVelocityIEPESensorSensitivity(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIVelocityIEPESensorSensitivity(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Velocity_IEPESensor_Sensitivity ***<br>
	 * Original signature : <code>int32 DAQmxGetAIVelocityIEPESensorSensitivity(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3668</i>
	 */
	// int DAQmxGetAIVelocityIEPESensorSensitivity(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIVelocityIEPESensorSensitivity(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3669</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIVelocityIEPESensorSensitivity(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetAIVelocityIEPESensorSensitivity(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIVelocityIEPESensorSensitivity(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIVelocityIEPESensorSensitivity(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3669</i>
	 */
	// int DAQmxSetAIVelocityIEPESensorSensitivity(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIVelocityIEPESensorSensitivity(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3670</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIVelocityIEPESensorSensitivity(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIVelocityIEPESensorSensitivity(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIVelocityIEPESensorSensitivity(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIVelocityIEPESensorSensitivity(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3670</i>
	 */
	// int DAQmxResetAIVelocityIEPESensorSensitivity(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set VelocityIEPESensorSensitivityUnits<br>
	 * Original signature : <code>int32 DAQmxGetAIVelocityIEPESensorSensitivityUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3673</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIVelocityIEPESensorSensitivityUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetAIVelocityIEPESensorSensitivityUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIVelocityIEPESensorSensitivityUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set VelocityIEPESensorSensitivityUnits<br>
	 * Original signature : <code>int32 DAQmxGetAIVelocityIEPESensorSensitivityUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3673</i>
	 */
	// int DAQmxGetAIVelocityIEPESensorSensitivityUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIVelocityIEPESensorSensitivityUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3674</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIVelocityIEPESensorSensitivityUnits(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetAIVelocityIEPESensorSensitivityUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIVelocityIEPESensorSensitivityUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIVelocityIEPESensorSensitivityUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3674</i>
	 */
	// int DAQmxSetAIVelocityIEPESensorSensitivityUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIVelocityIEPESensorSensitivityUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3675</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIVelocityIEPESensorSensitivityUnits(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIVelocityIEPESensorSensitivityUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIVelocityIEPESensorSensitivityUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIVelocityIEPESensorSensitivityUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3675</i>
	 */
	// int DAQmxResetAIVelocityIEPESensorSensitivityUnits(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set ForceUnits<br>
	 * Original signature : <code>int32 DAQmxGetAIForceUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3678</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIForceUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetAIForceUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIForceUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set ForceUnits<br>
	 * Original signature : <code>int32 DAQmxGetAIForceUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3678</i>
	 */
	// int DAQmxGetAIForceUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIForceUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3679</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIForceUnits(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetAIForceUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIForceUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIForceUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3679</i>
	 */
	// int DAQmxSetAIForceUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIForceUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3680</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIForceUnits(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIForceUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIForceUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIForceUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3680</i>
	 */
	// int DAQmxResetAIForceUnits(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Force_IEPESensor_Sensitivity ***<br>
	 * Original signature : <code>int32 DAQmxGetAIForceIEPESensorSensitivity(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3682</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIForceIEPESensorSensitivity(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAIForceIEPESensorSensitivity(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIForceIEPESensorSensitivity(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Force_IEPESensor_Sensitivity ***<br>
	 * Original signature : <code>int32 DAQmxGetAIForceIEPESensorSensitivity(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3682</i>
	 */
	// int DAQmxGetAIForceIEPESensorSensitivity(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIForceIEPESensorSensitivity(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3683</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIForceIEPESensorSensitivity(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetAIForceIEPESensorSensitivity(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIForceIEPESensorSensitivity(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIForceIEPESensorSensitivity(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3683</i>
	 */
	// int DAQmxSetAIForceIEPESensorSensitivity(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIForceIEPESensorSensitivity(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3684</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIForceIEPESensorSensitivity(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIForceIEPESensorSensitivity(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIForceIEPESensorSensitivity(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIForceIEPESensorSensitivity(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3684</i>
	 */
	// int DAQmxResetAIForceIEPESensorSensitivity(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set ForceIEPESensorSensitivityUnits<br>
	 * Original signature : <code>int32 DAQmxGetAIForceIEPESensorSensitivityUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3687</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIForceIEPESensorSensitivityUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetAIForceIEPESensorSensitivityUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIForceIEPESensorSensitivityUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set ForceIEPESensorSensitivityUnits<br>
	 * Original signature : <code>int32 DAQmxGetAIForceIEPESensorSensitivityUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3687</i>
	 */
	// int DAQmxGetAIForceIEPESensorSensitivityUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIForceIEPESensorSensitivityUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3688</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIForceIEPESensorSensitivityUnits(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetAIForceIEPESensorSensitivityUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIForceIEPESensorSensitivityUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIForceIEPESensorSensitivityUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3688</i>
	 */
	// int DAQmxSetAIForceIEPESensorSensitivityUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIForceIEPESensorSensitivityUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3689</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIForceIEPESensorSensitivityUnits(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIForceIEPESensorSensitivityUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIForceIEPESensorSensitivityUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIForceIEPESensorSensitivityUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3689</i>
	 */
	// int DAQmxResetAIForceIEPESensorSensitivityUnits(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set PressureUnits<br>
	 * Original signature : <code>int32 DAQmxGetAIPressureUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3692</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIPressureUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetAIPressureUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIPressureUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set PressureUnits<br>
	 * Original signature : <code>int32 DAQmxGetAIPressureUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3692</i>
	 */
	// int DAQmxGetAIPressureUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIPressureUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3693</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIPressureUnits(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetAIPressureUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIPressureUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIPressureUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3693</i>
	 */
	// int DAQmxSetAIPressureUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIPressureUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3694</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIPressureUnits(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIPressureUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIPressureUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIPressureUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3694</i>
	 */
	// int DAQmxResetAIPressureUnits(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set TorqueUnits<br>
	 * Original signature : <code>int32 DAQmxGetAITorqueUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3697</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAITorqueUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetAITorqueUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAITorqueUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set TorqueUnits<br>
	 * Original signature : <code>int32 DAQmxGetAITorqueUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3697</i>
	 */
	// int DAQmxGetAITorqueUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAITorqueUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3698</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAITorqueUnits(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetAITorqueUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetAITorqueUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAITorqueUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3698</i>
	 */
	// int DAQmxSetAITorqueUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAITorqueUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3699</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAITorqueUnits(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAITorqueUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAITorqueUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAITorqueUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3699</i>
	 */
	// int DAQmxResetAITorqueUnits(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set BridgeUnits<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3702</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIBridgeUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetAIBridgeUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIBridgeUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set BridgeUnits<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3702</i>
	 */
	// int DAQmxGetAIBridgeUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3703</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIBridgeUnits(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetAIBridgeUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIBridgeUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3703</i>
	 */
	// int DAQmxSetAIBridgeUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3704</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIBridgeUnits(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIBridgeUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIBridgeUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3704</i>
	 */
	// int DAQmxResetAIBridgeUnits(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set BridgeElectricalUnits<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeElectricalUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3707</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIBridgeElectricalUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetAIBridgeElectricalUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIBridgeElectricalUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set BridgeElectricalUnits<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeElectricalUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3707</i>
	 */
	// int DAQmxGetAIBridgeElectricalUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeElectricalUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3708</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIBridgeElectricalUnits(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetAIBridgeElectricalUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIBridgeElectricalUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeElectricalUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3708</i>
	 */
	// int DAQmxSetAIBridgeElectricalUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeElectricalUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3709</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIBridgeElectricalUnits(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIBridgeElectricalUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIBridgeElectricalUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeElectricalUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3709</i>
	 */
	// int DAQmxResetAIBridgeElectricalUnits(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set BridgePhysicalUnits<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgePhysicalUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3712</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIBridgePhysicalUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetAIBridgePhysicalUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIBridgePhysicalUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set BridgePhysicalUnits<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgePhysicalUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3712</i>
	 */
	// int DAQmxGetAIBridgePhysicalUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgePhysicalUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3713</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIBridgePhysicalUnits(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetAIBridgePhysicalUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIBridgePhysicalUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgePhysicalUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3713</i>
	 */
	// int DAQmxSetAIBridgePhysicalUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgePhysicalUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3714</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIBridgePhysicalUnits(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIBridgePhysicalUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIBridgePhysicalUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgePhysicalUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3714</i>
	 */
	// int DAQmxResetAIBridgePhysicalUnits(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set ScaleType4<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeScaleType(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3717</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIBridgeScaleType(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetAIBridgeScaleType(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIBridgeScaleType(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set ScaleType4<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeScaleType(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3717</i>
	 */
	// int DAQmxGetAIBridgeScaleType(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeScaleType(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3718</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIBridgeScaleType(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetAIBridgeScaleType(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIBridgeScaleType(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeScaleType(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3718</i>
	 */
	// int DAQmxSetAIBridgeScaleType(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeScaleType(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3719</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIBridgeScaleType(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIBridgeScaleType(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIBridgeScaleType(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeScaleType(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3719</i>
	 */
	// int DAQmxResetAIBridgeScaleType(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Bridge_TwoPointLin_First_ElectricalVal ***<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeTwoPointLinFirstElectricalVal(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3721</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIBridgeTwoPointLinFirstElectricalVal(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAIBridgeTwoPointLinFirstElectricalVal(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIBridgeTwoPointLinFirstElectricalVal(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Bridge_TwoPointLin_First_ElectricalVal ***<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeTwoPointLinFirstElectricalVal(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3721</i>
	 */
	// int DAQmxGetAIBridgeTwoPointLinFirstElectricalVal(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeTwoPointLinFirstElectricalVal(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3722</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIBridgeTwoPointLinFirstElectricalVal(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetAIBridgeTwoPointLinFirstElectricalVal(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIBridgeTwoPointLinFirstElectricalVal(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeTwoPointLinFirstElectricalVal(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3722</i>
	 */
	// int DAQmxSetAIBridgeTwoPointLinFirstElectricalVal(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeTwoPointLinFirstElectricalVal(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3723</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIBridgeTwoPointLinFirstElectricalVal(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIBridgeTwoPointLinFirstElectricalVal(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIBridgeTwoPointLinFirstElectricalVal(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeTwoPointLinFirstElectricalVal(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3723</i>
	 */
	// int DAQmxResetAIBridgeTwoPointLinFirstElectricalVal(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Bridge_TwoPointLin_First_PhysicalVal ***<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeTwoPointLinFirstPhysicalVal(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3725</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIBridgeTwoPointLinFirstPhysicalVal(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAIBridgeTwoPointLinFirstPhysicalVal(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIBridgeTwoPointLinFirstPhysicalVal(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Bridge_TwoPointLin_First_PhysicalVal ***<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeTwoPointLinFirstPhysicalVal(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3725</i>
	 */
	// int DAQmxGetAIBridgeTwoPointLinFirstPhysicalVal(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeTwoPointLinFirstPhysicalVal(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3726</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIBridgeTwoPointLinFirstPhysicalVal(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetAIBridgeTwoPointLinFirstPhysicalVal(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIBridgeTwoPointLinFirstPhysicalVal(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeTwoPointLinFirstPhysicalVal(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3726</i>
	 */
	// int DAQmxSetAIBridgeTwoPointLinFirstPhysicalVal(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeTwoPointLinFirstPhysicalVal(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3727</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIBridgeTwoPointLinFirstPhysicalVal(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIBridgeTwoPointLinFirstPhysicalVal(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIBridgeTwoPointLinFirstPhysicalVal(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeTwoPointLinFirstPhysicalVal(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3727</i>
	 */
	// int DAQmxResetAIBridgeTwoPointLinFirstPhysicalVal(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Bridge_TwoPointLin_Second_ElectricalVal ***<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeTwoPointLinSecondElectricalVal(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3729</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIBridgeTwoPointLinSecondElectricalVal(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAIBridgeTwoPointLinSecondElectricalVal(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIBridgeTwoPointLinSecondElectricalVal(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Bridge_TwoPointLin_Second_ElectricalVal ***<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeTwoPointLinSecondElectricalVal(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3729</i>
	 */
	// int DAQmxGetAIBridgeTwoPointLinSecondElectricalVal(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeTwoPointLinSecondElectricalVal(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3730</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIBridgeTwoPointLinSecondElectricalVal(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetAIBridgeTwoPointLinSecondElectricalVal(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIBridgeTwoPointLinSecondElectricalVal(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeTwoPointLinSecondElectricalVal(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3730</i>
	 */
	// int DAQmxSetAIBridgeTwoPointLinSecondElectricalVal(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeTwoPointLinSecondElectricalVal(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3731</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIBridgeTwoPointLinSecondElectricalVal(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIBridgeTwoPointLinSecondElectricalVal(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIBridgeTwoPointLinSecondElectricalVal(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeTwoPointLinSecondElectricalVal(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3731</i>
	 */
	// int DAQmxResetAIBridgeTwoPointLinSecondElectricalVal(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Bridge_TwoPointLin_Second_PhysicalVal ***<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeTwoPointLinSecondPhysicalVal(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3733</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIBridgeTwoPointLinSecondPhysicalVal(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAIBridgeTwoPointLinSecondPhysicalVal(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIBridgeTwoPointLinSecondPhysicalVal(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Bridge_TwoPointLin_Second_PhysicalVal ***<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeTwoPointLinSecondPhysicalVal(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3733</i>
	 */
	// int DAQmxGetAIBridgeTwoPointLinSecondPhysicalVal(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeTwoPointLinSecondPhysicalVal(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3734</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIBridgeTwoPointLinSecondPhysicalVal(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetAIBridgeTwoPointLinSecondPhysicalVal(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIBridgeTwoPointLinSecondPhysicalVal(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeTwoPointLinSecondPhysicalVal(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3734</i>
	 */
	// int DAQmxSetAIBridgeTwoPointLinSecondPhysicalVal(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeTwoPointLinSecondPhysicalVal(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3735</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIBridgeTwoPointLinSecondPhysicalVal(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIBridgeTwoPointLinSecondPhysicalVal(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIBridgeTwoPointLinSecondPhysicalVal(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeTwoPointLinSecondPhysicalVal(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3735</i>
	 */
	// int DAQmxResetAIBridgeTwoPointLinSecondPhysicalVal(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Bridge_Table_ElectricalVals ***<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeTableElectricalVals(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 3737</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIBridgeTableElectricalVals(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetAIBridgeTableElectricalVals(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIBridgeTableElectricalVals(Pointer taskHandle, Pointer channel, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_AI_Bridge_Table_ElectricalVals ***<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeTableElectricalVals(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 3737</i>
	 */
	// int DAQmxGetAIBridgeTableElectricalVals(Pointer taskHandle, byte channel[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeTableElectricalVals(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 3738</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIBridgeTableElectricalVals(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxSetAIBridgeTableElectricalVals(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIBridgeTableElectricalVals(Pointer taskHandle, Pointer channel, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeTableElectricalVals(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 3738</i>
	 */
	// int DAQmxSetAIBridgeTableElectricalVals(Pointer taskHandle, byte channel[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeTableElectricalVals(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3739</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIBridgeTableElectricalVals(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIBridgeTableElectricalVals(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIBridgeTableElectricalVals(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeTableElectricalVals(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3739</i>
	 */
	// int DAQmxResetAIBridgeTableElectricalVals(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Bridge_Table_PhysicalVals ***<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeTablePhysicalVals(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 3741</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIBridgeTablePhysicalVals(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetAIBridgeTablePhysicalVals(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIBridgeTablePhysicalVals(Pointer taskHandle, Pointer channel, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_AI_Bridge_Table_PhysicalVals ***<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeTablePhysicalVals(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 3741</i>
	 */
	// int DAQmxGetAIBridgeTablePhysicalVals(Pointer taskHandle, byte channel[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeTablePhysicalVals(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 3742</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIBridgeTablePhysicalVals(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxSetAIBridgeTablePhysicalVals(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIBridgeTablePhysicalVals(Pointer taskHandle, Pointer channel, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeTablePhysicalVals(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 3742</i>
	 */
	// int DAQmxSetAIBridgeTablePhysicalVals(Pointer taskHandle, byte channel[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeTablePhysicalVals(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3743</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIBridgeTablePhysicalVals(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIBridgeTablePhysicalVals(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIBridgeTablePhysicalVals(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeTablePhysicalVals(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3743</i>
	 */
	// int DAQmxResetAIBridgeTablePhysicalVals(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Bridge_Poly_ForwardCoeff ***<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgePolyForwardCoeff(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 3745</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIBridgePolyForwardCoeff(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetAIBridgePolyForwardCoeff(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIBridgePolyForwardCoeff(Pointer taskHandle, Pointer channel, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_AI_Bridge_Poly_ForwardCoeff ***<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgePolyForwardCoeff(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 3745</i>
	 */
	// int DAQmxGetAIBridgePolyForwardCoeff(Pointer taskHandle, byte channel[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgePolyForwardCoeff(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 3746</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIBridgePolyForwardCoeff(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxSetAIBridgePolyForwardCoeff(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIBridgePolyForwardCoeff(Pointer taskHandle, Pointer channel, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgePolyForwardCoeff(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 3746</i>
	 */
	// int DAQmxSetAIBridgePolyForwardCoeff(Pointer taskHandle, byte channel[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgePolyForwardCoeff(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3747</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIBridgePolyForwardCoeff(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIBridgePolyForwardCoeff(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIBridgePolyForwardCoeff(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgePolyForwardCoeff(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3747</i>
	 */
	// int DAQmxResetAIBridgePolyForwardCoeff(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Bridge_Poly_ReverseCoeff ***<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgePolyReverseCoeff(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 3749</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIBridgePolyReverseCoeff(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetAIBridgePolyReverseCoeff(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIBridgePolyReverseCoeff(Pointer taskHandle, Pointer channel, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_AI_Bridge_Poly_ReverseCoeff ***<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgePolyReverseCoeff(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 3749</i>
	 */
	// int DAQmxGetAIBridgePolyReverseCoeff(Pointer taskHandle, byte channel[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgePolyReverseCoeff(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 3750</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIBridgePolyReverseCoeff(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxSetAIBridgePolyReverseCoeff(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIBridgePolyReverseCoeff(Pointer taskHandle, Pointer channel, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgePolyReverseCoeff(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 3750</i>
	 */
	// int DAQmxSetAIBridgePolyReverseCoeff(Pointer taskHandle, byte channel[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgePolyReverseCoeff(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3751</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIBridgePolyReverseCoeff(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIBridgePolyReverseCoeff(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIBridgePolyReverseCoeff(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgePolyReverseCoeff(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3751</i>
	 */
	// int DAQmxResetAIBridgePolyReverseCoeff(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Is_TEDS ***<br>
	 * Original signature : <code>int32 DAQmxGetAIIsTEDS(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 3753</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIIsTEDS(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetAIIsTEDS(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIIsTEDS(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Is_TEDS ***<br>
	 * Original signature : <code>int32 DAQmxGetAIIsTEDS(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 3753</i>
	 */
	// int DAQmxGetAIIsTEDS(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_TEDS_Units ***<br>
	 * Original signature : <code>int32 DAQmxGetAITEDSUnits(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 3755</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAITEDSUnits(com.sun.jna.Pointer, byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetAITEDSUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetAITEDSUnits(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_AI_TEDS_Units ***<br>
	 * Original signature : <code>int32 DAQmxGetAITEDSUnits(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 3755</i>
	 */
	// int DAQmxGetAITEDSUnits(Pointer taskHandle, byte channel[], ByteBuffer data, NativeLong bufferSize);
	/**
	 * Uses value set Coupling1<br>
	 * Original signature : <code>int32 DAQmxGetAICoupling(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3758</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAICoupling(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetAICoupling(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAICoupling(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set Coupling1<br>
	 * Original signature : <code>int32 DAQmxGetAICoupling(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3758</i>
	 */
	// int DAQmxGetAICoupling(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAICoupling(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3759</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAICoupling(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetAICoupling(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetAICoupling(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAICoupling(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3759</i>
	 */
	// int DAQmxSetAICoupling(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAICoupling(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3760</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAICoupling(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAICoupling(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAICoupling(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAICoupling(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3760</i>
	 */
	// int DAQmxResetAICoupling(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set Impedance1<br>
	 * Original signature : <code>int32 DAQmxGetAIImpedance(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3763</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIImpedance(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAIImpedance(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIImpedance(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * Uses value set Impedance1<br>
	 * Original signature : <code>int32 DAQmxGetAIImpedance(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3763</i>
	 */
	// int DAQmxGetAIImpedance(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIImpedance(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3764</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIImpedance(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetAIImpedance(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIImpedance(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIImpedance(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3764</i>
	 */
	// int DAQmxSetAIImpedance(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIImpedance(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3765</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIImpedance(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIImpedance(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIImpedance(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIImpedance(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3765</i>
	 */
	// int DAQmxResetAIImpedance(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set InputTermCfg<br>
	 * Original signature : <code>int32 DAQmxGetAITermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3768</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAITermCfg(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetAITermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAITermCfg(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set InputTermCfg<br>
	 * Original signature : <code>int32 DAQmxGetAITermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3768</i>
	 */
	// int DAQmxGetAITermCfg(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAITermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3769</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAITermCfg(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetAITermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetAITermCfg(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAITermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3769</i>
	 */
	// int DAQmxSetAITermCfg(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAITermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3770</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAITermCfg(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAITermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAITermCfg(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAITermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3770</i>
	 */
	// int DAQmxResetAITermCfg(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_InputSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetAIInputSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 3772</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIInputSrc(com.sun.jna.Pointer, byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetAIInputSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIInputSrc(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_AI_InputSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetAIInputSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 3772</i>
	 */
	// int DAQmxGetAIInputSrc(Pointer taskHandle, byte channel[], ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetAIInputSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 3773</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIInputSrc(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #DAQmxSetAIInputSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIInputSrc(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIInputSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 3773</i>
	 */
	// int DAQmxSetAIInputSrc(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIInputSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3774</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIInputSrc(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIInputSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIInputSrc(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIInputSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3774</i>
	 */
	// int DAQmxResetAIInputSrc(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set ResistanceConfiguration<br>
	 * Original signature : <code>int32 DAQmxGetAIResistanceCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3777</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIResistanceCfg(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetAIResistanceCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIResistanceCfg(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set ResistanceConfiguration<br>
	 * Original signature : <code>int32 DAQmxGetAIResistanceCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3777</i>
	 */
	// int DAQmxGetAIResistanceCfg(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIResistanceCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3778</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIResistanceCfg(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetAIResistanceCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIResistanceCfg(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIResistanceCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3778</i>
	 */
	// int DAQmxSetAIResistanceCfg(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIResistanceCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3779</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIResistanceCfg(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIResistanceCfg(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIResistanceCfg(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIResistanceCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3779</i>
	 */
	// int DAQmxResetAIResistanceCfg(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_LeadWireResistance ***<br>
	 * Original signature : <code>int32 DAQmxGetAILeadWireResistance(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3781</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAILeadWireResistance(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAILeadWireResistance(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAILeadWireResistance(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_LeadWireResistance ***<br>
	 * Original signature : <code>int32 DAQmxGetAILeadWireResistance(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3781</i>
	 */
	// int DAQmxGetAILeadWireResistance(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAILeadWireResistance(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3782</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAILeadWireResistance(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetAILeadWireResistance(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetAILeadWireResistance(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAILeadWireResistance(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3782</i>
	 */
	// int DAQmxSetAILeadWireResistance(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAILeadWireResistance(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3783</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAILeadWireResistance(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAILeadWireResistance(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAILeadWireResistance(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAILeadWireResistance(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3783</i>
	 */
	// int DAQmxResetAILeadWireResistance(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set BridgeConfiguration1<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3786</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIBridgeCfg(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetAIBridgeCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIBridgeCfg(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set BridgeConfiguration1<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3786</i>
	 */
	// int DAQmxGetAIBridgeCfg(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3787</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIBridgeCfg(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetAIBridgeCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIBridgeCfg(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3787</i>
	 */
	// int DAQmxSetAIBridgeCfg(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3788</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIBridgeCfg(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIBridgeCfg(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIBridgeCfg(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3788</i>
	 */
	// int DAQmxResetAIBridgeCfg(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Bridge_NomResistance ***<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeNomResistance(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3790</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIBridgeNomResistance(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAIBridgeNomResistance(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIBridgeNomResistance(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Bridge_NomResistance ***<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeNomResistance(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3790</i>
	 */
	// int DAQmxGetAIBridgeNomResistance(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeNomResistance(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3791</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIBridgeNomResistance(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetAIBridgeNomResistance(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIBridgeNomResistance(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeNomResistance(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3791</i>
	 */
	// int DAQmxSetAIBridgeNomResistance(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeNomResistance(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3792</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIBridgeNomResistance(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIBridgeNomResistance(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIBridgeNomResistance(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeNomResistance(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3792</i>
	 */
	// int DAQmxResetAIBridgeNomResistance(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Bridge_InitialVoltage ***<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeInitialVoltage(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3794</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIBridgeInitialVoltage(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAIBridgeInitialVoltage(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIBridgeInitialVoltage(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Bridge_InitialVoltage ***<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeInitialVoltage(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3794</i>
	 */
	// int DAQmxGetAIBridgeInitialVoltage(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeInitialVoltage(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3795</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIBridgeInitialVoltage(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetAIBridgeInitialVoltage(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIBridgeInitialVoltage(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeInitialVoltage(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3795</i>
	 */
	// int DAQmxSetAIBridgeInitialVoltage(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeInitialVoltage(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3796</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIBridgeInitialVoltage(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIBridgeInitialVoltage(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIBridgeInitialVoltage(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeInitialVoltage(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3796</i>
	 */
	// int DAQmxResetAIBridgeInitialVoltage(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Bridge_InitialRatio ***<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeInitialRatio(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3798</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIBridgeInitialRatio(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAIBridgeInitialRatio(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIBridgeInitialRatio(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Bridge_InitialRatio ***<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeInitialRatio(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3798</i>
	 */
	// int DAQmxGetAIBridgeInitialRatio(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeInitialRatio(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3799</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIBridgeInitialRatio(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetAIBridgeInitialRatio(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIBridgeInitialRatio(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeInitialRatio(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3799</i>
	 */
	// int DAQmxSetAIBridgeInitialRatio(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeInitialRatio(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3800</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIBridgeInitialRatio(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIBridgeInitialRatio(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIBridgeInitialRatio(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeInitialRatio(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3800</i>
	 */
	// int DAQmxResetAIBridgeInitialRatio(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Bridge_ShuntCal_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeShuntCalEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 3802</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIBridgeShuntCalEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetAIBridgeShuntCalEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIBridgeShuntCalEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Bridge_ShuntCal_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeShuntCalEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 3802</i>
	 */
	// int DAQmxGetAIBridgeShuntCalEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeShuntCalEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 3803</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIBridgeShuntCalEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetAIBridgeShuntCalEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIBridgeShuntCalEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeShuntCalEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 3803</i>
	 */
	// int DAQmxSetAIBridgeShuntCalEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeShuntCalEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3804</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIBridgeShuntCalEnable(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIBridgeShuntCalEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIBridgeShuntCalEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeShuntCalEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3804</i>
	 */
	// int DAQmxResetAIBridgeShuntCalEnable(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set ShuntCalSelect<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeShuntCalSelect(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3807</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIBridgeShuntCalSelect(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetAIBridgeShuntCalSelect(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIBridgeShuntCalSelect(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set ShuntCalSelect<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeShuntCalSelect(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3807</i>
	 */
	// int DAQmxGetAIBridgeShuntCalSelect(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeShuntCalSelect(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3808</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIBridgeShuntCalSelect(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetAIBridgeShuntCalSelect(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIBridgeShuntCalSelect(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeShuntCalSelect(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3808</i>
	 */
	// int DAQmxSetAIBridgeShuntCalSelect(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeShuntCalSelect(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3809</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIBridgeShuntCalSelect(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIBridgeShuntCalSelect(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIBridgeShuntCalSelect(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeShuntCalSelect(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3809</i>
	 */
	// int DAQmxResetAIBridgeShuntCalSelect(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set BridgeShuntCalSource<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeShuntCalShuntCalASrc(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3812</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIBridgeShuntCalShuntCalASrc(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetAIBridgeShuntCalShuntCalASrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIBridgeShuntCalShuntCalASrc(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set BridgeShuntCalSource<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeShuntCalShuntCalASrc(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3812</i>
	 */
	// int DAQmxGetAIBridgeShuntCalShuntCalASrc(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeShuntCalShuntCalASrc(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3813</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIBridgeShuntCalShuntCalASrc(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetAIBridgeShuntCalShuntCalASrc(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIBridgeShuntCalShuntCalASrc(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeShuntCalShuntCalASrc(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3813</i>
	 */
	// int DAQmxSetAIBridgeShuntCalShuntCalASrc(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeShuntCalShuntCalASrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3814</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIBridgeShuntCalShuntCalASrc(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIBridgeShuntCalShuntCalASrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIBridgeShuntCalShuntCalASrc(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeShuntCalShuntCalASrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3814</i>
	 */
	// int DAQmxResetAIBridgeShuntCalShuntCalASrc(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Bridge_ShuntCal_GainAdjust ***<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeShuntCalGainAdjust(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3816</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIBridgeShuntCalGainAdjust(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAIBridgeShuntCalGainAdjust(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIBridgeShuntCalGainAdjust(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Bridge_ShuntCal_GainAdjust ***<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeShuntCalGainAdjust(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3816</i>
	 */
	// int DAQmxGetAIBridgeShuntCalGainAdjust(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeShuntCalGainAdjust(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3817</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIBridgeShuntCalGainAdjust(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetAIBridgeShuntCalGainAdjust(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIBridgeShuntCalGainAdjust(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeShuntCalGainAdjust(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3817</i>
	 */
	// int DAQmxSetAIBridgeShuntCalGainAdjust(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeShuntCalGainAdjust(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3818</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIBridgeShuntCalGainAdjust(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIBridgeShuntCalGainAdjust(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIBridgeShuntCalGainAdjust(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeShuntCalGainAdjust(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3818</i>
	 */
	// int DAQmxResetAIBridgeShuntCalGainAdjust(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Bridge_ShuntCal_ShuntCalAResistance ***<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeShuntCalShuntCalAResistance(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3820</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIBridgeShuntCalShuntCalAResistance(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAIBridgeShuntCalShuntCalAResistance(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIBridgeShuntCalShuntCalAResistance(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Bridge_ShuntCal_ShuntCalAResistance ***<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeShuntCalShuntCalAResistance(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3820</i>
	 */
	// int DAQmxGetAIBridgeShuntCalShuntCalAResistance(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeShuntCalShuntCalAResistance(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3821</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIBridgeShuntCalShuntCalAResistance(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetAIBridgeShuntCalShuntCalAResistance(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIBridgeShuntCalShuntCalAResistance(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeShuntCalShuntCalAResistance(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3821</i>
	 */
	// int DAQmxSetAIBridgeShuntCalShuntCalAResistance(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeShuntCalShuntCalAResistance(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3822</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIBridgeShuntCalShuntCalAResistance(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIBridgeShuntCalShuntCalAResistance(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIBridgeShuntCalShuntCalAResistance(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeShuntCalShuntCalAResistance(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3822</i>
	 */
	// int DAQmxResetAIBridgeShuntCalShuntCalAResistance(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Bridge_ShuntCal_ShuntCalAActualResistance ***<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeShuntCalShuntCalAActualResistance(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3824</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIBridgeShuntCalShuntCalAActualResistance(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAIBridgeShuntCalShuntCalAActualResistance(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIBridgeShuntCalShuntCalAActualResistance(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Bridge_ShuntCal_ShuntCalAActualResistance ***<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeShuntCalShuntCalAActualResistance(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3824</i>
	 */
	// int DAQmxGetAIBridgeShuntCalShuntCalAActualResistance(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeShuntCalShuntCalAActualResistance(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3825</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIBridgeShuntCalShuntCalAActualResistance(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetAIBridgeShuntCalShuntCalAActualResistance(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIBridgeShuntCalShuntCalAActualResistance(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeShuntCalShuntCalAActualResistance(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3825</i>
	 */
	// int DAQmxSetAIBridgeShuntCalShuntCalAActualResistance(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeShuntCalShuntCalAActualResistance(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3826</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIBridgeShuntCalShuntCalAActualResistance(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIBridgeShuntCalShuntCalAActualResistance(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIBridgeShuntCalShuntCalAActualResistance(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeShuntCalShuntCalAActualResistance(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3826</i>
	 */
	// int DAQmxResetAIBridgeShuntCalShuntCalAActualResistance(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Bridge_ShuntCal_ShuntCalBResistance ***<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeShuntCalShuntCalBResistance(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3828</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIBridgeShuntCalShuntCalBResistance(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAIBridgeShuntCalShuntCalBResistance(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIBridgeShuntCalShuntCalBResistance(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Bridge_ShuntCal_ShuntCalBResistance ***<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeShuntCalShuntCalBResistance(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3828</i>
	 */
	// int DAQmxGetAIBridgeShuntCalShuntCalBResistance(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeShuntCalShuntCalBResistance(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3829</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIBridgeShuntCalShuntCalBResistance(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetAIBridgeShuntCalShuntCalBResistance(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIBridgeShuntCalShuntCalBResistance(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeShuntCalShuntCalBResistance(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3829</i>
	 */
	// int DAQmxSetAIBridgeShuntCalShuntCalBResistance(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeShuntCalShuntCalBResistance(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3830</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIBridgeShuntCalShuntCalBResistance(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIBridgeShuntCalShuntCalBResistance(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIBridgeShuntCalShuntCalBResistance(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeShuntCalShuntCalBResistance(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3830</i>
	 */
	// int DAQmxResetAIBridgeShuntCalShuntCalBResistance(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Bridge_ShuntCal_ShuntCalBActualResistance ***<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeShuntCalShuntCalBActualResistance(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3832</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIBridgeShuntCalShuntCalBActualResistance(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAIBridgeShuntCalShuntCalBActualResistance(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIBridgeShuntCalShuntCalBActualResistance(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Bridge_ShuntCal_ShuntCalBActualResistance ***<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeShuntCalShuntCalBActualResistance(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3832</i>
	 */
	// int DAQmxGetAIBridgeShuntCalShuntCalBActualResistance(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeShuntCalShuntCalBActualResistance(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3833</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIBridgeShuntCalShuntCalBActualResistance(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetAIBridgeShuntCalShuntCalBActualResistance(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIBridgeShuntCalShuntCalBActualResistance(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeShuntCalShuntCalBActualResistance(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3833</i>
	 */
	// int DAQmxSetAIBridgeShuntCalShuntCalBActualResistance(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeShuntCalShuntCalBActualResistance(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3834</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIBridgeShuntCalShuntCalBActualResistance(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIBridgeShuntCalShuntCalBActualResistance(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIBridgeShuntCalShuntCalBActualResistance(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeShuntCalShuntCalBActualResistance(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3834</i>
	 */
	// int DAQmxResetAIBridgeShuntCalShuntCalBActualResistance(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Bridge_Balance_CoarsePot ***<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeBalanceCoarsePot(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3836</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIBridgeBalanceCoarsePot(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetAIBridgeBalanceCoarsePot(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIBridgeBalanceCoarsePot(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Bridge_Balance_CoarsePot ***<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeBalanceCoarsePot(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3836</i>
	 */
	// int DAQmxGetAIBridgeBalanceCoarsePot(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeBalanceCoarsePot(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3837</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIBridgeBalanceCoarsePot(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetAIBridgeBalanceCoarsePot(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIBridgeBalanceCoarsePot(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeBalanceCoarsePot(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3837</i>
	 */
	// int DAQmxSetAIBridgeBalanceCoarsePot(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeBalanceCoarsePot(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3838</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIBridgeBalanceCoarsePot(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIBridgeBalanceCoarsePot(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIBridgeBalanceCoarsePot(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeBalanceCoarsePot(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3838</i>
	 */
	// int DAQmxResetAIBridgeBalanceCoarsePot(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Bridge_Balance_FinePot ***<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeBalanceFinePot(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3840</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIBridgeBalanceFinePot(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetAIBridgeBalanceFinePot(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIBridgeBalanceFinePot(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Bridge_Balance_FinePot ***<br>
	 * Original signature : <code>int32 DAQmxGetAIBridgeBalanceFinePot(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3840</i>
	 */
	// int DAQmxGetAIBridgeBalanceFinePot(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeBalanceFinePot(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3841</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIBridgeBalanceFinePot(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetAIBridgeBalanceFinePot(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIBridgeBalanceFinePot(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIBridgeBalanceFinePot(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3841</i>
	 */
	// int DAQmxSetAIBridgeBalanceFinePot(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeBalanceFinePot(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3842</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIBridgeBalanceFinePot(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIBridgeBalanceFinePot(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIBridgeBalanceFinePot(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIBridgeBalanceFinePot(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3842</i>
	 */
	// int DAQmxResetAIBridgeBalanceFinePot(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set CurrentShuntResistorLocation1<br>
	 * Original signature : <code>int32 DAQmxGetAICurrentShuntLoc(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3845</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAICurrentShuntLoc(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetAICurrentShuntLoc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAICurrentShuntLoc(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set CurrentShuntResistorLocation1<br>
	 * Original signature : <code>int32 DAQmxGetAICurrentShuntLoc(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3845</i>
	 */
	// int DAQmxGetAICurrentShuntLoc(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAICurrentShuntLoc(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3846</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAICurrentShuntLoc(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetAICurrentShuntLoc(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetAICurrentShuntLoc(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAICurrentShuntLoc(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3846</i>
	 */
	// int DAQmxSetAICurrentShuntLoc(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAICurrentShuntLoc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3847</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAICurrentShuntLoc(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAICurrentShuntLoc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAICurrentShuntLoc(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAICurrentShuntLoc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3847</i>
	 */
	// int DAQmxResetAICurrentShuntLoc(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_CurrentShunt_Resistance ***<br>
	 * Original signature : <code>int32 DAQmxGetAICurrentShuntResistance(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3849</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAICurrentShuntResistance(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAICurrentShuntResistance(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAICurrentShuntResistance(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_CurrentShunt_Resistance ***<br>
	 * Original signature : <code>int32 DAQmxGetAICurrentShuntResistance(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3849</i>
	 */
	// int DAQmxGetAICurrentShuntResistance(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAICurrentShuntResistance(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3850</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAICurrentShuntResistance(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetAICurrentShuntResistance(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetAICurrentShuntResistance(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAICurrentShuntResistance(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3850</i>
	 */
	// int DAQmxSetAICurrentShuntResistance(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAICurrentShuntResistance(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3851</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAICurrentShuntResistance(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAICurrentShuntResistance(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAICurrentShuntResistance(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAICurrentShuntResistance(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3851</i>
	 */
	// int DAQmxResetAICurrentShuntResistance(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set Sense<br>
	 * Original signature : <code>int32 DAQmxGetAIExcitSense(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3854</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIExcitSense(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetAIExcitSense(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIExcitSense(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set Sense<br>
	 * Original signature : <code>int32 DAQmxGetAIExcitSense(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3854</i>
	 */
	// int DAQmxGetAIExcitSense(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIExcitSense(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3855</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIExcitSense(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetAIExcitSense(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIExcitSense(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIExcitSense(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3855</i>
	 */
	// int DAQmxSetAIExcitSense(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIExcitSense(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3856</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIExcitSense(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIExcitSense(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIExcitSense(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIExcitSense(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3856</i>
	 */
	// int DAQmxResetAIExcitSense(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set ExcitationSource<br>
	 * Original signature : <code>int32 DAQmxGetAIExcitSrc(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3859</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIExcitSrc(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetAIExcitSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIExcitSrc(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set ExcitationSource<br>
	 * Original signature : <code>int32 DAQmxGetAIExcitSrc(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3859</i>
	 */
	// int DAQmxGetAIExcitSrc(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIExcitSrc(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3860</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIExcitSrc(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetAIExcitSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIExcitSrc(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIExcitSrc(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3860</i>
	 */
	// int DAQmxSetAIExcitSrc(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIExcitSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3861</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIExcitSrc(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIExcitSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIExcitSrc(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIExcitSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3861</i>
	 */
	// int DAQmxResetAIExcitSrc(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Excit_Val ***<br>
	 * Original signature : <code>int32 DAQmxGetAIExcitVal(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3863</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIExcitVal(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAIExcitVal(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIExcitVal(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Excit_Val ***<br>
	 * Original signature : <code>int32 DAQmxGetAIExcitVal(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3863</i>
	 */
	// int DAQmxGetAIExcitVal(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIExcitVal(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3864</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIExcitVal(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetAIExcitVal(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIExcitVal(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIExcitVal(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3864</i>
	 */
	// int DAQmxSetAIExcitVal(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIExcitVal(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3865</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIExcitVal(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIExcitVal(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIExcitVal(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIExcitVal(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3865</i>
	 */
	// int DAQmxResetAIExcitVal(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Excit_UseForScaling ***<br>
	 * Original signature : <code>int32 DAQmxGetAIExcitUseForScaling(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 3867</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIExcitUseForScaling(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetAIExcitUseForScaling(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIExcitUseForScaling(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Excit_UseForScaling ***<br>
	 * Original signature : <code>int32 DAQmxGetAIExcitUseForScaling(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 3867</i>
	 */
	// int DAQmxGetAIExcitUseForScaling(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIExcitUseForScaling(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 3868</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIExcitUseForScaling(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetAIExcitUseForScaling(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIExcitUseForScaling(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIExcitUseForScaling(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 3868</i>
	 */
	// int DAQmxSetAIExcitUseForScaling(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIExcitUseForScaling(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3869</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIExcitUseForScaling(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIExcitUseForScaling(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIExcitUseForScaling(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIExcitUseForScaling(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3869</i>
	 */
	// int DAQmxResetAIExcitUseForScaling(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Excit_UseMultiplexed ***<br>
	 * Original signature : <code>int32 DAQmxGetAIExcitUseMultiplexed(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 3871</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIExcitUseMultiplexed(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetAIExcitUseMultiplexed(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIExcitUseMultiplexed(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Excit_UseMultiplexed ***<br>
	 * Original signature : <code>int32 DAQmxGetAIExcitUseMultiplexed(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 3871</i>
	 */
	// int DAQmxGetAIExcitUseMultiplexed(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIExcitUseMultiplexed(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 3872</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIExcitUseMultiplexed(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetAIExcitUseMultiplexed(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIExcitUseMultiplexed(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIExcitUseMultiplexed(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 3872</i>
	 */
	// int DAQmxSetAIExcitUseMultiplexed(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIExcitUseMultiplexed(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3873</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIExcitUseMultiplexed(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIExcitUseMultiplexed(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIExcitUseMultiplexed(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIExcitUseMultiplexed(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3873</i>
	 */
	// int DAQmxResetAIExcitUseMultiplexed(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Excit_ActualVal ***<br>
	 * Original signature : <code>int32 DAQmxGetAIExcitActualVal(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3875</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIExcitActualVal(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAIExcitActualVal(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIExcitActualVal(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Excit_ActualVal ***<br>
	 * Original signature : <code>int32 DAQmxGetAIExcitActualVal(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3875</i>
	 */
	// int DAQmxGetAIExcitActualVal(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIExcitActualVal(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3876</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIExcitActualVal(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetAIExcitActualVal(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIExcitActualVal(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIExcitActualVal(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3876</i>
	 */
	// int DAQmxSetAIExcitActualVal(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIExcitActualVal(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3877</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIExcitActualVal(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIExcitActualVal(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIExcitActualVal(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIExcitActualVal(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3877</i>
	 */
	// int DAQmxResetAIExcitActualVal(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set ExcitationDCorAC<br>
	 * Original signature : <code>int32 DAQmxGetAIExcitDCorAC(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3880</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIExcitDCorAC(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetAIExcitDCorAC(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIExcitDCorAC(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set ExcitationDCorAC<br>
	 * Original signature : <code>int32 DAQmxGetAIExcitDCorAC(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3880</i>
	 */
	// int DAQmxGetAIExcitDCorAC(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIExcitDCorAC(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3881</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIExcitDCorAC(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetAIExcitDCorAC(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIExcitDCorAC(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIExcitDCorAC(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3881</i>
	 */
	// int DAQmxSetAIExcitDCorAC(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIExcitDCorAC(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3882</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIExcitDCorAC(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIExcitDCorAC(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIExcitDCorAC(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIExcitDCorAC(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3882</i>
	 */
	// int DAQmxResetAIExcitDCorAC(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set ExcitationVoltageOrCurrent<br>
	 * Original signature : <code>int32 DAQmxGetAIExcitVoltageOrCurrent(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3885</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIExcitVoltageOrCurrent(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetAIExcitVoltageOrCurrent(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIExcitVoltageOrCurrent(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set ExcitationVoltageOrCurrent<br>
	 * Original signature : <code>int32 DAQmxGetAIExcitVoltageOrCurrent(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3885</i>
	 */
	// int DAQmxGetAIExcitVoltageOrCurrent(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIExcitVoltageOrCurrent(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3886</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIExcitVoltageOrCurrent(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetAIExcitVoltageOrCurrent(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIExcitVoltageOrCurrent(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIExcitVoltageOrCurrent(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3886</i>
	 */
	// int DAQmxSetAIExcitVoltageOrCurrent(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIExcitVoltageOrCurrent(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3887</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIExcitVoltageOrCurrent(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIExcitVoltageOrCurrent(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIExcitVoltageOrCurrent(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIExcitVoltageOrCurrent(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3887</i>
	 */
	// int DAQmxResetAIExcitVoltageOrCurrent(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set ExcitationIdleOutputBehavior<br>
	 * Original signature : <code>int32 DAQmxGetAIExcitIdleOutputBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3890</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIExcitIdleOutputBehavior(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetAIExcitIdleOutputBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIExcitIdleOutputBehavior(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set ExcitationIdleOutputBehavior<br>
	 * Original signature : <code>int32 DAQmxGetAIExcitIdleOutputBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3890</i>
	 */
	// int DAQmxGetAIExcitIdleOutputBehavior(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIExcitIdleOutputBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3891</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIExcitIdleOutputBehavior(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetAIExcitIdleOutputBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIExcitIdleOutputBehavior(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIExcitIdleOutputBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3891</i>
	 */
	// int DAQmxSetAIExcitIdleOutputBehavior(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIExcitIdleOutputBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3892</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIExcitIdleOutputBehavior(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIExcitIdleOutputBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIExcitIdleOutputBehavior(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIExcitIdleOutputBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3892</i>
	 */
	// int DAQmxResetAIExcitIdleOutputBehavior(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_ACExcit_Freq ***<br>
	 * Original signature : <code>int32 DAQmxGetAIACExcitFreq(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3894</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIACExcitFreq(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAIACExcitFreq(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIACExcitFreq(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_ACExcit_Freq ***<br>
	 * Original signature : <code>int32 DAQmxGetAIACExcitFreq(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3894</i>
	 */
	// int DAQmxGetAIACExcitFreq(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIACExcitFreq(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3895</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIACExcitFreq(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetAIACExcitFreq(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIACExcitFreq(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIACExcitFreq(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3895</i>
	 */
	// int DAQmxSetAIACExcitFreq(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIACExcitFreq(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3896</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIACExcitFreq(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIACExcitFreq(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIACExcitFreq(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIACExcitFreq(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3896</i>
	 */
	// int DAQmxResetAIACExcitFreq(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_ACExcit_SyncEnable ***<br>
	 * Original signature : <code>int32 DAQmxGetAIACExcitSyncEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 3898</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIACExcitSyncEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetAIACExcitSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIACExcitSyncEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_ACExcit_SyncEnable ***<br>
	 * Original signature : <code>int32 DAQmxGetAIACExcitSyncEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 3898</i>
	 */
	// int DAQmxGetAIACExcitSyncEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIACExcitSyncEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 3899</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIACExcitSyncEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetAIACExcitSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIACExcitSyncEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIACExcitSyncEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 3899</i>
	 */
	// int DAQmxSetAIACExcitSyncEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIACExcitSyncEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3900</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIACExcitSyncEnable(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIACExcitSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIACExcitSyncEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIACExcitSyncEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3900</i>
	 */
	// int DAQmxResetAIACExcitSyncEnable(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set ACExcitWireMode<br>
	 * Original signature : <code>int32 DAQmxGetAIACExcitWireMode(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3903</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIACExcitWireMode(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetAIACExcitWireMode(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIACExcitWireMode(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set ACExcitWireMode<br>
	 * Original signature : <code>int32 DAQmxGetAIACExcitWireMode(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3903</i>
	 */
	// int DAQmxGetAIACExcitWireMode(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIACExcitWireMode(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3904</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIACExcitWireMode(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetAIACExcitWireMode(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIACExcitWireMode(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIACExcitWireMode(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3904</i>
	 */
	// int DAQmxSetAIACExcitWireMode(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIACExcitWireMode(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3905</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIACExcitWireMode(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIACExcitWireMode(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIACExcitWireMode(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIACExcitWireMode(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3905</i>
	 */
	// int DAQmxResetAIACExcitWireMode(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_OpenThrmcplDetectEnable ***<br>
	 * Original signature : <code>int32 DAQmxGetAIOpenThrmcplDetectEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 3907</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIOpenThrmcplDetectEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetAIOpenThrmcplDetectEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIOpenThrmcplDetectEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_OpenThrmcplDetectEnable ***<br>
	 * Original signature : <code>int32 DAQmxGetAIOpenThrmcplDetectEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 3907</i>
	 */
	// int DAQmxGetAIOpenThrmcplDetectEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIOpenThrmcplDetectEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 3908</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIOpenThrmcplDetectEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetAIOpenThrmcplDetectEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIOpenThrmcplDetectEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIOpenThrmcplDetectEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 3908</i>
	 */
	// int DAQmxSetAIOpenThrmcplDetectEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIOpenThrmcplDetectEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3909</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIOpenThrmcplDetectEnable(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIOpenThrmcplDetectEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIOpenThrmcplDetectEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIOpenThrmcplDetectEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3909</i>
	 */
	// int DAQmxResetAIOpenThrmcplDetectEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Thrmcpl_LeadOffsetVoltage ***<br>
	 * Original signature : <code>int32 DAQmxGetAIThrmcplLeadOffsetVoltage(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3911</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIThrmcplLeadOffsetVoltage(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAIThrmcplLeadOffsetVoltage(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIThrmcplLeadOffsetVoltage(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Thrmcpl_LeadOffsetVoltage ***<br>
	 * Original signature : <code>int32 DAQmxGetAIThrmcplLeadOffsetVoltage(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3911</i>
	 */
	// int DAQmxGetAIThrmcplLeadOffsetVoltage(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIThrmcplLeadOffsetVoltage(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3912</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIThrmcplLeadOffsetVoltage(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetAIThrmcplLeadOffsetVoltage(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIThrmcplLeadOffsetVoltage(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIThrmcplLeadOffsetVoltage(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3912</i>
	 */
	// int DAQmxSetAIThrmcplLeadOffsetVoltage(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIThrmcplLeadOffsetVoltage(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3913</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIThrmcplLeadOffsetVoltage(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIThrmcplLeadOffsetVoltage(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIThrmcplLeadOffsetVoltage(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIThrmcplLeadOffsetVoltage(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3913</i>
	 */
	// int DAQmxResetAIThrmcplLeadOffsetVoltage(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Atten ***<br>
	 * Original signature : <code>int32 DAQmxGetAIAtten(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3915</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIAtten(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAIAtten(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIAtten(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Atten ***<br>
	 * Original signature : <code>int32 DAQmxGetAIAtten(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3915</i>
	 */
	// int DAQmxGetAIAtten(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIAtten(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3916</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIAtten(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetAIAtten(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIAtten(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIAtten(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3916</i>
	 */
	// int DAQmxSetAIAtten(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIAtten(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3917</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIAtten(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIAtten(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIAtten(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIAtten(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3917</i>
	 */
	// int DAQmxResetAIAtten(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_ProbeAtten ***<br>
	 * Original signature : <code>int32 DAQmxGetAIProbeAtten(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3919</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIProbeAtten(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAIProbeAtten(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIProbeAtten(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_ProbeAtten ***<br>
	 * Original signature : <code>int32 DAQmxGetAIProbeAtten(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3919</i>
	 */
	// int DAQmxGetAIProbeAtten(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIProbeAtten(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3920</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIProbeAtten(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetAIProbeAtten(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIProbeAtten(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIProbeAtten(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3920</i>
	 */
	// int DAQmxSetAIProbeAtten(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIProbeAtten(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3921</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIProbeAtten(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIProbeAtten(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIProbeAtten(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIProbeAtten(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3921</i>
	 */
	// int DAQmxResetAIProbeAtten(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Lowpass_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetAILowpassEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 3923</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAILowpassEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetAILowpassEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAILowpassEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Lowpass_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetAILowpassEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 3923</i>
	 */
	// int DAQmxGetAILowpassEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAILowpassEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 3924</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAILowpassEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetAILowpassEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetAILowpassEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetAILowpassEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 3924</i>
	 */
	// int DAQmxSetAILowpassEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAILowpassEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3925</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAILowpassEnable(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAILowpassEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAILowpassEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAILowpassEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3925</i>
	 */
	// int DAQmxResetAILowpassEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Lowpass_CutoffFreq ***<br>
	 * Original signature : <code>int32 DAQmxGetAILowpassCutoffFreq(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3927</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAILowpassCutoffFreq(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAILowpassCutoffFreq(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAILowpassCutoffFreq(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Lowpass_CutoffFreq ***<br>
	 * Original signature : <code>int32 DAQmxGetAILowpassCutoffFreq(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3927</i>
	 */
	// int DAQmxGetAILowpassCutoffFreq(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAILowpassCutoffFreq(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3928</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAILowpassCutoffFreq(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetAILowpassCutoffFreq(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetAILowpassCutoffFreq(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAILowpassCutoffFreq(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3928</i>
	 */
	// int DAQmxSetAILowpassCutoffFreq(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAILowpassCutoffFreq(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3929</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAILowpassCutoffFreq(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAILowpassCutoffFreq(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAILowpassCutoffFreq(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAILowpassCutoffFreq(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3929</i>
	 */
	// int DAQmxResetAILowpassCutoffFreq(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set SourceSelection<br>
	 * Original signature : <code>int32 DAQmxGetAILowpassSwitchCapClkSrc(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3932</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAILowpassSwitchCapClkSrc(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetAILowpassSwitchCapClkSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAILowpassSwitchCapClkSrc(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set SourceSelection<br>
	 * Original signature : <code>int32 DAQmxGetAILowpassSwitchCapClkSrc(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3932</i>
	 */
	// int DAQmxGetAILowpassSwitchCapClkSrc(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAILowpassSwitchCapClkSrc(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3933</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAILowpassSwitchCapClkSrc(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetAILowpassSwitchCapClkSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetAILowpassSwitchCapClkSrc(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAILowpassSwitchCapClkSrc(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3933</i>
	 */
	// int DAQmxSetAILowpassSwitchCapClkSrc(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAILowpassSwitchCapClkSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3934</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAILowpassSwitchCapClkSrc(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAILowpassSwitchCapClkSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAILowpassSwitchCapClkSrc(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAILowpassSwitchCapClkSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3934</i>
	 */
	// int DAQmxResetAILowpassSwitchCapClkSrc(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Lowpass_SwitchCap_ExtClkFreq ***<br>
	 * Original signature : <code>int32 DAQmxGetAILowpassSwitchCapExtClkFreq(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3936</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAILowpassSwitchCapExtClkFreq(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAILowpassSwitchCapExtClkFreq(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAILowpassSwitchCapExtClkFreq(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Lowpass_SwitchCap_ExtClkFreq ***<br>
	 * Original signature : <code>int32 DAQmxGetAILowpassSwitchCapExtClkFreq(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3936</i>
	 */
	// int DAQmxGetAILowpassSwitchCapExtClkFreq(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAILowpassSwitchCapExtClkFreq(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3937</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAILowpassSwitchCapExtClkFreq(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetAILowpassSwitchCapExtClkFreq(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetAILowpassSwitchCapExtClkFreq(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAILowpassSwitchCapExtClkFreq(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3937</i>
	 */
	// int DAQmxSetAILowpassSwitchCapExtClkFreq(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAILowpassSwitchCapExtClkFreq(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3938</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAILowpassSwitchCapExtClkFreq(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAILowpassSwitchCapExtClkFreq(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAILowpassSwitchCapExtClkFreq(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAILowpassSwitchCapExtClkFreq(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3938</i>
	 */
	// int DAQmxResetAILowpassSwitchCapExtClkFreq(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Lowpass_SwitchCap_ExtClkDiv ***<br>
	 * Original signature : <code>int32 DAQmxGetAILowpassSwitchCapExtClkDiv(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 3940</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAILowpassSwitchCapExtClkDiv(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetAILowpassSwitchCapExtClkDiv(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAILowpassSwitchCapExtClkDiv(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Lowpass_SwitchCap_ExtClkDiv ***<br>
	 * Original signature : <code>int32 DAQmxGetAILowpassSwitchCapExtClkDiv(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 3940</i>
	 */
	// int DAQmxGetAILowpassSwitchCapExtClkDiv(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAILowpassSwitchCapExtClkDiv(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 3941</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAILowpassSwitchCapExtClkDiv(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetAILowpassSwitchCapExtClkDiv(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetAILowpassSwitchCapExtClkDiv(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetAILowpassSwitchCapExtClkDiv(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 3941</i>
	 */
	// int DAQmxSetAILowpassSwitchCapExtClkDiv(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAILowpassSwitchCapExtClkDiv(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3942</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAILowpassSwitchCapExtClkDiv(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAILowpassSwitchCapExtClkDiv(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAILowpassSwitchCapExtClkDiv(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAILowpassSwitchCapExtClkDiv(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3942</i>
	 */
	// int DAQmxResetAILowpassSwitchCapExtClkDiv(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Lowpass_SwitchCap_OutClkDiv ***<br>
	 * Original signature : <code>int32 DAQmxGetAILowpassSwitchCapOutClkDiv(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 3944</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAILowpassSwitchCapOutClkDiv(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetAILowpassSwitchCapOutClkDiv(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAILowpassSwitchCapOutClkDiv(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Lowpass_SwitchCap_OutClkDiv ***<br>
	 * Original signature : <code>int32 DAQmxGetAILowpassSwitchCapOutClkDiv(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 3944</i>
	 */
	// int DAQmxGetAILowpassSwitchCapOutClkDiv(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAILowpassSwitchCapOutClkDiv(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 3945</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAILowpassSwitchCapOutClkDiv(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetAILowpassSwitchCapOutClkDiv(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetAILowpassSwitchCapOutClkDiv(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetAILowpassSwitchCapOutClkDiv(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 3945</i>
	 */
	// int DAQmxSetAILowpassSwitchCapOutClkDiv(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAILowpassSwitchCapOutClkDiv(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3946</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAILowpassSwitchCapOutClkDiv(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAILowpassSwitchCapOutClkDiv(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAILowpassSwitchCapOutClkDiv(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAILowpassSwitchCapOutClkDiv(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3946</i>
	 */
	// int DAQmxResetAILowpassSwitchCapOutClkDiv(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetAIDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 3948</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetAIDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetAIDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 3948</i>
	 */
	// int DAQmxGetAIDigFltrEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 3949</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetAIDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 3949</i>
	 */
	// int DAQmxSetAIDigFltrEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3950</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIDigFltrEnable(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIDigFltrEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3950</i>
	 */
	// int DAQmxResetAIDigFltrEnable(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set FilterType2<br>
	 * Original signature : <code>int32 DAQmxGetAIDigFltrType(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3953</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIDigFltrType(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetAIDigFltrType(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIDigFltrType(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set FilterType2<br>
	 * Original signature : <code>int32 DAQmxGetAIDigFltrType(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3953</i>
	 */
	// int DAQmxGetAIDigFltrType(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIDigFltrType(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3954</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIDigFltrType(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetAIDigFltrType(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIDigFltrType(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIDigFltrType(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3954</i>
	 */
	// int DAQmxSetAIDigFltrType(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIDigFltrType(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3955</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIDigFltrType(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIDigFltrType(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIDigFltrType(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIDigFltrType(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3955</i>
	 */
	// int DAQmxResetAIDigFltrType(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set FilterResponse<br>
	 * Original signature : <code>int32 DAQmxGetAIDigFltrResponse(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3958</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIDigFltrResponse(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetAIDigFltrResponse(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIDigFltrResponse(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set FilterResponse<br>
	 * Original signature : <code>int32 DAQmxGetAIDigFltrResponse(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3958</i>
	 */
	// int DAQmxGetAIDigFltrResponse(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIDigFltrResponse(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3959</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIDigFltrResponse(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetAIDigFltrResponse(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIDigFltrResponse(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIDigFltrResponse(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3959</i>
	 */
	// int DAQmxSetAIDigFltrResponse(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIDigFltrResponse(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3960</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIDigFltrResponse(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIDigFltrResponse(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIDigFltrResponse(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIDigFltrResponse(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3960</i>
	 */
	// int DAQmxResetAIDigFltrResponse(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_DigFltr_Order ***<br>
	 * Original signature : <code>int32 DAQmxGetAIDigFltrOrder(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 3962</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIDigFltrOrder(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetAIDigFltrOrder(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIDigFltrOrder(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_DigFltr_Order ***<br>
	 * Original signature : <code>int32 DAQmxGetAIDigFltrOrder(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 3962</i>
	 */
	// int DAQmxGetAIDigFltrOrder(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIDigFltrOrder(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 3963</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIDigFltrOrder(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetAIDigFltrOrder(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIDigFltrOrder(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIDigFltrOrder(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 3963</i>
	 */
	// int DAQmxSetAIDigFltrOrder(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIDigFltrOrder(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3964</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIDigFltrOrder(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIDigFltrOrder(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIDigFltrOrder(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIDigFltrOrder(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3964</i>
	 */
	// int DAQmxResetAIDigFltrOrder(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_DigFltr_Lowpass_CutoffFreq ***<br>
	 * Original signature : <code>int32 DAQmxGetAIDigFltrLowpassCutoffFreq(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3966</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIDigFltrLowpassCutoffFreq(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAIDigFltrLowpassCutoffFreq(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIDigFltrLowpassCutoffFreq(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_DigFltr_Lowpass_CutoffFreq ***<br>
	 * Original signature : <code>int32 DAQmxGetAIDigFltrLowpassCutoffFreq(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3966</i>
	 */
	// int DAQmxGetAIDigFltrLowpassCutoffFreq(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIDigFltrLowpassCutoffFreq(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3967</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIDigFltrLowpassCutoffFreq(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetAIDigFltrLowpassCutoffFreq(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIDigFltrLowpassCutoffFreq(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIDigFltrLowpassCutoffFreq(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3967</i>
	 */
	// int DAQmxSetAIDigFltrLowpassCutoffFreq(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIDigFltrLowpassCutoffFreq(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3968</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIDigFltrLowpassCutoffFreq(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIDigFltrLowpassCutoffFreq(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIDigFltrLowpassCutoffFreq(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIDigFltrLowpassCutoffFreq(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3968</i>
	 */
	// int DAQmxResetAIDigFltrLowpassCutoffFreq(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_DigFltr_Highpass_CutoffFreq ***<br>
	 * Original signature : <code>int32 DAQmxGetAIDigFltrHighpassCutoffFreq(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3970</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIDigFltrHighpassCutoffFreq(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAIDigFltrHighpassCutoffFreq(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIDigFltrHighpassCutoffFreq(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_DigFltr_Highpass_CutoffFreq ***<br>
	 * Original signature : <code>int32 DAQmxGetAIDigFltrHighpassCutoffFreq(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3970</i>
	 */
	// int DAQmxGetAIDigFltrHighpassCutoffFreq(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIDigFltrHighpassCutoffFreq(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3971</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIDigFltrHighpassCutoffFreq(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetAIDigFltrHighpassCutoffFreq(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIDigFltrHighpassCutoffFreq(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIDigFltrHighpassCutoffFreq(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3971</i>
	 */
	// int DAQmxSetAIDigFltrHighpassCutoffFreq(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIDigFltrHighpassCutoffFreq(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3972</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIDigFltrHighpassCutoffFreq(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIDigFltrHighpassCutoffFreq(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIDigFltrHighpassCutoffFreq(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIDigFltrHighpassCutoffFreq(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3972</i>
	 */
	// int DAQmxResetAIDigFltrHighpassCutoffFreq(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_DigFltr_Bandpass_CenterFreq ***<br>
	 * Original signature : <code>int32 DAQmxGetAIDigFltrBandpassCenterFreq(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3974</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIDigFltrBandpassCenterFreq(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAIDigFltrBandpassCenterFreq(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIDigFltrBandpassCenterFreq(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_DigFltr_Bandpass_CenterFreq ***<br>
	 * Original signature : <code>int32 DAQmxGetAIDigFltrBandpassCenterFreq(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3974</i>
	 */
	// int DAQmxGetAIDigFltrBandpassCenterFreq(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIDigFltrBandpassCenterFreq(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3975</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIDigFltrBandpassCenterFreq(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetAIDigFltrBandpassCenterFreq(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIDigFltrBandpassCenterFreq(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIDigFltrBandpassCenterFreq(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3975</i>
	 */
	// int DAQmxSetAIDigFltrBandpassCenterFreq(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIDigFltrBandpassCenterFreq(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3976</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIDigFltrBandpassCenterFreq(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIDigFltrBandpassCenterFreq(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIDigFltrBandpassCenterFreq(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIDigFltrBandpassCenterFreq(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3976</i>
	 */
	// int DAQmxResetAIDigFltrBandpassCenterFreq(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_DigFltr_Bandpass_Width ***<br>
	 * Original signature : <code>int32 DAQmxGetAIDigFltrBandpassWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3978</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIDigFltrBandpassWidth(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAIDigFltrBandpassWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIDigFltrBandpassWidth(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_DigFltr_Bandpass_Width ***<br>
	 * Original signature : <code>int32 DAQmxGetAIDigFltrBandpassWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3978</i>
	 */
	// int DAQmxGetAIDigFltrBandpassWidth(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIDigFltrBandpassWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3979</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIDigFltrBandpassWidth(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetAIDigFltrBandpassWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIDigFltrBandpassWidth(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIDigFltrBandpassWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3979</i>
	 */
	// int DAQmxSetAIDigFltrBandpassWidth(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIDigFltrBandpassWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3980</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIDigFltrBandpassWidth(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIDigFltrBandpassWidth(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIDigFltrBandpassWidth(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIDigFltrBandpassWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3980</i>
	 */
	// int DAQmxResetAIDigFltrBandpassWidth(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_DigFltr_Notch_CenterFreq ***<br>
	 * Original signature : <code>int32 DAQmxGetAIDigFltrNotchCenterFreq(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3982</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIDigFltrNotchCenterFreq(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAIDigFltrNotchCenterFreq(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIDigFltrNotchCenterFreq(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_DigFltr_Notch_CenterFreq ***<br>
	 * Original signature : <code>int32 DAQmxGetAIDigFltrNotchCenterFreq(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3982</i>
	 */
	// int DAQmxGetAIDigFltrNotchCenterFreq(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIDigFltrNotchCenterFreq(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3983</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIDigFltrNotchCenterFreq(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetAIDigFltrNotchCenterFreq(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIDigFltrNotchCenterFreq(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIDigFltrNotchCenterFreq(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3983</i>
	 */
	// int DAQmxSetAIDigFltrNotchCenterFreq(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIDigFltrNotchCenterFreq(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3984</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIDigFltrNotchCenterFreq(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIDigFltrNotchCenterFreq(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIDigFltrNotchCenterFreq(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIDigFltrNotchCenterFreq(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3984</i>
	 */
	// int DAQmxResetAIDigFltrNotchCenterFreq(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_DigFltr_Notch_Width ***<br>
	 * Original signature : <code>int32 DAQmxGetAIDigFltrNotchWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3986</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIDigFltrNotchWidth(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAIDigFltrNotchWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIDigFltrNotchWidth(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_DigFltr_Notch_Width ***<br>
	 * Original signature : <code>int32 DAQmxGetAIDigFltrNotchWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3986</i>
	 */
	// int DAQmxGetAIDigFltrNotchWidth(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIDigFltrNotchWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3987</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIDigFltrNotchWidth(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetAIDigFltrNotchWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIDigFltrNotchWidth(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIDigFltrNotchWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 3987</i>
	 */
	// int DAQmxSetAIDigFltrNotchWidth(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIDigFltrNotchWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3988</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIDigFltrNotchWidth(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIDigFltrNotchWidth(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIDigFltrNotchWidth(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIDigFltrNotchWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3988</i>
	 */
	// int DAQmxResetAIDigFltrNotchWidth(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_DigFltr_Coeff ***<br>
	 * Original signature : <code>int32 DAQmxGetAIDigFltrCoeff(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 3990</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIDigFltrCoeff(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetAIDigFltrCoeff(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIDigFltrCoeff(Pointer taskHandle, Pointer channel, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_AI_DigFltr_Coeff ***<br>
	 * Original signature : <code>int32 DAQmxGetAIDigFltrCoeff(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 3990</i>
	 */
	// int DAQmxGetAIDigFltrCoeff(Pointer taskHandle, byte channel[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxSetAIDigFltrCoeff(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 3991</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIDigFltrCoeff(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxSetAIDigFltrCoeff(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIDigFltrCoeff(Pointer taskHandle, Pointer channel, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxSetAIDigFltrCoeff(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 3991</i>
	 */
	// int DAQmxSetAIDigFltrCoeff(Pointer taskHandle, byte channel[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxResetAIDigFltrCoeff(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3992</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIDigFltrCoeff(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIDigFltrCoeff(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIDigFltrCoeff(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIDigFltrCoeff(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3992</i>
	 */
	// int DAQmxResetAIDigFltrCoeff(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_FilterDelay ***<br>
	 * Original signature : <code>int32 DAQmxGetAIFilterDelay(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3994</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIFilterDelay(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAIFilterDelay(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIFilterDelay(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_FilterDelay ***<br>
	 * Original signature : <code>int32 DAQmxGetAIFilterDelay(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 3994</i>
	 */
	// int DAQmxGetAIFilterDelay(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Uses value set DigitalWidthUnits4<br>
	 * Original signature : <code>int32 DAQmxGetAIFilterDelayUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3997</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIFilterDelayUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetAIFilterDelayUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIFilterDelayUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set DigitalWidthUnits4<br>
	 * Original signature : <code>int32 DAQmxGetAIFilterDelayUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 3997</i>
	 */
	// int DAQmxGetAIFilterDelayUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIFilterDelayUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3998</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIFilterDelayUnits(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetAIFilterDelayUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIFilterDelayUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIFilterDelayUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 3998</i>
	 */
	// int DAQmxSetAIFilterDelayUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIFilterDelayUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3999</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIFilterDelayUnits(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIFilterDelayUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIFilterDelayUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIFilterDelayUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 3999</i>
	 */
	// int DAQmxResetAIFilterDelayUnits(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_RemoveFilterDelay ***<br>
	 * Original signature : <code>int32 DAQmxGetAIRemoveFilterDelay(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4001</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIRemoveFilterDelay(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetAIRemoveFilterDelay(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIRemoveFilterDelay(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_RemoveFilterDelay ***<br>
	 * Original signature : <code>int32 DAQmxGetAIRemoveFilterDelay(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4001</i>
	 */
	// int DAQmxGetAIRemoveFilterDelay(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIRemoveFilterDelay(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4002</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIRemoveFilterDelay(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetAIRemoveFilterDelay(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIRemoveFilterDelay(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIRemoveFilterDelay(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4002</i>
	 */
	// int DAQmxSetAIRemoveFilterDelay(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIRemoveFilterDelay(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4003</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIRemoveFilterDelay(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIRemoveFilterDelay(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIRemoveFilterDelay(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIRemoveFilterDelay(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4003</i>
	 */
	// int DAQmxResetAIRemoveFilterDelay(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_FilterDelayAdjustment ***<br>
	 * Original signature : <code>int32 DAQmxGetAIFilterDelayAdjustment(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4005</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIFilterDelayAdjustment(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAIFilterDelayAdjustment(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIFilterDelayAdjustment(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_FilterDelayAdjustment ***<br>
	 * Original signature : <code>int32 DAQmxGetAIFilterDelayAdjustment(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4005</i>
	 */
	// int DAQmxGetAIFilterDelayAdjustment(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIFilterDelayAdjustment(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4006</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIFilterDelayAdjustment(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetAIFilterDelayAdjustment(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIFilterDelayAdjustment(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIFilterDelayAdjustment(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4006</i>
	 */
	// int DAQmxSetAIFilterDelayAdjustment(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIFilterDelayAdjustment(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4007</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIFilterDelayAdjustment(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIFilterDelayAdjustment(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIFilterDelayAdjustment(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIFilterDelayAdjustment(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4007</i>
	 */
	// int DAQmxResetAIFilterDelayAdjustment(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_AveragingWinSize ***<br>
	 * Original signature : <code>int32 DAQmxGetAIAveragingWinSize(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 4009</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIAveragingWinSize(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetAIAveragingWinSize(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIAveragingWinSize(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_AveragingWinSize ***<br>
	 * Original signature : <code>int32 DAQmxGetAIAveragingWinSize(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 4009</i>
	 */
	// int DAQmxGetAIAveragingWinSize(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIAveragingWinSize(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 4010</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIAveragingWinSize(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetAIAveragingWinSize(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIAveragingWinSize(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIAveragingWinSize(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 4010</i>
	 */
	// int DAQmxSetAIAveragingWinSize(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIAveragingWinSize(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4011</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIAveragingWinSize(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIAveragingWinSize(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIAveragingWinSize(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIAveragingWinSize(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4011</i>
	 */
	// int DAQmxResetAIAveragingWinSize(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set ResolutionType1<br>
	 * Original signature : <code>int32 DAQmxGetAIResolutionUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4014</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIResolutionUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetAIResolutionUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIResolutionUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set ResolutionType1<br>
	 * Original signature : <code>int32 DAQmxGetAIResolutionUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4014</i>
	 */
	// int DAQmxGetAIResolutionUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Resolution ***<br>
	 * Original signature : <code>int32 DAQmxGetAIResolution(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4016</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIResolution(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAIResolution(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIResolution(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Resolution ***<br>
	 * Original signature : <code>int32 DAQmxGetAIResolution(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4016</i>
	 */
	// int DAQmxGetAIResolution(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_AI_RawSampSize ***<br>
	 * Original signature : <code>int32 DAQmxGetAIRawSampSize(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 4018</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIRawSampSize(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetAIRawSampSize(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIRawSampSize(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_RawSampSize ***<br>
	 * Original signature : <code>int32 DAQmxGetAIRawSampSize(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 4018</i>
	 */
	// int DAQmxGetAIRawSampSize(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Uses value set DataJustification1<br>
	 * Original signature : <code>int32 DAQmxGetAIRawSampJustification(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4021</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIRawSampJustification(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetAIRawSampJustification(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIRawSampJustification(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set DataJustification1<br>
	 * Original signature : <code>int32 DAQmxGetAIRawSampJustification(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4021</i>
	 */
	// int DAQmxGetAIRawSampJustification(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Uses value set ADCTimingMode<br>
	 * Original signature : <code>int32 DAQmxGetAIADCTimingMode(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4024</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIADCTimingMode(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetAIADCTimingMode(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIADCTimingMode(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set ADCTimingMode<br>
	 * Original signature : <code>int32 DAQmxGetAIADCTimingMode(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4024</i>
	 */
	// int DAQmxGetAIADCTimingMode(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIADCTimingMode(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4025</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIADCTimingMode(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetAIADCTimingMode(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIADCTimingMode(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIADCTimingMode(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4025</i>
	 */
	// int DAQmxSetAIADCTimingMode(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIADCTimingMode(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4026</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIADCTimingMode(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIADCTimingMode(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIADCTimingMode(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIADCTimingMode(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4026</i>
	 */
	// int DAQmxResetAIADCTimingMode(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_ADCCustomTimingMode ***<br>
	 * Original signature : <code>int32 DAQmxGetAIADCCustomTimingMode(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 4028</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIADCCustomTimingMode(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetAIADCCustomTimingMode(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIADCCustomTimingMode(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_ADCCustomTimingMode ***<br>
	 * Original signature : <code>int32 DAQmxGetAIADCCustomTimingMode(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 4028</i>
	 */
	// int DAQmxGetAIADCCustomTimingMode(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIADCCustomTimingMode(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 4029</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIADCCustomTimingMode(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetAIADCCustomTimingMode(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIADCCustomTimingMode(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIADCCustomTimingMode(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 4029</i>
	 */
	// int DAQmxSetAIADCCustomTimingMode(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIADCCustomTimingMode(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4030</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIADCCustomTimingMode(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIADCCustomTimingMode(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIADCCustomTimingMode(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIADCCustomTimingMode(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4030</i>
	 */
	// int DAQmxResetAIADCCustomTimingMode(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Dither_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetAIDitherEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4032</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIDitherEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetAIDitherEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIDitherEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Dither_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetAIDitherEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4032</i>
	 */
	// int DAQmxGetAIDitherEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIDitherEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4033</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIDitherEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetAIDitherEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIDitherEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIDitherEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4033</i>
	 */
	// int DAQmxSetAIDitherEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIDitherEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4034</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIDitherEnable(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIDitherEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIDitherEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIDitherEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4034</i>
	 */
	// int DAQmxResetAIDitherEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_ChanCal_HasValidCalInfo ***<br>
	 * Original signature : <code>int32 DAQmxGetAIChanCalHasValidCalInfo(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4036</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIChanCalHasValidCalInfo(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetAIChanCalHasValidCalInfo(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIChanCalHasValidCalInfo(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_ChanCal_HasValidCalInfo ***<br>
	 * Original signature : <code>int32 DAQmxGetAIChanCalHasValidCalInfo(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4036</i>
	 */
	// int DAQmxGetAIChanCalHasValidCalInfo(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_ChanCal_EnableCal ***<br>
	 * Original signature : <code>int32 DAQmxGetAIChanCalEnableCal(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4038</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIChanCalEnableCal(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetAIChanCalEnableCal(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIChanCalEnableCal(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_ChanCal_EnableCal ***<br>
	 * Original signature : <code>int32 DAQmxGetAIChanCalEnableCal(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4038</i>
	 */
	// int DAQmxGetAIChanCalEnableCal(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIChanCalEnableCal(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4039</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIChanCalEnableCal(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetAIChanCalEnableCal(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIChanCalEnableCal(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIChanCalEnableCal(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4039</i>
	 */
	// int DAQmxSetAIChanCalEnableCal(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIChanCalEnableCal(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4040</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIChanCalEnableCal(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIChanCalEnableCal(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIChanCalEnableCal(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIChanCalEnableCal(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4040</i>
	 */
	// int DAQmxResetAIChanCalEnableCal(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_ChanCal_ApplyCalIfExp ***<br>
	 * Original signature : <code>int32 DAQmxGetAIChanCalApplyCalIfExp(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4042</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIChanCalApplyCalIfExp(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetAIChanCalApplyCalIfExp(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIChanCalApplyCalIfExp(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_ChanCal_ApplyCalIfExp ***<br>
	 * Original signature : <code>int32 DAQmxGetAIChanCalApplyCalIfExp(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4042</i>
	 */
	// int DAQmxGetAIChanCalApplyCalIfExp(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIChanCalApplyCalIfExp(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4043</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIChanCalApplyCalIfExp(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetAIChanCalApplyCalIfExp(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIChanCalApplyCalIfExp(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIChanCalApplyCalIfExp(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4043</i>
	 */
	// int DAQmxSetAIChanCalApplyCalIfExp(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIChanCalApplyCalIfExp(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4044</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIChanCalApplyCalIfExp(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIChanCalApplyCalIfExp(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIChanCalApplyCalIfExp(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIChanCalApplyCalIfExp(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4044</i>
	 */
	// int DAQmxResetAIChanCalApplyCalIfExp(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set ScaleType3<br>
	 * Original signature : <code>int32 DAQmxGetAIChanCalScaleType(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4047</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIChanCalScaleType(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetAIChanCalScaleType(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIChanCalScaleType(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set ScaleType3<br>
	 * Original signature : <code>int32 DAQmxGetAIChanCalScaleType(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4047</i>
	 */
	// int DAQmxGetAIChanCalScaleType(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIChanCalScaleType(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4048</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIChanCalScaleType(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetAIChanCalScaleType(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIChanCalScaleType(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIChanCalScaleType(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4048</i>
	 */
	// int DAQmxSetAIChanCalScaleType(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIChanCalScaleType(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4049</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIChanCalScaleType(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIChanCalScaleType(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIChanCalScaleType(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIChanCalScaleType(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4049</i>
	 */
	// int DAQmxResetAIChanCalScaleType(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_ChanCal_Table_PreScaledVals ***<br>
	 * Original signature : <code>int32 DAQmxGetAIChanCalTablePreScaledVals(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 4051</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIChanCalTablePreScaledVals(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetAIChanCalTablePreScaledVals(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIChanCalTablePreScaledVals(Pointer taskHandle, Pointer channel, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_AI_ChanCal_Table_PreScaledVals ***<br>
	 * Original signature : <code>int32 DAQmxGetAIChanCalTablePreScaledVals(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 4051</i>
	 */
	// int DAQmxGetAIChanCalTablePreScaledVals(Pointer taskHandle, byte channel[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxSetAIChanCalTablePreScaledVals(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 4052</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIChanCalTablePreScaledVals(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxSetAIChanCalTablePreScaledVals(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIChanCalTablePreScaledVals(Pointer taskHandle, Pointer channel, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxSetAIChanCalTablePreScaledVals(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 4052</i>
	 */
	// int DAQmxSetAIChanCalTablePreScaledVals(Pointer taskHandle, byte channel[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxResetAIChanCalTablePreScaledVals(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4053</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIChanCalTablePreScaledVals(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIChanCalTablePreScaledVals(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIChanCalTablePreScaledVals(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIChanCalTablePreScaledVals(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4053</i>
	 */
	// int DAQmxResetAIChanCalTablePreScaledVals(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_ChanCal_Table_ScaledVals ***<br>
	 * Original signature : <code>int32 DAQmxGetAIChanCalTableScaledVals(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 4055</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIChanCalTableScaledVals(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetAIChanCalTableScaledVals(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIChanCalTableScaledVals(Pointer taskHandle, Pointer channel, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_AI_ChanCal_Table_ScaledVals ***<br>
	 * Original signature : <code>int32 DAQmxGetAIChanCalTableScaledVals(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 4055</i>
	 */
	// int DAQmxGetAIChanCalTableScaledVals(Pointer taskHandle, byte channel[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxSetAIChanCalTableScaledVals(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 4056</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIChanCalTableScaledVals(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxSetAIChanCalTableScaledVals(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIChanCalTableScaledVals(Pointer taskHandle, Pointer channel, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxSetAIChanCalTableScaledVals(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 4056</i>
	 */
	// int DAQmxSetAIChanCalTableScaledVals(Pointer taskHandle, byte channel[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxResetAIChanCalTableScaledVals(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4057</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIChanCalTableScaledVals(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIChanCalTableScaledVals(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIChanCalTableScaledVals(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIChanCalTableScaledVals(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4057</i>
	 */
	// int DAQmxResetAIChanCalTableScaledVals(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_ChanCal_Poly_ForwardCoeff ***<br>
	 * Original signature : <code>int32 DAQmxGetAIChanCalPolyForwardCoeff(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 4059</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIChanCalPolyForwardCoeff(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetAIChanCalPolyForwardCoeff(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIChanCalPolyForwardCoeff(Pointer taskHandle, Pointer channel, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_AI_ChanCal_Poly_ForwardCoeff ***<br>
	 * Original signature : <code>int32 DAQmxGetAIChanCalPolyForwardCoeff(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 4059</i>
	 */
	// int DAQmxGetAIChanCalPolyForwardCoeff(Pointer taskHandle, byte channel[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxSetAIChanCalPolyForwardCoeff(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 4060</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIChanCalPolyForwardCoeff(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxSetAIChanCalPolyForwardCoeff(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIChanCalPolyForwardCoeff(Pointer taskHandle, Pointer channel, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxSetAIChanCalPolyForwardCoeff(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 4060</i>
	 */
	// int DAQmxSetAIChanCalPolyForwardCoeff(Pointer taskHandle, byte channel[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxResetAIChanCalPolyForwardCoeff(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4061</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIChanCalPolyForwardCoeff(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIChanCalPolyForwardCoeff(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIChanCalPolyForwardCoeff(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIChanCalPolyForwardCoeff(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4061</i>
	 */
	// int DAQmxResetAIChanCalPolyForwardCoeff(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_ChanCal_Poly_ReverseCoeff ***<br>
	 * Original signature : <code>int32 DAQmxGetAIChanCalPolyReverseCoeff(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 4063</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIChanCalPolyReverseCoeff(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetAIChanCalPolyReverseCoeff(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIChanCalPolyReverseCoeff(Pointer taskHandle, Pointer channel, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_AI_ChanCal_Poly_ReverseCoeff ***<br>
	 * Original signature : <code>int32 DAQmxGetAIChanCalPolyReverseCoeff(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 4063</i>
	 */
	// int DAQmxGetAIChanCalPolyReverseCoeff(Pointer taskHandle, byte channel[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxSetAIChanCalPolyReverseCoeff(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 4064</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIChanCalPolyReverseCoeff(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxSetAIChanCalPolyReverseCoeff(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIChanCalPolyReverseCoeff(Pointer taskHandle, Pointer channel, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxSetAIChanCalPolyReverseCoeff(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 4064</i>
	 */
	// int DAQmxSetAIChanCalPolyReverseCoeff(Pointer taskHandle, byte channel[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxResetAIChanCalPolyReverseCoeff(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4065</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIChanCalPolyReverseCoeff(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIChanCalPolyReverseCoeff(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIChanCalPolyReverseCoeff(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIChanCalPolyReverseCoeff(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4065</i>
	 */
	// int DAQmxResetAIChanCalPolyReverseCoeff(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_ChanCal_OperatorName ***<br>
	 * Original signature : <code>int32 DAQmxGetAIChanCalOperatorName(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4067</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIChanCalOperatorName(com.sun.jna.Pointer, byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetAIChanCalOperatorName(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIChanCalOperatorName(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_AI_ChanCal_OperatorName ***<br>
	 * Original signature : <code>int32 DAQmxGetAIChanCalOperatorName(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4067</i>
	 */
	// int DAQmxGetAIChanCalOperatorName(Pointer taskHandle, byte channel[], ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetAIChanCalOperatorName(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4068</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIChanCalOperatorName(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #DAQmxSetAIChanCalOperatorName(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIChanCalOperatorName(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIChanCalOperatorName(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4068</i>
	 */
	// int DAQmxSetAIChanCalOperatorName(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIChanCalOperatorName(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4069</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIChanCalOperatorName(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIChanCalOperatorName(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIChanCalOperatorName(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIChanCalOperatorName(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4069</i>
	 */
	// int DAQmxResetAIChanCalOperatorName(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_ChanCal_Desc ***<br>
	 * Original signature : <code>int32 DAQmxGetAIChanCalDesc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4071</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIChanCalDesc(com.sun.jna.Pointer, byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetAIChanCalDesc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIChanCalDesc(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_AI_ChanCal_Desc ***<br>
	 * Original signature : <code>int32 DAQmxGetAIChanCalDesc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4071</i>
	 */
	// int DAQmxGetAIChanCalDesc(Pointer taskHandle, byte channel[], ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetAIChanCalDesc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4072</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIChanCalDesc(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #DAQmxSetAIChanCalDesc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIChanCalDesc(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIChanCalDesc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4072</i>
	 */
	// int DAQmxSetAIChanCalDesc(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIChanCalDesc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4073</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIChanCalDesc(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIChanCalDesc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIChanCalDesc(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIChanCalDesc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4073</i>
	 */
	// int DAQmxResetAIChanCalDesc(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_ChanCal_Verif_RefVals ***<br>
	 * Original signature : <code>int32 DAQmxGetAIChanCalVerifRefVals(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 4075</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIChanCalVerifRefVals(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetAIChanCalVerifRefVals(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIChanCalVerifRefVals(Pointer taskHandle, Pointer channel, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_AI_ChanCal_Verif_RefVals ***<br>
	 * Original signature : <code>int32 DAQmxGetAIChanCalVerifRefVals(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 4075</i>
	 */
	// int DAQmxGetAIChanCalVerifRefVals(Pointer taskHandle, byte channel[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxSetAIChanCalVerifRefVals(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 4076</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIChanCalVerifRefVals(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxSetAIChanCalVerifRefVals(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIChanCalVerifRefVals(Pointer taskHandle, Pointer channel, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxSetAIChanCalVerifRefVals(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 4076</i>
	 */
	// int DAQmxSetAIChanCalVerifRefVals(Pointer taskHandle, byte channel[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxResetAIChanCalVerifRefVals(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4077</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIChanCalVerifRefVals(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIChanCalVerifRefVals(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIChanCalVerifRefVals(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIChanCalVerifRefVals(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4077</i>
	 */
	// int DAQmxResetAIChanCalVerifRefVals(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_ChanCal_Verif_AcqVals ***<br>
	 * Original signature : <code>int32 DAQmxGetAIChanCalVerifAcqVals(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 4079</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIChanCalVerifAcqVals(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetAIChanCalVerifAcqVals(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIChanCalVerifAcqVals(Pointer taskHandle, Pointer channel, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_AI_ChanCal_Verif_AcqVals ***<br>
	 * Original signature : <code>int32 DAQmxGetAIChanCalVerifAcqVals(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 4079</i>
	 */
	// int DAQmxGetAIChanCalVerifAcqVals(Pointer taskHandle, byte channel[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxSetAIChanCalVerifAcqVals(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 4080</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIChanCalVerifAcqVals(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxSetAIChanCalVerifAcqVals(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIChanCalVerifAcqVals(Pointer taskHandle, Pointer channel, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxSetAIChanCalVerifAcqVals(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 4080</i>
	 */
	// int DAQmxSetAIChanCalVerifAcqVals(Pointer taskHandle, byte channel[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxResetAIChanCalVerifAcqVals(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4081</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIChanCalVerifAcqVals(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIChanCalVerifAcqVals(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIChanCalVerifAcqVals(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIChanCalVerifAcqVals(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4081</i>
	 */
	// int DAQmxResetAIChanCalVerifAcqVals(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Rng_High ***<br>
	 * Original signature : <code>int32 DAQmxGetAIRngHigh(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4083</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIRngHigh(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAIRngHigh(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIRngHigh(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Rng_High ***<br>
	 * Original signature : <code>int32 DAQmxGetAIRngHigh(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4083</i>
	 */
	// int DAQmxGetAIRngHigh(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIRngHigh(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4084</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIRngHigh(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetAIRngHigh(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIRngHigh(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIRngHigh(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4084</i>
	 */
	// int DAQmxSetAIRngHigh(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIRngHigh(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4085</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIRngHigh(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIRngHigh(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIRngHigh(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIRngHigh(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4085</i>
	 */
	// int DAQmxResetAIRngHigh(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Rng_Low ***<br>
	 * Original signature : <code>int32 DAQmxGetAIRngLow(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4087</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIRngLow(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAIRngLow(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIRngLow(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Rng_Low ***<br>
	 * Original signature : <code>int32 DAQmxGetAIRngLow(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4087</i>
	 */
	// int DAQmxGetAIRngLow(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIRngLow(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4088</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIRngLow(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetAIRngLow(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIRngLow(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIRngLow(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4088</i>
	 */
	// int DAQmxSetAIRngLow(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIRngLow(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4089</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIRngLow(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIRngLow(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIRngLow(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIRngLow(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4089</i>
	 */
	// int DAQmxResetAIRngLow(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_DCOffset ***<br>
	 * Original signature : <code>int32 DAQmxGetAIDCOffset(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4091</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIDCOffset(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAIDCOffset(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIDCOffset(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_DCOffset ***<br>
	 * Original signature : <code>int32 DAQmxGetAIDCOffset(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4091</i>
	 */
	// int DAQmxGetAIDCOffset(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIDCOffset(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4092</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIDCOffset(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetAIDCOffset(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIDCOffset(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIDCOffset(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4092</i>
	 */
	// int DAQmxSetAIDCOffset(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIDCOffset(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4093</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIDCOffset(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIDCOffset(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIDCOffset(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIDCOffset(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4093</i>
	 */
	// int DAQmxResetAIDCOffset(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_Gain ***<br>
	 * Original signature : <code>int32 DAQmxGetAIGain(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4095</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIGain(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAIGain(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIGain(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_Gain ***<br>
	 * Original signature : <code>int32 DAQmxGetAIGain(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4095</i>
	 */
	// int DAQmxGetAIGain(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIGain(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4096</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIGain(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetAIGain(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIGain(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIGain(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4096</i>
	 */
	// int DAQmxSetAIGain(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIGain(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4097</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIGain(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIGain(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIGain(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIGain(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4097</i>
	 */
	// int DAQmxResetAIGain(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_SampAndHold_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetAISampAndHoldEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4099</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAISampAndHoldEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetAISampAndHoldEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAISampAndHoldEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_SampAndHold_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetAISampAndHoldEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4099</i>
	 */
	// int DAQmxGetAISampAndHoldEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAISampAndHoldEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4100</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAISampAndHoldEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetAISampAndHoldEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetAISampAndHoldEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetAISampAndHoldEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4100</i>
	 */
	// int DAQmxSetAISampAndHoldEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAISampAndHoldEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4101</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAISampAndHoldEnable(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAISampAndHoldEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAISampAndHoldEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAISampAndHoldEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4101</i>
	 */
	// int DAQmxResetAISampAndHoldEnable(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set AutoZeroType1<br>
	 * Original signature : <code>int32 DAQmxGetAIAutoZeroMode(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4104</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIAutoZeroMode(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetAIAutoZeroMode(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIAutoZeroMode(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set AutoZeroType1<br>
	 * Original signature : <code>int32 DAQmxGetAIAutoZeroMode(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4104</i>
	 */
	// int DAQmxGetAIAutoZeroMode(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIAutoZeroMode(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4105</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIAutoZeroMode(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetAIAutoZeroMode(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIAutoZeroMode(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIAutoZeroMode(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4105</i>
	 */
	// int DAQmxSetAIAutoZeroMode(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIAutoZeroMode(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4106</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIAutoZeroMode(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIAutoZeroMode(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIAutoZeroMode(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIAutoZeroMode(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4106</i>
	 */
	// int DAQmxResetAIAutoZeroMode(Pointer taskHandle, byte channel[]);

	/**
	 * Uses value set DataTransferMechanism<br>
	 * Original signature : <code>int32 DAQmxGetAIDataXferMech(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4109</i>
	 */
	//int DAQmxGetAIDataXferMech(Pointer taskHandle, byte channel[], IntBuffer data);

	/**
	 * Original signature : <code>int32 DAQmxSetAIDataXferMech(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4110</i>
	 */
	int DAQmxSetAIDataXferMech(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIDataXferMech(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4111</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIDataXferMech(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIDataXferMech(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIDataXferMech(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIDataXferMech(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4111</i>
	 */
	// int DAQmxResetAIDataXferMech(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set InputDataTransferCondition<br>
	 * Original signature : <code>int32 DAQmxGetAIDataXferReqCond(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4114</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIDataXferReqCond(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetAIDataXferReqCond(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIDataXferReqCond(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set InputDataTransferCondition<br>
	 * Original signature : <code>int32 DAQmxGetAIDataXferReqCond(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4114</i>
	 */
	// int DAQmxGetAIDataXferReqCond(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIDataXferReqCond(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4115</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIDataXferReqCond(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetAIDataXferReqCond(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIDataXferReqCond(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIDataXferReqCond(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4115</i>
	 */
	// int DAQmxSetAIDataXferReqCond(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIDataXferReqCond(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4116</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIDataXferReqCond(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIDataXferReqCond(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIDataXferReqCond(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIDataXferReqCond(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4116</i>
	 */
	// int DAQmxResetAIDataXferReqCond(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_DataXferCustomThreshold ***<br>
	 * Original signature : <code>int32 DAQmxGetAIDataXferCustomThreshold(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 4118</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIDataXferCustomThreshold(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetAIDataXferCustomThreshold(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIDataXferCustomThreshold(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_DataXferCustomThreshold ***<br>
	 * Original signature : <code>int32 DAQmxGetAIDataXferCustomThreshold(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 4118</i>
	 */
	// int DAQmxGetAIDataXferCustomThreshold(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIDataXferCustomThreshold(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 4119</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIDataXferCustomThreshold(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetAIDataXferCustomThreshold(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIDataXferCustomThreshold(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIDataXferCustomThreshold(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 4119</i>
	 */
	// int DAQmxSetAIDataXferCustomThreshold(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIDataXferCustomThreshold(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4120</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIDataXferCustomThreshold(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIDataXferCustomThreshold(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIDataXferCustomThreshold(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIDataXferCustomThreshold(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4120</i>
	 */
	// int DAQmxResetAIDataXferCustomThreshold(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_UsbXferReqSize ***<br>
	 * Original signature : <code>int32 DAQmxGetAIUsbXferReqSize(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 4122</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIUsbXferReqSize(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetAIUsbXferReqSize(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIUsbXferReqSize(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_UsbXferReqSize ***<br>
	 * Original signature : <code>int32 DAQmxGetAIUsbXferReqSize(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 4122</i>
	 */
	// int DAQmxGetAIUsbXferReqSize(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIUsbXferReqSize(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 4123</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIUsbXferReqSize(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetAIUsbXferReqSize(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIUsbXferReqSize(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIUsbXferReqSize(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 4123</i>
	 */
	// int DAQmxSetAIUsbXferReqSize(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIUsbXferReqSize(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4124</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIUsbXferReqSize(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIUsbXferReqSize(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIUsbXferReqSize(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIUsbXferReqSize(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4124</i>
	 */
	// int DAQmxResetAIUsbXferReqSize(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_UsbXferReqCount ***<br>
	 * Original signature : <code>int32 DAQmxGetAIUsbXferReqCount(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 4126</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIUsbXferReqCount(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetAIUsbXferReqCount(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIUsbXferReqCount(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_UsbXferReqCount ***<br>
	 * Original signature : <code>int32 DAQmxGetAIUsbXferReqCount(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 4126</i>
	 */
	// int DAQmxGetAIUsbXferReqCount(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIUsbXferReqCount(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 4127</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIUsbXferReqCount(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetAIUsbXferReqCount(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIUsbXferReqCount(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIUsbXferReqCount(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 4127</i>
	 */
	// int DAQmxSetAIUsbXferReqCount(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIUsbXferReqCount(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4128</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIUsbXferReqCount(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIUsbXferReqCount(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIUsbXferReqCount(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIUsbXferReqCount(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4128</i>
	 */
	// int DAQmxResetAIUsbXferReqCount(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_MemMapEnable ***<br>
	 * Original signature : <code>int32 DAQmxGetAIMemMapEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4130</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIMemMapEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetAIMemMapEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIMemMapEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_MemMapEnable ***<br>
	 * Original signature : <code>int32 DAQmxGetAIMemMapEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4130</i>
	 */
	// int DAQmxGetAIMemMapEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIMemMapEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4131</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIMemMapEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetAIMemMapEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIMemMapEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIMemMapEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4131</i>
	 */
	// int DAQmxSetAIMemMapEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIMemMapEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4132</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIMemMapEnable(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIMemMapEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIMemMapEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIMemMapEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4132</i>
	 */
	// int DAQmxResetAIMemMapEnable(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set RawDataCompressionType<br>
	 * Original signature : <code>int32 DAQmxGetAIRawDataCompressionType(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4135</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIRawDataCompressionType(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetAIRawDataCompressionType(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIRawDataCompressionType(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set RawDataCompressionType<br>
	 * Original signature : <code>int32 DAQmxGetAIRawDataCompressionType(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4135</i>
	 */
	// int DAQmxGetAIRawDataCompressionType(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIRawDataCompressionType(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4136</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIRawDataCompressionType(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetAIRawDataCompressionType(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIRawDataCompressionType(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIRawDataCompressionType(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4136</i>
	 */
	// int DAQmxSetAIRawDataCompressionType(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIRawDataCompressionType(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4137</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIRawDataCompressionType(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIRawDataCompressionType(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIRawDataCompressionType(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIRawDataCompressionType(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4137</i>
	 */
	// int DAQmxResetAIRawDataCompressionType(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_LossyLSBRemoval_CompressedSampSize ***<br>
	 * Original signature : <code>int32 DAQmxGetAILossyLSBRemovalCompressedSampSize(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 4139</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAILossyLSBRemovalCompressedSampSize(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetAILossyLSBRemovalCompressedSampSize(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAILossyLSBRemovalCompressedSampSize(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_LossyLSBRemoval_CompressedSampSize ***<br>
	 * Original signature : <code>int32 DAQmxGetAILossyLSBRemovalCompressedSampSize(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 4139</i>
	 */
	// int DAQmxGetAILossyLSBRemovalCompressedSampSize(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAILossyLSBRemovalCompressedSampSize(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 4140</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAILossyLSBRemovalCompressedSampSize(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetAILossyLSBRemovalCompressedSampSize(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetAILossyLSBRemovalCompressedSampSize(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetAILossyLSBRemovalCompressedSampSize(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 4140</i>
	 */
	// int DAQmxSetAILossyLSBRemovalCompressedSampSize(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAILossyLSBRemovalCompressedSampSize(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4141</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAILossyLSBRemovalCompressedSampSize(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAILossyLSBRemovalCompressedSampSize(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAILossyLSBRemovalCompressedSampSize(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAILossyLSBRemovalCompressedSampSize(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4141</i>
	 */
	// int DAQmxResetAILossyLSBRemovalCompressedSampSize(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_DevScalingCoeff ***<br>
	 * Original signature : <code>int32 DAQmxGetAIDevScalingCoeff(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 4143</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIDevScalingCoeff(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetAIDevScalingCoeff(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIDevScalingCoeff(Pointer taskHandle, Pointer channel, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_AI_DevScalingCoeff ***<br>
	 * Original signature : <code>int32 DAQmxGetAIDevScalingCoeff(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 4143</i>
	 */
	// int DAQmxGetAIDevScalingCoeff(Pointer taskHandle, byte channel[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_AI_EnhancedAliasRejectionEnable ***<br>
	 * Original signature : <code>int32 DAQmxGetAIEnhancedAliasRejectionEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4145</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIEnhancedAliasRejectionEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetAIEnhancedAliasRejectionEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIEnhancedAliasRejectionEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_EnhancedAliasRejectionEnable ***<br>
	 * Original signature : <code>int32 DAQmxGetAIEnhancedAliasRejectionEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4145</i>
	 */
	// int DAQmxGetAIEnhancedAliasRejectionEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIEnhancedAliasRejectionEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4146</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIEnhancedAliasRejectionEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetAIEnhancedAliasRejectionEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIEnhancedAliasRejectionEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIEnhancedAliasRejectionEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4146</i>
	 */
	// int DAQmxSetAIEnhancedAliasRejectionEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIEnhancedAliasRejectionEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4147</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIEnhancedAliasRejectionEnable(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIEnhancedAliasRejectionEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIEnhancedAliasRejectionEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIEnhancedAliasRejectionEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4147</i>
	 */
	// int DAQmxResetAIEnhancedAliasRejectionEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AI_OpenChanDetectEnable ***<br>
	 * Original signature : <code>int32 DAQmxGetAIOpenChanDetectEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4149</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIOpenChanDetectEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetAIOpenChanDetectEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIOpenChanDetectEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AI_OpenChanDetectEnable ***<br>
	 * Original signature : <code>int32 DAQmxGetAIOpenChanDetectEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4149</i>
	 */
	// int DAQmxGetAIOpenChanDetectEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIOpenChanDetectEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4150</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIOpenChanDetectEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetAIOpenChanDetectEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIOpenChanDetectEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIOpenChanDetectEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4150</i>
	 */
	// int DAQmxSetAIOpenChanDetectEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIOpenChanDetectEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4151</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIOpenChanDetectEnable(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIOpenChanDetectEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIOpenChanDetectEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAIOpenChanDetectEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4151</i>
	 */
	// int DAQmxResetAIOpenChanDetectEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AO_Max ***<br>
	 * Original signature : <code>int32 DAQmxGetAOMax(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4153</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAOMax(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAOMax(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAOMax(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AO_Max ***<br>
	 * Original signature : <code>int32 DAQmxGetAOMax(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4153</i>
	 */
	// int DAQmxGetAOMax(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOMax(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4154</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAOMax(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetAOMax(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetAOMax(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOMax(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4154</i>
	 */
	// int DAQmxSetAOMax(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAOMax(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4155</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAOMax(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAOMax(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAOMax(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAOMax(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4155</i>
	 */
	// int DAQmxResetAOMax(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AO_Min ***<br>
	 * Original signature : <code>int32 DAQmxGetAOMin(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4157</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAOMin(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAOMin(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAOMin(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AO_Min ***<br>
	 * Original signature : <code>int32 DAQmxGetAOMin(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4157</i>
	 */
	// int DAQmxGetAOMin(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOMin(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4158</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAOMin(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetAOMin(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetAOMin(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOMin(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4158</i>
	 */
	// int DAQmxSetAOMin(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAOMin(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4159</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAOMin(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAOMin(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAOMin(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAOMin(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4159</i>
	 */
	// int DAQmxResetAOMin(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AO_CustomScaleName ***<br>
	 * Original signature : <code>int32 DAQmxGetAOCustomScaleName(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4161</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAOCustomScaleName(com.sun.jna.Pointer, byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetAOCustomScaleName(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetAOCustomScaleName(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_AO_CustomScaleName ***<br>
	 * Original signature : <code>int32 DAQmxGetAOCustomScaleName(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4161</i>
	 */
	// int DAQmxGetAOCustomScaleName(Pointer taskHandle, byte channel[], ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetAOCustomScaleName(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4162</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAOCustomScaleName(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #DAQmxSetAOCustomScaleName(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetAOCustomScaleName(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOCustomScaleName(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4162</i>
	 */
	// int DAQmxSetAOCustomScaleName(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetAOCustomScaleName(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4163</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAOCustomScaleName(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAOCustomScaleName(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAOCustomScaleName(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAOCustomScaleName(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4163</i>
	 */
	// int DAQmxResetAOCustomScaleName(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set AOOutputChannelType<br>
	 * Original signature : <code>int32 DAQmxGetAOOutputType(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4166</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAOOutputType(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetAOOutputType(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAOOutputType(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set AOOutputChannelType<br>
	 * Original signature : <code>int32 DAQmxGetAOOutputType(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4166</i>
	 */
	// int DAQmxGetAOOutputType(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Uses value set VoltageUnits2<br>
	 * Original signature : <code>int32 DAQmxGetAOVoltageUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4169</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAOVoltageUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetAOVoltageUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAOVoltageUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set VoltageUnits2<br>
	 * Original signature : <code>int32 DAQmxGetAOVoltageUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4169</i>
	 */
	// int DAQmxGetAOVoltageUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOVoltageUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4170</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAOVoltageUnits(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetAOVoltageUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetAOVoltageUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOVoltageUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4170</i>
	 */
	// int DAQmxSetAOVoltageUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAOVoltageUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4171</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAOVoltageUnits(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAOVoltageUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAOVoltageUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAOVoltageUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4171</i>
	 */
	// int DAQmxResetAOVoltageUnits(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AO_Voltage_CurrentLimit ***<br>
	 * Original signature : <code>int32 DAQmxGetAOVoltageCurrentLimit(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4173</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAOVoltageCurrentLimit(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAOVoltageCurrentLimit(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAOVoltageCurrentLimit(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AO_Voltage_CurrentLimit ***<br>
	 * Original signature : <code>int32 DAQmxGetAOVoltageCurrentLimit(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4173</i>
	 */
	// int DAQmxGetAOVoltageCurrentLimit(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOVoltageCurrentLimit(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4174</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAOVoltageCurrentLimit(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetAOVoltageCurrentLimit(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetAOVoltageCurrentLimit(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOVoltageCurrentLimit(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4174</i>
	 */
	// int DAQmxSetAOVoltageCurrentLimit(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAOVoltageCurrentLimit(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4175</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAOVoltageCurrentLimit(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAOVoltageCurrentLimit(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAOVoltageCurrentLimit(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAOVoltageCurrentLimit(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4175</i>
	 */
	// int DAQmxResetAOVoltageCurrentLimit(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set CurrentUnits1<br>
	 * Original signature : <code>int32 DAQmxGetAOCurrentUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4178</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAOCurrentUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetAOCurrentUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAOCurrentUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set CurrentUnits1<br>
	 * Original signature : <code>int32 DAQmxGetAOCurrentUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4178</i>
	 */
	// int DAQmxGetAOCurrentUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOCurrentUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4179</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAOCurrentUnits(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetAOCurrentUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetAOCurrentUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOCurrentUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4179</i>
	 */
	// int DAQmxSetAOCurrentUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAOCurrentUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4180</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAOCurrentUnits(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAOCurrentUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAOCurrentUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAOCurrentUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4180</i>
	 */
	// int DAQmxResetAOCurrentUnits(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set FuncGenType<br>
	 * Original signature : <code>int32 DAQmxGetAOFuncGenType(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4183</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAOFuncGenType(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetAOFuncGenType(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAOFuncGenType(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set FuncGenType<br>
	 * Original signature : <code>int32 DAQmxGetAOFuncGenType(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4183</i>
	 */
	// int DAQmxGetAOFuncGenType(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOFuncGenType(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4184</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAOFuncGenType(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetAOFuncGenType(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetAOFuncGenType(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOFuncGenType(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4184</i>
	 */
	// int DAQmxSetAOFuncGenType(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAOFuncGenType(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4185</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAOFuncGenType(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAOFuncGenType(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAOFuncGenType(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAOFuncGenType(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4185</i>
	 */
	// int DAQmxResetAOFuncGenType(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AO_FuncGen_Freq ***<br>
	 * Original signature : <code>int32 DAQmxGetAOFuncGenFreq(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4187</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAOFuncGenFreq(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAOFuncGenFreq(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAOFuncGenFreq(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AO_FuncGen_Freq ***<br>
	 * Original signature : <code>int32 DAQmxGetAOFuncGenFreq(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4187</i>
	 */
	// int DAQmxGetAOFuncGenFreq(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOFuncGenFreq(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4188</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAOFuncGenFreq(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetAOFuncGenFreq(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetAOFuncGenFreq(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOFuncGenFreq(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4188</i>
	 */
	// int DAQmxSetAOFuncGenFreq(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAOFuncGenFreq(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4189</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAOFuncGenFreq(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAOFuncGenFreq(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAOFuncGenFreq(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAOFuncGenFreq(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4189</i>
	 */
	// int DAQmxResetAOFuncGenFreq(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AO_FuncGen_Amplitude ***<br>
	 * Original signature : <code>int32 DAQmxGetAOFuncGenAmplitude(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4191</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAOFuncGenAmplitude(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAOFuncGenAmplitude(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAOFuncGenAmplitude(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AO_FuncGen_Amplitude ***<br>
	 * Original signature : <code>int32 DAQmxGetAOFuncGenAmplitude(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4191</i>
	 */
	// int DAQmxGetAOFuncGenAmplitude(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOFuncGenAmplitude(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4192</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAOFuncGenAmplitude(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetAOFuncGenAmplitude(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetAOFuncGenAmplitude(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOFuncGenAmplitude(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4192</i>
	 */
	// int DAQmxSetAOFuncGenAmplitude(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAOFuncGenAmplitude(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4193</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAOFuncGenAmplitude(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAOFuncGenAmplitude(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAOFuncGenAmplitude(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAOFuncGenAmplitude(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4193</i>
	 */
	// int DAQmxResetAOFuncGenAmplitude(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AO_FuncGen_Offset ***<br>
	 * Original signature : <code>int32 DAQmxGetAOFuncGenOffset(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4195</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAOFuncGenOffset(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAOFuncGenOffset(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAOFuncGenOffset(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AO_FuncGen_Offset ***<br>
	 * Original signature : <code>int32 DAQmxGetAOFuncGenOffset(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4195</i>
	 */
	// int DAQmxGetAOFuncGenOffset(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOFuncGenOffset(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4196</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAOFuncGenOffset(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetAOFuncGenOffset(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetAOFuncGenOffset(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOFuncGenOffset(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4196</i>
	 */
	// int DAQmxSetAOFuncGenOffset(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAOFuncGenOffset(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4197</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAOFuncGenOffset(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAOFuncGenOffset(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAOFuncGenOffset(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAOFuncGenOffset(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4197</i>
	 */
	// int DAQmxResetAOFuncGenOffset(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AO_FuncGen_Square_DutyCycle ***<br>
	 * Original signature : <code>int32 DAQmxGetAOFuncGenSquareDutyCycle(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4199</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAOFuncGenSquareDutyCycle(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAOFuncGenSquareDutyCycle(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAOFuncGenSquareDutyCycle(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AO_FuncGen_Square_DutyCycle ***<br>
	 * Original signature : <code>int32 DAQmxGetAOFuncGenSquareDutyCycle(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4199</i>
	 */
	// int DAQmxGetAOFuncGenSquareDutyCycle(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOFuncGenSquareDutyCycle(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4200</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAOFuncGenSquareDutyCycle(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetAOFuncGenSquareDutyCycle(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetAOFuncGenSquareDutyCycle(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOFuncGenSquareDutyCycle(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4200</i>
	 */
	// int DAQmxSetAOFuncGenSquareDutyCycle(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAOFuncGenSquareDutyCycle(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4201</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAOFuncGenSquareDutyCycle(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAOFuncGenSquareDutyCycle(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAOFuncGenSquareDutyCycle(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAOFuncGenSquareDutyCycle(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4201</i>
	 */
	// int DAQmxResetAOFuncGenSquareDutyCycle(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set ModulationType<br>
	 * Original signature : <code>int32 DAQmxGetAOFuncGenModulationType(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4204</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAOFuncGenModulationType(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetAOFuncGenModulationType(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAOFuncGenModulationType(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set ModulationType<br>
	 * Original signature : <code>int32 DAQmxGetAOFuncGenModulationType(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4204</i>
	 */
	// int DAQmxGetAOFuncGenModulationType(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOFuncGenModulationType(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4205</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAOFuncGenModulationType(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetAOFuncGenModulationType(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetAOFuncGenModulationType(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOFuncGenModulationType(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4205</i>
	 */
	// int DAQmxSetAOFuncGenModulationType(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAOFuncGenModulationType(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4206</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAOFuncGenModulationType(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAOFuncGenModulationType(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAOFuncGenModulationType(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAOFuncGenModulationType(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4206</i>
	 */
	// int DAQmxResetAOFuncGenModulationType(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AO_FuncGen_FMDeviation ***<br>
	 * Original signature : <code>int32 DAQmxGetAOFuncGenFMDeviation(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4208</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAOFuncGenFMDeviation(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAOFuncGenFMDeviation(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAOFuncGenFMDeviation(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AO_FuncGen_FMDeviation ***<br>
	 * Original signature : <code>int32 DAQmxGetAOFuncGenFMDeviation(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4208</i>
	 */
	// int DAQmxGetAOFuncGenFMDeviation(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOFuncGenFMDeviation(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4209</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAOFuncGenFMDeviation(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetAOFuncGenFMDeviation(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetAOFuncGenFMDeviation(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOFuncGenFMDeviation(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4209</i>
	 */
	// int DAQmxSetAOFuncGenFMDeviation(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAOFuncGenFMDeviation(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4210</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAOFuncGenFMDeviation(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAOFuncGenFMDeviation(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAOFuncGenFMDeviation(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAOFuncGenFMDeviation(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4210</i>
	 */
	// int DAQmxResetAOFuncGenFMDeviation(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AO_OutputImpedance ***<br>
	 * Original signature : <code>int32 DAQmxGetAOOutputImpedance(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4212</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAOOutputImpedance(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAOOutputImpedance(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAOOutputImpedance(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AO_OutputImpedance ***<br>
	 * Original signature : <code>int32 DAQmxGetAOOutputImpedance(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4212</i>
	 */
	// int DAQmxGetAOOutputImpedance(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOOutputImpedance(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4213</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAOOutputImpedance(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetAOOutputImpedance(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetAOOutputImpedance(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOOutputImpedance(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4213</i>
	 */
	// int DAQmxSetAOOutputImpedance(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAOOutputImpedance(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4214</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAOOutputImpedance(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAOOutputImpedance(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAOOutputImpedance(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAOOutputImpedance(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4214</i>
	 */
	// int DAQmxResetAOOutputImpedance(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AO_LoadImpedance ***<br>
	 * Original signature : <code>int32 DAQmxGetAOLoadImpedance(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4216</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAOLoadImpedance(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAOLoadImpedance(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAOLoadImpedance(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AO_LoadImpedance ***<br>
	 * Original signature : <code>int32 DAQmxGetAOLoadImpedance(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4216</i>
	 */
	// int DAQmxGetAOLoadImpedance(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOLoadImpedance(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4217</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAOLoadImpedance(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetAOLoadImpedance(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetAOLoadImpedance(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOLoadImpedance(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4217</i>
	 */
	// int DAQmxSetAOLoadImpedance(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAOLoadImpedance(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4218</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAOLoadImpedance(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAOLoadImpedance(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAOLoadImpedance(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAOLoadImpedance(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4218</i>
	 */
	// int DAQmxResetAOLoadImpedance(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set AOIdleOutputBehavior<br>
	 * Original signature : <code>int32 DAQmxGetAOIdleOutputBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4221</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAOIdleOutputBehavior(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetAOIdleOutputBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAOIdleOutputBehavior(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set AOIdleOutputBehavior<br>
	 * Original signature : <code>int32 DAQmxGetAOIdleOutputBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4221</i>
	 */
	// int DAQmxGetAOIdleOutputBehavior(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOIdleOutputBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4222</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAOIdleOutputBehavior(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetAOIdleOutputBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetAOIdleOutputBehavior(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOIdleOutputBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4222</i>
	 */
	// int DAQmxSetAOIdleOutputBehavior(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAOIdleOutputBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4223</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAOIdleOutputBehavior(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAOIdleOutputBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAOIdleOutputBehavior(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAOIdleOutputBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4223</i>
	 */
	// int DAQmxResetAOIdleOutputBehavior(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set OutputTermCfg<br>
	 * Original signature : <code>int32 DAQmxGetAOTermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4226</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAOTermCfg(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetAOTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAOTermCfg(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set OutputTermCfg<br>
	 * Original signature : <code>int32 DAQmxGetAOTermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4226</i>
	 */
	// int DAQmxGetAOTermCfg(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOTermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4227</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAOTermCfg(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetAOTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetAOTermCfg(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOTermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4227</i>
	 */
	// int DAQmxSetAOTermCfg(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAOTermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4228</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAOTermCfg(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAOTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAOTermCfg(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAOTermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4228</i>
	 */
	// int DAQmxResetAOTermCfg(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set ResolutionType1<br>
	 * Original signature : <code>int32 DAQmxGetAOResolutionUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4231</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAOResolutionUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetAOResolutionUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAOResolutionUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set ResolutionType1<br>
	 * Original signature : <code>int32 DAQmxGetAOResolutionUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4231</i>
	 */
	// int DAQmxGetAOResolutionUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOResolutionUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4232</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAOResolutionUnits(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetAOResolutionUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetAOResolutionUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOResolutionUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4232</i>
	 */
	// int DAQmxSetAOResolutionUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAOResolutionUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4233</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAOResolutionUnits(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAOResolutionUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAOResolutionUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAOResolutionUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4233</i>
	 */
	// int DAQmxResetAOResolutionUnits(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AO_Resolution ***<br>
	 * Original signature : <code>int32 DAQmxGetAOResolution(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4235</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAOResolution(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAOResolution(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAOResolution(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AO_Resolution ***<br>
	 * Original signature : <code>int32 DAQmxGetAOResolution(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4235</i>
	 */
	// int DAQmxGetAOResolution(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_AO_DAC_Rng_High ***<br>
	 * Original signature : <code>int32 DAQmxGetAODACRngHigh(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4237</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAODACRngHigh(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAODACRngHigh(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAODACRngHigh(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AO_DAC_Rng_High ***<br>
	 * Original signature : <code>int32 DAQmxGetAODACRngHigh(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4237</i>
	 */
	// int DAQmxGetAODACRngHigh(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAODACRngHigh(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4238</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAODACRngHigh(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetAODACRngHigh(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetAODACRngHigh(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAODACRngHigh(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4238</i>
	 */
	// int DAQmxSetAODACRngHigh(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAODACRngHigh(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4239</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAODACRngHigh(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAODACRngHigh(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAODACRngHigh(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAODACRngHigh(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4239</i>
	 */
	// int DAQmxResetAODACRngHigh(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AO_DAC_Rng_Low ***<br>
	 * Original signature : <code>int32 DAQmxGetAODACRngLow(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4241</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAODACRngLow(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAODACRngLow(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAODACRngLow(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AO_DAC_Rng_Low ***<br>
	 * Original signature : <code>int32 DAQmxGetAODACRngLow(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4241</i>
	 */
	// int DAQmxGetAODACRngLow(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAODACRngLow(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4242</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAODACRngLow(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetAODACRngLow(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetAODACRngLow(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAODACRngLow(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4242</i>
	 */
	// int DAQmxSetAODACRngLow(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAODACRngLow(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4243</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAODACRngLow(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAODACRngLow(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAODACRngLow(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAODACRngLow(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4243</i>
	 */
	// int DAQmxResetAODACRngLow(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AO_DAC_Ref_ConnToGnd ***<br>
	 * Original signature : <code>int32 DAQmxGetAODACRefConnToGnd(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4245</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAODACRefConnToGnd(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetAODACRefConnToGnd(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAODACRefConnToGnd(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AO_DAC_Ref_ConnToGnd ***<br>
	 * Original signature : <code>int32 DAQmxGetAODACRefConnToGnd(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4245</i>
	 */
	// int DAQmxGetAODACRefConnToGnd(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAODACRefConnToGnd(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4246</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAODACRefConnToGnd(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetAODACRefConnToGnd(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetAODACRefConnToGnd(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetAODACRefConnToGnd(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4246</i>
	 */
	// int DAQmxSetAODACRefConnToGnd(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAODACRefConnToGnd(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4247</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAODACRefConnToGnd(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAODACRefConnToGnd(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAODACRefConnToGnd(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAODACRefConnToGnd(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4247</i>
	 */
	// int DAQmxResetAODACRefConnToGnd(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AO_DAC_Ref_AllowConnToGnd ***<br>
	 * Original signature : <code>int32 DAQmxGetAODACRefAllowConnToGnd(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4249</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAODACRefAllowConnToGnd(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetAODACRefAllowConnToGnd(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAODACRefAllowConnToGnd(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AO_DAC_Ref_AllowConnToGnd ***<br>
	 * Original signature : <code>int32 DAQmxGetAODACRefAllowConnToGnd(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4249</i>
	 */
	// int DAQmxGetAODACRefAllowConnToGnd(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAODACRefAllowConnToGnd(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4250</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAODACRefAllowConnToGnd(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetAODACRefAllowConnToGnd(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetAODACRefAllowConnToGnd(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetAODACRefAllowConnToGnd(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4250</i>
	 */
	// int DAQmxSetAODACRefAllowConnToGnd(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAODACRefAllowConnToGnd(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4251</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAODACRefAllowConnToGnd(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAODACRefAllowConnToGnd(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAODACRefAllowConnToGnd(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAODACRefAllowConnToGnd(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4251</i>
	 */
	// int DAQmxResetAODACRefAllowConnToGnd(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set SourceSelection<br>
	 * Original signature : <code>int32 DAQmxGetAODACRefSrc(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4254</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAODACRefSrc(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetAODACRefSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAODACRefSrc(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set SourceSelection<br>
	 * Original signature : <code>int32 DAQmxGetAODACRefSrc(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4254</i>
	 */
	// int DAQmxGetAODACRefSrc(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAODACRefSrc(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4255</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAODACRefSrc(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetAODACRefSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetAODACRefSrc(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAODACRefSrc(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4255</i>
	 */
	// int DAQmxSetAODACRefSrc(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAODACRefSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4256</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAODACRefSrc(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAODACRefSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAODACRefSrc(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAODACRefSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4256</i>
	 */
	// int DAQmxResetAODACRefSrc(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AO_DAC_Ref_ExtSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetAODACRefExtSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4258</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAODACRefExtSrc(com.sun.jna.Pointer, byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetAODACRefExtSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetAODACRefExtSrc(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_AO_DAC_Ref_ExtSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetAODACRefExtSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4258</i>
	 */
	// int DAQmxGetAODACRefExtSrc(Pointer taskHandle, byte channel[], ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetAODACRefExtSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4259</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAODACRefExtSrc(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #DAQmxSetAODACRefExtSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetAODACRefExtSrc(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAODACRefExtSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4259</i>
	 */
	// int DAQmxSetAODACRefExtSrc(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetAODACRefExtSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4260</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAODACRefExtSrc(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAODACRefExtSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAODACRefExtSrc(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAODACRefExtSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4260</i>
	 */
	// int DAQmxResetAODACRefExtSrc(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AO_DAC_Ref_Val ***<br>
	 * Original signature : <code>int32 DAQmxGetAODACRefVal(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4262</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAODACRefVal(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAODACRefVal(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAODACRefVal(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AO_DAC_Ref_Val ***<br>
	 * Original signature : <code>int32 DAQmxGetAODACRefVal(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4262</i>
	 */
	// int DAQmxGetAODACRefVal(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAODACRefVal(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4263</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAODACRefVal(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetAODACRefVal(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetAODACRefVal(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAODACRefVal(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4263</i>
	 */
	// int DAQmxSetAODACRefVal(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAODACRefVal(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4264</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAODACRefVal(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAODACRefVal(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAODACRefVal(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAODACRefVal(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4264</i>
	 */
	// int DAQmxResetAODACRefVal(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set SourceSelection<br>
	 * Original signature : <code>int32 DAQmxGetAODACOffsetSrc(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4267</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAODACOffsetSrc(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetAODACOffsetSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAODACOffsetSrc(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set SourceSelection<br>
	 * Original signature : <code>int32 DAQmxGetAODACOffsetSrc(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4267</i>
	 */
	// int DAQmxGetAODACOffsetSrc(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAODACOffsetSrc(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4268</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAODACOffsetSrc(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetAODACOffsetSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetAODACOffsetSrc(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAODACOffsetSrc(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4268</i>
	 */
	// int DAQmxSetAODACOffsetSrc(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAODACOffsetSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4269</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAODACOffsetSrc(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAODACOffsetSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAODACOffsetSrc(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAODACOffsetSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4269</i>
	 */
	// int DAQmxResetAODACOffsetSrc(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AO_DAC_Offset_ExtSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetAODACOffsetExtSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4271</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAODACOffsetExtSrc(com.sun.jna.Pointer, byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetAODACOffsetExtSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetAODACOffsetExtSrc(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_AO_DAC_Offset_ExtSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetAODACOffsetExtSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4271</i>
	 */
	// int DAQmxGetAODACOffsetExtSrc(Pointer taskHandle, byte channel[], ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetAODACOffsetExtSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4272</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAODACOffsetExtSrc(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #DAQmxSetAODACOffsetExtSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetAODACOffsetExtSrc(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAODACOffsetExtSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4272</i>
	 */
	// int DAQmxSetAODACOffsetExtSrc(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetAODACOffsetExtSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4273</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAODACOffsetExtSrc(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAODACOffsetExtSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAODACOffsetExtSrc(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAODACOffsetExtSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4273</i>
	 */
	// int DAQmxResetAODACOffsetExtSrc(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AO_DAC_Offset_Val ***<br>
	 * Original signature : <code>int32 DAQmxGetAODACOffsetVal(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4275</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAODACOffsetVal(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAODACOffsetVal(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAODACOffsetVal(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AO_DAC_Offset_Val ***<br>
	 * Original signature : <code>int32 DAQmxGetAODACOffsetVal(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4275</i>
	 */
	// int DAQmxGetAODACOffsetVal(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAODACOffsetVal(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4276</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAODACOffsetVal(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetAODACOffsetVal(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetAODACOffsetVal(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAODACOffsetVal(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4276</i>
	 */
	// int DAQmxSetAODACOffsetVal(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAODACOffsetVal(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4277</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAODACOffsetVal(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAODACOffsetVal(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAODACOffsetVal(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAODACOffsetVal(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4277</i>
	 */
	// int DAQmxResetAODACOffsetVal(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AO_ReglitchEnable ***<br>
	 * Original signature : <code>int32 DAQmxGetAOReglitchEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4279</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAOReglitchEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetAOReglitchEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAOReglitchEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AO_ReglitchEnable ***<br>
	 * Original signature : <code>int32 DAQmxGetAOReglitchEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4279</i>
	 */
	// int DAQmxGetAOReglitchEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOReglitchEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4280</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAOReglitchEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetAOReglitchEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetAOReglitchEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOReglitchEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4280</i>
	 */
	// int DAQmxSetAOReglitchEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAOReglitchEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4281</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAOReglitchEnable(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAOReglitchEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAOReglitchEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAOReglitchEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4281</i>
	 */
	// int DAQmxResetAOReglitchEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AO_FilterDelay ***<br>
	 * Original signature : <code>int32 DAQmxGetAOFilterDelay(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4283</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAOFilterDelay(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAOFilterDelay(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAOFilterDelay(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AO_FilterDelay ***<br>
	 * Original signature : <code>int32 DAQmxGetAOFilterDelay(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4283</i>
	 */
	// int DAQmxGetAOFilterDelay(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOFilterDelay(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4284</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAOFilterDelay(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetAOFilterDelay(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetAOFilterDelay(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOFilterDelay(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4284</i>
	 */
	// int DAQmxSetAOFilterDelay(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAOFilterDelay(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4285</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAOFilterDelay(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAOFilterDelay(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAOFilterDelay(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAOFilterDelay(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4285</i>
	 */
	// int DAQmxResetAOFilterDelay(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set DigitalWidthUnits4<br>
	 * Original signature : <code>int32 DAQmxGetAOFilterDelayUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4288</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAOFilterDelayUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetAOFilterDelayUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAOFilterDelayUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set DigitalWidthUnits4<br>
	 * Original signature : <code>int32 DAQmxGetAOFilterDelayUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4288</i>
	 */
	// int DAQmxGetAOFilterDelayUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOFilterDelayUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4289</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAOFilterDelayUnits(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetAOFilterDelayUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetAOFilterDelayUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOFilterDelayUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4289</i>
	 */
	// int DAQmxSetAOFilterDelayUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAOFilterDelayUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4290</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAOFilterDelayUnits(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAOFilterDelayUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAOFilterDelayUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAOFilterDelayUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4290</i>
	 */
	// int DAQmxResetAOFilterDelayUnits(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AO_FilterDelayAdjustment ***<br>
	 * Original signature : <code>int32 DAQmxGetAOFilterDelayAdjustment(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4292</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAOFilterDelayAdjustment(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAOFilterDelayAdjustment(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAOFilterDelayAdjustment(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AO_FilterDelayAdjustment ***<br>
	 * Original signature : <code>int32 DAQmxGetAOFilterDelayAdjustment(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4292</i>
	 */
	// int DAQmxGetAOFilterDelayAdjustment(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOFilterDelayAdjustment(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4293</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAOFilterDelayAdjustment(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetAOFilterDelayAdjustment(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetAOFilterDelayAdjustment(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOFilterDelayAdjustment(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4293</i>
	 */
	// int DAQmxSetAOFilterDelayAdjustment(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAOFilterDelayAdjustment(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4294</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAOFilterDelayAdjustment(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAOFilterDelayAdjustment(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAOFilterDelayAdjustment(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAOFilterDelayAdjustment(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4294</i>
	 */
	// int DAQmxResetAOFilterDelayAdjustment(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AO_Gain ***<br>
	 * Original signature : <code>int32 DAQmxGetAOGain(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4296</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAOGain(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAOGain(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAOGain(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AO_Gain ***<br>
	 * Original signature : <code>int32 DAQmxGetAOGain(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4296</i>
	 */
	// int DAQmxGetAOGain(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOGain(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4297</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAOGain(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetAOGain(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetAOGain(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOGain(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4297</i>
	 */
	// int DAQmxSetAOGain(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAOGain(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4298</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAOGain(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAOGain(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAOGain(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAOGain(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4298</i>
	 */
	// int DAQmxResetAOGain(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AO_UseOnlyOnBrdMem ***<br>
	 * Original signature : <code>int32 DAQmxGetAOUseOnlyOnBrdMem(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4300</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAOUseOnlyOnBrdMem(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetAOUseOnlyOnBrdMem(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAOUseOnlyOnBrdMem(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AO_UseOnlyOnBrdMem ***<br>
	 * Original signature : <code>int32 DAQmxGetAOUseOnlyOnBrdMem(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4300</i>
	 */
	// int DAQmxGetAOUseOnlyOnBrdMem(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOUseOnlyOnBrdMem(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4301</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAOUseOnlyOnBrdMem(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetAOUseOnlyOnBrdMem(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetAOUseOnlyOnBrdMem(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOUseOnlyOnBrdMem(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4301</i>
	 */
	// int DAQmxSetAOUseOnlyOnBrdMem(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAOUseOnlyOnBrdMem(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4302</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAOUseOnlyOnBrdMem(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAOUseOnlyOnBrdMem(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAOUseOnlyOnBrdMem(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAOUseOnlyOnBrdMem(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4302</i>
	 */
	// int DAQmxResetAOUseOnlyOnBrdMem(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set DataTransferMechanism<br>
	 * Original signature : <code>int32 DAQmxGetAODataXferMech(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4305</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAODataXferMech(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetAODataXferMech(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAODataXferMech(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set DataTransferMechanism<br>
	 * Original signature : <code>int32 DAQmxGetAODataXferMech(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4305</i>
	 */
	// int DAQmxGetAODataXferMech(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAODataXferMech(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4306</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAODataXferMech(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetAODataXferMech(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetAODataXferMech(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAODataXferMech(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4306</i>
	 */
	// int DAQmxSetAODataXferMech(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAODataXferMech(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4307</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAODataXferMech(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAODataXferMech(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAODataXferMech(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAODataXferMech(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4307</i>
	 */
	// int DAQmxResetAODataXferMech(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set OutputDataTransferCondition<br>
	 * Original signature : <code>int32 DAQmxGetAODataXferReqCond(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4310</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAODataXferReqCond(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetAODataXferReqCond(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAODataXferReqCond(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set OutputDataTransferCondition<br>
	 * Original signature : <code>int32 DAQmxGetAODataXferReqCond(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4310</i>
	 */
	// int DAQmxGetAODataXferReqCond(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAODataXferReqCond(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4311</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAODataXferReqCond(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetAODataXferReqCond(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetAODataXferReqCond(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAODataXferReqCond(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4311</i>
	 */
	// int DAQmxSetAODataXferReqCond(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAODataXferReqCond(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4312</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAODataXferReqCond(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAODataXferReqCond(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAODataXferReqCond(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAODataXferReqCond(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4312</i>
	 */
	// int DAQmxResetAODataXferReqCond(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AO_UsbXferReqSize ***<br>
	 * Original signature : <code>int32 DAQmxGetAOUsbXferReqSize(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 4314</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAOUsbXferReqSize(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetAOUsbXferReqSize(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAOUsbXferReqSize(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AO_UsbXferReqSize ***<br>
	 * Original signature : <code>int32 DAQmxGetAOUsbXferReqSize(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 4314</i>
	 */
	// int DAQmxGetAOUsbXferReqSize(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOUsbXferReqSize(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 4315</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAOUsbXferReqSize(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetAOUsbXferReqSize(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetAOUsbXferReqSize(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOUsbXferReqSize(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 4315</i>
	 */
	// int DAQmxSetAOUsbXferReqSize(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAOUsbXferReqSize(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4316</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAOUsbXferReqSize(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAOUsbXferReqSize(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAOUsbXferReqSize(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAOUsbXferReqSize(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4316</i>
	 */
	// int DAQmxResetAOUsbXferReqSize(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AO_UsbXferReqCount ***<br>
	 * Original signature : <code>int32 DAQmxGetAOUsbXferReqCount(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 4318</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAOUsbXferReqCount(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetAOUsbXferReqCount(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAOUsbXferReqCount(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AO_UsbXferReqCount ***<br>
	 * Original signature : <code>int32 DAQmxGetAOUsbXferReqCount(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 4318</i>
	 */
	// int DAQmxGetAOUsbXferReqCount(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOUsbXferReqCount(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 4319</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAOUsbXferReqCount(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetAOUsbXferReqCount(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetAOUsbXferReqCount(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOUsbXferReqCount(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 4319</i>
	 */
	// int DAQmxSetAOUsbXferReqCount(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAOUsbXferReqCount(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4320</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAOUsbXferReqCount(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAOUsbXferReqCount(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAOUsbXferReqCount(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAOUsbXferReqCount(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4320</i>
	 */
	// int DAQmxResetAOUsbXferReqCount(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AO_MemMapEnable ***<br>
	 * Original signature : <code>int32 DAQmxGetAOMemMapEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4322</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAOMemMapEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetAOMemMapEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAOMemMapEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AO_MemMapEnable ***<br>
	 * Original signature : <code>int32 DAQmxGetAOMemMapEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4322</i>
	 */
	// int DAQmxGetAOMemMapEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOMemMapEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4323</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAOMemMapEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetAOMemMapEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetAOMemMapEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOMemMapEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4323</i>
	 */
	// int DAQmxSetAOMemMapEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAOMemMapEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4324</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAOMemMapEnable(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAOMemMapEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAOMemMapEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAOMemMapEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4324</i>
	 */
	// int DAQmxResetAOMemMapEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_AO_DevScalingCoeff ***<br>
	 * Original signature : <code>int32 DAQmxGetAODevScalingCoeff(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 4326</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAODevScalingCoeff(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetAODevScalingCoeff(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetAODevScalingCoeff(Pointer taskHandle, Pointer channel, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_AO_DevScalingCoeff ***<br>
	 * Original signature : <code>int32 DAQmxGetAODevScalingCoeff(TaskHandle, const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 4326</i>
	 */
	// int DAQmxGetAODevScalingCoeff(Pointer taskHandle, byte channel[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_AO_EnhancedImageRejectionEnable ***<br>
	 * Original signature : <code>int32 DAQmxGetAOEnhancedImageRejectionEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4328</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAOEnhancedImageRejectionEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetAOEnhancedImageRejectionEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAOEnhancedImageRejectionEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AO_EnhancedImageRejectionEnable ***<br>
	 * Original signature : <code>int32 DAQmxGetAOEnhancedImageRejectionEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4328</i>
	 */
	// int DAQmxGetAOEnhancedImageRejectionEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOEnhancedImageRejectionEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4329</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAOEnhancedImageRejectionEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetAOEnhancedImageRejectionEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetAOEnhancedImageRejectionEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetAOEnhancedImageRejectionEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4329</i>
	 */
	// int DAQmxSetAOEnhancedImageRejectionEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAOEnhancedImageRejectionEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4330</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAOEnhancedImageRejectionEnable(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAOEnhancedImageRejectionEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAOEnhancedImageRejectionEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetAOEnhancedImageRejectionEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4330</i>
	 */
	// int DAQmxResetAOEnhancedImageRejectionEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_DI_InvertLines ***<br>
	 * Original signature : <code>int32 DAQmxGetDIInvertLines(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4332</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDIInvertLines(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetDIInvertLines(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDIInvertLines(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_DI_InvertLines ***<br>
	 * Original signature : <code>int32 DAQmxGetDIInvertLines(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4332</i>
	 */
	// int DAQmxGetDIInvertLines(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetDIInvertLines(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4333</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetDIInvertLines(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetDIInvertLines(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetDIInvertLines(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetDIInvertLines(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4333</i>
	 */
	// int DAQmxSetDIInvertLines(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetDIInvertLines(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4334</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetDIInvertLines(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetDIInvertLines(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetDIInvertLines(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetDIInvertLines(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4334</i>
	 */
	// int DAQmxResetDIInvertLines(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_DI_NumLines ***<br>
	 * Original signature : <code>int32 DAQmxGetDINumLines(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 4336</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDINumLines(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetDINumLines(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDINumLines(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_DI_NumLines ***<br>
	 * Original signature : <code>int32 DAQmxGetDINumLines(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 4336</i>
	 */
	// int DAQmxGetDINumLines(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_DI_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetDIDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4338</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDIDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetDIDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDIDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_DI_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetDIDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4338</i>
	 */
	// int DAQmxGetDIDigFltrEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetDIDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4339</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetDIDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetDIDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetDIDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetDIDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4339</i>
	 */
	// int DAQmxSetDIDigFltrEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetDIDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4340</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetDIDigFltrEnable(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetDIDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetDIDigFltrEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetDIDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4340</i>
	 */
	// int DAQmxResetDIDigFltrEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_DI_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetDIDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4342</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDIDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetDIDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDIDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_DI_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetDIDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4342</i>
	 */
	// int DAQmxGetDIDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDIDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4343</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetDIDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetDIDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetDIDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetDIDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4343</i>
	 */
	// int DAQmxSetDIDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetDIDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4344</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetDIDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetDIDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetDIDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetDIDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4344</i>
	 */
	// int DAQmxResetDIDigFltrMinPulseWidth(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_DI_DigFltr_EnableBusMode ***<br>
	 * Original signature : <code>int32 DAQmxGetDIDigFltrEnableBusMode(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4346</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDIDigFltrEnableBusMode(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetDIDigFltrEnableBusMode(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDIDigFltrEnableBusMode(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_DI_DigFltr_EnableBusMode ***<br>
	 * Original signature : <code>int32 DAQmxGetDIDigFltrEnableBusMode(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4346</i>
	 */
	// int DAQmxGetDIDigFltrEnableBusMode(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetDIDigFltrEnableBusMode(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4347</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetDIDigFltrEnableBusMode(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetDIDigFltrEnableBusMode(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetDIDigFltrEnableBusMode(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetDIDigFltrEnableBusMode(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4347</i>
	 */
	// int DAQmxSetDIDigFltrEnableBusMode(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetDIDigFltrEnableBusMode(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4348</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetDIDigFltrEnableBusMode(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetDIDigFltrEnableBusMode(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetDIDigFltrEnableBusMode(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetDIDigFltrEnableBusMode(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4348</i>
	 */
	// int DAQmxResetDIDigFltrEnableBusMode(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_DI_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetDIDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4350</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDIDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetDIDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetDIDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_DI_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetDIDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4350</i>
	 */
	// int DAQmxGetDIDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetDIDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4351</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetDIDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #DAQmxSetDIDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetDIDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDIDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4351</i>
	 */
	// int DAQmxSetDIDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetDIDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4352</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetDIDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetDIDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetDIDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetDIDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4352</i>
	 */
	// int DAQmxResetDIDigFltrTimebaseSrc(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_DI_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetDIDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4354</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDIDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetDIDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDIDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_DI_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetDIDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4354</i>
	 */
	// int DAQmxGetDIDigFltrTimebaseRate(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDIDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4355</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetDIDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetDIDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetDIDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetDIDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4355</i>
	 */
	// int DAQmxSetDIDigFltrTimebaseRate(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetDIDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4356</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetDIDigFltrTimebaseRate(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetDIDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetDIDigFltrTimebaseRate(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetDIDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4356</i>
	 */
	// int DAQmxResetDIDigFltrTimebaseRate(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_DI_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetDIDigSyncEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4358</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDIDigSyncEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetDIDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDIDigSyncEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_DI_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetDIDigSyncEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4358</i>
	 */
	// int DAQmxGetDIDigSyncEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetDIDigSyncEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4359</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetDIDigSyncEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetDIDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetDIDigSyncEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetDIDigSyncEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4359</i>
	 */
	// int DAQmxSetDIDigSyncEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetDIDigSyncEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4360</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetDIDigSyncEnable(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetDIDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetDIDigSyncEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetDIDigSyncEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4360</i>
	 */
	// int DAQmxResetDIDigSyncEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_DI_Tristate ***<br>
	 * Original signature : <code>int32 DAQmxGetDITristate(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4362</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDITristate(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetDITristate(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDITristate(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_DI_Tristate ***<br>
	 * Original signature : <code>int32 DAQmxGetDITristate(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4362</i>
	 */
	// int DAQmxGetDITristate(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetDITristate(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4363</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetDITristate(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetDITristate(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetDITristate(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetDITristate(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4363</i>
	 */
	// int DAQmxSetDITristate(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetDITristate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4364</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetDITristate(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetDITristate(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetDITristate(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetDITristate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4364</i>
	 */
	// int DAQmxResetDITristate(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set LogicFamily<br>
	 * Original signature : <code>int32 DAQmxGetDILogicFamily(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4367</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDILogicFamily(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetDILogicFamily(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDILogicFamily(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set LogicFamily<br>
	 * Original signature : <code>int32 DAQmxGetDILogicFamily(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4367</i>
	 */
	// int DAQmxGetDILogicFamily(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDILogicFamily(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4368</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetDILogicFamily(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetDILogicFamily(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetDILogicFamily(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetDILogicFamily(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4368</i>
	 */
	// int DAQmxSetDILogicFamily(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetDILogicFamily(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4369</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetDILogicFamily(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetDILogicFamily(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetDILogicFamily(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetDILogicFamily(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4369</i>
	 */
	// int DAQmxResetDILogicFamily(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set DataTransferMechanism<br>
	 * Original signature : <code>int32 DAQmxGetDIDataXferMech(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4372</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDIDataXferMech(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetDIDataXferMech(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDIDataXferMech(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set DataTransferMechanism<br>
	 * Original signature : <code>int32 DAQmxGetDIDataXferMech(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4372</i>
	 */
	// int DAQmxGetDIDataXferMech(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDIDataXferMech(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4373</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetDIDataXferMech(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetDIDataXferMech(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetDIDataXferMech(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetDIDataXferMech(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4373</i>
	 */
	// int DAQmxSetDIDataXferMech(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetDIDataXferMech(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4374</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetDIDataXferMech(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetDIDataXferMech(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetDIDataXferMech(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetDIDataXferMech(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4374</i>
	 */
	// int DAQmxResetDIDataXferMech(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set InputDataTransferCondition<br>
	 * Original signature : <code>int32 DAQmxGetDIDataXferReqCond(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4377</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDIDataXferReqCond(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetDIDataXferReqCond(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDIDataXferReqCond(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set InputDataTransferCondition<br>
	 * Original signature : <code>int32 DAQmxGetDIDataXferReqCond(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4377</i>
	 */
	// int DAQmxGetDIDataXferReqCond(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDIDataXferReqCond(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4378</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetDIDataXferReqCond(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetDIDataXferReqCond(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetDIDataXferReqCond(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetDIDataXferReqCond(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4378</i>
	 */
	// int DAQmxSetDIDataXferReqCond(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetDIDataXferReqCond(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4379</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetDIDataXferReqCond(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetDIDataXferReqCond(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetDIDataXferReqCond(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetDIDataXferReqCond(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4379</i>
	 */
	// int DAQmxResetDIDataXferReqCond(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_DI_UsbXferReqSize ***<br>
	 * Original signature : <code>int32 DAQmxGetDIUsbXferReqSize(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 4381</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDIUsbXferReqSize(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetDIUsbXferReqSize(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDIUsbXferReqSize(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_DI_UsbXferReqSize ***<br>
	 * Original signature : <code>int32 DAQmxGetDIUsbXferReqSize(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 4381</i>
	 */
	// int DAQmxGetDIUsbXferReqSize(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetDIUsbXferReqSize(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 4382</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetDIUsbXferReqSize(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetDIUsbXferReqSize(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetDIUsbXferReqSize(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetDIUsbXferReqSize(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 4382</i>
	 */
	// int DAQmxSetDIUsbXferReqSize(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetDIUsbXferReqSize(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4383</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetDIUsbXferReqSize(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetDIUsbXferReqSize(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetDIUsbXferReqSize(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetDIUsbXferReqSize(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4383</i>
	 */
	// int DAQmxResetDIUsbXferReqSize(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_DI_UsbXferReqCount ***<br>
	 * Original signature : <code>int32 DAQmxGetDIUsbXferReqCount(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 4385</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDIUsbXferReqCount(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetDIUsbXferReqCount(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDIUsbXferReqCount(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_DI_UsbXferReqCount ***<br>
	 * Original signature : <code>int32 DAQmxGetDIUsbXferReqCount(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 4385</i>
	 */
	// int DAQmxGetDIUsbXferReqCount(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetDIUsbXferReqCount(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 4386</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetDIUsbXferReqCount(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetDIUsbXferReqCount(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetDIUsbXferReqCount(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetDIUsbXferReqCount(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 4386</i>
	 */
	// int DAQmxSetDIUsbXferReqCount(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetDIUsbXferReqCount(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4387</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetDIUsbXferReqCount(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetDIUsbXferReqCount(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetDIUsbXferReqCount(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetDIUsbXferReqCount(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4387</i>
	 */
	// int DAQmxResetDIUsbXferReqCount(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_DI_MemMapEnable ***<br>
	 * Original signature : <code>int32 DAQmxGetDIMemMapEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4389</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDIMemMapEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetDIMemMapEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDIMemMapEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_DI_MemMapEnable ***<br>
	 * Original signature : <code>int32 DAQmxGetDIMemMapEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4389</i>
	 */
	// int DAQmxGetDIMemMapEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetDIMemMapEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4390</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetDIMemMapEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetDIMemMapEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetDIMemMapEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetDIMemMapEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4390</i>
	 */
	// int DAQmxSetDIMemMapEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetDIMemMapEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4391</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetDIMemMapEnable(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetDIMemMapEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetDIMemMapEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetDIMemMapEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4391</i>
	 */
	// int DAQmxResetDIMemMapEnable(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set SampleClockActiveOrInactiveEdgeSelection<br>
	 * Original signature : <code>int32 DAQmxGetDIAcquireOn(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4394</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDIAcquireOn(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetDIAcquireOn(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDIAcquireOn(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set SampleClockActiveOrInactiveEdgeSelection<br>
	 * Original signature : <code>int32 DAQmxGetDIAcquireOn(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4394</i>
	 */
	// int DAQmxGetDIAcquireOn(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDIAcquireOn(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4395</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetDIAcquireOn(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetDIAcquireOn(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetDIAcquireOn(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetDIAcquireOn(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4395</i>
	 */
	// int DAQmxSetDIAcquireOn(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetDIAcquireOn(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4396</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetDIAcquireOn(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetDIAcquireOn(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetDIAcquireOn(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetDIAcquireOn(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4396</i>
	 */
	// int DAQmxResetDIAcquireOn(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set DigitalDriveType<br>
	 * Original signature : <code>int32 DAQmxGetDOOutputDriveType(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4399</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDOOutputDriveType(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetDOOutputDriveType(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDOOutputDriveType(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set DigitalDriveType<br>
	 * Original signature : <code>int32 DAQmxGetDOOutputDriveType(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4399</i>
	 */
	// int DAQmxGetDOOutputDriveType(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDOOutputDriveType(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4400</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetDOOutputDriveType(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetDOOutputDriveType(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetDOOutputDriveType(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetDOOutputDriveType(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4400</i>
	 */
	// int DAQmxSetDOOutputDriveType(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetDOOutputDriveType(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4401</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetDOOutputDriveType(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetDOOutputDriveType(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetDOOutputDriveType(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetDOOutputDriveType(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4401</i>
	 */
	// int DAQmxResetDOOutputDriveType(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_DO_InvertLines ***<br>
	 * Original signature : <code>int32 DAQmxGetDOInvertLines(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4403</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDOInvertLines(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetDOInvertLines(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDOInvertLines(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_DO_InvertLines ***<br>
	 * Original signature : <code>int32 DAQmxGetDOInvertLines(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4403</i>
	 */
	// int DAQmxGetDOInvertLines(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetDOInvertLines(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4404</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetDOInvertLines(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetDOInvertLines(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetDOInvertLines(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetDOInvertLines(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4404</i>
	 */
	// int DAQmxSetDOInvertLines(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetDOInvertLines(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4405</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetDOInvertLines(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetDOInvertLines(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetDOInvertLines(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetDOInvertLines(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4405</i>
	 */
	// int DAQmxResetDOInvertLines(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_DO_NumLines ***<br>
	 * Original signature : <code>int32 DAQmxGetDONumLines(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 4407</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDONumLines(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetDONumLines(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDONumLines(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_DO_NumLines ***<br>
	 * Original signature : <code>int32 DAQmxGetDONumLines(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 4407</i>
	 */
	// int DAQmxGetDONumLines(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_DO_Tristate ***<br>
	 * Original signature : <code>int32 DAQmxGetDOTristate(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4409</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDOTristate(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetDOTristate(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDOTristate(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_DO_Tristate ***<br>
	 * Original signature : <code>int32 DAQmxGetDOTristate(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4409</i>
	 */
	// int DAQmxGetDOTristate(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetDOTristate(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4410</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetDOTristate(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetDOTristate(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetDOTristate(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetDOTristate(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4410</i>
	 */
	// int DAQmxSetDOTristate(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetDOTristate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4411</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetDOTristate(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetDOTristate(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetDOTristate(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetDOTristate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4411</i>
	 */
	// int DAQmxResetDOTristate(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set DigitalLineState<br>
	 * Original signature : <code>int32 DAQmxGetDOLineStatesStartState(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4414</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDOLineStatesStartState(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetDOLineStatesStartState(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDOLineStatesStartState(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set DigitalLineState<br>
	 * Original signature : <code>int32 DAQmxGetDOLineStatesStartState(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4414</i>
	 */
	// int DAQmxGetDOLineStatesStartState(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDOLineStatesStartState(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4415</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetDOLineStatesStartState(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetDOLineStatesStartState(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetDOLineStatesStartState(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetDOLineStatesStartState(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4415</i>
	 */
	// int DAQmxSetDOLineStatesStartState(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetDOLineStatesStartState(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4416</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetDOLineStatesStartState(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetDOLineStatesStartState(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetDOLineStatesStartState(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetDOLineStatesStartState(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4416</i>
	 */
	// int DAQmxResetDOLineStatesStartState(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set DigitalLineState<br>
	 * Original signature : <code>int32 DAQmxGetDOLineStatesPausedState(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4419</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDOLineStatesPausedState(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetDOLineStatesPausedState(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDOLineStatesPausedState(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set DigitalLineState<br>
	 * Original signature : <code>int32 DAQmxGetDOLineStatesPausedState(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4419</i>
	 */
	// int DAQmxGetDOLineStatesPausedState(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDOLineStatesPausedState(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4420</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetDOLineStatesPausedState(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetDOLineStatesPausedState(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetDOLineStatesPausedState(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetDOLineStatesPausedState(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4420</i>
	 */
	// int DAQmxSetDOLineStatesPausedState(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetDOLineStatesPausedState(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4421</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetDOLineStatesPausedState(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetDOLineStatesPausedState(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetDOLineStatesPausedState(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetDOLineStatesPausedState(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4421</i>
	 */
	// int DAQmxResetDOLineStatesPausedState(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set DigitalLineState<br>
	 * Original signature : <code>int32 DAQmxGetDOLineStatesDoneState(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4424</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDOLineStatesDoneState(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetDOLineStatesDoneState(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDOLineStatesDoneState(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set DigitalLineState<br>
	 * Original signature : <code>int32 DAQmxGetDOLineStatesDoneState(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4424</i>
	 */
	// int DAQmxGetDOLineStatesDoneState(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDOLineStatesDoneState(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4425</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetDOLineStatesDoneState(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetDOLineStatesDoneState(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetDOLineStatesDoneState(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetDOLineStatesDoneState(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4425</i>
	 */
	// int DAQmxSetDOLineStatesDoneState(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetDOLineStatesDoneState(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4426</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetDOLineStatesDoneState(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetDOLineStatesDoneState(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetDOLineStatesDoneState(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetDOLineStatesDoneState(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4426</i>
	 */
	// int DAQmxResetDOLineStatesDoneState(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set LogicFamily<br>
	 * Original signature : <code>int32 DAQmxGetDOLogicFamily(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4429</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDOLogicFamily(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetDOLogicFamily(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDOLogicFamily(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set LogicFamily<br>
	 * Original signature : <code>int32 DAQmxGetDOLogicFamily(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4429</i>
	 */
	// int DAQmxGetDOLogicFamily(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDOLogicFamily(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4430</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetDOLogicFamily(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetDOLogicFamily(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetDOLogicFamily(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetDOLogicFamily(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4430</i>
	 */
	// int DAQmxSetDOLogicFamily(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetDOLogicFamily(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4431</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetDOLogicFamily(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetDOLogicFamily(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetDOLogicFamily(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetDOLogicFamily(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4431</i>
	 */
	// int DAQmxResetDOLogicFamily(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_DO_Overcurrent_Limit ***<br>
	 * Original signature : <code>int32 DAQmxGetDOOvercurrentLimit(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4433</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDOOvercurrentLimit(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetDOOvercurrentLimit(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDOOvercurrentLimit(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_DO_Overcurrent_Limit ***<br>
	 * Original signature : <code>int32 DAQmxGetDOOvercurrentLimit(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4433</i>
	 */
	// int DAQmxGetDOOvercurrentLimit(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDOOvercurrentLimit(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4434</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetDOOvercurrentLimit(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetDOOvercurrentLimit(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetDOOvercurrentLimit(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetDOOvercurrentLimit(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4434</i>
	 */
	// int DAQmxSetDOOvercurrentLimit(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetDOOvercurrentLimit(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4435</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetDOOvercurrentLimit(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetDOOvercurrentLimit(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetDOOvercurrentLimit(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetDOOvercurrentLimit(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4435</i>
	 */
	// int DAQmxResetDOOvercurrentLimit(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_DO_Overcurrent_AutoReenable ***<br>
	 * Original signature : <code>int32 DAQmxGetDOOvercurrentAutoReenable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4437</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDOOvercurrentAutoReenable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetDOOvercurrentAutoReenable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDOOvercurrentAutoReenable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_DO_Overcurrent_AutoReenable ***<br>
	 * Original signature : <code>int32 DAQmxGetDOOvercurrentAutoReenable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4437</i>
	 */
	// int DAQmxGetDOOvercurrentAutoReenable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetDOOvercurrentAutoReenable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4438</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetDOOvercurrentAutoReenable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetDOOvercurrentAutoReenable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetDOOvercurrentAutoReenable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetDOOvercurrentAutoReenable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4438</i>
	 */
	// int DAQmxSetDOOvercurrentAutoReenable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetDOOvercurrentAutoReenable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4439</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetDOOvercurrentAutoReenable(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetDOOvercurrentAutoReenable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetDOOvercurrentAutoReenable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetDOOvercurrentAutoReenable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4439</i>
	 */
	// int DAQmxResetDOOvercurrentAutoReenable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_DO_Overcurrent_ReenablePeriod ***<br>
	 * Original signature : <code>int32 DAQmxGetDOOvercurrentReenablePeriod(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4441</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDOOvercurrentReenablePeriod(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetDOOvercurrentReenablePeriod(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDOOvercurrentReenablePeriod(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_DO_Overcurrent_ReenablePeriod ***<br>
	 * Original signature : <code>int32 DAQmxGetDOOvercurrentReenablePeriod(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4441</i>
	 */
	// int DAQmxGetDOOvercurrentReenablePeriod(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDOOvercurrentReenablePeriod(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4442</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetDOOvercurrentReenablePeriod(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetDOOvercurrentReenablePeriod(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetDOOvercurrentReenablePeriod(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetDOOvercurrentReenablePeriod(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4442</i>
	 */
	// int DAQmxSetDOOvercurrentReenablePeriod(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetDOOvercurrentReenablePeriod(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4443</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetDOOvercurrentReenablePeriod(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetDOOvercurrentReenablePeriod(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetDOOvercurrentReenablePeriod(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetDOOvercurrentReenablePeriod(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4443</i>
	 */
	// int DAQmxResetDOOvercurrentReenablePeriod(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_DO_UseOnlyOnBrdMem ***<br>
	 * Original signature : <code>int32 DAQmxGetDOUseOnlyOnBrdMem(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4445</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDOUseOnlyOnBrdMem(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetDOUseOnlyOnBrdMem(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDOUseOnlyOnBrdMem(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_DO_UseOnlyOnBrdMem ***<br>
	 * Original signature : <code>int32 DAQmxGetDOUseOnlyOnBrdMem(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4445</i>
	 */
	// int DAQmxGetDOUseOnlyOnBrdMem(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetDOUseOnlyOnBrdMem(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4446</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetDOUseOnlyOnBrdMem(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetDOUseOnlyOnBrdMem(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetDOUseOnlyOnBrdMem(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetDOUseOnlyOnBrdMem(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4446</i>
	 */
	// int DAQmxSetDOUseOnlyOnBrdMem(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetDOUseOnlyOnBrdMem(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4447</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetDOUseOnlyOnBrdMem(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetDOUseOnlyOnBrdMem(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetDOUseOnlyOnBrdMem(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetDOUseOnlyOnBrdMem(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4447</i>
	 */
	// int DAQmxResetDOUseOnlyOnBrdMem(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set DataTransferMechanism<br>
	 * Original signature : <code>int32 DAQmxGetDODataXferMech(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4450</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDODataXferMech(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetDODataXferMech(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDODataXferMech(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set DataTransferMechanism<br>
	 * Original signature : <code>int32 DAQmxGetDODataXferMech(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4450</i>
	 */
	// int DAQmxGetDODataXferMech(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDODataXferMech(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4451</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetDODataXferMech(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetDODataXferMech(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetDODataXferMech(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetDODataXferMech(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4451</i>
	 */
	// int DAQmxSetDODataXferMech(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetDODataXferMech(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4452</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetDODataXferMech(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetDODataXferMech(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetDODataXferMech(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetDODataXferMech(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4452</i>
	 */
	// int DAQmxResetDODataXferMech(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set OutputDataTransferCondition<br>
	 * Original signature : <code>int32 DAQmxGetDODataXferReqCond(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4455</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDODataXferReqCond(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetDODataXferReqCond(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDODataXferReqCond(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set OutputDataTransferCondition<br>
	 * Original signature : <code>int32 DAQmxGetDODataXferReqCond(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4455</i>
	 */
	// int DAQmxGetDODataXferReqCond(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDODataXferReqCond(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4456</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetDODataXferReqCond(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetDODataXferReqCond(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetDODataXferReqCond(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetDODataXferReqCond(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4456</i>
	 */
	// int DAQmxSetDODataXferReqCond(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetDODataXferReqCond(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4457</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetDODataXferReqCond(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetDODataXferReqCond(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetDODataXferReqCond(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetDODataXferReqCond(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4457</i>
	 */
	// int DAQmxResetDODataXferReqCond(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_DO_UsbXferReqSize ***<br>
	 * Original signature : <code>int32 DAQmxGetDOUsbXferReqSize(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 4459</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDOUsbXferReqSize(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetDOUsbXferReqSize(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDOUsbXferReqSize(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_DO_UsbXferReqSize ***<br>
	 * Original signature : <code>int32 DAQmxGetDOUsbXferReqSize(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 4459</i>
	 */
	// int DAQmxGetDOUsbXferReqSize(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetDOUsbXferReqSize(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 4460</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetDOUsbXferReqSize(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetDOUsbXferReqSize(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetDOUsbXferReqSize(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetDOUsbXferReqSize(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 4460</i>
	 */
	// int DAQmxSetDOUsbXferReqSize(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetDOUsbXferReqSize(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4461</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetDOUsbXferReqSize(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetDOUsbXferReqSize(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetDOUsbXferReqSize(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetDOUsbXferReqSize(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4461</i>
	 */
	// int DAQmxResetDOUsbXferReqSize(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_DO_UsbXferReqCount ***<br>
	 * Original signature : <code>int32 DAQmxGetDOUsbXferReqCount(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 4463</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDOUsbXferReqCount(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetDOUsbXferReqCount(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDOUsbXferReqCount(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_DO_UsbXferReqCount ***<br>
	 * Original signature : <code>int32 DAQmxGetDOUsbXferReqCount(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 4463</i>
	 */
	// int DAQmxGetDOUsbXferReqCount(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetDOUsbXferReqCount(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 4464</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetDOUsbXferReqCount(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetDOUsbXferReqCount(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetDOUsbXferReqCount(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetDOUsbXferReqCount(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 4464</i>
	 */
	// int DAQmxSetDOUsbXferReqCount(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetDOUsbXferReqCount(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4465</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetDOUsbXferReqCount(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetDOUsbXferReqCount(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetDOUsbXferReqCount(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetDOUsbXferReqCount(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4465</i>
	 */
	// int DAQmxResetDOUsbXferReqCount(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_DO_MemMapEnable ***<br>
	 * Original signature : <code>int32 DAQmxGetDOMemMapEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4467</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDOMemMapEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetDOMemMapEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDOMemMapEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_DO_MemMapEnable ***<br>
	 * Original signature : <code>int32 DAQmxGetDOMemMapEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4467</i>
	 */
	// int DAQmxGetDOMemMapEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetDOMemMapEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4468</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetDOMemMapEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetDOMemMapEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetDOMemMapEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetDOMemMapEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4468</i>
	 */
	// int DAQmxSetDOMemMapEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetDOMemMapEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4469</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetDOMemMapEnable(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetDOMemMapEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetDOMemMapEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetDOMemMapEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4469</i>
	 */
	// int DAQmxResetDOMemMapEnable(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set SampleClockActiveOrInactiveEdgeSelection<br>
	 * Original signature : <code>int32 DAQmxGetDOGenerateOn(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4472</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDOGenerateOn(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetDOGenerateOn(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDOGenerateOn(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set SampleClockActiveOrInactiveEdgeSelection<br>
	 * Original signature : <code>int32 DAQmxGetDOGenerateOn(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4472</i>
	 */
	// int DAQmxGetDOGenerateOn(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDOGenerateOn(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4473</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetDOGenerateOn(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetDOGenerateOn(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetDOGenerateOn(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetDOGenerateOn(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4473</i>
	 */
	// int DAQmxSetDOGenerateOn(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetDOGenerateOn(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4474</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetDOGenerateOn(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetDOGenerateOn(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetDOGenerateOn(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetDOGenerateOn(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4474</i>
	 */
	// int DAQmxResetDOGenerateOn(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Max ***<br>
	 * Original signature : <code>int32 DAQmxGetCIMax(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4476</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIMax(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetCIMax(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIMax(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Max ***<br>
	 * Original signature : <code>int32 DAQmxGetCIMax(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4476</i>
	 */
	// int DAQmxGetCIMax(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIMax(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4477</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIMax(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetCIMax(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIMax(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIMax(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4477</i>
	 */
	// int DAQmxSetCIMax(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIMax(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4478</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIMax(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIMax(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIMax(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIMax(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4478</i>
	 */
	// int DAQmxResetCIMax(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Min ***<br>
	 * Original signature : <code>int32 DAQmxGetCIMin(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4480</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIMin(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetCIMin(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIMin(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Min ***<br>
	 * Original signature : <code>int32 DAQmxGetCIMin(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4480</i>
	 */
	// int DAQmxGetCIMin(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIMin(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4481</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIMin(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetCIMin(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIMin(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIMin(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4481</i>
	 */
	// int DAQmxSetCIMin(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIMin(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4482</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIMin(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIMin(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIMin(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIMin(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4482</i>
	 */
	// int DAQmxResetCIMin(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_CustomScaleName ***<br>
	 * Original signature : <code>int32 DAQmxGetCICustomScaleName(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4484</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCICustomScaleName(com.sun.jna.Pointer, byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetCICustomScaleName(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetCICustomScaleName(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_CustomScaleName ***<br>
	 * Original signature : <code>int32 DAQmxGetCICustomScaleName(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4484</i>
	 */
	// int DAQmxGetCICustomScaleName(Pointer taskHandle, byte channel[], ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCICustomScaleName(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4485</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCICustomScaleName(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #DAQmxSetCICustomScaleName(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetCICustomScaleName(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICustomScaleName(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4485</i>
	 */
	// int DAQmxSetCICustomScaleName(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICustomScaleName(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4486</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCICustomScaleName(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCICustomScaleName(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCICustomScaleName(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICustomScaleName(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4486</i>
	 */
	// int DAQmxResetCICustomScaleName(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set CIMeasurementType<br>
	 * Original signature : <code>int32 DAQmxGetCIMeasType(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4489</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIMeasType(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCIMeasType(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIMeasType(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set CIMeasurementType<br>
	 * Original signature : <code>int32 DAQmxGetCIMeasType(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4489</i>
	 */
	// int DAQmxGetCIMeasType(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Uses value set FrequencyUnits3<br>
	 * Original signature : <code>int32 DAQmxGetCIFreqUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4492</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIFreqUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCIFreqUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIFreqUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set FrequencyUnits3<br>
	 * Original signature : <code>int32 DAQmxGetCIFreqUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4492</i>
	 */
	// int DAQmxGetCIFreqUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIFreqUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4493</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIFreqUnits(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCIFreqUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIFreqUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIFreqUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4493</i>
	 */
	// int DAQmxSetCIFreqUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIFreqUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4494</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIFreqUnits(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIFreqUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIFreqUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIFreqUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4494</i>
	 */
	// int DAQmxResetCIFreqUnits(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Freq_Term ***<br>
	 * Original signature : <code>int32 DAQmxGetCIFreqTerm(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4496</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIFreqTerm(com.sun.jna.Pointer, byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetCIFreqTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIFreqTerm(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_Freq_Term ***<br>
	 * Original signature : <code>int32 DAQmxGetCIFreqTerm(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4496</i>
	 */
	// int DAQmxGetCIFreqTerm(Pointer taskHandle, byte channel[], ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCIFreqTerm(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4497</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIFreqTerm(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #DAQmxSetCIFreqTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIFreqTerm(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIFreqTerm(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4497</i>
	 */
	// int DAQmxSetCIFreqTerm(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIFreqTerm(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4498</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIFreqTerm(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIFreqTerm(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIFreqTerm(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIFreqTerm(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4498</i>
	 */
	// int DAQmxResetCIFreqTerm(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set InputTermCfg2<br>
	 * Original signature : <code>int32 DAQmxGetCIFreqTermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4501</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIFreqTermCfg(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCIFreqTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIFreqTermCfg(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set InputTermCfg2<br>
	 * Original signature : <code>int32 DAQmxGetCIFreqTermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4501</i>
	 */
	// int DAQmxGetCIFreqTermCfg(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIFreqTermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4502</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIFreqTermCfg(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCIFreqTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIFreqTermCfg(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIFreqTermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4502</i>
	 */
	// int DAQmxSetCIFreqTermCfg(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIFreqTermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4503</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIFreqTermCfg(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIFreqTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIFreqTermCfg(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIFreqTermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4503</i>
	 */
	// int DAQmxResetCIFreqTermCfg(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set LogicLvlBehavior<br>
	 * Original signature : <code>int32 DAQmxGetCIFreqLogicLvlBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4506</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIFreqLogicLvlBehavior(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCIFreqLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIFreqLogicLvlBehavior(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set LogicLvlBehavior<br>
	 * Original signature : <code>int32 DAQmxGetCIFreqLogicLvlBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4506</i>
	 */
	// int DAQmxGetCIFreqLogicLvlBehavior(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIFreqLogicLvlBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4507</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIFreqLogicLvlBehavior(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCIFreqLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIFreqLogicLvlBehavior(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIFreqLogicLvlBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4507</i>
	 */
	// int DAQmxSetCIFreqLogicLvlBehavior(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIFreqLogicLvlBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4508</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIFreqLogicLvlBehavior(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIFreqLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIFreqLogicLvlBehavior(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIFreqLogicLvlBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4508</i>
	 */
	// int DAQmxResetCIFreqLogicLvlBehavior(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Freq_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIFreqDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4510</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIFreqDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetCIFreqDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIFreqDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Freq_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIFreqDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4510</i>
	 */
	// int DAQmxGetCIFreqDigFltrEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIFreqDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4511</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIFreqDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetCIFreqDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIFreqDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIFreqDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4511</i>
	 */
	// int DAQmxSetCIFreqDigFltrEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIFreqDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4512</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIFreqDigFltrEnable(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIFreqDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIFreqDigFltrEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIFreqDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4512</i>
	 */
	// int DAQmxResetCIFreqDigFltrEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Freq_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCIFreqDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4514</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIFreqDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetCIFreqDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIFreqDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Freq_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCIFreqDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4514</i>
	 */
	// int DAQmxGetCIFreqDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIFreqDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4515</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIFreqDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetCIFreqDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIFreqDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIFreqDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4515</i>
	 */
	// int DAQmxSetCIFreqDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIFreqDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4516</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIFreqDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIFreqDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIFreqDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIFreqDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4516</i>
	 */
	// int DAQmxResetCIFreqDigFltrMinPulseWidth(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Freq_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCIFreqDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4518</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIFreqDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetCIFreqDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIFreqDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_Freq_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCIFreqDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4518</i>
	 */
	// int DAQmxGetCIFreqDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCIFreqDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4519</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIFreqDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #DAQmxSetCIFreqDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIFreqDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIFreqDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4519</i>
	 */
	// int DAQmxSetCIFreqDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIFreqDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4520</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIFreqDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIFreqDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIFreqDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIFreqDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4520</i>
	 */
	// int DAQmxResetCIFreqDigFltrTimebaseSrc(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Freq_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCIFreqDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4522</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIFreqDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetCIFreqDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIFreqDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Freq_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCIFreqDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4522</i>
	 */
	// int DAQmxGetCIFreqDigFltrTimebaseRate(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIFreqDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4523</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIFreqDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetCIFreqDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIFreqDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIFreqDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4523</i>
	 */
	// int DAQmxSetCIFreqDigFltrTimebaseRate(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIFreqDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4524</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIFreqDigFltrTimebaseRate(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIFreqDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIFreqDigFltrTimebaseRate(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIFreqDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4524</i>
	 */
	// int DAQmxResetCIFreqDigFltrTimebaseRate(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Freq_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIFreqDigSyncEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4526</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIFreqDigSyncEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetCIFreqDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIFreqDigSyncEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Freq_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIFreqDigSyncEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4526</i>
	 */
	// int DAQmxGetCIFreqDigSyncEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIFreqDigSyncEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4527</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIFreqDigSyncEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetCIFreqDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIFreqDigSyncEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIFreqDigSyncEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4527</i>
	 */
	// int DAQmxSetCIFreqDigSyncEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIFreqDigSyncEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4528</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIFreqDigSyncEnable(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIFreqDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIFreqDigSyncEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIFreqDigSyncEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4528</i>
	 */
	// int DAQmxResetCIFreqDigSyncEnable(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetCIFreqStartingEdge(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4531</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIFreqStartingEdge(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCIFreqStartingEdge(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIFreqStartingEdge(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetCIFreqStartingEdge(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4531</i>
	 */
	// int DAQmxGetCIFreqStartingEdge(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIFreqStartingEdge(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4532</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIFreqStartingEdge(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCIFreqStartingEdge(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIFreqStartingEdge(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIFreqStartingEdge(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4532</i>
	 */
	// int DAQmxSetCIFreqStartingEdge(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIFreqStartingEdge(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4533</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIFreqStartingEdge(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIFreqStartingEdge(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIFreqStartingEdge(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIFreqStartingEdge(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4533</i>
	 */
	// int DAQmxResetCIFreqStartingEdge(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set CounterFrequencyMethod<br>
	 * Original signature : <code>int32 DAQmxGetCIFreqMeasMeth(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4536</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIFreqMeasMeth(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCIFreqMeasMeth(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIFreqMeasMeth(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set CounterFrequencyMethod<br>
	 * Original signature : <code>int32 DAQmxGetCIFreqMeasMeth(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4536</i>
	 */
	// int DAQmxGetCIFreqMeasMeth(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIFreqMeasMeth(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4537</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIFreqMeasMeth(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCIFreqMeasMeth(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIFreqMeasMeth(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIFreqMeasMeth(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4537</i>
	 */
	// int DAQmxSetCIFreqMeasMeth(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIFreqMeasMeth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4538</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIFreqMeasMeth(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIFreqMeasMeth(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIFreqMeasMeth(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIFreqMeasMeth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4538</i>
	 */
	// int DAQmxResetCIFreqMeasMeth(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Freq_EnableAveraging ***<br>
	 * Original signature : <code>int32 DAQmxGetCIFreqEnableAveraging(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4540</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIFreqEnableAveraging(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetCIFreqEnableAveraging(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIFreqEnableAveraging(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Freq_EnableAveraging ***<br>
	 * Original signature : <code>int32 DAQmxGetCIFreqEnableAveraging(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4540</i>
	 */
	// int DAQmxGetCIFreqEnableAveraging(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIFreqEnableAveraging(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4541</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIFreqEnableAveraging(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetCIFreqEnableAveraging(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIFreqEnableAveraging(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIFreqEnableAveraging(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4541</i>
	 */
	// int DAQmxSetCIFreqEnableAveraging(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIFreqEnableAveraging(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4542</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIFreqEnableAveraging(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIFreqEnableAveraging(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIFreqEnableAveraging(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIFreqEnableAveraging(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4542</i>
	 */
	// int DAQmxResetCIFreqEnableAveraging(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Freq_MeasTime ***<br>
	 * Original signature : <code>int32 DAQmxGetCIFreqMeasTime(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4544</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIFreqMeasTime(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetCIFreqMeasTime(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIFreqMeasTime(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Freq_MeasTime ***<br>
	 * Original signature : <code>int32 DAQmxGetCIFreqMeasTime(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4544</i>
	 */
	// int DAQmxGetCIFreqMeasTime(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIFreqMeasTime(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4545</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIFreqMeasTime(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetCIFreqMeasTime(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIFreqMeasTime(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIFreqMeasTime(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4545</i>
	 */
	// int DAQmxSetCIFreqMeasTime(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIFreqMeasTime(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4546</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIFreqMeasTime(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIFreqMeasTime(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIFreqMeasTime(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIFreqMeasTime(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4546</i>
	 */
	// int DAQmxResetCIFreqMeasTime(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Freq_Div ***<br>
	 * Original signature : <code>int32 DAQmxGetCIFreqDiv(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 4548</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIFreqDiv(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetCIFreqDiv(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIFreqDiv(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Freq_Div ***<br>
	 * Original signature : <code>int32 DAQmxGetCIFreqDiv(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 4548</i>
	 */
	// int DAQmxGetCIFreqDiv(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIFreqDiv(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 4549</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIFreqDiv(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetCIFreqDiv(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIFreqDiv(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIFreqDiv(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 4549</i>
	 */
	// int DAQmxSetCIFreqDiv(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIFreqDiv(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4550</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIFreqDiv(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIFreqDiv(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIFreqDiv(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIFreqDiv(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4550</i>
	 */
	// int DAQmxResetCIFreqDiv(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set TimeUnits3<br>
	 * Original signature : <code>int32 DAQmxGetCIPeriodUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4553</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIPeriodUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCIPeriodUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIPeriodUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set TimeUnits3<br>
	 * Original signature : <code>int32 DAQmxGetCIPeriodUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4553</i>
	 */
	// int DAQmxGetCIPeriodUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPeriodUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4554</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIPeriodUnits(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCIPeriodUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIPeriodUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPeriodUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4554</i>
	 */
	// int DAQmxSetCIPeriodUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPeriodUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4555</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIPeriodUnits(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIPeriodUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIPeriodUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPeriodUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4555</i>
	 */
	// int DAQmxResetCIPeriodUnits(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Period_Term ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPeriodTerm(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4557</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIPeriodTerm(com.sun.jna.Pointer, byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetCIPeriodTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIPeriodTerm(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_Period_Term ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPeriodTerm(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4557</i>
	 */
	// int DAQmxGetCIPeriodTerm(Pointer taskHandle, byte channel[], ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPeriodTerm(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4558</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIPeriodTerm(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #DAQmxSetCIPeriodTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIPeriodTerm(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPeriodTerm(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4558</i>
	 */
	// int DAQmxSetCIPeriodTerm(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPeriodTerm(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4559</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIPeriodTerm(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIPeriodTerm(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIPeriodTerm(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPeriodTerm(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4559</i>
	 */
	// int DAQmxResetCIPeriodTerm(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set InputTermCfg2<br>
	 * Original signature : <code>int32 DAQmxGetCIPeriodTermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4562</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIPeriodTermCfg(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCIPeriodTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIPeriodTermCfg(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set InputTermCfg2<br>
	 * Original signature : <code>int32 DAQmxGetCIPeriodTermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4562</i>
	 */
	// int DAQmxGetCIPeriodTermCfg(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPeriodTermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4563</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIPeriodTermCfg(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCIPeriodTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIPeriodTermCfg(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPeriodTermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4563</i>
	 */
	// int DAQmxSetCIPeriodTermCfg(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPeriodTermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4564</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIPeriodTermCfg(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIPeriodTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIPeriodTermCfg(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPeriodTermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4564</i>
	 */
	// int DAQmxResetCIPeriodTermCfg(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set LogicLvlBehavior<br>
	 * Original signature : <code>int32 DAQmxGetCIPeriodLogicLvlBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4567</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIPeriodLogicLvlBehavior(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCIPeriodLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIPeriodLogicLvlBehavior(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set LogicLvlBehavior<br>
	 * Original signature : <code>int32 DAQmxGetCIPeriodLogicLvlBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4567</i>
	 */
	// int DAQmxGetCIPeriodLogicLvlBehavior(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPeriodLogicLvlBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4568</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIPeriodLogicLvlBehavior(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCIPeriodLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIPeriodLogicLvlBehavior(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPeriodLogicLvlBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4568</i>
	 */
	// int DAQmxSetCIPeriodLogicLvlBehavior(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPeriodLogicLvlBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4569</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIPeriodLogicLvlBehavior(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIPeriodLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIPeriodLogicLvlBehavior(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPeriodLogicLvlBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4569</i>
	 */
	// int DAQmxResetCIPeriodLogicLvlBehavior(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Period_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPeriodDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4571</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIPeriodDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetCIPeriodDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIPeriodDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Period_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPeriodDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4571</i>
	 */
	// int DAQmxGetCIPeriodDigFltrEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPeriodDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4572</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIPeriodDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetCIPeriodDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIPeriodDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPeriodDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4572</i>
	 */
	// int DAQmxSetCIPeriodDigFltrEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPeriodDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4573</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIPeriodDigFltrEnable(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIPeriodDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIPeriodDigFltrEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPeriodDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4573</i>
	 */
	// int DAQmxResetCIPeriodDigFltrEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Period_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPeriodDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4575</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIPeriodDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetCIPeriodDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIPeriodDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Period_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPeriodDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4575</i>
	 */
	// int DAQmxGetCIPeriodDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPeriodDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4576</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIPeriodDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetCIPeriodDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIPeriodDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPeriodDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4576</i>
	 */
	// int DAQmxSetCIPeriodDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPeriodDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4577</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIPeriodDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIPeriodDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIPeriodDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPeriodDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4577</i>
	 */
	// int DAQmxResetCIPeriodDigFltrMinPulseWidth(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Period_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPeriodDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4579</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIPeriodDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetCIPeriodDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIPeriodDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_Period_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPeriodDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4579</i>
	 */
	// int DAQmxGetCIPeriodDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPeriodDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4580</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIPeriodDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #DAQmxSetCIPeriodDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIPeriodDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPeriodDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4580</i>
	 */
	// int DAQmxSetCIPeriodDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPeriodDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4581</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIPeriodDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIPeriodDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIPeriodDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPeriodDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4581</i>
	 */
	// int DAQmxResetCIPeriodDigFltrTimebaseSrc(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Period_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPeriodDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4583</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIPeriodDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetCIPeriodDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIPeriodDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Period_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPeriodDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4583</i>
	 */
	// int DAQmxGetCIPeriodDigFltrTimebaseRate(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPeriodDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4584</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIPeriodDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetCIPeriodDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIPeriodDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPeriodDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4584</i>
	 */
	// int DAQmxSetCIPeriodDigFltrTimebaseRate(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPeriodDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4585</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIPeriodDigFltrTimebaseRate(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIPeriodDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIPeriodDigFltrTimebaseRate(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPeriodDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4585</i>
	 */
	// int DAQmxResetCIPeriodDigFltrTimebaseRate(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Period_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPeriodDigSyncEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4587</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIPeriodDigSyncEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetCIPeriodDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIPeriodDigSyncEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Period_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPeriodDigSyncEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4587</i>
	 */
	// int DAQmxGetCIPeriodDigSyncEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPeriodDigSyncEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4588</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIPeriodDigSyncEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetCIPeriodDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIPeriodDigSyncEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPeriodDigSyncEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4588</i>
	 */
	// int DAQmxSetCIPeriodDigSyncEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPeriodDigSyncEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4589</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIPeriodDigSyncEnable(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIPeriodDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIPeriodDigSyncEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPeriodDigSyncEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4589</i>
	 */
	// int DAQmxResetCIPeriodDigSyncEnable(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetCIPeriodStartingEdge(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4592</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIPeriodStartingEdge(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCIPeriodStartingEdge(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIPeriodStartingEdge(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetCIPeriodStartingEdge(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4592</i>
	 */
	// int DAQmxGetCIPeriodStartingEdge(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPeriodStartingEdge(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4593</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIPeriodStartingEdge(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCIPeriodStartingEdge(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIPeriodStartingEdge(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPeriodStartingEdge(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4593</i>
	 */
	// int DAQmxSetCIPeriodStartingEdge(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPeriodStartingEdge(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4594</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIPeriodStartingEdge(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIPeriodStartingEdge(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIPeriodStartingEdge(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPeriodStartingEdge(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4594</i>
	 */
	// int DAQmxResetCIPeriodStartingEdge(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set CounterFrequencyMethod<br>
	 * Original signature : <code>int32 DAQmxGetCIPeriodMeasMeth(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4597</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIPeriodMeasMeth(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCIPeriodMeasMeth(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIPeriodMeasMeth(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set CounterFrequencyMethod<br>
	 * Original signature : <code>int32 DAQmxGetCIPeriodMeasMeth(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4597</i>
	 */
	// int DAQmxGetCIPeriodMeasMeth(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPeriodMeasMeth(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4598</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIPeriodMeasMeth(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCIPeriodMeasMeth(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIPeriodMeasMeth(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPeriodMeasMeth(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4598</i>
	 */
	// int DAQmxSetCIPeriodMeasMeth(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPeriodMeasMeth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4599</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIPeriodMeasMeth(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIPeriodMeasMeth(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIPeriodMeasMeth(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPeriodMeasMeth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4599</i>
	 */
	// int DAQmxResetCIPeriodMeasMeth(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Period_EnableAveraging ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPeriodEnableAveraging(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4601</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIPeriodEnableAveraging(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetCIPeriodEnableAveraging(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIPeriodEnableAveraging(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Period_EnableAveraging ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPeriodEnableAveraging(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4601</i>
	 */
	// int DAQmxGetCIPeriodEnableAveraging(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPeriodEnableAveraging(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4602</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIPeriodEnableAveraging(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetCIPeriodEnableAveraging(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIPeriodEnableAveraging(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPeriodEnableAveraging(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4602</i>
	 */
	// int DAQmxSetCIPeriodEnableAveraging(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPeriodEnableAveraging(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4603</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIPeriodEnableAveraging(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIPeriodEnableAveraging(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIPeriodEnableAveraging(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPeriodEnableAveraging(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4603</i>
	 */
	// int DAQmxResetCIPeriodEnableAveraging(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Period_MeasTime ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPeriodMeasTime(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4605</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIPeriodMeasTime(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetCIPeriodMeasTime(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIPeriodMeasTime(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Period_MeasTime ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPeriodMeasTime(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4605</i>
	 */
	// int DAQmxGetCIPeriodMeasTime(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPeriodMeasTime(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4606</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIPeriodMeasTime(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetCIPeriodMeasTime(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIPeriodMeasTime(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPeriodMeasTime(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4606</i>
	 */
	// int DAQmxSetCIPeriodMeasTime(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPeriodMeasTime(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4607</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIPeriodMeasTime(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIPeriodMeasTime(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIPeriodMeasTime(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPeriodMeasTime(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4607</i>
	 */
	// int DAQmxResetCIPeriodMeasTime(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Period_Div ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPeriodDiv(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 4609</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIPeriodDiv(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetCIPeriodDiv(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIPeriodDiv(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Period_Div ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPeriodDiv(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 4609</i>
	 */
	// int DAQmxGetCIPeriodDiv(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPeriodDiv(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 4610</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIPeriodDiv(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetCIPeriodDiv(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIPeriodDiv(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPeriodDiv(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 4610</i>
	 */
	// int DAQmxSetCIPeriodDiv(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPeriodDiv(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4611</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIPeriodDiv(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIPeriodDiv(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIPeriodDiv(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPeriodDiv(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4611</i>
	 */
	// int DAQmxResetCIPeriodDiv(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_Term ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesTerm(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4613</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCICountEdgesTerm(com.sun.jna.Pointer, byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetCICountEdgesTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetCICountEdgesTerm(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_Term ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesTerm(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4613</i>
	 */
	// int DAQmxGetCICountEdgesTerm(Pointer taskHandle, byte channel[], ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesTerm(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4614</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCICountEdgesTerm(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #DAQmxSetCICountEdgesTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetCICountEdgesTerm(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesTerm(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4614</i>
	 */
	// int DAQmxSetCICountEdgesTerm(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesTerm(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4615</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCICountEdgesTerm(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCICountEdgesTerm(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCICountEdgesTerm(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesTerm(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4615</i>
	 */
	// int DAQmxResetCICountEdgesTerm(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set InputTermCfg2<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesTermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4618</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCICountEdgesTermCfg(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCICountEdgesTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCICountEdgesTermCfg(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set InputTermCfg2<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesTermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4618</i>
	 */
	// int DAQmxGetCICountEdgesTermCfg(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesTermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4619</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCICountEdgesTermCfg(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCICountEdgesTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCICountEdgesTermCfg(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesTermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4619</i>
	 */
	// int DAQmxSetCICountEdgesTermCfg(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesTermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4620</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCICountEdgesTermCfg(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCICountEdgesTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCICountEdgesTermCfg(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesTermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4620</i>
	 */
	// int DAQmxResetCICountEdgesTermCfg(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set LogicLvlBehavior<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesLogicLvlBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4623</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCICountEdgesLogicLvlBehavior(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCICountEdgesLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCICountEdgesLogicLvlBehavior(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set LogicLvlBehavior<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesLogicLvlBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4623</i>
	 */
	// int DAQmxGetCICountEdgesLogicLvlBehavior(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesLogicLvlBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4624</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCICountEdgesLogicLvlBehavior(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCICountEdgesLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCICountEdgesLogicLvlBehavior(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesLogicLvlBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4624</i>
	 */
	// int DAQmxSetCICountEdgesLogicLvlBehavior(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesLogicLvlBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4625</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCICountEdgesLogicLvlBehavior(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCICountEdgesLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCICountEdgesLogicLvlBehavior(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesLogicLvlBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4625</i>
	 */
	// int DAQmxResetCICountEdgesLogicLvlBehavior(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4627</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCICountEdgesDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetCICountEdgesDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCICountEdgesDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4627</i>
	 */
	// int DAQmxGetCICountEdgesDigFltrEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4628</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCICountEdgesDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetCICountEdgesDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetCICountEdgesDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4628</i>
	 */
	// int DAQmxSetCICountEdgesDigFltrEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4629</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCICountEdgesDigFltrEnable(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCICountEdgesDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCICountEdgesDigFltrEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4629</i>
	 */
	// int DAQmxResetCICountEdgesDigFltrEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4631</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCICountEdgesDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetCICountEdgesDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCICountEdgesDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4631</i>
	 */
	// int DAQmxGetCICountEdgesDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4632</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCICountEdgesDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetCICountEdgesDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetCICountEdgesDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4632</i>
	 */
	// int DAQmxSetCICountEdgesDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4633</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCICountEdgesDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCICountEdgesDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCICountEdgesDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4633</i>
	 */
	// int DAQmxResetCICountEdgesDigFltrMinPulseWidth(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4635</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCICountEdgesDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetCICountEdgesDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetCICountEdgesDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4635</i>
	 */
	// int DAQmxGetCICountEdgesDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4636</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCICountEdgesDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #DAQmxSetCICountEdgesDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetCICountEdgesDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4636</i>
	 */
	// int DAQmxSetCICountEdgesDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4637</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCICountEdgesDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCICountEdgesDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCICountEdgesDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4637</i>
	 */
	// int DAQmxResetCICountEdgesDigFltrTimebaseSrc(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4639</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCICountEdgesDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetCICountEdgesDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCICountEdgesDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4639</i>
	 */
	// int DAQmxGetCICountEdgesDigFltrTimebaseRate(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4640</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCICountEdgesDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetCICountEdgesDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetCICountEdgesDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4640</i>
	 */
	// int DAQmxSetCICountEdgesDigFltrTimebaseRate(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4641</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCICountEdgesDigFltrTimebaseRate(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCICountEdgesDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCICountEdgesDigFltrTimebaseRate(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4641</i>
	 */
	// int DAQmxResetCICountEdgesDigFltrTimebaseRate(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesDigSyncEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4643</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCICountEdgesDigSyncEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetCICountEdgesDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCICountEdgesDigSyncEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesDigSyncEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4643</i>
	 */
	// int DAQmxGetCICountEdgesDigSyncEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesDigSyncEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4644</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCICountEdgesDigSyncEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetCICountEdgesDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetCICountEdgesDigSyncEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesDigSyncEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4644</i>
	 */
	// int DAQmxSetCICountEdgesDigSyncEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesDigSyncEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4645</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCICountEdgesDigSyncEnable(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCICountEdgesDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCICountEdgesDigSyncEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesDigSyncEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4645</i>
	 */
	// int DAQmxResetCICountEdgesDigSyncEnable(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set CountDirection1<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesDir(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4648</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCICountEdgesDir(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCICountEdgesDir(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCICountEdgesDir(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set CountDirection1<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesDir(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4648</i>
	 */
	// int DAQmxGetCICountEdgesDir(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesDir(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4649</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCICountEdgesDir(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCICountEdgesDir(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCICountEdgesDir(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesDir(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4649</i>
	 */
	// int DAQmxSetCICountEdgesDir(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesDir(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4650</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCICountEdgesDir(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCICountEdgesDir(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCICountEdgesDir(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesDir(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4650</i>
	 */
	// int DAQmxResetCICountEdgesDir(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_DirTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesDirTerm(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4652</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCICountEdgesDirTerm(com.sun.jna.Pointer, byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetCICountEdgesDirTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetCICountEdgesDirTerm(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_DirTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesDirTerm(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4652</i>
	 */
	// int DAQmxGetCICountEdgesDirTerm(Pointer taskHandle, byte channel[], ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesDirTerm(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4653</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCICountEdgesDirTerm(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #DAQmxSetCICountEdgesDirTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetCICountEdgesDirTerm(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesDirTerm(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4653</i>
	 */
	// int DAQmxSetCICountEdgesDirTerm(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesDirTerm(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4654</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCICountEdgesDirTerm(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCICountEdgesDirTerm(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCICountEdgesDirTerm(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesDirTerm(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4654</i>
	 */
	// int DAQmxResetCICountEdgesDirTerm(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set InputTermCfg2<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesCountDirTermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4657</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCICountEdgesCountDirTermCfg(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCICountEdgesCountDirTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCICountEdgesCountDirTermCfg(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set InputTermCfg2<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesCountDirTermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4657</i>
	 */
	// int DAQmxGetCICountEdgesCountDirTermCfg(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesCountDirTermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4658</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCICountEdgesCountDirTermCfg(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCICountEdgesCountDirTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCICountEdgesCountDirTermCfg(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesCountDirTermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4658</i>
	 */
	// int DAQmxSetCICountEdgesCountDirTermCfg(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesCountDirTermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4659</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCICountEdgesCountDirTermCfg(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCICountEdgesCountDirTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCICountEdgesCountDirTermCfg(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesCountDirTermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4659</i>
	 */
	// int DAQmxResetCICountEdgesCountDirTermCfg(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set LogicLvlBehavior<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesCountDirLogicLvlBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4662</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCICountEdgesCountDirLogicLvlBehavior(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCICountEdgesCountDirLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCICountEdgesCountDirLogicLvlBehavior(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set LogicLvlBehavior<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesCountDirLogicLvlBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4662</i>
	 */
	// int DAQmxGetCICountEdgesCountDirLogicLvlBehavior(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesCountDirLogicLvlBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4663</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCICountEdgesCountDirLogicLvlBehavior(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCICountEdgesCountDirLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCICountEdgesCountDirLogicLvlBehavior(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesCountDirLogicLvlBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4663</i>
	 */
	// int DAQmxSetCICountEdgesCountDirLogicLvlBehavior(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesCountDirLogicLvlBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4664</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCICountEdgesCountDirLogicLvlBehavior(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCICountEdgesCountDirLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCICountEdgesCountDirLogicLvlBehavior(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesCountDirLogicLvlBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4664</i>
	 */
	// int DAQmxResetCICountEdgesCountDirLogicLvlBehavior(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_CountDir_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesCountDirDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4666</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCICountEdgesCountDirDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetCICountEdgesCountDirDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCICountEdgesCountDirDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_CountDir_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesCountDirDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4666</i>
	 */
	// int DAQmxGetCICountEdgesCountDirDigFltrEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesCountDirDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4667</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCICountEdgesCountDirDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetCICountEdgesCountDirDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetCICountEdgesCountDirDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesCountDirDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4667</i>
	 */
	// int DAQmxSetCICountEdgesCountDirDigFltrEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesCountDirDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4668</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCICountEdgesCountDirDigFltrEnable(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCICountEdgesCountDirDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCICountEdgesCountDirDigFltrEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesCountDirDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4668</i>
	 */
	// int DAQmxResetCICountEdgesCountDirDigFltrEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_CountDir_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesCountDirDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4670</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCICountEdgesCountDirDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetCICountEdgesCountDirDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCICountEdgesCountDirDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_CountDir_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesCountDirDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4670</i>
	 */
	// int DAQmxGetCICountEdgesCountDirDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesCountDirDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4671</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCICountEdgesCountDirDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetCICountEdgesCountDirDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetCICountEdgesCountDirDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesCountDirDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4671</i>
	 */
	// int DAQmxSetCICountEdgesCountDirDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesCountDirDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4672</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCICountEdgesCountDirDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCICountEdgesCountDirDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCICountEdgesCountDirDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesCountDirDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4672</i>
	 */
	// int DAQmxResetCICountEdgesCountDirDigFltrMinPulseWidth(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_CountDir_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesCountDirDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4674</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCICountEdgesCountDirDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetCICountEdgesCountDirDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetCICountEdgesCountDirDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_CountDir_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesCountDirDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4674</i>
	 */
	// int DAQmxGetCICountEdgesCountDirDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesCountDirDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4675</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCICountEdgesCountDirDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #DAQmxSetCICountEdgesCountDirDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetCICountEdgesCountDirDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesCountDirDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4675</i>
	 */
	// int DAQmxSetCICountEdgesCountDirDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesCountDirDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4676</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCICountEdgesCountDirDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCICountEdgesCountDirDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCICountEdgesCountDirDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesCountDirDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4676</i>
	 */
	// int DAQmxResetCICountEdgesCountDirDigFltrTimebaseSrc(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_CountDir_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesCountDirDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4678</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCICountEdgesCountDirDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetCICountEdgesCountDirDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCICountEdgesCountDirDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_CountDir_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesCountDirDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4678</i>
	 */
	// int DAQmxGetCICountEdgesCountDirDigFltrTimebaseRate(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesCountDirDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4679</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCICountEdgesCountDirDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetCICountEdgesCountDirDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetCICountEdgesCountDirDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesCountDirDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4679</i>
	 */
	// int DAQmxSetCICountEdgesCountDirDigFltrTimebaseRate(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesCountDirDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4680</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCICountEdgesCountDirDigFltrTimebaseRate(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCICountEdgesCountDirDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCICountEdgesCountDirDigFltrTimebaseRate(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesCountDirDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4680</i>
	 */
	// int DAQmxResetCICountEdgesCountDirDigFltrTimebaseRate(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_CountDir_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesCountDirDigSyncEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4682</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCICountEdgesCountDirDigSyncEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetCICountEdgesCountDirDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCICountEdgesCountDirDigSyncEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_CountDir_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesCountDirDigSyncEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4682</i>
	 */
	// int DAQmxGetCICountEdgesCountDirDigSyncEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesCountDirDigSyncEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4683</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCICountEdgesCountDirDigSyncEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetCICountEdgesCountDirDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetCICountEdgesCountDirDigSyncEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesCountDirDigSyncEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4683</i>
	 */
	// int DAQmxSetCICountEdgesCountDirDigSyncEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesCountDirDigSyncEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4684</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCICountEdgesCountDirDigSyncEnable(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCICountEdgesCountDirDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCICountEdgesCountDirDigSyncEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesCountDirDigSyncEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4684</i>
	 */
	// int DAQmxResetCICountEdgesCountDirDigSyncEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_InitialCnt ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesInitialCnt(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 4686</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCICountEdgesInitialCnt(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetCICountEdgesInitialCnt(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCICountEdgesInitialCnt(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_InitialCnt ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesInitialCnt(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 4686</i>
	 */
	// int DAQmxGetCICountEdgesInitialCnt(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesInitialCnt(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 4687</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCICountEdgesInitialCnt(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetCICountEdgesInitialCnt(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetCICountEdgesInitialCnt(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesInitialCnt(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 4687</i>
	 */
	// int DAQmxSetCICountEdgesInitialCnt(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesInitialCnt(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4688</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCICountEdgesInitialCnt(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCICountEdgesInitialCnt(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCICountEdgesInitialCnt(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesInitialCnt(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4688</i>
	 */
	// int DAQmxResetCICountEdgesInitialCnt(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesActiveEdge(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4691</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCICountEdgesActiveEdge(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCICountEdgesActiveEdge(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCICountEdgesActiveEdge(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesActiveEdge(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4691</i>
	 */
	// int DAQmxGetCICountEdgesActiveEdge(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesActiveEdge(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4692</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCICountEdgesActiveEdge(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCICountEdgesActiveEdge(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCICountEdgesActiveEdge(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesActiveEdge(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4692</i>
	 */
	// int DAQmxSetCICountEdgesActiveEdge(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesActiveEdge(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4693</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCICountEdgesActiveEdge(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCICountEdgesActiveEdge(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCICountEdgesActiveEdge(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesActiveEdge(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4693</i>
	 */
	// int DAQmxResetCICountEdgesActiveEdge(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_CountReset_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesCountResetEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4695</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCICountEdgesCountResetEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetCICountEdgesCountResetEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCICountEdgesCountResetEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_CountReset_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesCountResetEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4695</i>
	 */
	// int DAQmxGetCICountEdgesCountResetEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesCountResetEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4696</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCICountEdgesCountResetEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetCICountEdgesCountResetEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetCICountEdgesCountResetEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesCountResetEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4696</i>
	 */
	// int DAQmxSetCICountEdgesCountResetEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesCountResetEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4697</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCICountEdgesCountResetEnable(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCICountEdgesCountResetEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCICountEdgesCountResetEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesCountResetEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4697</i>
	 */
	// int DAQmxResetCICountEdgesCountResetEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_CountReset_ResetCount ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesCountResetResetCount(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 4699</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCICountEdgesCountResetResetCount(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetCICountEdgesCountResetResetCount(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCICountEdgesCountResetResetCount(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_CountReset_ResetCount ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesCountResetResetCount(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 4699</i>
	 */
	// int DAQmxGetCICountEdgesCountResetResetCount(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesCountResetResetCount(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 4700</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCICountEdgesCountResetResetCount(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetCICountEdgesCountResetResetCount(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetCICountEdgesCountResetResetCount(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesCountResetResetCount(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 4700</i>
	 */
	// int DAQmxSetCICountEdgesCountResetResetCount(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesCountResetResetCount(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4701</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCICountEdgesCountResetResetCount(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCICountEdgesCountResetResetCount(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCICountEdgesCountResetResetCount(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesCountResetResetCount(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4701</i>
	 */
	// int DAQmxResetCICountEdgesCountResetResetCount(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_CountReset_Term ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesCountResetTerm(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4703</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCICountEdgesCountResetTerm(com.sun.jna.Pointer, byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetCICountEdgesCountResetTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetCICountEdgesCountResetTerm(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_CountReset_Term ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesCountResetTerm(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4703</i>
	 */
	// int DAQmxGetCICountEdgesCountResetTerm(Pointer taskHandle, byte channel[], ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesCountResetTerm(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4704</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCICountEdgesCountResetTerm(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #DAQmxSetCICountEdgesCountResetTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetCICountEdgesCountResetTerm(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesCountResetTerm(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4704</i>
	 */
	// int DAQmxSetCICountEdgesCountResetTerm(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesCountResetTerm(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4705</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCICountEdgesCountResetTerm(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCICountEdgesCountResetTerm(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCICountEdgesCountResetTerm(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesCountResetTerm(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4705</i>
	 */
	// int DAQmxResetCICountEdgesCountResetTerm(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set InputTermCfg2<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesCountResetTermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4708</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCICountEdgesCountResetTermCfg(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCICountEdgesCountResetTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCICountEdgesCountResetTermCfg(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set InputTermCfg2<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesCountResetTermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4708</i>
	 */
	// int DAQmxGetCICountEdgesCountResetTermCfg(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesCountResetTermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4709</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCICountEdgesCountResetTermCfg(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCICountEdgesCountResetTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCICountEdgesCountResetTermCfg(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesCountResetTermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4709</i>
	 */
	// int DAQmxSetCICountEdgesCountResetTermCfg(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesCountResetTermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4710</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCICountEdgesCountResetTermCfg(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCICountEdgesCountResetTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCICountEdgesCountResetTermCfg(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesCountResetTermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4710</i>
	 */
	// int DAQmxResetCICountEdgesCountResetTermCfg(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set LogicLvlBehavior<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesCountResetLogicLvlBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4713</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCICountEdgesCountResetLogicLvlBehavior(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCICountEdgesCountResetLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCICountEdgesCountResetLogicLvlBehavior(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set LogicLvlBehavior<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesCountResetLogicLvlBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4713</i>
	 */
	// int DAQmxGetCICountEdgesCountResetLogicLvlBehavior(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesCountResetLogicLvlBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4714</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCICountEdgesCountResetLogicLvlBehavior(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCICountEdgesCountResetLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCICountEdgesCountResetLogicLvlBehavior(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesCountResetLogicLvlBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4714</i>
	 */
	// int DAQmxSetCICountEdgesCountResetLogicLvlBehavior(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesCountResetLogicLvlBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4715</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCICountEdgesCountResetLogicLvlBehavior(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCICountEdgesCountResetLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCICountEdgesCountResetLogicLvlBehavior(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesCountResetLogicLvlBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4715</i>
	 */
	// int DAQmxResetCICountEdgesCountResetLogicLvlBehavior(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_CountReset_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesCountResetDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4717</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCICountEdgesCountResetDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetCICountEdgesCountResetDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCICountEdgesCountResetDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_CountReset_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesCountResetDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4717</i>
	 */
	// int DAQmxGetCICountEdgesCountResetDigFltrEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesCountResetDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4718</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCICountEdgesCountResetDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetCICountEdgesCountResetDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetCICountEdgesCountResetDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesCountResetDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4718</i>
	 */
	// int DAQmxSetCICountEdgesCountResetDigFltrEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesCountResetDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4719</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCICountEdgesCountResetDigFltrEnable(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCICountEdgesCountResetDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCICountEdgesCountResetDigFltrEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesCountResetDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4719</i>
	 */
	// int DAQmxResetCICountEdgesCountResetDigFltrEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_CountReset_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesCountResetDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4721</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCICountEdgesCountResetDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetCICountEdgesCountResetDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCICountEdgesCountResetDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_CountReset_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesCountResetDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4721</i>
	 */
	// int DAQmxGetCICountEdgesCountResetDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesCountResetDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4722</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCICountEdgesCountResetDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetCICountEdgesCountResetDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetCICountEdgesCountResetDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesCountResetDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4722</i>
	 */
	// int DAQmxSetCICountEdgesCountResetDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesCountResetDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4723</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCICountEdgesCountResetDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCICountEdgesCountResetDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCICountEdgesCountResetDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesCountResetDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4723</i>
	 */
	// int DAQmxResetCICountEdgesCountResetDigFltrMinPulseWidth(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_CountReset_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesCountResetDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4725</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCICountEdgesCountResetDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetCICountEdgesCountResetDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetCICountEdgesCountResetDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_CountReset_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesCountResetDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4725</i>
	 */
	// int DAQmxGetCICountEdgesCountResetDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesCountResetDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4726</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCICountEdgesCountResetDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #DAQmxSetCICountEdgesCountResetDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetCICountEdgesCountResetDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesCountResetDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4726</i>
	 */
	// int DAQmxSetCICountEdgesCountResetDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesCountResetDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4727</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCICountEdgesCountResetDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCICountEdgesCountResetDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCICountEdgesCountResetDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesCountResetDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4727</i>
	 */
	// int DAQmxResetCICountEdgesCountResetDigFltrTimebaseSrc(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_CountReset_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesCountResetDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4729</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCICountEdgesCountResetDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetCICountEdgesCountResetDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCICountEdgesCountResetDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_CountReset_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesCountResetDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4729</i>
	 */
	// int DAQmxGetCICountEdgesCountResetDigFltrTimebaseRate(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesCountResetDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4730</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCICountEdgesCountResetDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetCICountEdgesCountResetDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetCICountEdgesCountResetDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesCountResetDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4730</i>
	 */
	// int DAQmxSetCICountEdgesCountResetDigFltrTimebaseRate(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesCountResetDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4731</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCICountEdgesCountResetDigFltrTimebaseRate(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCICountEdgesCountResetDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCICountEdgesCountResetDigFltrTimebaseRate(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesCountResetDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4731</i>
	 */
	// int DAQmxResetCICountEdgesCountResetDigFltrTimebaseRate(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_CountReset_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesCountResetDigSyncEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4733</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCICountEdgesCountResetDigSyncEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetCICountEdgesCountResetDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCICountEdgesCountResetDigSyncEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_CountReset_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesCountResetDigSyncEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4733</i>
	 */
	// int DAQmxGetCICountEdgesCountResetDigSyncEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesCountResetDigSyncEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4734</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCICountEdgesCountResetDigSyncEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetCICountEdgesCountResetDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetCICountEdgesCountResetDigSyncEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesCountResetDigSyncEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4734</i>
	 */
	// int DAQmxSetCICountEdgesCountResetDigSyncEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesCountResetDigSyncEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4735</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCICountEdgesCountResetDigSyncEnable(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCICountEdgesCountResetDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCICountEdgesCountResetDigSyncEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesCountResetDigSyncEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4735</i>
	 */
	// int DAQmxResetCICountEdgesCountResetDigSyncEnable(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesCountResetActiveEdge(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4738</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCICountEdgesCountResetActiveEdge(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCICountEdgesCountResetActiveEdge(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCICountEdgesCountResetActiveEdge(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesCountResetActiveEdge(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4738</i>
	 */
	// int DAQmxGetCICountEdgesCountResetActiveEdge(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesCountResetActiveEdge(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4739</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCICountEdgesCountResetActiveEdge(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCICountEdgesCountResetActiveEdge(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCICountEdgesCountResetActiveEdge(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesCountResetActiveEdge(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4739</i>
	 */
	// int DAQmxSetCICountEdgesCountResetActiveEdge(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesCountResetActiveEdge(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4740</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCICountEdgesCountResetActiveEdge(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCICountEdgesCountResetActiveEdge(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCICountEdgesCountResetActiveEdge(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesCountResetActiveEdge(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4740</i>
	 */
	// int DAQmxResetCICountEdgesCountResetActiveEdge(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_Gate_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesGateEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4742</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCICountEdgesGateEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetCICountEdgesGateEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCICountEdgesGateEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_Gate_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesGateEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4742</i>
	 */
	// int DAQmxGetCICountEdgesGateEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesGateEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4743</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCICountEdgesGateEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetCICountEdgesGateEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetCICountEdgesGateEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesGateEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4743</i>
	 */
	// int DAQmxSetCICountEdgesGateEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesGateEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4744</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCICountEdgesGateEnable(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCICountEdgesGateEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCICountEdgesGateEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesGateEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4744</i>
	 */
	// int DAQmxResetCICountEdgesGateEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_Gate_Term ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesGateTerm(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4746</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCICountEdgesGateTerm(com.sun.jna.Pointer, byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetCICountEdgesGateTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetCICountEdgesGateTerm(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_Gate_Term ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesGateTerm(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4746</i>
	 */
	// int DAQmxGetCICountEdgesGateTerm(Pointer taskHandle, byte channel[], ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesGateTerm(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4747</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCICountEdgesGateTerm(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #DAQmxSetCICountEdgesGateTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetCICountEdgesGateTerm(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesGateTerm(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4747</i>
	 */
	// int DAQmxSetCICountEdgesGateTerm(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesGateTerm(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4748</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCICountEdgesGateTerm(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCICountEdgesGateTerm(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCICountEdgesGateTerm(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesGateTerm(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4748</i>
	 */
	// int DAQmxResetCICountEdgesGateTerm(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set InputTermCfg2<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesGateTermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4751</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCICountEdgesGateTermCfg(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCICountEdgesGateTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCICountEdgesGateTermCfg(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set InputTermCfg2<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesGateTermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4751</i>
	 */
	// int DAQmxGetCICountEdgesGateTermCfg(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesGateTermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4752</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCICountEdgesGateTermCfg(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCICountEdgesGateTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCICountEdgesGateTermCfg(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesGateTermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4752</i>
	 */
	// int DAQmxSetCICountEdgesGateTermCfg(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesGateTermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4753</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCICountEdgesGateTermCfg(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCICountEdgesGateTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCICountEdgesGateTermCfg(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesGateTermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4753</i>
	 */
	// int DAQmxResetCICountEdgesGateTermCfg(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set LogicLvlBehavior<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesGateLogicLvlBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4756</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCICountEdgesGateLogicLvlBehavior(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCICountEdgesGateLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCICountEdgesGateLogicLvlBehavior(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set LogicLvlBehavior<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesGateLogicLvlBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4756</i>
	 */
	// int DAQmxGetCICountEdgesGateLogicLvlBehavior(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesGateLogicLvlBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4757</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCICountEdgesGateLogicLvlBehavior(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCICountEdgesGateLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCICountEdgesGateLogicLvlBehavior(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesGateLogicLvlBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4757</i>
	 */
	// int DAQmxSetCICountEdgesGateLogicLvlBehavior(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesGateLogicLvlBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4758</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCICountEdgesGateLogicLvlBehavior(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCICountEdgesGateLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCICountEdgesGateLogicLvlBehavior(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesGateLogicLvlBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4758</i>
	 */
	// int DAQmxResetCICountEdgesGateLogicLvlBehavior(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_Gate_DigFltrEnable ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesGateDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4760</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCICountEdgesGateDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetCICountEdgesGateDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCICountEdgesGateDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_Gate_DigFltrEnable ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesGateDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4760</i>
	 */
	// int DAQmxGetCICountEdgesGateDigFltrEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesGateDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4761</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCICountEdgesGateDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetCICountEdgesGateDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetCICountEdgesGateDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesGateDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4761</i>
	 */
	// int DAQmxSetCICountEdgesGateDigFltrEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesGateDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4762</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCICountEdgesGateDigFltrEnable(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCICountEdgesGateDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCICountEdgesGateDigFltrEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesGateDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4762</i>
	 */
	// int DAQmxResetCICountEdgesGateDigFltrEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_Gate_DigFltrMinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesGateDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4764</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCICountEdgesGateDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetCICountEdgesGateDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCICountEdgesGateDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_Gate_DigFltrMinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesGateDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4764</i>
	 */
	// int DAQmxGetCICountEdgesGateDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesGateDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4765</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCICountEdgesGateDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetCICountEdgesGateDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetCICountEdgesGateDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesGateDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4765</i>
	 */
	// int DAQmxSetCICountEdgesGateDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesGateDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4766</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCICountEdgesGateDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCICountEdgesGateDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCICountEdgesGateDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesGateDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4766</i>
	 */
	// int DAQmxResetCICountEdgesGateDigFltrMinPulseWidth(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_Gate_DigFltrTimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesGateDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4768</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCICountEdgesGateDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetCICountEdgesGateDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetCICountEdgesGateDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_Gate_DigFltrTimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesGateDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4768</i>
	 */
	// int DAQmxGetCICountEdgesGateDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesGateDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4769</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCICountEdgesGateDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #DAQmxSetCICountEdgesGateDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetCICountEdgesGateDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesGateDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4769</i>
	 */
	// int DAQmxSetCICountEdgesGateDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesGateDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4770</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCICountEdgesGateDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCICountEdgesGateDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCICountEdgesGateDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesGateDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4770</i>
	 */
	// int DAQmxResetCICountEdgesGateDigFltrTimebaseSrc(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_Gate_DigFltrTimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesGateDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4772</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCICountEdgesGateDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetCICountEdgesGateDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCICountEdgesGateDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_CountEdges_Gate_DigFltrTimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesGateDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4772</i>
	 */
	// int DAQmxGetCICountEdgesGateDigFltrTimebaseRate(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesGateDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4773</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCICountEdgesGateDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetCICountEdgesGateDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetCICountEdgesGateDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesGateDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4773</i>
	 */
	// int DAQmxSetCICountEdgesGateDigFltrTimebaseRate(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesGateDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4774</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCICountEdgesGateDigFltrTimebaseRate(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCICountEdgesGateDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCICountEdgesGateDigFltrTimebaseRate(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesGateDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4774</i>
	 */
	// int DAQmxResetCICountEdgesGateDigFltrTimebaseRate(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set Level1<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesGateWhen(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4777</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCICountEdgesGateWhen(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCICountEdgesGateWhen(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCICountEdgesGateWhen(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set Level1<br>
	 * Original signature : <code>int32 DAQmxGetCICountEdgesGateWhen(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4777</i>
	 */
	// int DAQmxGetCICountEdgesGateWhen(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesGateWhen(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4778</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCICountEdgesGateWhen(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCICountEdgesGateWhen(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCICountEdgesGateWhen(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICountEdgesGateWhen(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4778</i>
	 */
	// int DAQmxSetCICountEdgesGateWhen(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesGateWhen(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4779</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCICountEdgesGateWhen(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCICountEdgesGateWhen(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCICountEdgesGateWhen(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICountEdgesGateWhen(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4779</i>
	 */
	// int DAQmxResetCICountEdgesGateWhen(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_DutyCycle_Term ***<br>
	 * Original signature : <code>int32 DAQmxGetCIDutyCycleTerm(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4781</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIDutyCycleTerm(com.sun.jna.Pointer, byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetCIDutyCycleTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIDutyCycleTerm(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_DutyCycle_Term ***<br>
	 * Original signature : <code>int32 DAQmxGetCIDutyCycleTerm(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4781</i>
	 */
	// int DAQmxGetCIDutyCycleTerm(Pointer taskHandle, byte channel[], ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCIDutyCycleTerm(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4782</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIDutyCycleTerm(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #DAQmxSetCIDutyCycleTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIDutyCycleTerm(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIDutyCycleTerm(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4782</i>
	 */
	// int DAQmxSetCIDutyCycleTerm(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIDutyCycleTerm(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4783</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIDutyCycleTerm(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIDutyCycleTerm(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIDutyCycleTerm(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIDutyCycleTerm(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4783</i>
	 */
	// int DAQmxResetCIDutyCycleTerm(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set InputTermCfg2<br>
	 * Original signature : <code>int32 DAQmxGetCIDutyCycleTermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4786</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIDutyCycleTermCfg(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCIDutyCycleTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIDutyCycleTermCfg(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set InputTermCfg2<br>
	 * Original signature : <code>int32 DAQmxGetCIDutyCycleTermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4786</i>
	 */
	// int DAQmxGetCIDutyCycleTermCfg(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIDutyCycleTermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4787</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIDutyCycleTermCfg(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCIDutyCycleTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIDutyCycleTermCfg(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIDutyCycleTermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4787</i>
	 */
	// int DAQmxSetCIDutyCycleTermCfg(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIDutyCycleTermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4788</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIDutyCycleTermCfg(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIDutyCycleTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIDutyCycleTermCfg(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIDutyCycleTermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4788</i>
	 */
	// int DAQmxResetCIDutyCycleTermCfg(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set LogicLvlBehavior<br>
	 * Original signature : <code>int32 DAQmxGetCIDutyCycleLogicLvlBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4791</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIDutyCycleLogicLvlBehavior(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCIDutyCycleLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIDutyCycleLogicLvlBehavior(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set LogicLvlBehavior<br>
	 * Original signature : <code>int32 DAQmxGetCIDutyCycleLogicLvlBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4791</i>
	 */
	// int DAQmxGetCIDutyCycleLogicLvlBehavior(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIDutyCycleLogicLvlBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4792</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIDutyCycleLogicLvlBehavior(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCIDutyCycleLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIDutyCycleLogicLvlBehavior(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIDutyCycleLogicLvlBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4792</i>
	 */
	// int DAQmxSetCIDutyCycleLogicLvlBehavior(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIDutyCycleLogicLvlBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4793</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIDutyCycleLogicLvlBehavior(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIDutyCycleLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIDutyCycleLogicLvlBehavior(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIDutyCycleLogicLvlBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4793</i>
	 */
	// int DAQmxResetCIDutyCycleLogicLvlBehavior(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_DutyCycle_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIDutyCycleDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4795</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIDutyCycleDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetCIDutyCycleDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIDutyCycleDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_DutyCycle_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIDutyCycleDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4795</i>
	 */
	// int DAQmxGetCIDutyCycleDigFltrEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIDutyCycleDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4796</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIDutyCycleDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetCIDutyCycleDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIDutyCycleDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIDutyCycleDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4796</i>
	 */
	// int DAQmxSetCIDutyCycleDigFltrEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIDutyCycleDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4797</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIDutyCycleDigFltrEnable(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIDutyCycleDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIDutyCycleDigFltrEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIDutyCycleDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4797</i>
	 */
	// int DAQmxResetCIDutyCycleDigFltrEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_DutyCycle_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCIDutyCycleDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4799</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIDutyCycleDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetCIDutyCycleDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIDutyCycleDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_DutyCycle_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCIDutyCycleDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4799</i>
	 */
	// int DAQmxGetCIDutyCycleDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIDutyCycleDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4800</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIDutyCycleDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetCIDutyCycleDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIDutyCycleDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIDutyCycleDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4800</i>
	 */
	// int DAQmxSetCIDutyCycleDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIDutyCycleDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4801</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIDutyCycleDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIDutyCycleDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIDutyCycleDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIDutyCycleDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4801</i>
	 */
	// int DAQmxResetCIDutyCycleDigFltrMinPulseWidth(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_DutyCycle_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCIDutyCycleDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4803</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIDutyCycleDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetCIDutyCycleDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIDutyCycleDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_DutyCycle_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCIDutyCycleDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4803</i>
	 */
	// int DAQmxGetCIDutyCycleDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCIDutyCycleDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4804</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIDutyCycleDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #DAQmxSetCIDutyCycleDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIDutyCycleDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIDutyCycleDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4804</i>
	 */
	// int DAQmxSetCIDutyCycleDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIDutyCycleDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4805</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIDutyCycleDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIDutyCycleDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIDutyCycleDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIDutyCycleDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4805</i>
	 */
	// int DAQmxResetCIDutyCycleDigFltrTimebaseSrc(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_DutyCycle_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCIDutyCycleDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4807</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIDutyCycleDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetCIDutyCycleDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIDutyCycleDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_DutyCycle_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCIDutyCycleDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4807</i>
	 */
	// int DAQmxGetCIDutyCycleDigFltrTimebaseRate(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIDutyCycleDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4808</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIDutyCycleDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetCIDutyCycleDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIDutyCycleDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIDutyCycleDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4808</i>
	 */
	// int DAQmxSetCIDutyCycleDigFltrTimebaseRate(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIDutyCycleDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4809</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIDutyCycleDigFltrTimebaseRate(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIDutyCycleDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIDutyCycleDigFltrTimebaseRate(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIDutyCycleDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4809</i>
	 */
	// int DAQmxResetCIDutyCycleDigFltrTimebaseRate(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetCIDutyCycleStartingEdge(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4812</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIDutyCycleStartingEdge(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCIDutyCycleStartingEdge(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIDutyCycleStartingEdge(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetCIDutyCycleStartingEdge(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4812</i>
	 */
	// int DAQmxGetCIDutyCycleStartingEdge(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIDutyCycleStartingEdge(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4813</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIDutyCycleStartingEdge(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCIDutyCycleStartingEdge(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIDutyCycleStartingEdge(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIDutyCycleStartingEdge(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4813</i>
	 */
	// int DAQmxSetCIDutyCycleStartingEdge(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIDutyCycleStartingEdge(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4814</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIDutyCycleStartingEdge(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIDutyCycleStartingEdge(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIDutyCycleStartingEdge(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIDutyCycleStartingEdge(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4814</i>
	 */
	// int DAQmxResetCIDutyCycleStartingEdge(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set AngleUnits2<br>
	 * Original signature : <code>int32 DAQmxGetCIAngEncoderUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4817</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIAngEncoderUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCIAngEncoderUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIAngEncoderUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set AngleUnits2<br>
	 * Original signature : <code>int32 DAQmxGetCIAngEncoderUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4817</i>
	 */
	// int DAQmxGetCIAngEncoderUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIAngEncoderUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4818</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIAngEncoderUnits(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCIAngEncoderUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIAngEncoderUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIAngEncoderUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4818</i>
	 */
	// int DAQmxSetCIAngEncoderUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIAngEncoderUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4819</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIAngEncoderUnits(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIAngEncoderUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIAngEncoderUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIAngEncoderUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4819</i>
	 */
	// int DAQmxResetCIAngEncoderUnits(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_AngEncoder_PulsesPerRev ***<br>
	 * Original signature : <code>int32 DAQmxGetCIAngEncoderPulsesPerRev(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 4821</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIAngEncoderPulsesPerRev(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetCIAngEncoderPulsesPerRev(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIAngEncoderPulsesPerRev(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_AngEncoder_PulsesPerRev ***<br>
	 * Original signature : <code>int32 DAQmxGetCIAngEncoderPulsesPerRev(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 4821</i>
	 */
	// int DAQmxGetCIAngEncoderPulsesPerRev(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIAngEncoderPulsesPerRev(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 4822</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIAngEncoderPulsesPerRev(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetCIAngEncoderPulsesPerRev(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIAngEncoderPulsesPerRev(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIAngEncoderPulsesPerRev(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 4822</i>
	 */
	// int DAQmxSetCIAngEncoderPulsesPerRev(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIAngEncoderPulsesPerRev(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4823</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIAngEncoderPulsesPerRev(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIAngEncoderPulsesPerRev(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIAngEncoderPulsesPerRev(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIAngEncoderPulsesPerRev(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4823</i>
	 */
	// int DAQmxResetCIAngEncoderPulsesPerRev(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_AngEncoder_InitialAngle ***<br>
	 * Original signature : <code>int32 DAQmxGetCIAngEncoderInitialAngle(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4825</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIAngEncoderInitialAngle(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetCIAngEncoderInitialAngle(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIAngEncoderInitialAngle(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_AngEncoder_InitialAngle ***<br>
	 * Original signature : <code>int32 DAQmxGetCIAngEncoderInitialAngle(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4825</i>
	 */
	// int DAQmxGetCIAngEncoderInitialAngle(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIAngEncoderInitialAngle(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4826</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIAngEncoderInitialAngle(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetCIAngEncoderInitialAngle(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIAngEncoderInitialAngle(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIAngEncoderInitialAngle(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4826</i>
	 */
	// int DAQmxSetCIAngEncoderInitialAngle(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIAngEncoderInitialAngle(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4827</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIAngEncoderInitialAngle(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIAngEncoderInitialAngle(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIAngEncoderInitialAngle(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIAngEncoderInitialAngle(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4827</i>
	 */
	// int DAQmxResetCIAngEncoderInitialAngle(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set LengthUnits3<br>
	 * Original signature : <code>int32 DAQmxGetCILinEncoderUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4830</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCILinEncoderUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCILinEncoderUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCILinEncoderUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set LengthUnits3<br>
	 * Original signature : <code>int32 DAQmxGetCILinEncoderUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4830</i>
	 */
	// int DAQmxGetCILinEncoderUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCILinEncoderUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4831</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCILinEncoderUnits(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCILinEncoderUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCILinEncoderUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCILinEncoderUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4831</i>
	 */
	// int DAQmxSetCILinEncoderUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCILinEncoderUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4832</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCILinEncoderUnits(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCILinEncoderUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCILinEncoderUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCILinEncoderUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4832</i>
	 */
	// int DAQmxResetCILinEncoderUnits(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_LinEncoder_DistPerPulse ***<br>
	 * Original signature : <code>int32 DAQmxGetCILinEncoderDistPerPulse(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4834</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCILinEncoderDistPerPulse(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetCILinEncoderDistPerPulse(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCILinEncoderDistPerPulse(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_LinEncoder_DistPerPulse ***<br>
	 * Original signature : <code>int32 DAQmxGetCILinEncoderDistPerPulse(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4834</i>
	 */
	// int DAQmxGetCILinEncoderDistPerPulse(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCILinEncoderDistPerPulse(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4835</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCILinEncoderDistPerPulse(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetCILinEncoderDistPerPulse(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetCILinEncoderDistPerPulse(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCILinEncoderDistPerPulse(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4835</i>
	 */
	// int DAQmxSetCILinEncoderDistPerPulse(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCILinEncoderDistPerPulse(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4836</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCILinEncoderDistPerPulse(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCILinEncoderDistPerPulse(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCILinEncoderDistPerPulse(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCILinEncoderDistPerPulse(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4836</i>
	 */
	// int DAQmxResetCILinEncoderDistPerPulse(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_LinEncoder_InitialPos ***<br>
	 * Original signature : <code>int32 DAQmxGetCILinEncoderInitialPos(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4838</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCILinEncoderInitialPos(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetCILinEncoderInitialPos(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCILinEncoderInitialPos(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_LinEncoder_InitialPos ***<br>
	 * Original signature : <code>int32 DAQmxGetCILinEncoderInitialPos(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4838</i>
	 */
	// int DAQmxGetCILinEncoderInitialPos(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCILinEncoderInitialPos(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4839</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCILinEncoderInitialPos(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetCILinEncoderInitialPos(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetCILinEncoderInitialPos(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCILinEncoderInitialPos(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4839</i>
	 */
	// int DAQmxSetCILinEncoderInitialPos(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCILinEncoderInitialPos(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4840</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCILinEncoderInitialPos(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCILinEncoderInitialPos(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCILinEncoderInitialPos(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCILinEncoderInitialPos(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4840</i>
	 */
	// int DAQmxResetCILinEncoderInitialPos(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set EncoderType2<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderDecodingType(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4843</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIEncoderDecodingType(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCIEncoderDecodingType(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIEncoderDecodingType(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set EncoderType2<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderDecodingType(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4843</i>
	 */
	// int DAQmxGetCIEncoderDecodingType(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderDecodingType(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4844</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIEncoderDecodingType(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCIEncoderDecodingType(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIEncoderDecodingType(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderDecodingType(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4844</i>
	 */
	// int DAQmxSetCIEncoderDecodingType(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderDecodingType(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4845</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIEncoderDecodingType(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIEncoderDecodingType(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIEncoderDecodingType(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderDecodingType(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4845</i>
	 */
	// int DAQmxResetCIEncoderDecodingType(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Encoder_AInputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderAInputTerm(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4847</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIEncoderAInputTerm(com.sun.jna.Pointer, byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetCIEncoderAInputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIEncoderAInputTerm(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_Encoder_AInputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderAInputTerm(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4847</i>
	 */
	// int DAQmxGetCIEncoderAInputTerm(Pointer taskHandle, byte channel[], ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderAInputTerm(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4848</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIEncoderAInputTerm(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #DAQmxSetCIEncoderAInputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIEncoderAInputTerm(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderAInputTerm(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4848</i>
	 */
	// int DAQmxSetCIEncoderAInputTerm(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderAInputTerm(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4849</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIEncoderAInputTerm(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIEncoderAInputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIEncoderAInputTerm(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderAInputTerm(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4849</i>
	 */
	// int DAQmxResetCIEncoderAInputTerm(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set InputTermCfg2<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderAInputTermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4852</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIEncoderAInputTermCfg(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCIEncoderAInputTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIEncoderAInputTermCfg(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set InputTermCfg2<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderAInputTermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4852</i>
	 */
	// int DAQmxGetCIEncoderAInputTermCfg(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderAInputTermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4853</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIEncoderAInputTermCfg(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCIEncoderAInputTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIEncoderAInputTermCfg(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderAInputTermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4853</i>
	 */
	// int DAQmxSetCIEncoderAInputTermCfg(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderAInputTermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4854</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIEncoderAInputTermCfg(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIEncoderAInputTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIEncoderAInputTermCfg(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderAInputTermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4854</i>
	 */
	// int DAQmxResetCIEncoderAInputTermCfg(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set LogicLvlBehavior<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderAInputLogicLvlBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4857</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIEncoderAInputLogicLvlBehavior(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCIEncoderAInputLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIEncoderAInputLogicLvlBehavior(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set LogicLvlBehavior<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderAInputLogicLvlBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4857</i>
	 */
	// int DAQmxGetCIEncoderAInputLogicLvlBehavior(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderAInputLogicLvlBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4858</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIEncoderAInputLogicLvlBehavior(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCIEncoderAInputLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIEncoderAInputLogicLvlBehavior(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderAInputLogicLvlBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4858</i>
	 */
	// int DAQmxSetCIEncoderAInputLogicLvlBehavior(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderAInputLogicLvlBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4859</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIEncoderAInputLogicLvlBehavior(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIEncoderAInputLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIEncoderAInputLogicLvlBehavior(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderAInputLogicLvlBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4859</i>
	 */
	// int DAQmxResetCIEncoderAInputLogicLvlBehavior(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Encoder_AInput_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderAInputDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4861</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIEncoderAInputDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetCIEncoderAInputDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIEncoderAInputDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Encoder_AInput_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderAInputDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4861</i>
	 */
	// int DAQmxGetCIEncoderAInputDigFltrEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderAInputDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4862</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIEncoderAInputDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetCIEncoderAInputDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIEncoderAInputDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderAInputDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4862</i>
	 */
	// int DAQmxSetCIEncoderAInputDigFltrEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderAInputDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4863</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIEncoderAInputDigFltrEnable(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIEncoderAInputDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIEncoderAInputDigFltrEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderAInputDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4863</i>
	 */
	// int DAQmxResetCIEncoderAInputDigFltrEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Encoder_AInput_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderAInputDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4865</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIEncoderAInputDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetCIEncoderAInputDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIEncoderAInputDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Encoder_AInput_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderAInputDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4865</i>
	 */
	// int DAQmxGetCIEncoderAInputDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderAInputDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4866</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIEncoderAInputDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetCIEncoderAInputDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIEncoderAInputDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderAInputDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4866</i>
	 */
	// int DAQmxSetCIEncoderAInputDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderAInputDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4867</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIEncoderAInputDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIEncoderAInputDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIEncoderAInputDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderAInputDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4867</i>
	 */
	// int DAQmxResetCIEncoderAInputDigFltrMinPulseWidth(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Encoder_AInput_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderAInputDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4869</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIEncoderAInputDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetCIEncoderAInputDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIEncoderAInputDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_Encoder_AInput_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderAInputDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4869</i>
	 */
	// int DAQmxGetCIEncoderAInputDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderAInputDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4870</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIEncoderAInputDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #DAQmxSetCIEncoderAInputDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIEncoderAInputDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderAInputDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4870</i>
	 */
	// int DAQmxSetCIEncoderAInputDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderAInputDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4871</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIEncoderAInputDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIEncoderAInputDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIEncoderAInputDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderAInputDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4871</i>
	 */
	// int DAQmxResetCIEncoderAInputDigFltrTimebaseSrc(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Encoder_AInput_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderAInputDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4873</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIEncoderAInputDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetCIEncoderAInputDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIEncoderAInputDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Encoder_AInput_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderAInputDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4873</i>
	 */
	// int DAQmxGetCIEncoderAInputDigFltrTimebaseRate(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderAInputDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4874</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIEncoderAInputDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetCIEncoderAInputDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIEncoderAInputDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderAInputDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4874</i>
	 */
	// int DAQmxSetCIEncoderAInputDigFltrTimebaseRate(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderAInputDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4875</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIEncoderAInputDigFltrTimebaseRate(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIEncoderAInputDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIEncoderAInputDigFltrTimebaseRate(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderAInputDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4875</i>
	 */
	// int DAQmxResetCIEncoderAInputDigFltrTimebaseRate(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Encoder_AInput_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderAInputDigSyncEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4877</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIEncoderAInputDigSyncEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetCIEncoderAInputDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIEncoderAInputDigSyncEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Encoder_AInput_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderAInputDigSyncEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4877</i>
	 */
	// int DAQmxGetCIEncoderAInputDigSyncEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderAInputDigSyncEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4878</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIEncoderAInputDigSyncEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetCIEncoderAInputDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIEncoderAInputDigSyncEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderAInputDigSyncEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4878</i>
	 */
	// int DAQmxSetCIEncoderAInputDigSyncEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderAInputDigSyncEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4879</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIEncoderAInputDigSyncEnable(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIEncoderAInputDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIEncoderAInputDigSyncEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderAInputDigSyncEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4879</i>
	 */
	// int DAQmxResetCIEncoderAInputDigSyncEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Encoder_BInputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderBInputTerm(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4881</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIEncoderBInputTerm(com.sun.jna.Pointer, byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetCIEncoderBInputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIEncoderBInputTerm(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_Encoder_BInputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderBInputTerm(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4881</i>
	 */
	// int DAQmxGetCIEncoderBInputTerm(Pointer taskHandle, byte channel[], ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderBInputTerm(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4882</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIEncoderBInputTerm(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #DAQmxSetCIEncoderBInputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIEncoderBInputTerm(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderBInputTerm(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4882</i>
	 */
	// int DAQmxSetCIEncoderBInputTerm(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderBInputTerm(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4883</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIEncoderBInputTerm(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIEncoderBInputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIEncoderBInputTerm(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderBInputTerm(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4883</i>
	 */
	// int DAQmxResetCIEncoderBInputTerm(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set InputTermCfg2<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderBInputTermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4886</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIEncoderBInputTermCfg(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCIEncoderBInputTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIEncoderBInputTermCfg(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set InputTermCfg2<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderBInputTermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4886</i>
	 */
	// int DAQmxGetCIEncoderBInputTermCfg(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderBInputTermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4887</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIEncoderBInputTermCfg(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCIEncoderBInputTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIEncoderBInputTermCfg(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderBInputTermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4887</i>
	 */
	// int DAQmxSetCIEncoderBInputTermCfg(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderBInputTermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4888</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIEncoderBInputTermCfg(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIEncoderBInputTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIEncoderBInputTermCfg(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderBInputTermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4888</i>
	 */
	// int DAQmxResetCIEncoderBInputTermCfg(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set LogicLvlBehavior<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderBInputLogicLvlBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4891</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIEncoderBInputLogicLvlBehavior(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCIEncoderBInputLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIEncoderBInputLogicLvlBehavior(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set LogicLvlBehavior<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderBInputLogicLvlBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4891</i>
	 */
	// int DAQmxGetCIEncoderBInputLogicLvlBehavior(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderBInputLogicLvlBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4892</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIEncoderBInputLogicLvlBehavior(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCIEncoderBInputLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIEncoderBInputLogicLvlBehavior(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderBInputLogicLvlBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4892</i>
	 */
	// int DAQmxSetCIEncoderBInputLogicLvlBehavior(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderBInputLogicLvlBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4893</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIEncoderBInputLogicLvlBehavior(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIEncoderBInputLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIEncoderBInputLogicLvlBehavior(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderBInputLogicLvlBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4893</i>
	 */
	// int DAQmxResetCIEncoderBInputLogicLvlBehavior(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Encoder_BInput_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderBInputDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4895</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIEncoderBInputDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetCIEncoderBInputDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIEncoderBInputDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Encoder_BInput_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderBInputDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4895</i>
	 */
	// int DAQmxGetCIEncoderBInputDigFltrEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderBInputDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4896</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIEncoderBInputDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetCIEncoderBInputDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIEncoderBInputDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderBInputDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4896</i>
	 */
	// int DAQmxSetCIEncoderBInputDigFltrEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderBInputDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4897</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIEncoderBInputDigFltrEnable(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIEncoderBInputDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIEncoderBInputDigFltrEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderBInputDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4897</i>
	 */
	// int DAQmxResetCIEncoderBInputDigFltrEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Encoder_BInput_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderBInputDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4899</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIEncoderBInputDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetCIEncoderBInputDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIEncoderBInputDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Encoder_BInput_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderBInputDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4899</i>
	 */
	// int DAQmxGetCIEncoderBInputDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderBInputDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4900</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIEncoderBInputDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetCIEncoderBInputDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIEncoderBInputDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderBInputDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4900</i>
	 */
	// int DAQmxSetCIEncoderBInputDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderBInputDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4901</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIEncoderBInputDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIEncoderBInputDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIEncoderBInputDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderBInputDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4901</i>
	 */
	// int DAQmxResetCIEncoderBInputDigFltrMinPulseWidth(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Encoder_BInput_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderBInputDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4903</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIEncoderBInputDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetCIEncoderBInputDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIEncoderBInputDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_Encoder_BInput_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderBInputDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4903</i>
	 */
	// int DAQmxGetCIEncoderBInputDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderBInputDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4904</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIEncoderBInputDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #DAQmxSetCIEncoderBInputDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIEncoderBInputDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderBInputDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4904</i>
	 */
	// int DAQmxSetCIEncoderBInputDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderBInputDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4905</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIEncoderBInputDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIEncoderBInputDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIEncoderBInputDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderBInputDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4905</i>
	 */
	// int DAQmxResetCIEncoderBInputDigFltrTimebaseSrc(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Encoder_BInput_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderBInputDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4907</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIEncoderBInputDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetCIEncoderBInputDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIEncoderBInputDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Encoder_BInput_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderBInputDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4907</i>
	 */
	// int DAQmxGetCIEncoderBInputDigFltrTimebaseRate(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderBInputDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4908</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIEncoderBInputDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetCIEncoderBInputDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIEncoderBInputDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderBInputDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4908</i>
	 */
	// int DAQmxSetCIEncoderBInputDigFltrTimebaseRate(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderBInputDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4909</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIEncoderBInputDigFltrTimebaseRate(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIEncoderBInputDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIEncoderBInputDigFltrTimebaseRate(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderBInputDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4909</i>
	 */
	// int DAQmxResetCIEncoderBInputDigFltrTimebaseRate(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Encoder_BInput_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderBInputDigSyncEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4911</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIEncoderBInputDigSyncEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetCIEncoderBInputDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIEncoderBInputDigSyncEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Encoder_BInput_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderBInputDigSyncEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4911</i>
	 */
	// int DAQmxGetCIEncoderBInputDigSyncEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderBInputDigSyncEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4912</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIEncoderBInputDigSyncEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetCIEncoderBInputDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIEncoderBInputDigSyncEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderBInputDigSyncEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4912</i>
	 */
	// int DAQmxSetCIEncoderBInputDigSyncEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderBInputDigSyncEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4913</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIEncoderBInputDigSyncEnable(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIEncoderBInputDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIEncoderBInputDigSyncEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderBInputDigSyncEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4913</i>
	 */
	// int DAQmxResetCIEncoderBInputDigSyncEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Encoder_ZInputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderZInputTerm(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4915</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIEncoderZInputTerm(com.sun.jna.Pointer, byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetCIEncoderZInputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIEncoderZInputTerm(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_Encoder_ZInputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderZInputTerm(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4915</i>
	 */
	// int DAQmxGetCIEncoderZInputTerm(Pointer taskHandle, byte channel[], ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderZInputTerm(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4916</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIEncoderZInputTerm(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #DAQmxSetCIEncoderZInputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIEncoderZInputTerm(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderZInputTerm(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4916</i>
	 */
	// int DAQmxSetCIEncoderZInputTerm(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderZInputTerm(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4917</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIEncoderZInputTerm(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIEncoderZInputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIEncoderZInputTerm(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderZInputTerm(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4917</i>
	 */
	// int DAQmxResetCIEncoderZInputTerm(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set InputTermCfg2<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderZInputTermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4920</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIEncoderZInputTermCfg(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCIEncoderZInputTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIEncoderZInputTermCfg(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set InputTermCfg2<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderZInputTermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4920</i>
	 */
	// int DAQmxGetCIEncoderZInputTermCfg(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderZInputTermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4921</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIEncoderZInputTermCfg(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCIEncoderZInputTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIEncoderZInputTermCfg(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderZInputTermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4921</i>
	 */
	// int DAQmxSetCIEncoderZInputTermCfg(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderZInputTermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4922</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIEncoderZInputTermCfg(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIEncoderZInputTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIEncoderZInputTermCfg(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderZInputTermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4922</i>
	 */
	// int DAQmxResetCIEncoderZInputTermCfg(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set LogicLvlBehavior<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderZInputLogicLvlBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4925</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIEncoderZInputLogicLvlBehavior(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCIEncoderZInputLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIEncoderZInputLogicLvlBehavior(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set LogicLvlBehavior<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderZInputLogicLvlBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4925</i>
	 */
	// int DAQmxGetCIEncoderZInputLogicLvlBehavior(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderZInputLogicLvlBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4926</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIEncoderZInputLogicLvlBehavior(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCIEncoderZInputLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIEncoderZInputLogicLvlBehavior(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderZInputLogicLvlBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4926</i>
	 */
	// int DAQmxSetCIEncoderZInputLogicLvlBehavior(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderZInputLogicLvlBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4927</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIEncoderZInputLogicLvlBehavior(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIEncoderZInputLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIEncoderZInputLogicLvlBehavior(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderZInputLogicLvlBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4927</i>
	 */
	// int DAQmxResetCIEncoderZInputLogicLvlBehavior(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Encoder_ZInput_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderZInputDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4929</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIEncoderZInputDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetCIEncoderZInputDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIEncoderZInputDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Encoder_ZInput_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderZInputDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4929</i>
	 */
	// int DAQmxGetCIEncoderZInputDigFltrEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderZInputDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4930</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIEncoderZInputDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetCIEncoderZInputDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIEncoderZInputDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderZInputDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4930</i>
	 */
	// int DAQmxSetCIEncoderZInputDigFltrEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderZInputDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4931</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIEncoderZInputDigFltrEnable(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIEncoderZInputDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIEncoderZInputDigFltrEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderZInputDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4931</i>
	 */
	// int DAQmxResetCIEncoderZInputDigFltrEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Encoder_ZInput_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderZInputDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4933</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIEncoderZInputDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetCIEncoderZInputDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIEncoderZInputDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Encoder_ZInput_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderZInputDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4933</i>
	 */
	// int DAQmxGetCIEncoderZInputDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderZInputDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4934</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIEncoderZInputDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetCIEncoderZInputDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIEncoderZInputDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderZInputDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4934</i>
	 */
	// int DAQmxSetCIEncoderZInputDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderZInputDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4935</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIEncoderZInputDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIEncoderZInputDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIEncoderZInputDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderZInputDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4935</i>
	 */
	// int DAQmxResetCIEncoderZInputDigFltrMinPulseWidth(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Encoder_ZInput_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderZInputDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4937</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIEncoderZInputDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetCIEncoderZInputDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIEncoderZInputDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_Encoder_ZInput_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderZInputDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4937</i>
	 */
	// int DAQmxGetCIEncoderZInputDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderZInputDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4938</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIEncoderZInputDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #DAQmxSetCIEncoderZInputDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIEncoderZInputDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderZInputDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4938</i>
	 */
	// int DAQmxSetCIEncoderZInputDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderZInputDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4939</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIEncoderZInputDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIEncoderZInputDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIEncoderZInputDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderZInputDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4939</i>
	 */
	// int DAQmxResetCIEncoderZInputDigFltrTimebaseSrc(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Encoder_ZInput_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderZInputDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4941</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIEncoderZInputDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetCIEncoderZInputDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIEncoderZInputDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Encoder_ZInput_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderZInputDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4941</i>
	 */
	// int DAQmxGetCIEncoderZInputDigFltrTimebaseRate(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderZInputDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4942</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIEncoderZInputDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetCIEncoderZInputDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIEncoderZInputDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderZInputDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4942</i>
	 */
	// int DAQmxSetCIEncoderZInputDigFltrTimebaseRate(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderZInputDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4943</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIEncoderZInputDigFltrTimebaseRate(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIEncoderZInputDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIEncoderZInputDigFltrTimebaseRate(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderZInputDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4943</i>
	 */
	// int DAQmxResetCIEncoderZInputDigFltrTimebaseRate(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Encoder_ZInput_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderZInputDigSyncEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4945</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIEncoderZInputDigSyncEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetCIEncoderZInputDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIEncoderZInputDigSyncEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Encoder_ZInput_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderZInputDigSyncEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4945</i>
	 */
	// int DAQmxGetCIEncoderZInputDigSyncEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderZInputDigSyncEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4946</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIEncoderZInputDigSyncEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetCIEncoderZInputDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIEncoderZInputDigSyncEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderZInputDigSyncEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4946</i>
	 */
	// int DAQmxSetCIEncoderZInputDigSyncEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderZInputDigSyncEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4947</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIEncoderZInputDigSyncEnable(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIEncoderZInputDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIEncoderZInputDigSyncEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderZInputDigSyncEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4947</i>
	 */
	// int DAQmxResetCIEncoderZInputDigSyncEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Encoder_ZIndexEnable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderZIndexEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4949</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIEncoderZIndexEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetCIEncoderZIndexEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIEncoderZIndexEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Encoder_ZIndexEnable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderZIndexEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4949</i>
	 */
	// int DAQmxGetCIEncoderZIndexEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderZIndexEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4950</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIEncoderZIndexEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetCIEncoderZIndexEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIEncoderZIndexEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderZIndexEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4950</i>
	 */
	// int DAQmxSetCIEncoderZIndexEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderZIndexEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4951</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIEncoderZIndexEnable(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIEncoderZIndexEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIEncoderZIndexEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderZIndexEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4951</i>
	 */
	// int DAQmxResetCIEncoderZIndexEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Encoder_ZIndexVal ***<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderZIndexVal(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4953</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIEncoderZIndexVal(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetCIEncoderZIndexVal(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIEncoderZIndexVal(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Encoder_ZIndexVal ***<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderZIndexVal(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4953</i>
	 */
	// int DAQmxGetCIEncoderZIndexVal(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderZIndexVal(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4954</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIEncoderZIndexVal(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetCIEncoderZIndexVal(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIEncoderZIndexVal(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderZIndexVal(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4954</i>
	 */
	// int DAQmxSetCIEncoderZIndexVal(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderZIndexVal(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4955</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIEncoderZIndexVal(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIEncoderZIndexVal(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIEncoderZIndexVal(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderZIndexVal(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4955</i>
	 */
	// int DAQmxResetCIEncoderZIndexVal(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set EncoderZIndexPhase1<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderZIndexPhase(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4958</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIEncoderZIndexPhase(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCIEncoderZIndexPhase(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIEncoderZIndexPhase(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set EncoderZIndexPhase1<br>
	 * Original signature : <code>int32 DAQmxGetCIEncoderZIndexPhase(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4958</i>
	 */
	// int DAQmxGetCIEncoderZIndexPhase(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderZIndexPhase(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4959</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIEncoderZIndexPhase(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCIEncoderZIndexPhase(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIEncoderZIndexPhase(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIEncoderZIndexPhase(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4959</i>
	 */
	// int DAQmxSetCIEncoderZIndexPhase(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderZIndexPhase(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4960</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIEncoderZIndexPhase(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIEncoderZIndexPhase(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIEncoderZIndexPhase(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIEncoderZIndexPhase(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4960</i>
	 */
	// int DAQmxResetCIEncoderZIndexPhase(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set TimeUnits3<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseWidthUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4963</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIPulseWidthUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCIPulseWidthUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIPulseWidthUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set TimeUnits3<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseWidthUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4963</i>
	 */
	// int DAQmxGetCIPulseWidthUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseWidthUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4964</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIPulseWidthUnits(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCIPulseWidthUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIPulseWidthUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseWidthUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4964</i>
	 */
	// int DAQmxSetCIPulseWidthUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseWidthUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4965</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIPulseWidthUnits(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIPulseWidthUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIPulseWidthUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseWidthUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4965</i>
	 */
	// int DAQmxResetCIPulseWidthUnits(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_PulseWidth_Term ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseWidthTerm(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4967</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIPulseWidthTerm(com.sun.jna.Pointer, byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetCIPulseWidthTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIPulseWidthTerm(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_PulseWidth_Term ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseWidthTerm(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4967</i>
	 */
	// int DAQmxGetCIPulseWidthTerm(Pointer taskHandle, byte channel[], ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseWidthTerm(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4968</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIPulseWidthTerm(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #DAQmxSetCIPulseWidthTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIPulseWidthTerm(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseWidthTerm(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4968</i>
	 */
	// int DAQmxSetCIPulseWidthTerm(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseWidthTerm(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4969</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIPulseWidthTerm(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIPulseWidthTerm(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIPulseWidthTerm(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseWidthTerm(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4969</i>
	 */
	// int DAQmxResetCIPulseWidthTerm(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set InputTermCfg2<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseWidthTermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4972</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIPulseWidthTermCfg(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCIPulseWidthTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIPulseWidthTermCfg(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set InputTermCfg2<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseWidthTermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4972</i>
	 */
	// int DAQmxGetCIPulseWidthTermCfg(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseWidthTermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4973</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIPulseWidthTermCfg(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCIPulseWidthTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIPulseWidthTermCfg(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseWidthTermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4973</i>
	 */
	// int DAQmxSetCIPulseWidthTermCfg(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseWidthTermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4974</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIPulseWidthTermCfg(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIPulseWidthTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIPulseWidthTermCfg(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseWidthTermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4974</i>
	 */
	// int DAQmxResetCIPulseWidthTermCfg(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set LogicLvlBehavior<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseWidthLogicLvlBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4977</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIPulseWidthLogicLvlBehavior(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCIPulseWidthLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIPulseWidthLogicLvlBehavior(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set LogicLvlBehavior<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseWidthLogicLvlBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 4977</i>
	 */
	// int DAQmxGetCIPulseWidthLogicLvlBehavior(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseWidthLogicLvlBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4978</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIPulseWidthLogicLvlBehavior(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCIPulseWidthLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIPulseWidthLogicLvlBehavior(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseWidthLogicLvlBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 4978</i>
	 */
	// int DAQmxSetCIPulseWidthLogicLvlBehavior(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseWidthLogicLvlBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4979</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIPulseWidthLogicLvlBehavior(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIPulseWidthLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIPulseWidthLogicLvlBehavior(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseWidthLogicLvlBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4979</i>
	 */
	// int DAQmxResetCIPulseWidthLogicLvlBehavior(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_PulseWidth_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseWidthDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4981</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIPulseWidthDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetCIPulseWidthDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIPulseWidthDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_PulseWidth_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseWidthDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4981</i>
	 */
	// int DAQmxGetCIPulseWidthDigFltrEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseWidthDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4982</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIPulseWidthDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetCIPulseWidthDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIPulseWidthDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseWidthDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4982</i>
	 */
	// int DAQmxSetCIPulseWidthDigFltrEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseWidthDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4983</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIPulseWidthDigFltrEnable(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIPulseWidthDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIPulseWidthDigFltrEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseWidthDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4983</i>
	 */
	// int DAQmxResetCIPulseWidthDigFltrEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_PulseWidth_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseWidthDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4985</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIPulseWidthDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetCIPulseWidthDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIPulseWidthDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_PulseWidth_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseWidthDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4985</i>
	 */
	// int DAQmxGetCIPulseWidthDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseWidthDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4986</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIPulseWidthDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetCIPulseWidthDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIPulseWidthDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseWidthDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4986</i>
	 */
	// int DAQmxSetCIPulseWidthDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseWidthDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4987</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIPulseWidthDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIPulseWidthDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIPulseWidthDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseWidthDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4987</i>
	 */
	// int DAQmxResetCIPulseWidthDigFltrMinPulseWidth(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_PulseWidth_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseWidthDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4989</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIPulseWidthDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetCIPulseWidthDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIPulseWidthDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_PulseWidth_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseWidthDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 4989</i>
	 */
	// int DAQmxGetCIPulseWidthDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseWidthDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4990</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIPulseWidthDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #DAQmxSetCIPulseWidthDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIPulseWidthDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseWidthDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 4990</i>
	 */
	// int DAQmxSetCIPulseWidthDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseWidthDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4991</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIPulseWidthDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIPulseWidthDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIPulseWidthDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseWidthDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4991</i>
	 */
	// int DAQmxResetCIPulseWidthDigFltrTimebaseSrc(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_PulseWidth_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseWidthDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4993</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIPulseWidthDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetCIPulseWidthDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIPulseWidthDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_PulseWidth_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseWidthDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 4993</i>
	 */
	// int DAQmxGetCIPulseWidthDigFltrTimebaseRate(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseWidthDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4994</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIPulseWidthDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetCIPulseWidthDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIPulseWidthDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseWidthDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 4994</i>
	 */
	// int DAQmxSetCIPulseWidthDigFltrTimebaseRate(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseWidthDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4995</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIPulseWidthDigFltrTimebaseRate(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIPulseWidthDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIPulseWidthDigFltrTimebaseRate(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseWidthDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4995</i>
	 */
	// int DAQmxResetCIPulseWidthDigFltrTimebaseRate(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_PulseWidth_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseWidthDigSyncEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4997</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIPulseWidthDigSyncEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetCIPulseWidthDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIPulseWidthDigSyncEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_PulseWidth_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseWidthDigSyncEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 4997</i>
	 */
	// int DAQmxGetCIPulseWidthDigSyncEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseWidthDigSyncEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4998</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIPulseWidthDigSyncEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetCIPulseWidthDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIPulseWidthDigSyncEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseWidthDigSyncEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 4998</i>
	 */
	// int DAQmxSetCIPulseWidthDigSyncEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseWidthDigSyncEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4999</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIPulseWidthDigSyncEnable(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIPulseWidthDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIPulseWidthDigSyncEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseWidthDigSyncEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 4999</i>
	 */
	// int DAQmxResetCIPulseWidthDigSyncEnable(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseWidthStartingEdge(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5002</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIPulseWidthStartingEdge(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCIPulseWidthStartingEdge(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIPulseWidthStartingEdge(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseWidthStartingEdge(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5002</i>
	 */
	// int DAQmxGetCIPulseWidthStartingEdge(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseWidthStartingEdge(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5003</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIPulseWidthStartingEdge(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCIPulseWidthStartingEdge(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIPulseWidthStartingEdge(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseWidthStartingEdge(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5003</i>
	 */
	// int DAQmxSetCIPulseWidthStartingEdge(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseWidthStartingEdge(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5004</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIPulseWidthStartingEdge(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIPulseWidthStartingEdge(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIPulseWidthStartingEdge(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseWidthStartingEdge(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5004</i>
	 */
	// int DAQmxResetCIPulseWidthStartingEdge(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set TimeUnits<br>
	 * Original signature : <code>int32 DAQmxGetCITimestampUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5007</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCITimestampUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCITimestampUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCITimestampUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set TimeUnits<br>
	 * Original signature : <code>int32 DAQmxGetCITimestampUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5007</i>
	 */
	// int DAQmxGetCITimestampUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCITimestampUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5008</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCITimestampUnits(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCITimestampUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCITimestampUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCITimestampUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5008</i>
	 */
	// int DAQmxSetCITimestampUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCITimestampUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5009</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCITimestampUnits(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCITimestampUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCITimestampUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCITimestampUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5009</i>
	 */
	// int DAQmxResetCITimestampUnits(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Timestamp_InitialSeconds ***<br>
	 * Original signature : <code>int32 DAQmxGetCITimestampInitialSeconds(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5011</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCITimestampInitialSeconds(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetCITimestampInitialSeconds(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCITimestampInitialSeconds(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Timestamp_InitialSeconds ***<br>
	 * Original signature : <code>int32 DAQmxGetCITimestampInitialSeconds(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5011</i>
	 */
	// int DAQmxGetCITimestampInitialSeconds(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCITimestampInitialSeconds(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 5012</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCITimestampInitialSeconds(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetCITimestampInitialSeconds(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetCITimestampInitialSeconds(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCITimestampInitialSeconds(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 5012</i>
	 */
	// int DAQmxSetCITimestampInitialSeconds(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCITimestampInitialSeconds(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5013</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCITimestampInitialSeconds(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCITimestampInitialSeconds(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCITimestampInitialSeconds(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCITimestampInitialSeconds(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5013</i>
	 */
	// int DAQmxResetCITimestampInitialSeconds(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set GpsSignalType1<br>
	 * Original signature : <code>int32 DAQmxGetCIGPSSyncMethod(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5016</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIGPSSyncMethod(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCIGPSSyncMethod(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIGPSSyncMethod(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set GpsSignalType1<br>
	 * Original signature : <code>int32 DAQmxGetCIGPSSyncMethod(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5016</i>
	 */
	// int DAQmxGetCIGPSSyncMethod(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIGPSSyncMethod(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5017</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIGPSSyncMethod(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCIGPSSyncMethod(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIGPSSyncMethod(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIGPSSyncMethod(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5017</i>
	 */
	// int DAQmxSetCIGPSSyncMethod(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIGPSSyncMethod(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5018</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIGPSSyncMethod(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIGPSSyncMethod(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIGPSSyncMethod(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIGPSSyncMethod(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5018</i>
	 */
	// int DAQmxResetCIGPSSyncMethod(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_GPS_SyncSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCIGPSSyncSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5020</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIGPSSyncSrc(com.sun.jna.Pointer, byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetCIGPSSyncSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIGPSSyncSrc(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_GPS_SyncSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCIGPSSyncSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5020</i>
	 */
	// int DAQmxGetCIGPSSyncSrc(Pointer taskHandle, byte channel[], ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCIGPSSyncSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5021</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIGPSSyncSrc(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #DAQmxSetCIGPSSyncSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIGPSSyncSrc(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIGPSSyncSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5021</i>
	 */
	// int DAQmxSetCIGPSSyncSrc(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIGPSSyncSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5022</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIGPSSyncSrc(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIGPSSyncSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIGPSSyncSrc(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIGPSSyncSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5022</i>
	 */
	// int DAQmxResetCIGPSSyncSrc(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set AngularVelocityUnits<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityAngEncoderUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5025</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIVelocityAngEncoderUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCIVelocityAngEncoderUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIVelocityAngEncoderUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set AngularVelocityUnits<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityAngEncoderUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5025</i>
	 */
	// int DAQmxGetCIVelocityAngEncoderUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityAngEncoderUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5026</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIVelocityAngEncoderUnits(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCIVelocityAngEncoderUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIVelocityAngEncoderUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityAngEncoderUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5026</i>
	 */
	// int DAQmxSetCIVelocityAngEncoderUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityAngEncoderUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5027</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIVelocityAngEncoderUnits(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIVelocityAngEncoderUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIVelocityAngEncoderUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityAngEncoderUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5027</i>
	 */
	// int DAQmxResetCIVelocityAngEncoderUnits(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Velocity_AngEncoder_PulsesPerRev ***<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityAngEncoderPulsesPerRev(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5029</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIVelocityAngEncoderPulsesPerRev(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetCIVelocityAngEncoderPulsesPerRev(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIVelocityAngEncoderPulsesPerRev(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Velocity_AngEncoder_PulsesPerRev ***<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityAngEncoderPulsesPerRev(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5029</i>
	 */
	// int DAQmxGetCIVelocityAngEncoderPulsesPerRev(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityAngEncoderPulsesPerRev(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 5030</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIVelocityAngEncoderPulsesPerRev(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetCIVelocityAngEncoderPulsesPerRev(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIVelocityAngEncoderPulsesPerRev(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityAngEncoderPulsesPerRev(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 5030</i>
	 */
	// int DAQmxSetCIVelocityAngEncoderPulsesPerRev(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityAngEncoderPulsesPerRev(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5031</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIVelocityAngEncoderPulsesPerRev(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIVelocityAngEncoderPulsesPerRev(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIVelocityAngEncoderPulsesPerRev(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityAngEncoderPulsesPerRev(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5031</i>
	 */
	// int DAQmxResetCIVelocityAngEncoderPulsesPerRev(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set VelocityUnits<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityLinEncoderUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5034</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIVelocityLinEncoderUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCIVelocityLinEncoderUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIVelocityLinEncoderUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set VelocityUnits<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityLinEncoderUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5034</i>
	 */
	// int DAQmxGetCIVelocityLinEncoderUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityLinEncoderUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5035</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIVelocityLinEncoderUnits(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCIVelocityLinEncoderUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIVelocityLinEncoderUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityLinEncoderUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5035</i>
	 */
	// int DAQmxSetCIVelocityLinEncoderUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityLinEncoderUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5036</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIVelocityLinEncoderUnits(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIVelocityLinEncoderUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIVelocityLinEncoderUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityLinEncoderUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5036</i>
	 */
	// int DAQmxResetCIVelocityLinEncoderUnits(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Velocity_LinEncoder_DistPerPulse ***<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityLinEncoderDistPerPulse(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5038</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIVelocityLinEncoderDistPerPulse(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetCIVelocityLinEncoderDistPerPulse(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIVelocityLinEncoderDistPerPulse(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Velocity_LinEncoder_DistPerPulse ***<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityLinEncoderDistPerPulse(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5038</i>
	 */
	// int DAQmxGetCIVelocityLinEncoderDistPerPulse(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityLinEncoderDistPerPulse(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5039</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIVelocityLinEncoderDistPerPulse(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetCIVelocityLinEncoderDistPerPulse(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIVelocityLinEncoderDistPerPulse(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityLinEncoderDistPerPulse(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5039</i>
	 */
	// int DAQmxSetCIVelocityLinEncoderDistPerPulse(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityLinEncoderDistPerPulse(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5040</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIVelocityLinEncoderDistPerPulse(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIVelocityLinEncoderDistPerPulse(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIVelocityLinEncoderDistPerPulse(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityLinEncoderDistPerPulse(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5040</i>
	 */
	// int DAQmxResetCIVelocityLinEncoderDistPerPulse(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set EncoderType2<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityEncoderDecodingType(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5043</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIVelocityEncoderDecodingType(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCIVelocityEncoderDecodingType(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIVelocityEncoderDecodingType(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set EncoderType2<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityEncoderDecodingType(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5043</i>
	 */
	// int DAQmxGetCIVelocityEncoderDecodingType(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityEncoderDecodingType(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5044</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIVelocityEncoderDecodingType(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCIVelocityEncoderDecodingType(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIVelocityEncoderDecodingType(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityEncoderDecodingType(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5044</i>
	 */
	// int DAQmxSetCIVelocityEncoderDecodingType(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityEncoderDecodingType(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5045</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIVelocityEncoderDecodingType(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIVelocityEncoderDecodingType(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIVelocityEncoderDecodingType(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityEncoderDecodingType(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5045</i>
	 */
	// int DAQmxResetCIVelocityEncoderDecodingType(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Velocity_Encoder_AInputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityEncoderAInputTerm(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5047</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIVelocityEncoderAInputTerm(com.sun.jna.Pointer, byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetCIVelocityEncoderAInputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIVelocityEncoderAInputTerm(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_Velocity_Encoder_AInputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityEncoderAInputTerm(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5047</i>
	 */
	// int DAQmxGetCIVelocityEncoderAInputTerm(Pointer taskHandle, byte channel[], ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityEncoderAInputTerm(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5048</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIVelocityEncoderAInputTerm(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #DAQmxSetCIVelocityEncoderAInputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIVelocityEncoderAInputTerm(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityEncoderAInputTerm(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5048</i>
	 */
	// int DAQmxSetCIVelocityEncoderAInputTerm(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityEncoderAInputTerm(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5049</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIVelocityEncoderAInputTerm(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIVelocityEncoderAInputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIVelocityEncoderAInputTerm(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityEncoderAInputTerm(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5049</i>
	 */
	// int DAQmxResetCIVelocityEncoderAInputTerm(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set InputTermCfg2<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityEncoderAInputTermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5052</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIVelocityEncoderAInputTermCfg(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCIVelocityEncoderAInputTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIVelocityEncoderAInputTermCfg(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set InputTermCfg2<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityEncoderAInputTermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5052</i>
	 */
	// int DAQmxGetCIVelocityEncoderAInputTermCfg(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityEncoderAInputTermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5053</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIVelocityEncoderAInputTermCfg(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCIVelocityEncoderAInputTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIVelocityEncoderAInputTermCfg(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityEncoderAInputTermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5053</i>
	 */
	// int DAQmxSetCIVelocityEncoderAInputTermCfg(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityEncoderAInputTermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5054</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIVelocityEncoderAInputTermCfg(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIVelocityEncoderAInputTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIVelocityEncoderAInputTermCfg(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityEncoderAInputTermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5054</i>
	 */
	// int DAQmxResetCIVelocityEncoderAInputTermCfg(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set LogicLvlBehavior<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityEncoderAInputLogicLvlBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5057</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIVelocityEncoderAInputLogicLvlBehavior(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCIVelocityEncoderAInputLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIVelocityEncoderAInputLogicLvlBehavior(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set LogicLvlBehavior<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityEncoderAInputLogicLvlBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5057</i>
	 */
	// int DAQmxGetCIVelocityEncoderAInputLogicLvlBehavior(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityEncoderAInputLogicLvlBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5058</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIVelocityEncoderAInputLogicLvlBehavior(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCIVelocityEncoderAInputLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIVelocityEncoderAInputLogicLvlBehavior(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityEncoderAInputLogicLvlBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5058</i>
	 */
	// int DAQmxSetCIVelocityEncoderAInputLogicLvlBehavior(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityEncoderAInputLogicLvlBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5059</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIVelocityEncoderAInputLogicLvlBehavior(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIVelocityEncoderAInputLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIVelocityEncoderAInputLogicLvlBehavior(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityEncoderAInputLogicLvlBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5059</i>
	 */
	// int DAQmxResetCIVelocityEncoderAInputLogicLvlBehavior(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Velocity_Encoder_AInputDigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityEncoderAInputDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5061</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIVelocityEncoderAInputDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetCIVelocityEncoderAInputDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIVelocityEncoderAInputDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Velocity_Encoder_AInputDigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityEncoderAInputDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5061</i>
	 */
	// int DAQmxGetCIVelocityEncoderAInputDigFltrEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityEncoderAInputDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5062</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIVelocityEncoderAInputDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetCIVelocityEncoderAInputDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIVelocityEncoderAInputDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityEncoderAInputDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5062</i>
	 */
	// int DAQmxSetCIVelocityEncoderAInputDigFltrEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityEncoderAInputDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5063</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIVelocityEncoderAInputDigFltrEnable(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIVelocityEncoderAInputDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIVelocityEncoderAInputDigFltrEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityEncoderAInputDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5063</i>
	 */
	// int DAQmxResetCIVelocityEncoderAInputDigFltrEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Velocity_Encoder_AInputDigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityEncoderAInputDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5065</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIVelocityEncoderAInputDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetCIVelocityEncoderAInputDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIVelocityEncoderAInputDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Velocity_Encoder_AInputDigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityEncoderAInputDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5065</i>
	 */
	// int DAQmxGetCIVelocityEncoderAInputDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityEncoderAInputDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5066</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIVelocityEncoderAInputDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetCIVelocityEncoderAInputDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIVelocityEncoderAInputDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityEncoderAInputDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5066</i>
	 */
	// int DAQmxSetCIVelocityEncoderAInputDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityEncoderAInputDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5067</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIVelocityEncoderAInputDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIVelocityEncoderAInputDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIVelocityEncoderAInputDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityEncoderAInputDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5067</i>
	 */
	// int DAQmxResetCIVelocityEncoderAInputDigFltrMinPulseWidth(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Velocity_Encoder_AInputDigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityEncoderAInputDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5069</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIVelocityEncoderAInputDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetCIVelocityEncoderAInputDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIVelocityEncoderAInputDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_Velocity_Encoder_AInputDigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityEncoderAInputDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5069</i>
	 */
	// int DAQmxGetCIVelocityEncoderAInputDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityEncoderAInputDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5070</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIVelocityEncoderAInputDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #DAQmxSetCIVelocityEncoderAInputDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIVelocityEncoderAInputDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityEncoderAInputDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5070</i>
	 */
	// int DAQmxSetCIVelocityEncoderAInputDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityEncoderAInputDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5071</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIVelocityEncoderAInputDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIVelocityEncoderAInputDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIVelocityEncoderAInputDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityEncoderAInputDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5071</i>
	 */
	// int DAQmxResetCIVelocityEncoderAInputDigFltrTimebaseSrc(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Velocity_Encoder_AInputDigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityEncoderAInputDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5073</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIVelocityEncoderAInputDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetCIVelocityEncoderAInputDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIVelocityEncoderAInputDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Velocity_Encoder_AInputDigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityEncoderAInputDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5073</i>
	 */
	// int DAQmxGetCIVelocityEncoderAInputDigFltrTimebaseRate(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityEncoderAInputDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5074</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIVelocityEncoderAInputDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetCIVelocityEncoderAInputDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIVelocityEncoderAInputDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityEncoderAInputDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5074</i>
	 */
	// int DAQmxSetCIVelocityEncoderAInputDigFltrTimebaseRate(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityEncoderAInputDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5075</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIVelocityEncoderAInputDigFltrTimebaseRate(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIVelocityEncoderAInputDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIVelocityEncoderAInputDigFltrTimebaseRate(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityEncoderAInputDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5075</i>
	 */
	// int DAQmxResetCIVelocityEncoderAInputDigFltrTimebaseRate(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Velocity_Encoder_BInputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityEncoderBInputTerm(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5077</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIVelocityEncoderBInputTerm(com.sun.jna.Pointer, byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetCIVelocityEncoderBInputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIVelocityEncoderBInputTerm(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_Velocity_Encoder_BInputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityEncoderBInputTerm(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5077</i>
	 */
	// int DAQmxGetCIVelocityEncoderBInputTerm(Pointer taskHandle, byte channel[], ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityEncoderBInputTerm(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5078</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIVelocityEncoderBInputTerm(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #DAQmxSetCIVelocityEncoderBInputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIVelocityEncoderBInputTerm(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityEncoderBInputTerm(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5078</i>
	 */
	// int DAQmxSetCIVelocityEncoderBInputTerm(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityEncoderBInputTerm(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5079</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIVelocityEncoderBInputTerm(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIVelocityEncoderBInputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIVelocityEncoderBInputTerm(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityEncoderBInputTerm(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5079</i>
	 */
	// int DAQmxResetCIVelocityEncoderBInputTerm(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set InputTermCfg2<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityEncoderBInputTermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5082</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIVelocityEncoderBInputTermCfg(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCIVelocityEncoderBInputTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIVelocityEncoderBInputTermCfg(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set InputTermCfg2<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityEncoderBInputTermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5082</i>
	 */
	// int DAQmxGetCIVelocityEncoderBInputTermCfg(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityEncoderBInputTermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5083</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIVelocityEncoderBInputTermCfg(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCIVelocityEncoderBInputTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIVelocityEncoderBInputTermCfg(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityEncoderBInputTermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5083</i>
	 */
	// int DAQmxSetCIVelocityEncoderBInputTermCfg(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityEncoderBInputTermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5084</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIVelocityEncoderBInputTermCfg(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIVelocityEncoderBInputTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIVelocityEncoderBInputTermCfg(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityEncoderBInputTermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5084</i>
	 */
	// int DAQmxResetCIVelocityEncoderBInputTermCfg(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set LogicLvlBehavior<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityEncoderBInputLogicLvlBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5087</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIVelocityEncoderBInputLogicLvlBehavior(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCIVelocityEncoderBInputLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIVelocityEncoderBInputLogicLvlBehavior(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set LogicLvlBehavior<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityEncoderBInputLogicLvlBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5087</i>
	 */
	// int DAQmxGetCIVelocityEncoderBInputLogicLvlBehavior(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityEncoderBInputLogicLvlBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5088</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIVelocityEncoderBInputLogicLvlBehavior(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCIVelocityEncoderBInputLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIVelocityEncoderBInputLogicLvlBehavior(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityEncoderBInputLogicLvlBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5088</i>
	 */
	// int DAQmxSetCIVelocityEncoderBInputLogicLvlBehavior(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityEncoderBInputLogicLvlBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5089</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIVelocityEncoderBInputLogicLvlBehavior(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIVelocityEncoderBInputLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIVelocityEncoderBInputLogicLvlBehavior(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityEncoderBInputLogicLvlBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5089</i>
	 */
	// int DAQmxResetCIVelocityEncoderBInputLogicLvlBehavior(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Velocity_Encoder_BInputDigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityEncoderBInputDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5091</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIVelocityEncoderBInputDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetCIVelocityEncoderBInputDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIVelocityEncoderBInputDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Velocity_Encoder_BInputDigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityEncoderBInputDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5091</i>
	 */
	// int DAQmxGetCIVelocityEncoderBInputDigFltrEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityEncoderBInputDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5092</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIVelocityEncoderBInputDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetCIVelocityEncoderBInputDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIVelocityEncoderBInputDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityEncoderBInputDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5092</i>
	 */
	// int DAQmxSetCIVelocityEncoderBInputDigFltrEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityEncoderBInputDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5093</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIVelocityEncoderBInputDigFltrEnable(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIVelocityEncoderBInputDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIVelocityEncoderBInputDigFltrEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityEncoderBInputDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5093</i>
	 */
	// int DAQmxResetCIVelocityEncoderBInputDigFltrEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Velocity_Encoder_BInputDigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityEncoderBInputDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5095</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIVelocityEncoderBInputDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetCIVelocityEncoderBInputDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIVelocityEncoderBInputDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Velocity_Encoder_BInputDigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityEncoderBInputDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5095</i>
	 */
	// int DAQmxGetCIVelocityEncoderBInputDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityEncoderBInputDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5096</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIVelocityEncoderBInputDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetCIVelocityEncoderBInputDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIVelocityEncoderBInputDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityEncoderBInputDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5096</i>
	 */
	// int DAQmxSetCIVelocityEncoderBInputDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityEncoderBInputDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5097</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIVelocityEncoderBInputDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIVelocityEncoderBInputDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIVelocityEncoderBInputDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityEncoderBInputDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5097</i>
	 */
	// int DAQmxResetCIVelocityEncoderBInputDigFltrMinPulseWidth(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Velocity_Encoder_BInputDigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityEncoderBInputDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5099</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIVelocityEncoderBInputDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetCIVelocityEncoderBInputDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIVelocityEncoderBInputDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_Velocity_Encoder_BInputDigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityEncoderBInputDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5099</i>
	 */
	// int DAQmxGetCIVelocityEncoderBInputDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityEncoderBInputDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5100</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIVelocityEncoderBInputDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #DAQmxSetCIVelocityEncoderBInputDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIVelocityEncoderBInputDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityEncoderBInputDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5100</i>
	 */
	// int DAQmxSetCIVelocityEncoderBInputDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityEncoderBInputDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5101</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIVelocityEncoderBInputDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIVelocityEncoderBInputDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIVelocityEncoderBInputDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityEncoderBInputDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5101</i>
	 */
	// int DAQmxResetCIVelocityEncoderBInputDigFltrTimebaseSrc(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Velocity_Encoder_BInputDigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityEncoderBInputDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5103</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIVelocityEncoderBInputDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetCIVelocityEncoderBInputDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIVelocityEncoderBInputDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Velocity_Encoder_BInputDigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityEncoderBInputDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5103</i>
	 */
	// int DAQmxGetCIVelocityEncoderBInputDigFltrTimebaseRate(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityEncoderBInputDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5104</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIVelocityEncoderBInputDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetCIVelocityEncoderBInputDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIVelocityEncoderBInputDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityEncoderBInputDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5104</i>
	 */
	// int DAQmxSetCIVelocityEncoderBInputDigFltrTimebaseRate(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityEncoderBInputDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5105</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIVelocityEncoderBInputDigFltrTimebaseRate(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIVelocityEncoderBInputDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIVelocityEncoderBInputDigFltrTimebaseRate(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityEncoderBInputDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5105</i>
	 */
	// int DAQmxResetCIVelocityEncoderBInputDigFltrTimebaseRate(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Velocity_MeasTime ***<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityMeasTime(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5107</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIVelocityMeasTime(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetCIVelocityMeasTime(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIVelocityMeasTime(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Velocity_MeasTime ***<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityMeasTime(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5107</i>
	 */
	// int DAQmxGetCIVelocityMeasTime(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityMeasTime(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5108</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIVelocityMeasTime(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetCIVelocityMeasTime(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIVelocityMeasTime(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityMeasTime(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5108</i>
	 */
	// int DAQmxSetCIVelocityMeasTime(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityMeasTime(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5109</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIVelocityMeasTime(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIVelocityMeasTime(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIVelocityMeasTime(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityMeasTime(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5109</i>
	 */
	// int DAQmxResetCIVelocityMeasTime(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Velocity_Div ***<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityDiv(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5111</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIVelocityDiv(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetCIVelocityDiv(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIVelocityDiv(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Velocity_Div ***<br>
	 * Original signature : <code>int32 DAQmxGetCIVelocityDiv(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5111</i>
	 */
	// int DAQmxGetCIVelocityDiv(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityDiv(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 5112</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIVelocityDiv(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetCIVelocityDiv(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIVelocityDiv(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIVelocityDiv(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 5112</i>
	 */
	// int DAQmxSetCIVelocityDiv(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityDiv(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5113</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIVelocityDiv(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIVelocityDiv(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIVelocityDiv(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIVelocityDiv(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5113</i>
	 */
	// int DAQmxResetCIVelocityDiv(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set TimeUnits3<br>
	 * Original signature : <code>int32 DAQmxGetCITwoEdgeSepUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5116</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCITwoEdgeSepUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCITwoEdgeSepUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCITwoEdgeSepUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set TimeUnits3<br>
	 * Original signature : <code>int32 DAQmxGetCITwoEdgeSepUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5116</i>
	 */
	// int DAQmxGetCITwoEdgeSepUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCITwoEdgeSepUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5117</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCITwoEdgeSepUnits(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCITwoEdgeSepUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCITwoEdgeSepUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCITwoEdgeSepUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5117</i>
	 */
	// int DAQmxSetCITwoEdgeSepUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCITwoEdgeSepUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5118</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCITwoEdgeSepUnits(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCITwoEdgeSepUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCITwoEdgeSepUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCITwoEdgeSepUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5118</i>
	 */
	// int DAQmxResetCITwoEdgeSepUnits(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_TwoEdgeSep_FirstTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetCITwoEdgeSepFirstTerm(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5120</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCITwoEdgeSepFirstTerm(com.sun.jna.Pointer, byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetCITwoEdgeSepFirstTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetCITwoEdgeSepFirstTerm(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_TwoEdgeSep_FirstTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetCITwoEdgeSepFirstTerm(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5120</i>
	 */
	// int DAQmxGetCITwoEdgeSepFirstTerm(Pointer taskHandle, byte channel[], ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCITwoEdgeSepFirstTerm(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5121</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCITwoEdgeSepFirstTerm(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #DAQmxSetCITwoEdgeSepFirstTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetCITwoEdgeSepFirstTerm(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCITwoEdgeSepFirstTerm(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5121</i>
	 */
	// int DAQmxSetCITwoEdgeSepFirstTerm(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCITwoEdgeSepFirstTerm(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5122</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCITwoEdgeSepFirstTerm(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCITwoEdgeSepFirstTerm(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCITwoEdgeSepFirstTerm(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCITwoEdgeSepFirstTerm(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5122</i>
	 */
	// int DAQmxResetCITwoEdgeSepFirstTerm(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set InputTermCfg2<br>
	 * Original signature : <code>int32 DAQmxGetCITwoEdgeSepFirstTermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5125</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCITwoEdgeSepFirstTermCfg(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCITwoEdgeSepFirstTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCITwoEdgeSepFirstTermCfg(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set InputTermCfg2<br>
	 * Original signature : <code>int32 DAQmxGetCITwoEdgeSepFirstTermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5125</i>
	 */
	// int DAQmxGetCITwoEdgeSepFirstTermCfg(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCITwoEdgeSepFirstTermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5126</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCITwoEdgeSepFirstTermCfg(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCITwoEdgeSepFirstTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCITwoEdgeSepFirstTermCfg(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCITwoEdgeSepFirstTermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5126</i>
	 */
	// int DAQmxSetCITwoEdgeSepFirstTermCfg(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCITwoEdgeSepFirstTermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5127</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCITwoEdgeSepFirstTermCfg(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCITwoEdgeSepFirstTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCITwoEdgeSepFirstTermCfg(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCITwoEdgeSepFirstTermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5127</i>
	 */
	// int DAQmxResetCITwoEdgeSepFirstTermCfg(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set LogicLvlBehavior<br>
	 * Original signature : <code>int32 DAQmxGetCITwoEdgeSepFirstLogicLvlBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5130</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCITwoEdgeSepFirstLogicLvlBehavior(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCITwoEdgeSepFirstLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCITwoEdgeSepFirstLogicLvlBehavior(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set LogicLvlBehavior<br>
	 * Original signature : <code>int32 DAQmxGetCITwoEdgeSepFirstLogicLvlBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5130</i>
	 */
	// int DAQmxGetCITwoEdgeSepFirstLogicLvlBehavior(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCITwoEdgeSepFirstLogicLvlBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5131</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCITwoEdgeSepFirstLogicLvlBehavior(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCITwoEdgeSepFirstLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCITwoEdgeSepFirstLogicLvlBehavior(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCITwoEdgeSepFirstLogicLvlBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5131</i>
	 */
	// int DAQmxSetCITwoEdgeSepFirstLogicLvlBehavior(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCITwoEdgeSepFirstLogicLvlBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5132</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCITwoEdgeSepFirstLogicLvlBehavior(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCITwoEdgeSepFirstLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCITwoEdgeSepFirstLogicLvlBehavior(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCITwoEdgeSepFirstLogicLvlBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5132</i>
	 */
	// int DAQmxResetCITwoEdgeSepFirstLogicLvlBehavior(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_TwoEdgeSep_First_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCITwoEdgeSepFirstDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5134</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCITwoEdgeSepFirstDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetCITwoEdgeSepFirstDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCITwoEdgeSepFirstDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_TwoEdgeSep_First_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCITwoEdgeSepFirstDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5134</i>
	 */
	// int DAQmxGetCITwoEdgeSepFirstDigFltrEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCITwoEdgeSepFirstDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5135</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCITwoEdgeSepFirstDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetCITwoEdgeSepFirstDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetCITwoEdgeSepFirstDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCITwoEdgeSepFirstDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5135</i>
	 */
	// int DAQmxSetCITwoEdgeSepFirstDigFltrEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCITwoEdgeSepFirstDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5136</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCITwoEdgeSepFirstDigFltrEnable(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCITwoEdgeSepFirstDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCITwoEdgeSepFirstDigFltrEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCITwoEdgeSepFirstDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5136</i>
	 */
	// int DAQmxResetCITwoEdgeSepFirstDigFltrEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_TwoEdgeSep_First_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCITwoEdgeSepFirstDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5138</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCITwoEdgeSepFirstDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetCITwoEdgeSepFirstDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCITwoEdgeSepFirstDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_TwoEdgeSep_First_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCITwoEdgeSepFirstDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5138</i>
	 */
	// int DAQmxGetCITwoEdgeSepFirstDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCITwoEdgeSepFirstDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5139</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCITwoEdgeSepFirstDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetCITwoEdgeSepFirstDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetCITwoEdgeSepFirstDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCITwoEdgeSepFirstDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5139</i>
	 */
	// int DAQmxSetCITwoEdgeSepFirstDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCITwoEdgeSepFirstDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5140</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCITwoEdgeSepFirstDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCITwoEdgeSepFirstDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCITwoEdgeSepFirstDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCITwoEdgeSepFirstDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5140</i>
	 */
	// int DAQmxResetCITwoEdgeSepFirstDigFltrMinPulseWidth(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_TwoEdgeSep_First_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCITwoEdgeSepFirstDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5142</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCITwoEdgeSepFirstDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetCITwoEdgeSepFirstDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetCITwoEdgeSepFirstDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_TwoEdgeSep_First_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCITwoEdgeSepFirstDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5142</i>
	 */
	// int DAQmxGetCITwoEdgeSepFirstDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCITwoEdgeSepFirstDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5143</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCITwoEdgeSepFirstDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #DAQmxSetCITwoEdgeSepFirstDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetCITwoEdgeSepFirstDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCITwoEdgeSepFirstDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5143</i>
	 */
	// int DAQmxSetCITwoEdgeSepFirstDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCITwoEdgeSepFirstDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5144</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCITwoEdgeSepFirstDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCITwoEdgeSepFirstDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCITwoEdgeSepFirstDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCITwoEdgeSepFirstDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5144</i>
	 */
	// int DAQmxResetCITwoEdgeSepFirstDigFltrTimebaseSrc(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_TwoEdgeSep_First_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCITwoEdgeSepFirstDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5146</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCITwoEdgeSepFirstDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetCITwoEdgeSepFirstDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCITwoEdgeSepFirstDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_TwoEdgeSep_First_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCITwoEdgeSepFirstDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5146</i>
	 */
	// int DAQmxGetCITwoEdgeSepFirstDigFltrTimebaseRate(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCITwoEdgeSepFirstDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5147</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCITwoEdgeSepFirstDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetCITwoEdgeSepFirstDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetCITwoEdgeSepFirstDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCITwoEdgeSepFirstDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5147</i>
	 */
	// int DAQmxSetCITwoEdgeSepFirstDigFltrTimebaseRate(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCITwoEdgeSepFirstDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5148</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCITwoEdgeSepFirstDigFltrTimebaseRate(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCITwoEdgeSepFirstDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCITwoEdgeSepFirstDigFltrTimebaseRate(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCITwoEdgeSepFirstDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5148</i>
	 */
	// int DAQmxResetCITwoEdgeSepFirstDigFltrTimebaseRate(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_TwoEdgeSep_First_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCITwoEdgeSepFirstDigSyncEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5150</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCITwoEdgeSepFirstDigSyncEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetCITwoEdgeSepFirstDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCITwoEdgeSepFirstDigSyncEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_TwoEdgeSep_First_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCITwoEdgeSepFirstDigSyncEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5150</i>
	 */
	// int DAQmxGetCITwoEdgeSepFirstDigSyncEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCITwoEdgeSepFirstDigSyncEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5151</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCITwoEdgeSepFirstDigSyncEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetCITwoEdgeSepFirstDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetCITwoEdgeSepFirstDigSyncEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCITwoEdgeSepFirstDigSyncEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5151</i>
	 */
	// int DAQmxSetCITwoEdgeSepFirstDigSyncEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCITwoEdgeSepFirstDigSyncEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5152</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCITwoEdgeSepFirstDigSyncEnable(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCITwoEdgeSepFirstDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCITwoEdgeSepFirstDigSyncEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCITwoEdgeSepFirstDigSyncEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5152</i>
	 */
	// int DAQmxResetCITwoEdgeSepFirstDigSyncEnable(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetCITwoEdgeSepFirstEdge(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5155</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCITwoEdgeSepFirstEdge(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCITwoEdgeSepFirstEdge(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCITwoEdgeSepFirstEdge(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetCITwoEdgeSepFirstEdge(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5155</i>
	 */
	// int DAQmxGetCITwoEdgeSepFirstEdge(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCITwoEdgeSepFirstEdge(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5156</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCITwoEdgeSepFirstEdge(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCITwoEdgeSepFirstEdge(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCITwoEdgeSepFirstEdge(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCITwoEdgeSepFirstEdge(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5156</i>
	 */
	// int DAQmxSetCITwoEdgeSepFirstEdge(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCITwoEdgeSepFirstEdge(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5157</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCITwoEdgeSepFirstEdge(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCITwoEdgeSepFirstEdge(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCITwoEdgeSepFirstEdge(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCITwoEdgeSepFirstEdge(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5157</i>
	 */
	// int DAQmxResetCITwoEdgeSepFirstEdge(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_TwoEdgeSep_SecondTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetCITwoEdgeSepSecondTerm(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5159</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCITwoEdgeSepSecondTerm(com.sun.jna.Pointer, byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetCITwoEdgeSepSecondTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetCITwoEdgeSepSecondTerm(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_TwoEdgeSep_SecondTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetCITwoEdgeSepSecondTerm(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5159</i>
	 */
	// int DAQmxGetCITwoEdgeSepSecondTerm(Pointer taskHandle, byte channel[], ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCITwoEdgeSepSecondTerm(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5160</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCITwoEdgeSepSecondTerm(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #DAQmxSetCITwoEdgeSepSecondTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetCITwoEdgeSepSecondTerm(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCITwoEdgeSepSecondTerm(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5160</i>
	 */
	// int DAQmxSetCITwoEdgeSepSecondTerm(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCITwoEdgeSepSecondTerm(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5161</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCITwoEdgeSepSecondTerm(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCITwoEdgeSepSecondTerm(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCITwoEdgeSepSecondTerm(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCITwoEdgeSepSecondTerm(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5161</i>
	 */
	// int DAQmxResetCITwoEdgeSepSecondTerm(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set InputTermCfg2<br>
	 * Original signature : <code>int32 DAQmxGetCITwoEdgeSepSecondTermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5164</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCITwoEdgeSepSecondTermCfg(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCITwoEdgeSepSecondTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCITwoEdgeSepSecondTermCfg(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set InputTermCfg2<br>
	 * Original signature : <code>int32 DAQmxGetCITwoEdgeSepSecondTermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5164</i>
	 */
	// int DAQmxGetCITwoEdgeSepSecondTermCfg(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCITwoEdgeSepSecondTermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5165</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCITwoEdgeSepSecondTermCfg(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCITwoEdgeSepSecondTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCITwoEdgeSepSecondTermCfg(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCITwoEdgeSepSecondTermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5165</i>
	 */
	// int DAQmxSetCITwoEdgeSepSecondTermCfg(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCITwoEdgeSepSecondTermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5166</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCITwoEdgeSepSecondTermCfg(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCITwoEdgeSepSecondTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCITwoEdgeSepSecondTermCfg(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCITwoEdgeSepSecondTermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5166</i>
	 */
	// int DAQmxResetCITwoEdgeSepSecondTermCfg(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set LogicLvlBehavior<br>
	 * Original signature : <code>int32 DAQmxGetCITwoEdgeSepSecondLogicLvlBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5169</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCITwoEdgeSepSecondLogicLvlBehavior(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCITwoEdgeSepSecondLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCITwoEdgeSepSecondLogicLvlBehavior(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set LogicLvlBehavior<br>
	 * Original signature : <code>int32 DAQmxGetCITwoEdgeSepSecondLogicLvlBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5169</i>
	 */
	// int DAQmxGetCITwoEdgeSepSecondLogicLvlBehavior(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCITwoEdgeSepSecondLogicLvlBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5170</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCITwoEdgeSepSecondLogicLvlBehavior(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCITwoEdgeSepSecondLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCITwoEdgeSepSecondLogicLvlBehavior(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCITwoEdgeSepSecondLogicLvlBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5170</i>
	 */
	// int DAQmxSetCITwoEdgeSepSecondLogicLvlBehavior(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCITwoEdgeSepSecondLogicLvlBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5171</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCITwoEdgeSepSecondLogicLvlBehavior(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCITwoEdgeSepSecondLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCITwoEdgeSepSecondLogicLvlBehavior(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCITwoEdgeSepSecondLogicLvlBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5171</i>
	 */
	// int DAQmxResetCITwoEdgeSepSecondLogicLvlBehavior(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_TwoEdgeSep_Second_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCITwoEdgeSepSecondDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5173</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCITwoEdgeSepSecondDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetCITwoEdgeSepSecondDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCITwoEdgeSepSecondDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_TwoEdgeSep_Second_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCITwoEdgeSepSecondDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5173</i>
	 */
	// int DAQmxGetCITwoEdgeSepSecondDigFltrEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCITwoEdgeSepSecondDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5174</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCITwoEdgeSepSecondDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetCITwoEdgeSepSecondDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetCITwoEdgeSepSecondDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCITwoEdgeSepSecondDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5174</i>
	 */
	// int DAQmxSetCITwoEdgeSepSecondDigFltrEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCITwoEdgeSepSecondDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5175</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCITwoEdgeSepSecondDigFltrEnable(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCITwoEdgeSepSecondDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCITwoEdgeSepSecondDigFltrEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCITwoEdgeSepSecondDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5175</i>
	 */
	// int DAQmxResetCITwoEdgeSepSecondDigFltrEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_TwoEdgeSep_Second_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCITwoEdgeSepSecondDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5177</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCITwoEdgeSepSecondDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetCITwoEdgeSepSecondDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCITwoEdgeSepSecondDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_TwoEdgeSep_Second_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCITwoEdgeSepSecondDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5177</i>
	 */
	// int DAQmxGetCITwoEdgeSepSecondDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCITwoEdgeSepSecondDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5178</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCITwoEdgeSepSecondDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetCITwoEdgeSepSecondDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetCITwoEdgeSepSecondDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCITwoEdgeSepSecondDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5178</i>
	 */
	// int DAQmxSetCITwoEdgeSepSecondDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCITwoEdgeSepSecondDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5179</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCITwoEdgeSepSecondDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCITwoEdgeSepSecondDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCITwoEdgeSepSecondDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCITwoEdgeSepSecondDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5179</i>
	 */
	// int DAQmxResetCITwoEdgeSepSecondDigFltrMinPulseWidth(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_TwoEdgeSep_Second_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCITwoEdgeSepSecondDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5181</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCITwoEdgeSepSecondDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetCITwoEdgeSepSecondDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetCITwoEdgeSepSecondDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_TwoEdgeSep_Second_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCITwoEdgeSepSecondDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5181</i>
	 */
	// int DAQmxGetCITwoEdgeSepSecondDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCITwoEdgeSepSecondDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5182</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCITwoEdgeSepSecondDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #DAQmxSetCITwoEdgeSepSecondDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetCITwoEdgeSepSecondDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCITwoEdgeSepSecondDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5182</i>
	 */
	// int DAQmxSetCITwoEdgeSepSecondDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCITwoEdgeSepSecondDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5183</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCITwoEdgeSepSecondDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCITwoEdgeSepSecondDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCITwoEdgeSepSecondDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCITwoEdgeSepSecondDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5183</i>
	 */
	// int DAQmxResetCITwoEdgeSepSecondDigFltrTimebaseSrc(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_TwoEdgeSep_Second_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCITwoEdgeSepSecondDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5185</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCITwoEdgeSepSecondDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetCITwoEdgeSepSecondDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCITwoEdgeSepSecondDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_TwoEdgeSep_Second_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCITwoEdgeSepSecondDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5185</i>
	 */
	// int DAQmxGetCITwoEdgeSepSecondDigFltrTimebaseRate(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCITwoEdgeSepSecondDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5186</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCITwoEdgeSepSecondDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetCITwoEdgeSepSecondDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetCITwoEdgeSepSecondDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCITwoEdgeSepSecondDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5186</i>
	 */
	// int DAQmxSetCITwoEdgeSepSecondDigFltrTimebaseRate(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCITwoEdgeSepSecondDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5187</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCITwoEdgeSepSecondDigFltrTimebaseRate(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCITwoEdgeSepSecondDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCITwoEdgeSepSecondDigFltrTimebaseRate(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCITwoEdgeSepSecondDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5187</i>
	 */
	// int DAQmxResetCITwoEdgeSepSecondDigFltrTimebaseRate(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_TwoEdgeSep_Second_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCITwoEdgeSepSecondDigSyncEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5189</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCITwoEdgeSepSecondDigSyncEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetCITwoEdgeSepSecondDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCITwoEdgeSepSecondDigSyncEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_TwoEdgeSep_Second_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCITwoEdgeSepSecondDigSyncEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5189</i>
	 */
	// int DAQmxGetCITwoEdgeSepSecondDigSyncEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCITwoEdgeSepSecondDigSyncEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5190</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCITwoEdgeSepSecondDigSyncEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetCITwoEdgeSepSecondDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetCITwoEdgeSepSecondDigSyncEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCITwoEdgeSepSecondDigSyncEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5190</i>
	 */
	// int DAQmxSetCITwoEdgeSepSecondDigSyncEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCITwoEdgeSepSecondDigSyncEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5191</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCITwoEdgeSepSecondDigSyncEnable(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCITwoEdgeSepSecondDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCITwoEdgeSepSecondDigSyncEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCITwoEdgeSepSecondDigSyncEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5191</i>
	 */
	// int DAQmxResetCITwoEdgeSepSecondDigSyncEnable(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetCITwoEdgeSepSecondEdge(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5194</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCITwoEdgeSepSecondEdge(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCITwoEdgeSepSecondEdge(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCITwoEdgeSepSecondEdge(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetCITwoEdgeSepSecondEdge(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5194</i>
	 */
	// int DAQmxGetCITwoEdgeSepSecondEdge(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCITwoEdgeSepSecondEdge(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5195</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCITwoEdgeSepSecondEdge(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCITwoEdgeSepSecondEdge(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCITwoEdgeSepSecondEdge(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCITwoEdgeSepSecondEdge(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5195</i>
	 */
	// int DAQmxSetCITwoEdgeSepSecondEdge(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCITwoEdgeSepSecondEdge(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5196</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCITwoEdgeSepSecondEdge(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCITwoEdgeSepSecondEdge(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCITwoEdgeSepSecondEdge(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCITwoEdgeSepSecondEdge(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5196</i>
	 */
	// int DAQmxResetCITwoEdgeSepSecondEdge(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set TimeUnits3<br>
	 * Original signature : <code>int32 DAQmxGetCISemiPeriodUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5199</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCISemiPeriodUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCISemiPeriodUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCISemiPeriodUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set TimeUnits3<br>
	 * Original signature : <code>int32 DAQmxGetCISemiPeriodUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5199</i>
	 */
	// int DAQmxGetCISemiPeriodUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCISemiPeriodUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5200</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCISemiPeriodUnits(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCISemiPeriodUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCISemiPeriodUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCISemiPeriodUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5200</i>
	 */
	// int DAQmxSetCISemiPeriodUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCISemiPeriodUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5201</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCISemiPeriodUnits(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCISemiPeriodUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCISemiPeriodUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCISemiPeriodUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5201</i>
	 */
	// int DAQmxResetCISemiPeriodUnits(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_SemiPeriod_Term ***<br>
	 * Original signature : <code>int32 DAQmxGetCISemiPeriodTerm(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5203</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCISemiPeriodTerm(com.sun.jna.Pointer, byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetCISemiPeriodTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetCISemiPeriodTerm(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_SemiPeriod_Term ***<br>
	 * Original signature : <code>int32 DAQmxGetCISemiPeriodTerm(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5203</i>
	 */
	// int DAQmxGetCISemiPeriodTerm(Pointer taskHandle, byte channel[], ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCISemiPeriodTerm(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5204</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCISemiPeriodTerm(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #DAQmxSetCISemiPeriodTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetCISemiPeriodTerm(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCISemiPeriodTerm(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5204</i>
	 */
	// int DAQmxSetCISemiPeriodTerm(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCISemiPeriodTerm(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5205</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCISemiPeriodTerm(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCISemiPeriodTerm(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCISemiPeriodTerm(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCISemiPeriodTerm(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5205</i>
	 */
	// int DAQmxResetCISemiPeriodTerm(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set InputTermCfg2<br>
	 * Original signature : <code>int32 DAQmxGetCISemiPeriodTermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5208</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCISemiPeriodTermCfg(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCISemiPeriodTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCISemiPeriodTermCfg(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set InputTermCfg2<br>
	 * Original signature : <code>int32 DAQmxGetCISemiPeriodTermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5208</i>
	 */
	// int DAQmxGetCISemiPeriodTermCfg(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCISemiPeriodTermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5209</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCISemiPeriodTermCfg(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCISemiPeriodTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCISemiPeriodTermCfg(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCISemiPeriodTermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5209</i>
	 */
	// int DAQmxSetCISemiPeriodTermCfg(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCISemiPeriodTermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5210</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCISemiPeriodTermCfg(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCISemiPeriodTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCISemiPeriodTermCfg(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCISemiPeriodTermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5210</i>
	 */
	// int DAQmxResetCISemiPeriodTermCfg(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set LogicLvlBehavior<br>
	 * Original signature : <code>int32 DAQmxGetCISemiPeriodLogicLvlBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5213</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCISemiPeriodLogicLvlBehavior(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCISemiPeriodLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCISemiPeriodLogicLvlBehavior(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set LogicLvlBehavior<br>
	 * Original signature : <code>int32 DAQmxGetCISemiPeriodLogicLvlBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5213</i>
	 */
	// int DAQmxGetCISemiPeriodLogicLvlBehavior(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCISemiPeriodLogicLvlBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5214</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCISemiPeriodLogicLvlBehavior(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCISemiPeriodLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCISemiPeriodLogicLvlBehavior(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCISemiPeriodLogicLvlBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5214</i>
	 */
	// int DAQmxSetCISemiPeriodLogicLvlBehavior(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCISemiPeriodLogicLvlBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5215</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCISemiPeriodLogicLvlBehavior(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCISemiPeriodLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCISemiPeriodLogicLvlBehavior(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCISemiPeriodLogicLvlBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5215</i>
	 */
	// int DAQmxResetCISemiPeriodLogicLvlBehavior(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_SemiPeriod_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCISemiPeriodDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5217</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCISemiPeriodDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetCISemiPeriodDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCISemiPeriodDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_SemiPeriod_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCISemiPeriodDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5217</i>
	 */
	// int DAQmxGetCISemiPeriodDigFltrEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCISemiPeriodDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5218</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCISemiPeriodDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetCISemiPeriodDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetCISemiPeriodDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCISemiPeriodDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5218</i>
	 */
	// int DAQmxSetCISemiPeriodDigFltrEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCISemiPeriodDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5219</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCISemiPeriodDigFltrEnable(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCISemiPeriodDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCISemiPeriodDigFltrEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCISemiPeriodDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5219</i>
	 */
	// int DAQmxResetCISemiPeriodDigFltrEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_SemiPeriod_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCISemiPeriodDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5221</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCISemiPeriodDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetCISemiPeriodDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCISemiPeriodDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_SemiPeriod_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCISemiPeriodDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5221</i>
	 */
	// int DAQmxGetCISemiPeriodDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCISemiPeriodDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5222</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCISemiPeriodDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetCISemiPeriodDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetCISemiPeriodDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCISemiPeriodDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5222</i>
	 */
	// int DAQmxSetCISemiPeriodDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCISemiPeriodDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5223</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCISemiPeriodDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCISemiPeriodDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCISemiPeriodDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCISemiPeriodDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5223</i>
	 */
	// int DAQmxResetCISemiPeriodDigFltrMinPulseWidth(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_SemiPeriod_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCISemiPeriodDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5225</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCISemiPeriodDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetCISemiPeriodDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetCISemiPeriodDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_SemiPeriod_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCISemiPeriodDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5225</i>
	 */
	// int DAQmxGetCISemiPeriodDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCISemiPeriodDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5226</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCISemiPeriodDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #DAQmxSetCISemiPeriodDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetCISemiPeriodDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCISemiPeriodDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5226</i>
	 */
	// int DAQmxSetCISemiPeriodDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCISemiPeriodDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5227</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCISemiPeriodDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCISemiPeriodDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCISemiPeriodDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCISemiPeriodDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5227</i>
	 */
	// int DAQmxResetCISemiPeriodDigFltrTimebaseSrc(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_SemiPeriod_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCISemiPeriodDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5229</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCISemiPeriodDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetCISemiPeriodDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCISemiPeriodDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_SemiPeriod_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCISemiPeriodDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5229</i>
	 */
	// int DAQmxGetCISemiPeriodDigFltrTimebaseRate(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCISemiPeriodDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5230</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCISemiPeriodDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetCISemiPeriodDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetCISemiPeriodDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCISemiPeriodDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5230</i>
	 */
	// int DAQmxSetCISemiPeriodDigFltrTimebaseRate(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCISemiPeriodDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5231</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCISemiPeriodDigFltrTimebaseRate(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCISemiPeriodDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCISemiPeriodDigFltrTimebaseRate(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCISemiPeriodDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5231</i>
	 */
	// int DAQmxResetCISemiPeriodDigFltrTimebaseRate(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_SemiPeriod_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCISemiPeriodDigSyncEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5233</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCISemiPeriodDigSyncEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetCISemiPeriodDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCISemiPeriodDigSyncEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_SemiPeriod_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCISemiPeriodDigSyncEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5233</i>
	 */
	// int DAQmxGetCISemiPeriodDigSyncEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCISemiPeriodDigSyncEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5234</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCISemiPeriodDigSyncEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetCISemiPeriodDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetCISemiPeriodDigSyncEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCISemiPeriodDigSyncEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5234</i>
	 */
	// int DAQmxSetCISemiPeriodDigSyncEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCISemiPeriodDigSyncEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5235</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCISemiPeriodDigSyncEnable(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCISemiPeriodDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCISemiPeriodDigSyncEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCISemiPeriodDigSyncEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5235</i>
	 */
	// int DAQmxResetCISemiPeriodDigSyncEnable(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetCISemiPeriodStartingEdge(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5238</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCISemiPeriodStartingEdge(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCISemiPeriodStartingEdge(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCISemiPeriodStartingEdge(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetCISemiPeriodStartingEdge(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5238</i>
	 */
	// int DAQmxGetCISemiPeriodStartingEdge(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCISemiPeriodStartingEdge(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5239</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCISemiPeriodStartingEdge(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCISemiPeriodStartingEdge(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCISemiPeriodStartingEdge(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCISemiPeriodStartingEdge(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5239</i>
	 */
	// int DAQmxSetCISemiPeriodStartingEdge(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCISemiPeriodStartingEdge(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5240</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCISemiPeriodStartingEdge(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCISemiPeriodStartingEdge(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCISemiPeriodStartingEdge(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCISemiPeriodStartingEdge(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5240</i>
	 */
	// int DAQmxResetCISemiPeriodStartingEdge(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set FrequencyUnits2<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseFreqUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5243</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIPulseFreqUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCIPulseFreqUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIPulseFreqUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set FrequencyUnits2<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseFreqUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5243</i>
	 */
	// int DAQmxGetCIPulseFreqUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseFreqUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5244</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIPulseFreqUnits(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCIPulseFreqUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIPulseFreqUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseFreqUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5244</i>
	 */
	// int DAQmxSetCIPulseFreqUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseFreqUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5245</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIPulseFreqUnits(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIPulseFreqUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIPulseFreqUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseFreqUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5245</i>
	 */
	// int DAQmxResetCIPulseFreqUnits(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Pulse_Freq_Term ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseFreqTerm(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5247</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIPulseFreqTerm(com.sun.jna.Pointer, byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetCIPulseFreqTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIPulseFreqTerm(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_Pulse_Freq_Term ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseFreqTerm(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5247</i>
	 */
	// int DAQmxGetCIPulseFreqTerm(Pointer taskHandle, byte channel[], ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseFreqTerm(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5248</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIPulseFreqTerm(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #DAQmxSetCIPulseFreqTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIPulseFreqTerm(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseFreqTerm(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5248</i>
	 */
	// int DAQmxSetCIPulseFreqTerm(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseFreqTerm(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5249</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIPulseFreqTerm(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIPulseFreqTerm(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIPulseFreqTerm(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseFreqTerm(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5249</i>
	 */
	// int DAQmxResetCIPulseFreqTerm(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set InputTermCfg2<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseFreqTermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5252</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIPulseFreqTermCfg(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCIPulseFreqTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIPulseFreqTermCfg(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set InputTermCfg2<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseFreqTermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5252</i>
	 */
	// int DAQmxGetCIPulseFreqTermCfg(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseFreqTermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5253</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIPulseFreqTermCfg(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCIPulseFreqTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIPulseFreqTermCfg(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseFreqTermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5253</i>
	 */
	// int DAQmxSetCIPulseFreqTermCfg(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseFreqTermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5254</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIPulseFreqTermCfg(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIPulseFreqTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIPulseFreqTermCfg(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseFreqTermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5254</i>
	 */
	// int DAQmxResetCIPulseFreqTermCfg(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set LogicLvlBehavior<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseFreqLogicLvlBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5257</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIPulseFreqLogicLvlBehavior(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCIPulseFreqLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIPulseFreqLogicLvlBehavior(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set LogicLvlBehavior<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseFreqLogicLvlBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5257</i>
	 */
	// int DAQmxGetCIPulseFreqLogicLvlBehavior(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseFreqLogicLvlBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5258</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIPulseFreqLogicLvlBehavior(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCIPulseFreqLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIPulseFreqLogicLvlBehavior(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseFreqLogicLvlBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5258</i>
	 */
	// int DAQmxSetCIPulseFreqLogicLvlBehavior(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseFreqLogicLvlBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5259</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIPulseFreqLogicLvlBehavior(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIPulseFreqLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIPulseFreqLogicLvlBehavior(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseFreqLogicLvlBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5259</i>
	 */
	// int DAQmxResetCIPulseFreqLogicLvlBehavior(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Pulse_Freq_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseFreqDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5261</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIPulseFreqDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetCIPulseFreqDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIPulseFreqDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Pulse_Freq_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseFreqDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5261</i>
	 */
	// int DAQmxGetCIPulseFreqDigFltrEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseFreqDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5262</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIPulseFreqDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetCIPulseFreqDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIPulseFreqDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseFreqDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5262</i>
	 */
	// int DAQmxSetCIPulseFreqDigFltrEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseFreqDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5263</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIPulseFreqDigFltrEnable(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIPulseFreqDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIPulseFreqDigFltrEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseFreqDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5263</i>
	 */
	// int DAQmxResetCIPulseFreqDigFltrEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Pulse_Freq_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseFreqDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5265</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIPulseFreqDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetCIPulseFreqDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIPulseFreqDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Pulse_Freq_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseFreqDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5265</i>
	 */
	// int DAQmxGetCIPulseFreqDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseFreqDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5266</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIPulseFreqDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetCIPulseFreqDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIPulseFreqDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseFreqDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5266</i>
	 */
	// int DAQmxSetCIPulseFreqDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseFreqDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5267</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIPulseFreqDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIPulseFreqDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIPulseFreqDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseFreqDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5267</i>
	 */
	// int DAQmxResetCIPulseFreqDigFltrMinPulseWidth(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Pulse_Freq_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseFreqDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5269</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIPulseFreqDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetCIPulseFreqDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIPulseFreqDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_Pulse_Freq_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseFreqDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5269</i>
	 */
	// int DAQmxGetCIPulseFreqDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseFreqDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5270</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIPulseFreqDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #DAQmxSetCIPulseFreqDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIPulseFreqDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseFreqDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5270</i>
	 */
	// int DAQmxSetCIPulseFreqDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseFreqDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5271</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIPulseFreqDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIPulseFreqDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIPulseFreqDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseFreqDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5271</i>
	 */
	// int DAQmxResetCIPulseFreqDigFltrTimebaseSrc(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Pulse_Freq_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseFreqDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5273</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIPulseFreqDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetCIPulseFreqDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIPulseFreqDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Pulse_Freq_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseFreqDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5273</i>
	 */
	// int DAQmxGetCIPulseFreqDigFltrTimebaseRate(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseFreqDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5274</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIPulseFreqDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetCIPulseFreqDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIPulseFreqDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseFreqDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5274</i>
	 */
	// int DAQmxSetCIPulseFreqDigFltrTimebaseRate(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseFreqDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5275</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIPulseFreqDigFltrTimebaseRate(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIPulseFreqDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIPulseFreqDigFltrTimebaseRate(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseFreqDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5275</i>
	 */
	// int DAQmxResetCIPulseFreqDigFltrTimebaseRate(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Pulse_Freq_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseFreqDigSyncEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5277</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIPulseFreqDigSyncEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetCIPulseFreqDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIPulseFreqDigSyncEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Pulse_Freq_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseFreqDigSyncEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5277</i>
	 */
	// int DAQmxGetCIPulseFreqDigSyncEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseFreqDigSyncEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5278</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIPulseFreqDigSyncEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetCIPulseFreqDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIPulseFreqDigSyncEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseFreqDigSyncEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5278</i>
	 */
	// int DAQmxSetCIPulseFreqDigSyncEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseFreqDigSyncEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5279</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIPulseFreqDigSyncEnable(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIPulseFreqDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIPulseFreqDigSyncEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseFreqDigSyncEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5279</i>
	 */
	// int DAQmxResetCIPulseFreqDigSyncEnable(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseFreqStartEdge(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5282</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIPulseFreqStartEdge(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCIPulseFreqStartEdge(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIPulseFreqStartEdge(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseFreqStartEdge(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5282</i>
	 */
	// int DAQmxGetCIPulseFreqStartEdge(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseFreqStartEdge(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5283</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIPulseFreqStartEdge(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCIPulseFreqStartEdge(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIPulseFreqStartEdge(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseFreqStartEdge(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5283</i>
	 */
	// int DAQmxSetCIPulseFreqStartEdge(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseFreqStartEdge(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5284</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIPulseFreqStartEdge(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIPulseFreqStartEdge(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIPulseFreqStartEdge(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseFreqStartEdge(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5284</i>
	 */
	// int DAQmxResetCIPulseFreqStartEdge(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set TimeUnits2<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseTimeUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5287</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIPulseTimeUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCIPulseTimeUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIPulseTimeUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set TimeUnits2<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseTimeUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5287</i>
	 */
	// int DAQmxGetCIPulseTimeUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseTimeUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5288</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIPulseTimeUnits(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCIPulseTimeUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIPulseTimeUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseTimeUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5288</i>
	 */
	// int DAQmxSetCIPulseTimeUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseTimeUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5289</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIPulseTimeUnits(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIPulseTimeUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIPulseTimeUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseTimeUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5289</i>
	 */
	// int DAQmxResetCIPulseTimeUnits(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Pulse_Time_Term ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseTimeTerm(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5291</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIPulseTimeTerm(com.sun.jna.Pointer, byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetCIPulseTimeTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIPulseTimeTerm(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_Pulse_Time_Term ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseTimeTerm(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5291</i>
	 */
	// int DAQmxGetCIPulseTimeTerm(Pointer taskHandle, byte channel[], ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseTimeTerm(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5292</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIPulseTimeTerm(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #DAQmxSetCIPulseTimeTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIPulseTimeTerm(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseTimeTerm(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5292</i>
	 */
	// int DAQmxSetCIPulseTimeTerm(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseTimeTerm(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5293</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIPulseTimeTerm(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIPulseTimeTerm(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIPulseTimeTerm(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseTimeTerm(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5293</i>
	 */
	// int DAQmxResetCIPulseTimeTerm(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set InputTermCfg2<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseTimeTermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5296</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIPulseTimeTermCfg(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCIPulseTimeTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIPulseTimeTermCfg(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set InputTermCfg2<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseTimeTermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5296</i>
	 */
	// int DAQmxGetCIPulseTimeTermCfg(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseTimeTermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5297</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIPulseTimeTermCfg(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCIPulseTimeTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIPulseTimeTermCfg(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseTimeTermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5297</i>
	 */
	// int DAQmxSetCIPulseTimeTermCfg(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseTimeTermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5298</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIPulseTimeTermCfg(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIPulseTimeTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIPulseTimeTermCfg(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseTimeTermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5298</i>
	 */
	// int DAQmxResetCIPulseTimeTermCfg(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set LogicLvlBehavior<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseTimeLogicLvlBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5301</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIPulseTimeLogicLvlBehavior(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCIPulseTimeLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIPulseTimeLogicLvlBehavior(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set LogicLvlBehavior<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseTimeLogicLvlBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5301</i>
	 */
	// int DAQmxGetCIPulseTimeLogicLvlBehavior(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseTimeLogicLvlBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5302</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIPulseTimeLogicLvlBehavior(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCIPulseTimeLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIPulseTimeLogicLvlBehavior(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseTimeLogicLvlBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5302</i>
	 */
	// int DAQmxSetCIPulseTimeLogicLvlBehavior(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseTimeLogicLvlBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5303</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIPulseTimeLogicLvlBehavior(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIPulseTimeLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIPulseTimeLogicLvlBehavior(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseTimeLogicLvlBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5303</i>
	 */
	// int DAQmxResetCIPulseTimeLogicLvlBehavior(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Pulse_Time_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseTimeDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5305</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIPulseTimeDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetCIPulseTimeDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIPulseTimeDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Pulse_Time_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseTimeDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5305</i>
	 */
	// int DAQmxGetCIPulseTimeDigFltrEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseTimeDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5306</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIPulseTimeDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetCIPulseTimeDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIPulseTimeDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseTimeDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5306</i>
	 */
	// int DAQmxSetCIPulseTimeDigFltrEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseTimeDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5307</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIPulseTimeDigFltrEnable(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIPulseTimeDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIPulseTimeDigFltrEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseTimeDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5307</i>
	 */
	// int DAQmxResetCIPulseTimeDigFltrEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Pulse_Time_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseTimeDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5309</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIPulseTimeDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetCIPulseTimeDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIPulseTimeDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Pulse_Time_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseTimeDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5309</i>
	 */
	// int DAQmxGetCIPulseTimeDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseTimeDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5310</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIPulseTimeDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetCIPulseTimeDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIPulseTimeDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseTimeDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5310</i>
	 */
	// int DAQmxSetCIPulseTimeDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseTimeDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5311</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIPulseTimeDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIPulseTimeDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIPulseTimeDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseTimeDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5311</i>
	 */
	// int DAQmxResetCIPulseTimeDigFltrMinPulseWidth(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Pulse_Time_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseTimeDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5313</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIPulseTimeDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetCIPulseTimeDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIPulseTimeDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_Pulse_Time_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseTimeDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5313</i>
	 */
	// int DAQmxGetCIPulseTimeDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseTimeDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5314</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIPulseTimeDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #DAQmxSetCIPulseTimeDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIPulseTimeDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseTimeDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5314</i>
	 */
	// int DAQmxSetCIPulseTimeDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseTimeDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5315</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIPulseTimeDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIPulseTimeDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIPulseTimeDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseTimeDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5315</i>
	 */
	// int DAQmxResetCIPulseTimeDigFltrTimebaseSrc(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Pulse_Time_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseTimeDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5317</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIPulseTimeDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetCIPulseTimeDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIPulseTimeDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Pulse_Time_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseTimeDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5317</i>
	 */
	// int DAQmxGetCIPulseTimeDigFltrTimebaseRate(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseTimeDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5318</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIPulseTimeDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetCIPulseTimeDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIPulseTimeDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseTimeDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5318</i>
	 */
	// int DAQmxSetCIPulseTimeDigFltrTimebaseRate(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseTimeDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5319</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIPulseTimeDigFltrTimebaseRate(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIPulseTimeDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIPulseTimeDigFltrTimebaseRate(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseTimeDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5319</i>
	 */
	// int DAQmxResetCIPulseTimeDigFltrTimebaseRate(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Pulse_Time_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseTimeDigSyncEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5321</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIPulseTimeDigSyncEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetCIPulseTimeDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIPulseTimeDigSyncEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Pulse_Time_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseTimeDigSyncEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5321</i>
	 */
	// int DAQmxGetCIPulseTimeDigSyncEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseTimeDigSyncEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5322</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIPulseTimeDigSyncEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetCIPulseTimeDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIPulseTimeDigSyncEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseTimeDigSyncEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5322</i>
	 */
	// int DAQmxSetCIPulseTimeDigSyncEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseTimeDigSyncEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5323</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIPulseTimeDigSyncEnable(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIPulseTimeDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIPulseTimeDigSyncEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseTimeDigSyncEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5323</i>
	 */
	// int DAQmxResetCIPulseTimeDigSyncEnable(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseTimeStartEdge(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5326</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIPulseTimeStartEdge(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCIPulseTimeStartEdge(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIPulseTimeStartEdge(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseTimeStartEdge(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5326</i>
	 */
	// int DAQmxGetCIPulseTimeStartEdge(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseTimeStartEdge(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5327</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIPulseTimeStartEdge(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCIPulseTimeStartEdge(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIPulseTimeStartEdge(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseTimeStartEdge(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5327</i>
	 */
	// int DAQmxSetCIPulseTimeStartEdge(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseTimeStartEdge(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5328</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIPulseTimeStartEdge(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIPulseTimeStartEdge(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIPulseTimeStartEdge(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseTimeStartEdge(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5328</i>
	 */
	// int DAQmxResetCIPulseTimeStartEdge(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Pulse_Ticks_Term ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseTicksTerm(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5330</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIPulseTicksTerm(com.sun.jna.Pointer, byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetCIPulseTicksTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIPulseTicksTerm(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_Pulse_Ticks_Term ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseTicksTerm(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5330</i>
	 */
	// int DAQmxGetCIPulseTicksTerm(Pointer taskHandle, byte channel[], ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseTicksTerm(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5331</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIPulseTicksTerm(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #DAQmxSetCIPulseTicksTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIPulseTicksTerm(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseTicksTerm(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5331</i>
	 */
	// int DAQmxSetCIPulseTicksTerm(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseTicksTerm(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5332</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIPulseTicksTerm(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIPulseTicksTerm(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIPulseTicksTerm(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseTicksTerm(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5332</i>
	 */
	// int DAQmxResetCIPulseTicksTerm(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set InputTermCfg2<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseTicksTermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5335</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIPulseTicksTermCfg(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCIPulseTicksTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIPulseTicksTermCfg(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set InputTermCfg2<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseTicksTermCfg(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5335</i>
	 */
	// int DAQmxGetCIPulseTicksTermCfg(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseTicksTermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5336</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIPulseTicksTermCfg(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCIPulseTicksTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIPulseTicksTermCfg(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseTicksTermCfg(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5336</i>
	 */
	// int DAQmxSetCIPulseTicksTermCfg(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseTicksTermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5337</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIPulseTicksTermCfg(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIPulseTicksTermCfg(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIPulseTicksTermCfg(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseTicksTermCfg(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5337</i>
	 */
	// int DAQmxResetCIPulseTicksTermCfg(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set LogicLvlBehavior<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseTicksLogicLvlBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5340</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIPulseTicksLogicLvlBehavior(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCIPulseTicksLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIPulseTicksLogicLvlBehavior(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set LogicLvlBehavior<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseTicksLogicLvlBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5340</i>
	 */
	// int DAQmxGetCIPulseTicksLogicLvlBehavior(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseTicksLogicLvlBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5341</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIPulseTicksLogicLvlBehavior(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCIPulseTicksLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIPulseTicksLogicLvlBehavior(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseTicksLogicLvlBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5341</i>
	 */
	// int DAQmxSetCIPulseTicksLogicLvlBehavior(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseTicksLogicLvlBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5342</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIPulseTicksLogicLvlBehavior(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIPulseTicksLogicLvlBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIPulseTicksLogicLvlBehavior(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseTicksLogicLvlBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5342</i>
	 */
	// int DAQmxResetCIPulseTicksLogicLvlBehavior(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Pulse_Ticks_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseTicksDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5344</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIPulseTicksDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetCIPulseTicksDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIPulseTicksDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Pulse_Ticks_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseTicksDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5344</i>
	 */
	// int DAQmxGetCIPulseTicksDigFltrEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseTicksDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5345</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIPulseTicksDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetCIPulseTicksDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIPulseTicksDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseTicksDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5345</i>
	 */
	// int DAQmxSetCIPulseTicksDigFltrEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseTicksDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5346</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIPulseTicksDigFltrEnable(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIPulseTicksDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIPulseTicksDigFltrEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseTicksDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5346</i>
	 */
	// int DAQmxResetCIPulseTicksDigFltrEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Pulse_Ticks_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseTicksDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5348</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIPulseTicksDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetCIPulseTicksDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIPulseTicksDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Pulse_Ticks_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseTicksDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5348</i>
	 */
	// int DAQmxGetCIPulseTicksDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseTicksDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5349</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIPulseTicksDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetCIPulseTicksDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIPulseTicksDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseTicksDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5349</i>
	 */
	// int DAQmxSetCIPulseTicksDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseTicksDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5350</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIPulseTicksDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIPulseTicksDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIPulseTicksDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseTicksDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5350</i>
	 */
	// int DAQmxResetCIPulseTicksDigFltrMinPulseWidth(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Pulse_Ticks_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseTicksDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5352</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIPulseTicksDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetCIPulseTicksDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIPulseTicksDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_Pulse_Ticks_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseTicksDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5352</i>
	 */
	// int DAQmxGetCIPulseTicksDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseTicksDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5353</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIPulseTicksDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #DAQmxSetCIPulseTicksDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIPulseTicksDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseTicksDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5353</i>
	 */
	// int DAQmxSetCIPulseTicksDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseTicksDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5354</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIPulseTicksDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIPulseTicksDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIPulseTicksDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseTicksDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5354</i>
	 */
	// int DAQmxResetCIPulseTicksDigFltrTimebaseSrc(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Pulse_Ticks_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseTicksDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5356</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIPulseTicksDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetCIPulseTicksDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIPulseTicksDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Pulse_Ticks_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseTicksDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5356</i>
	 */
	// int DAQmxGetCIPulseTicksDigFltrTimebaseRate(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseTicksDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5357</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIPulseTicksDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetCIPulseTicksDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIPulseTicksDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseTicksDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5357</i>
	 */
	// int DAQmxSetCIPulseTicksDigFltrTimebaseRate(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseTicksDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5358</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIPulseTicksDigFltrTimebaseRate(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIPulseTicksDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIPulseTicksDigFltrTimebaseRate(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseTicksDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5358</i>
	 */
	// int DAQmxResetCIPulseTicksDigFltrTimebaseRate(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Pulse_Ticks_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseTicksDigSyncEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5360</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIPulseTicksDigSyncEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetCIPulseTicksDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIPulseTicksDigSyncEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Pulse_Ticks_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseTicksDigSyncEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5360</i>
	 */
	// int DAQmxGetCIPulseTicksDigSyncEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseTicksDigSyncEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5361</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIPulseTicksDigSyncEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetCIPulseTicksDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIPulseTicksDigSyncEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseTicksDigSyncEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5361</i>
	 */
	// int DAQmxSetCIPulseTicksDigSyncEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseTicksDigSyncEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5362</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIPulseTicksDigSyncEnable(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIPulseTicksDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIPulseTicksDigSyncEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseTicksDigSyncEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5362</i>
	 */
	// int DAQmxResetCIPulseTicksDigSyncEnable(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseTicksStartEdge(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5365</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIPulseTicksStartEdge(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCIPulseTicksStartEdge(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIPulseTicksStartEdge(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetCIPulseTicksStartEdge(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5365</i>
	 */
	// int DAQmxGetCIPulseTicksStartEdge(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseTicksStartEdge(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5366</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIPulseTicksStartEdge(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCIPulseTicksStartEdge(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIPulseTicksStartEdge(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPulseTicksStartEdge(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5366</i>
	 */
	// int DAQmxSetCIPulseTicksStartEdge(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseTicksStartEdge(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5367</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIPulseTicksStartEdge(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIPulseTicksStartEdge(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIPulseTicksStartEdge(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPulseTicksStartEdge(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5367</i>
	 */
	// int DAQmxResetCIPulseTicksStartEdge(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_CtrTimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCICtrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5369</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCICtrTimebaseSrc(com.sun.jna.Pointer, byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetCICtrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetCICtrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_CtrTimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCICtrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5369</i>
	 */
	// int DAQmxGetCICtrTimebaseSrc(Pointer taskHandle, byte channel[], ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCICtrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5370</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCICtrTimebaseSrc(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #DAQmxSetCICtrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetCICtrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICtrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5370</i>
	 */
	// int DAQmxSetCICtrTimebaseSrc(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICtrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5371</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCICtrTimebaseSrc(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCICtrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCICtrTimebaseSrc(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICtrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5371</i>
	 */
	// int DAQmxResetCICtrTimebaseSrc(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_CtrTimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCICtrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5373</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCICtrTimebaseRate(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetCICtrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCICtrTimebaseRate(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_CtrTimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCICtrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5373</i>
	 */
	// int DAQmxGetCICtrTimebaseRate(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICtrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5374</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCICtrTimebaseRate(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetCICtrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetCICtrTimebaseRate(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICtrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5374</i>
	 */
	// int DAQmxSetCICtrTimebaseRate(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICtrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5375</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCICtrTimebaseRate(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCICtrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCICtrTimebaseRate(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICtrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5375</i>
	 */
	// int DAQmxResetCICtrTimebaseRate(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetCICtrTimebaseActiveEdge(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5378</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCICtrTimebaseActiveEdge(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCICtrTimebaseActiveEdge(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCICtrTimebaseActiveEdge(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetCICtrTimebaseActiveEdge(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5378</i>
	 */
	// int DAQmxGetCICtrTimebaseActiveEdge(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICtrTimebaseActiveEdge(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5379</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCICtrTimebaseActiveEdge(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCICtrTimebaseActiveEdge(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCICtrTimebaseActiveEdge(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICtrTimebaseActiveEdge(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5379</i>
	 */
	// int DAQmxSetCICtrTimebaseActiveEdge(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICtrTimebaseActiveEdge(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5380</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCICtrTimebaseActiveEdge(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCICtrTimebaseActiveEdge(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCICtrTimebaseActiveEdge(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICtrTimebaseActiveEdge(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5380</i>
	 */
	// int DAQmxResetCICtrTimebaseActiveEdge(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_CtrTimebase_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCICtrTimebaseDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5382</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCICtrTimebaseDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetCICtrTimebaseDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCICtrTimebaseDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_CtrTimebase_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCICtrTimebaseDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5382</i>
	 */
	// int DAQmxGetCICtrTimebaseDigFltrEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICtrTimebaseDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5383</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCICtrTimebaseDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetCICtrTimebaseDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetCICtrTimebaseDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICtrTimebaseDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5383</i>
	 */
	// int DAQmxSetCICtrTimebaseDigFltrEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICtrTimebaseDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5384</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCICtrTimebaseDigFltrEnable(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCICtrTimebaseDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCICtrTimebaseDigFltrEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICtrTimebaseDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5384</i>
	 */
	// int DAQmxResetCICtrTimebaseDigFltrEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_CtrTimebase_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCICtrTimebaseDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5386</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCICtrTimebaseDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetCICtrTimebaseDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCICtrTimebaseDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_CtrTimebase_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCICtrTimebaseDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5386</i>
	 */
	// int DAQmxGetCICtrTimebaseDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICtrTimebaseDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5387</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCICtrTimebaseDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetCICtrTimebaseDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetCICtrTimebaseDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICtrTimebaseDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5387</i>
	 */
	// int DAQmxSetCICtrTimebaseDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICtrTimebaseDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5388</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCICtrTimebaseDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCICtrTimebaseDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCICtrTimebaseDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICtrTimebaseDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5388</i>
	 */
	// int DAQmxResetCICtrTimebaseDigFltrMinPulseWidth(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_CtrTimebase_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCICtrTimebaseDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5390</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCICtrTimebaseDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetCICtrTimebaseDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetCICtrTimebaseDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CI_CtrTimebase_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCICtrTimebaseDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5390</i>
	 */
	// int DAQmxGetCICtrTimebaseDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCICtrTimebaseDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5391</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCICtrTimebaseDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #DAQmxSetCICtrTimebaseDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetCICtrTimebaseDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICtrTimebaseDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5391</i>
	 */
	// int DAQmxSetCICtrTimebaseDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICtrTimebaseDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5392</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCICtrTimebaseDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCICtrTimebaseDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCICtrTimebaseDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICtrTimebaseDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5392</i>
	 */
	// int DAQmxResetCICtrTimebaseDigFltrTimebaseSrc(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_CtrTimebase_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCICtrTimebaseDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5394</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCICtrTimebaseDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetCICtrTimebaseDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCICtrTimebaseDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_CtrTimebase_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCICtrTimebaseDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5394</i>
	 */
	// int DAQmxGetCICtrTimebaseDigFltrTimebaseRate(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICtrTimebaseDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5395</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCICtrTimebaseDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetCICtrTimebaseDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetCICtrTimebaseDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICtrTimebaseDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5395</i>
	 */
	// int DAQmxSetCICtrTimebaseDigFltrTimebaseRate(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICtrTimebaseDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5396</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCICtrTimebaseDigFltrTimebaseRate(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCICtrTimebaseDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCICtrTimebaseDigFltrTimebaseRate(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICtrTimebaseDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5396</i>
	 */
	// int DAQmxResetCICtrTimebaseDigFltrTimebaseRate(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_CtrTimebase_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCICtrTimebaseDigSyncEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5398</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCICtrTimebaseDigSyncEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetCICtrTimebaseDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCICtrTimebaseDigSyncEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_CtrTimebase_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCICtrTimebaseDigSyncEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5398</i>
	 */
	// int DAQmxGetCICtrTimebaseDigSyncEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICtrTimebaseDigSyncEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5399</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCICtrTimebaseDigSyncEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetCICtrTimebaseDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetCICtrTimebaseDigSyncEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICtrTimebaseDigSyncEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5399</i>
	 */
	// int DAQmxSetCICtrTimebaseDigSyncEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICtrTimebaseDigSyncEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5400</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCICtrTimebaseDigSyncEnable(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCICtrTimebaseDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCICtrTimebaseDigSyncEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICtrTimebaseDigSyncEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5400</i>
	 */
	// int DAQmxResetCICtrTimebaseDigSyncEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_ThreshVoltage ***<br>
	 * Original signature : <code>int32 DAQmxGetCIThreshVoltage(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5402</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIThreshVoltage(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetCIThreshVoltage(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIThreshVoltage(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_ThreshVoltage ***<br>
	 * Original signature : <code>int32 DAQmxGetCIThreshVoltage(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5402</i>
	 */
	// int DAQmxGetCIThreshVoltage(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIThreshVoltage(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5403</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIThreshVoltage(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetCIThreshVoltage(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIThreshVoltage(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIThreshVoltage(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5403</i>
	 */
	// int DAQmxSetCIThreshVoltage(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIThreshVoltage(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5404</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIThreshVoltage(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIThreshVoltage(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIThreshVoltage(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIThreshVoltage(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5404</i>
	 */
	// int DAQmxResetCIThreshVoltage(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Count ***<br>
	 * Original signature : <code>int32 DAQmxGetCICount(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5406</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCICount(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetCICount(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCICount(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Count ***<br>
	 * Original signature : <code>int32 DAQmxGetCICount(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5406</i>
	 */
	// int DAQmxGetCICount(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Uses value set Level1<br>
	 * Original signature : <code>int32 DAQmxGetCIOutputState(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5409</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIOutputState(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCIOutputState(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIOutputState(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set Level1<br>
	 * Original signature : <code>int32 DAQmxGetCIOutputState(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5409</i>
	 */
	// int DAQmxGetCIOutputState(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_CI_TCReached ***<br>
	 * Original signature : <code>int32 DAQmxGetCITCReached(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5411</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCITCReached(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetCITCReached(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCITCReached(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_TCReached ***<br>
	 * Original signature : <code>int32 DAQmxGetCITCReached(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5411</i>
	 */
	// int DAQmxGetCITCReached(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_CtrTimebaseMasterTimebaseDiv ***<br>
	 * Original signature : <code>int32 DAQmxGetCICtrTimebaseMasterTimebaseDiv(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5413</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCICtrTimebaseMasterTimebaseDiv(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetCICtrTimebaseMasterTimebaseDiv(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCICtrTimebaseMasterTimebaseDiv(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_CtrTimebaseMasterTimebaseDiv ***<br>
	 * Original signature : <code>int32 DAQmxGetCICtrTimebaseMasterTimebaseDiv(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5413</i>
	 */
	// int DAQmxGetCICtrTimebaseMasterTimebaseDiv(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICtrTimebaseMasterTimebaseDiv(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 5414</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCICtrTimebaseMasterTimebaseDiv(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetCICtrTimebaseMasterTimebaseDiv(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetCICtrTimebaseMasterTimebaseDiv(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCICtrTimebaseMasterTimebaseDiv(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 5414</i>
	 */
	// int DAQmxSetCICtrTimebaseMasterTimebaseDiv(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCICtrTimebaseMasterTimebaseDiv(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5415</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCICtrTimebaseMasterTimebaseDiv(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCICtrTimebaseMasterTimebaseDiv(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCICtrTimebaseMasterTimebaseDiv(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCICtrTimebaseMasterTimebaseDiv(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5415</i>
	 */
	// int DAQmxResetCICtrTimebaseMasterTimebaseDiv(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set SampClkOverrunBehavior<br>
	 * Original signature : <code>int32 DAQmxGetCISampClkOverrunBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5418</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCISampClkOverrunBehavior(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCISampClkOverrunBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCISampClkOverrunBehavior(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set SampClkOverrunBehavior<br>
	 * Original signature : <code>int32 DAQmxGetCISampClkOverrunBehavior(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5418</i>
	 */
	// int DAQmxGetCISampClkOverrunBehavior(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCISampClkOverrunBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5419</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCISampClkOverrunBehavior(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCISampClkOverrunBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCISampClkOverrunBehavior(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCISampClkOverrunBehavior(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5419</i>
	 */
	// int DAQmxSetCISampClkOverrunBehavior(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCISampClkOverrunBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5420</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCISampClkOverrunBehavior(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCISampClkOverrunBehavior(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCISampClkOverrunBehavior(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCISampClkOverrunBehavior(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5420</i>
	 */
	// int DAQmxResetCISampClkOverrunBehavior(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_SampClkOverrunSentinelVal ***<br>
	 * Original signature : <code>int32 DAQmxGetCISampClkOverrunSentinelVal(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5422</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCISampClkOverrunSentinelVal(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCISampClkOverrunSentinelVal(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCISampClkOverrunSentinelVal(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_SampClkOverrunSentinelVal ***<br>
	 * Original signature : <code>int32 DAQmxGetCISampClkOverrunSentinelVal(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5422</i>
	 */
	// int DAQmxGetCISampClkOverrunSentinelVal(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCISampClkOverrunSentinelVal(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5423</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCISampClkOverrunSentinelVal(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCISampClkOverrunSentinelVal(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCISampClkOverrunSentinelVal(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCISampClkOverrunSentinelVal(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5423</i>
	 */
	// int DAQmxSetCISampClkOverrunSentinelVal(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCISampClkOverrunSentinelVal(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5424</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCISampClkOverrunSentinelVal(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCISampClkOverrunSentinelVal(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCISampClkOverrunSentinelVal(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCISampClkOverrunSentinelVal(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5424</i>
	 */
	// int DAQmxResetCISampClkOverrunSentinelVal(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set DataTransferMechanism<br>
	 * Original signature : <code>int32 DAQmxGetCIDataXferMech(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5427</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIDataXferMech(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCIDataXferMech(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIDataXferMech(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set DataTransferMechanism<br>
	 * Original signature : <code>int32 DAQmxGetCIDataXferMech(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5427</i>
	 */
	// int DAQmxGetCIDataXferMech(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIDataXferMech(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5428</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIDataXferMech(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCIDataXferMech(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIDataXferMech(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIDataXferMech(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5428</i>
	 */
	// int DAQmxSetCIDataXferMech(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIDataXferMech(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5429</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIDataXferMech(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIDataXferMech(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIDataXferMech(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIDataXferMech(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5429</i>
	 */
	// int DAQmxResetCIDataXferMech(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set InputDataTransferCondition<br>
	 * Original signature : <code>int32 DAQmxGetCIDataXferReqCond(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5432</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIDataXferReqCond(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCIDataXferReqCond(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIDataXferReqCond(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set InputDataTransferCondition<br>
	 * Original signature : <code>int32 DAQmxGetCIDataXferReqCond(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5432</i>
	 */
	// int DAQmxGetCIDataXferReqCond(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIDataXferReqCond(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5433</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIDataXferReqCond(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCIDataXferReqCond(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIDataXferReqCond(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIDataXferReqCond(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5433</i>
	 */
	// int DAQmxSetCIDataXferReqCond(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIDataXferReqCond(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5434</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIDataXferReqCond(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIDataXferReqCond(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIDataXferReqCond(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIDataXferReqCond(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5434</i>
	 */
	// int DAQmxResetCIDataXferReqCond(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_UsbXferReqSize ***<br>
	 * Original signature : <code>int32 DAQmxGetCIUsbXferReqSize(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5436</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIUsbXferReqSize(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetCIUsbXferReqSize(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIUsbXferReqSize(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_UsbXferReqSize ***<br>
	 * Original signature : <code>int32 DAQmxGetCIUsbXferReqSize(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5436</i>
	 */
	// int DAQmxGetCIUsbXferReqSize(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIUsbXferReqSize(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 5437</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIUsbXferReqSize(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetCIUsbXferReqSize(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIUsbXferReqSize(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIUsbXferReqSize(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 5437</i>
	 */
	// int DAQmxSetCIUsbXferReqSize(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIUsbXferReqSize(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5438</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIUsbXferReqSize(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIUsbXferReqSize(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIUsbXferReqSize(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIUsbXferReqSize(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5438</i>
	 */
	// int DAQmxResetCIUsbXferReqSize(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_UsbXferReqCount ***<br>
	 * Original signature : <code>int32 DAQmxGetCIUsbXferReqCount(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5440</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIUsbXferReqCount(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetCIUsbXferReqCount(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIUsbXferReqCount(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_UsbXferReqCount ***<br>
	 * Original signature : <code>int32 DAQmxGetCIUsbXferReqCount(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5440</i>
	 */
	// int DAQmxGetCIUsbXferReqCount(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIUsbXferReqCount(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 5441</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIUsbXferReqCount(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetCIUsbXferReqCount(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIUsbXferReqCount(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIUsbXferReqCount(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 5441</i>
	 */
	// int DAQmxSetCIUsbXferReqCount(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIUsbXferReqCount(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5442</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIUsbXferReqCount(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIUsbXferReqCount(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIUsbXferReqCount(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIUsbXferReqCount(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5442</i>
	 */
	// int DAQmxResetCIUsbXferReqCount(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_MemMapEnable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIMemMapEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5444</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIMemMapEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetCIMemMapEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIMemMapEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_MemMapEnable ***<br>
	 * Original signature : <code>int32 DAQmxGetCIMemMapEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5444</i>
	 */
	// int DAQmxGetCIMemMapEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIMemMapEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5445</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIMemMapEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetCIMemMapEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIMemMapEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIMemMapEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5445</i>
	 */
	// int DAQmxSetCIMemMapEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIMemMapEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5446</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIMemMapEnable(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIMemMapEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIMemMapEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIMemMapEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5446</i>
	 */
	// int DAQmxResetCIMemMapEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_NumPossiblyInvalidSamps ***<br>
	 * Original signature : <code>int32 DAQmxGetCINumPossiblyInvalidSamps(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5448</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCINumPossiblyInvalidSamps(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetCINumPossiblyInvalidSamps(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCINumPossiblyInvalidSamps(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_NumPossiblyInvalidSamps ***<br>
	 * Original signature : <code>int32 DAQmxGetCINumPossiblyInvalidSamps(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5448</i>
	 */
	// int DAQmxGetCINumPossiblyInvalidSamps(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_DupCountPrevent ***<br>
	 * Original signature : <code>int32 DAQmxGetCIDupCountPrevent(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5450</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIDupCountPrevent(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetCIDupCountPrevent(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIDupCountPrevent(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_DupCountPrevent ***<br>
	 * Original signature : <code>int32 DAQmxGetCIDupCountPrevent(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5450</i>
	 */
	// int DAQmxGetCIDupCountPrevent(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIDupCountPrevent(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5451</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIDupCountPrevent(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetCIDupCountPrevent(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIDupCountPrevent(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIDupCountPrevent(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5451</i>
	 */
	// int DAQmxSetCIDupCountPrevent(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIDupCountPrevent(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5452</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIDupCountPrevent(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIDupCountPrevent(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIDupCountPrevent(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIDupCountPrevent(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5452</i>
	 */
	// int DAQmxResetCIDupCountPrevent(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_Prescaler ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPrescaler(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5454</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIPrescaler(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetCIPrescaler(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIPrescaler(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_Prescaler ***<br>
	 * Original signature : <code>int32 DAQmxGetCIPrescaler(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5454</i>
	 */
	// int DAQmxGetCIPrescaler(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPrescaler(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 5455</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIPrescaler(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetCIPrescaler(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIPrescaler(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIPrescaler(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 5455</i>
	 */
	// int DAQmxSetCIPrescaler(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPrescaler(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5456</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIPrescaler(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIPrescaler(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIPrescaler(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIPrescaler(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5456</i>
	 */
	// int DAQmxResetCIPrescaler(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CI_MaxMeasPeriod ***<br>
	 * Original signature : <code>int32 DAQmxGetCIMaxMeasPeriod(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5458</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCIMaxMeasPeriod(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetCIMaxMeasPeriod(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCIMaxMeasPeriod(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CI_MaxMeasPeriod ***<br>
	 * Original signature : <code>int32 DAQmxGetCIMaxMeasPeriod(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5458</i>
	 */
	// int DAQmxGetCIMaxMeasPeriod(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIMaxMeasPeriod(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5459</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCIMaxMeasPeriod(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetCIMaxMeasPeriod(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetCIMaxMeasPeriod(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCIMaxMeasPeriod(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5459</i>
	 */
	// int DAQmxSetCIMaxMeasPeriod(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCIMaxMeasPeriod(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5460</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCIMaxMeasPeriod(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCIMaxMeasPeriod(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCIMaxMeasPeriod(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCIMaxMeasPeriod(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5460</i>
	 */
	// int DAQmxResetCIMaxMeasPeriod(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set COOutputType<br>
	 * Original signature : <code>int32 DAQmxGetCOOutputType(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5463</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCOOutputType(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCOOutputType(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCOOutputType(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set COOutputType<br>
	 * Original signature : <code>int32 DAQmxGetCOOutputType(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5463</i>
	 */
	// int DAQmxGetCOOutputType(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Uses value set Level1<br>
	 * Original signature : <code>int32 DAQmxGetCOPulseIdleState(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5466</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCOPulseIdleState(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCOPulseIdleState(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCOPulseIdleState(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set Level1<br>
	 * Original signature : <code>int32 DAQmxGetCOPulseIdleState(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5466</i>
	 */
	// int DAQmxGetCOPulseIdleState(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOPulseIdleState(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5467</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCOPulseIdleState(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCOPulseIdleState(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCOPulseIdleState(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOPulseIdleState(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5467</i>
	 */
	// int DAQmxSetCOPulseIdleState(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCOPulseIdleState(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5468</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCOPulseIdleState(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCOPulseIdleState(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCOPulseIdleState(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCOPulseIdleState(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5468</i>
	 */
	// int DAQmxResetCOPulseIdleState(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CO_Pulse_Term ***<br>
	 * Original signature : <code>int32 DAQmxGetCOPulseTerm(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5470</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCOPulseTerm(com.sun.jna.Pointer, byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetCOPulseTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetCOPulseTerm(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CO_Pulse_Term ***<br>
	 * Original signature : <code>int32 DAQmxGetCOPulseTerm(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5470</i>
	 */
	// int DAQmxGetCOPulseTerm(Pointer taskHandle, byte channel[], ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCOPulseTerm(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5471</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCOPulseTerm(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #DAQmxSetCOPulseTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetCOPulseTerm(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOPulseTerm(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5471</i>
	 */
	// int DAQmxSetCOPulseTerm(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCOPulseTerm(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5472</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCOPulseTerm(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCOPulseTerm(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCOPulseTerm(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCOPulseTerm(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5472</i>
	 */
	// int DAQmxResetCOPulseTerm(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set TimeUnits2<br>
	 * Original signature : <code>int32 DAQmxGetCOPulseTimeUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5475</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCOPulseTimeUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCOPulseTimeUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCOPulseTimeUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set TimeUnits2<br>
	 * Original signature : <code>int32 DAQmxGetCOPulseTimeUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5475</i>
	 */
	// int DAQmxGetCOPulseTimeUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOPulseTimeUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5476</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCOPulseTimeUnits(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCOPulseTimeUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCOPulseTimeUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOPulseTimeUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5476</i>
	 */
	// int DAQmxSetCOPulseTimeUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCOPulseTimeUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5477</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCOPulseTimeUnits(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCOPulseTimeUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCOPulseTimeUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCOPulseTimeUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5477</i>
	 */
	// int DAQmxResetCOPulseTimeUnits(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CO_Pulse_HighTime ***<br>
	 * Original signature : <code>int32 DAQmxGetCOPulseHighTime(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5479</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCOPulseHighTime(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetCOPulseHighTime(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCOPulseHighTime(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CO_Pulse_HighTime ***<br>
	 * Original signature : <code>int32 DAQmxGetCOPulseHighTime(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5479</i>
	 */
	// int DAQmxGetCOPulseHighTime(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOPulseHighTime(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5480</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCOPulseHighTime(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetCOPulseHighTime(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetCOPulseHighTime(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOPulseHighTime(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5480</i>
	 */
	// int DAQmxSetCOPulseHighTime(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCOPulseHighTime(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5481</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCOPulseHighTime(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCOPulseHighTime(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCOPulseHighTime(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCOPulseHighTime(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5481</i>
	 */
	// int DAQmxResetCOPulseHighTime(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CO_Pulse_LowTime ***<br>
	 * Original signature : <code>int32 DAQmxGetCOPulseLowTime(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5483</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCOPulseLowTime(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetCOPulseLowTime(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCOPulseLowTime(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CO_Pulse_LowTime ***<br>
	 * Original signature : <code>int32 DAQmxGetCOPulseLowTime(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5483</i>
	 */
	// int DAQmxGetCOPulseLowTime(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOPulseLowTime(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5484</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCOPulseLowTime(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetCOPulseLowTime(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetCOPulseLowTime(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOPulseLowTime(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5484</i>
	 */
	// int DAQmxSetCOPulseLowTime(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCOPulseLowTime(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5485</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCOPulseLowTime(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCOPulseLowTime(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCOPulseLowTime(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCOPulseLowTime(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5485</i>
	 */
	// int DAQmxResetCOPulseLowTime(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CO_Pulse_Time_InitialDelay ***<br>
	 * Original signature : <code>int32 DAQmxGetCOPulseTimeInitialDelay(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5487</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCOPulseTimeInitialDelay(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetCOPulseTimeInitialDelay(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCOPulseTimeInitialDelay(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CO_Pulse_Time_InitialDelay ***<br>
	 * Original signature : <code>int32 DAQmxGetCOPulseTimeInitialDelay(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5487</i>
	 */
	// int DAQmxGetCOPulseTimeInitialDelay(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOPulseTimeInitialDelay(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5488</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCOPulseTimeInitialDelay(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetCOPulseTimeInitialDelay(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetCOPulseTimeInitialDelay(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOPulseTimeInitialDelay(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5488</i>
	 */
	// int DAQmxSetCOPulseTimeInitialDelay(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCOPulseTimeInitialDelay(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5489</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCOPulseTimeInitialDelay(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCOPulseTimeInitialDelay(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCOPulseTimeInitialDelay(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCOPulseTimeInitialDelay(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5489</i>
	 */
	// int DAQmxResetCOPulseTimeInitialDelay(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CO_Pulse_DutyCyc ***<br>
	 * Original signature : <code>int32 DAQmxGetCOPulseDutyCyc(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5491</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCOPulseDutyCyc(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetCOPulseDutyCyc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCOPulseDutyCyc(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CO_Pulse_DutyCyc ***<br>
	 * Original signature : <code>int32 DAQmxGetCOPulseDutyCyc(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5491</i>
	 */
	// int DAQmxGetCOPulseDutyCyc(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOPulseDutyCyc(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5492</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCOPulseDutyCyc(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetCOPulseDutyCyc(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetCOPulseDutyCyc(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOPulseDutyCyc(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5492</i>
	 */
	// int DAQmxSetCOPulseDutyCyc(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCOPulseDutyCyc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5493</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCOPulseDutyCyc(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCOPulseDutyCyc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCOPulseDutyCyc(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCOPulseDutyCyc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5493</i>
	 */
	// int DAQmxResetCOPulseDutyCyc(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set FrequencyUnits2<br>
	 * Original signature : <code>int32 DAQmxGetCOPulseFreqUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5496</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCOPulseFreqUnits(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCOPulseFreqUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCOPulseFreqUnits(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set FrequencyUnits2<br>
	 * Original signature : <code>int32 DAQmxGetCOPulseFreqUnits(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5496</i>
	 */
	// int DAQmxGetCOPulseFreqUnits(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOPulseFreqUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5497</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCOPulseFreqUnits(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCOPulseFreqUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCOPulseFreqUnits(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOPulseFreqUnits(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5497</i>
	 */
	// int DAQmxSetCOPulseFreqUnits(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCOPulseFreqUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5498</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCOPulseFreqUnits(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCOPulseFreqUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCOPulseFreqUnits(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCOPulseFreqUnits(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5498</i>
	 */
	// int DAQmxResetCOPulseFreqUnits(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CO_Pulse_Freq ***<br>
	 * Original signature : <code>int32 DAQmxGetCOPulseFreq(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5500</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCOPulseFreq(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetCOPulseFreq(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCOPulseFreq(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CO_Pulse_Freq ***<br>
	 * Original signature : <code>int32 DAQmxGetCOPulseFreq(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5500</i>
	 */
	// int DAQmxGetCOPulseFreq(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOPulseFreq(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5501</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCOPulseFreq(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetCOPulseFreq(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetCOPulseFreq(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOPulseFreq(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5501</i>
	 */
	// int DAQmxSetCOPulseFreq(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCOPulseFreq(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5502</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCOPulseFreq(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCOPulseFreq(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCOPulseFreq(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCOPulseFreq(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5502</i>
	 */
	// int DAQmxResetCOPulseFreq(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CO_Pulse_Freq_InitialDelay ***<br>
	 * Original signature : <code>int32 DAQmxGetCOPulseFreqInitialDelay(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5504</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCOPulseFreqInitialDelay(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetCOPulseFreqInitialDelay(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCOPulseFreqInitialDelay(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CO_Pulse_Freq_InitialDelay ***<br>
	 * Original signature : <code>int32 DAQmxGetCOPulseFreqInitialDelay(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5504</i>
	 */
	// int DAQmxGetCOPulseFreqInitialDelay(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOPulseFreqInitialDelay(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5505</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCOPulseFreqInitialDelay(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetCOPulseFreqInitialDelay(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetCOPulseFreqInitialDelay(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOPulseFreqInitialDelay(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5505</i>
	 */
	// int DAQmxSetCOPulseFreqInitialDelay(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCOPulseFreqInitialDelay(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5506</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCOPulseFreqInitialDelay(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCOPulseFreqInitialDelay(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCOPulseFreqInitialDelay(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCOPulseFreqInitialDelay(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5506</i>
	 */
	// int DAQmxResetCOPulseFreqInitialDelay(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CO_Pulse_HighTicks ***<br>
	 * Original signature : <code>int32 DAQmxGetCOPulseHighTicks(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5508</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCOPulseHighTicks(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetCOPulseHighTicks(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCOPulseHighTicks(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CO_Pulse_HighTicks ***<br>
	 * Original signature : <code>int32 DAQmxGetCOPulseHighTicks(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5508</i>
	 */
	// int DAQmxGetCOPulseHighTicks(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOPulseHighTicks(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 5509</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCOPulseHighTicks(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetCOPulseHighTicks(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetCOPulseHighTicks(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOPulseHighTicks(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 5509</i>
	 */
	// int DAQmxSetCOPulseHighTicks(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCOPulseHighTicks(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5510</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCOPulseHighTicks(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCOPulseHighTicks(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCOPulseHighTicks(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCOPulseHighTicks(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5510</i>
	 */
	// int DAQmxResetCOPulseHighTicks(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CO_Pulse_LowTicks ***<br>
	 * Original signature : <code>int32 DAQmxGetCOPulseLowTicks(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5512</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCOPulseLowTicks(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetCOPulseLowTicks(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCOPulseLowTicks(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CO_Pulse_LowTicks ***<br>
	 * Original signature : <code>int32 DAQmxGetCOPulseLowTicks(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5512</i>
	 */
	// int DAQmxGetCOPulseLowTicks(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOPulseLowTicks(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 5513</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCOPulseLowTicks(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetCOPulseLowTicks(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetCOPulseLowTicks(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOPulseLowTicks(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 5513</i>
	 */
	// int DAQmxSetCOPulseLowTicks(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCOPulseLowTicks(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5514</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCOPulseLowTicks(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCOPulseLowTicks(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCOPulseLowTicks(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCOPulseLowTicks(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5514</i>
	 */
	// int DAQmxResetCOPulseLowTicks(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CO_Pulse_Ticks_InitialDelay ***<br>
	 * Original signature : <code>int32 DAQmxGetCOPulseTicksInitialDelay(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5516</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCOPulseTicksInitialDelay(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetCOPulseTicksInitialDelay(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCOPulseTicksInitialDelay(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CO_Pulse_Ticks_InitialDelay ***<br>
	 * Original signature : <code>int32 DAQmxGetCOPulseTicksInitialDelay(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5516</i>
	 */
	// int DAQmxGetCOPulseTicksInitialDelay(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOPulseTicksInitialDelay(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 5517</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCOPulseTicksInitialDelay(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetCOPulseTicksInitialDelay(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetCOPulseTicksInitialDelay(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOPulseTicksInitialDelay(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 5517</i>
	 */
	// int DAQmxSetCOPulseTicksInitialDelay(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCOPulseTicksInitialDelay(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5518</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCOPulseTicksInitialDelay(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCOPulseTicksInitialDelay(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCOPulseTicksInitialDelay(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCOPulseTicksInitialDelay(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5518</i>
	 */
	// int DAQmxResetCOPulseTicksInitialDelay(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CO_CtrTimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCOCtrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5520</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCOCtrTimebaseSrc(com.sun.jna.Pointer, byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetCOCtrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetCOCtrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CO_CtrTimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCOCtrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5520</i>
	 */
	// int DAQmxGetCOCtrTimebaseSrc(Pointer taskHandle, byte channel[], ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCOCtrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5521</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCOCtrTimebaseSrc(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #DAQmxSetCOCtrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetCOCtrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOCtrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5521</i>
	 */
	// int DAQmxSetCOCtrTimebaseSrc(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCOCtrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5522</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCOCtrTimebaseSrc(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCOCtrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCOCtrTimebaseSrc(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCOCtrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5522</i>
	 */
	// int DAQmxResetCOCtrTimebaseSrc(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CO_CtrTimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCOCtrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5524</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCOCtrTimebaseRate(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetCOCtrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCOCtrTimebaseRate(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CO_CtrTimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCOCtrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5524</i>
	 */
	// int DAQmxGetCOCtrTimebaseRate(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOCtrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5525</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCOCtrTimebaseRate(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetCOCtrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetCOCtrTimebaseRate(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOCtrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5525</i>
	 */
	// int DAQmxSetCOCtrTimebaseRate(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCOCtrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5526</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCOCtrTimebaseRate(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCOCtrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCOCtrTimebaseRate(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCOCtrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5526</i>
	 */
	// int DAQmxResetCOCtrTimebaseRate(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetCOCtrTimebaseActiveEdge(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5529</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCOCtrTimebaseActiveEdge(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCOCtrTimebaseActiveEdge(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCOCtrTimebaseActiveEdge(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetCOCtrTimebaseActiveEdge(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5529</i>
	 */
	// int DAQmxGetCOCtrTimebaseActiveEdge(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOCtrTimebaseActiveEdge(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5530</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCOCtrTimebaseActiveEdge(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCOCtrTimebaseActiveEdge(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCOCtrTimebaseActiveEdge(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOCtrTimebaseActiveEdge(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5530</i>
	 */
	// int DAQmxSetCOCtrTimebaseActiveEdge(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCOCtrTimebaseActiveEdge(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5531</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCOCtrTimebaseActiveEdge(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCOCtrTimebaseActiveEdge(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCOCtrTimebaseActiveEdge(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCOCtrTimebaseActiveEdge(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5531</i>
	 */
	// int DAQmxResetCOCtrTimebaseActiveEdge(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CO_CtrTimebase_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCOCtrTimebaseDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5533</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCOCtrTimebaseDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetCOCtrTimebaseDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCOCtrTimebaseDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CO_CtrTimebase_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCOCtrTimebaseDigFltrEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5533</i>
	 */
	// int DAQmxGetCOCtrTimebaseDigFltrEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOCtrTimebaseDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5534</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCOCtrTimebaseDigFltrEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetCOCtrTimebaseDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetCOCtrTimebaseDigFltrEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOCtrTimebaseDigFltrEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5534</i>
	 */
	// int DAQmxSetCOCtrTimebaseDigFltrEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCOCtrTimebaseDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5535</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCOCtrTimebaseDigFltrEnable(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCOCtrTimebaseDigFltrEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCOCtrTimebaseDigFltrEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCOCtrTimebaseDigFltrEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5535</i>
	 */
	// int DAQmxResetCOCtrTimebaseDigFltrEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CO_CtrTimebase_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCOCtrTimebaseDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5537</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCOCtrTimebaseDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetCOCtrTimebaseDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCOCtrTimebaseDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CO_CtrTimebase_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetCOCtrTimebaseDigFltrMinPulseWidth(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5537</i>
	 */
	// int DAQmxGetCOCtrTimebaseDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOCtrTimebaseDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5538</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCOCtrTimebaseDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetCOCtrTimebaseDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetCOCtrTimebaseDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOCtrTimebaseDigFltrMinPulseWidth(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5538</i>
	 */
	// int DAQmxSetCOCtrTimebaseDigFltrMinPulseWidth(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCOCtrTimebaseDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5539</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCOCtrTimebaseDigFltrMinPulseWidth(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCOCtrTimebaseDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCOCtrTimebaseDigFltrMinPulseWidth(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCOCtrTimebaseDigFltrMinPulseWidth(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5539</i>
	 */
	// int DAQmxResetCOCtrTimebaseDigFltrMinPulseWidth(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CO_CtrTimebase_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCOCtrTimebaseDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5541</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCOCtrTimebaseDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetCOCtrTimebaseDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetCOCtrTimebaseDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_CO_CtrTimebase_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetCOCtrTimebaseDigFltrTimebaseSrc(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5541</i>
	 */
	// int DAQmxGetCOCtrTimebaseDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetCOCtrTimebaseDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5542</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCOCtrTimebaseDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #DAQmxSetCOCtrTimebaseDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetCOCtrTimebaseDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOCtrTimebaseDigFltrTimebaseSrc(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5542</i>
	 */
	// int DAQmxSetCOCtrTimebaseDigFltrTimebaseSrc(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetCOCtrTimebaseDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5543</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCOCtrTimebaseDigFltrTimebaseSrc(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCOCtrTimebaseDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCOCtrTimebaseDigFltrTimebaseSrc(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCOCtrTimebaseDigFltrTimebaseSrc(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5543</i>
	 */
	// int DAQmxResetCOCtrTimebaseDigFltrTimebaseSrc(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CO_CtrTimebase_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCOCtrTimebaseDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5545</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCOCtrTimebaseDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetCOCtrTimebaseDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCOCtrTimebaseDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CO_CtrTimebase_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetCOCtrTimebaseDigFltrTimebaseRate(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 5545</i>
	 */
	// int DAQmxGetCOCtrTimebaseDigFltrTimebaseRate(Pointer taskHandle, byte channel[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOCtrTimebaseDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5546</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCOCtrTimebaseDigFltrTimebaseRate(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetCOCtrTimebaseDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetCOCtrTimebaseDigFltrTimebaseRate(Pointer taskHandle, Pointer channel, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOCtrTimebaseDigFltrTimebaseRate(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 5546</i>
	 */
	// int DAQmxSetCOCtrTimebaseDigFltrTimebaseRate(Pointer taskHandle, byte channel[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetCOCtrTimebaseDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5547</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCOCtrTimebaseDigFltrTimebaseRate(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCOCtrTimebaseDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCOCtrTimebaseDigFltrTimebaseRate(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCOCtrTimebaseDigFltrTimebaseRate(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5547</i>
	 */
	// int DAQmxResetCOCtrTimebaseDigFltrTimebaseRate(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CO_CtrTimebase_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCOCtrTimebaseDigSyncEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5549</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCOCtrTimebaseDigSyncEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetCOCtrTimebaseDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCOCtrTimebaseDigSyncEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CO_CtrTimebase_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetCOCtrTimebaseDigSyncEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5549</i>
	 */
	// int DAQmxGetCOCtrTimebaseDigSyncEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOCtrTimebaseDigSyncEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5550</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCOCtrTimebaseDigSyncEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetCOCtrTimebaseDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetCOCtrTimebaseDigSyncEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOCtrTimebaseDigSyncEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5550</i>
	 */
	// int DAQmxSetCOCtrTimebaseDigSyncEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCOCtrTimebaseDigSyncEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5551</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCOCtrTimebaseDigSyncEnable(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCOCtrTimebaseDigSyncEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCOCtrTimebaseDigSyncEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCOCtrTimebaseDigSyncEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5551</i>
	 */
	// int DAQmxResetCOCtrTimebaseDigSyncEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CO_Count ***<br>
	 * Original signature : <code>int32 DAQmxGetCOCount(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5553</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCOCount(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetCOCount(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCOCount(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CO_Count ***<br>
	 * Original signature : <code>int32 DAQmxGetCOCount(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5553</i>
	 */
	// int DAQmxGetCOCount(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Uses value set Level1<br>
	 * Original signature : <code>int32 DAQmxGetCOOutputState(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5556</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCOOutputState(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCOOutputState(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCOOutputState(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set Level1<br>
	 * Original signature : <code>int32 DAQmxGetCOOutputState(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5556</i>
	 */
	// int DAQmxGetCOOutputState(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_CO_AutoIncrCnt ***<br>
	 * Original signature : <code>int32 DAQmxGetCOAutoIncrCnt(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5558</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCOAutoIncrCnt(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetCOAutoIncrCnt(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCOAutoIncrCnt(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CO_AutoIncrCnt ***<br>
	 * Original signature : <code>int32 DAQmxGetCOAutoIncrCnt(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5558</i>
	 */
	// int DAQmxGetCOAutoIncrCnt(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOAutoIncrCnt(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 5559</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCOAutoIncrCnt(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetCOAutoIncrCnt(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetCOAutoIncrCnt(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOAutoIncrCnt(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 5559</i>
	 */
	// int DAQmxSetCOAutoIncrCnt(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCOAutoIncrCnt(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5560</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCOAutoIncrCnt(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCOAutoIncrCnt(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCOAutoIncrCnt(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCOAutoIncrCnt(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5560</i>
	 */
	// int DAQmxResetCOAutoIncrCnt(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CO_CtrTimebaseMasterTimebaseDiv ***<br>
	 * Original signature : <code>int32 DAQmxGetCOCtrTimebaseMasterTimebaseDiv(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5562</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCOCtrTimebaseMasterTimebaseDiv(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetCOCtrTimebaseMasterTimebaseDiv(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCOCtrTimebaseMasterTimebaseDiv(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CO_CtrTimebaseMasterTimebaseDiv ***<br>
	 * Original signature : <code>int32 DAQmxGetCOCtrTimebaseMasterTimebaseDiv(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5562</i>
	 */
	// int DAQmxGetCOCtrTimebaseMasterTimebaseDiv(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOCtrTimebaseMasterTimebaseDiv(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 5563</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCOCtrTimebaseMasterTimebaseDiv(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetCOCtrTimebaseMasterTimebaseDiv(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetCOCtrTimebaseMasterTimebaseDiv(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOCtrTimebaseMasterTimebaseDiv(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 5563</i>
	 */
	// int DAQmxSetCOCtrTimebaseMasterTimebaseDiv(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCOCtrTimebaseMasterTimebaseDiv(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5564</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCOCtrTimebaseMasterTimebaseDiv(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCOCtrTimebaseMasterTimebaseDiv(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCOCtrTimebaseMasterTimebaseDiv(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCOCtrTimebaseMasterTimebaseDiv(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5564</i>
	 */
	// int DAQmxResetCOCtrTimebaseMasterTimebaseDiv(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CO_PulseDone ***<br>
	 * Original signature : <code>int32 DAQmxGetCOPulseDone(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5566</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCOPulseDone(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetCOPulseDone(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCOPulseDone(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CO_PulseDone ***<br>
	 * Original signature : <code>int32 DAQmxGetCOPulseDone(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5566</i>
	 */
	// int DAQmxGetCOPulseDone(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CO_EnableInitialDelayOnRetrigger ***<br>
	 * Original signature : <code>int32 DAQmxGetCOEnableInitialDelayOnRetrigger(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5568</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCOEnableInitialDelayOnRetrigger(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetCOEnableInitialDelayOnRetrigger(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCOEnableInitialDelayOnRetrigger(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CO_EnableInitialDelayOnRetrigger ***<br>
	 * Original signature : <code>int32 DAQmxGetCOEnableInitialDelayOnRetrigger(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5568</i>
	 */
	// int DAQmxGetCOEnableInitialDelayOnRetrigger(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOEnableInitialDelayOnRetrigger(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5569</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCOEnableInitialDelayOnRetrigger(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetCOEnableInitialDelayOnRetrigger(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetCOEnableInitialDelayOnRetrigger(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOEnableInitialDelayOnRetrigger(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5569</i>
	 */
	// int DAQmxSetCOEnableInitialDelayOnRetrigger(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCOEnableInitialDelayOnRetrigger(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5570</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCOEnableInitialDelayOnRetrigger(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCOEnableInitialDelayOnRetrigger(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCOEnableInitialDelayOnRetrigger(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCOEnableInitialDelayOnRetrigger(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5570</i>
	 */
	// int DAQmxResetCOEnableInitialDelayOnRetrigger(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set ConstrainedGenMode<br>
	 * Original signature : <code>int32 DAQmxGetCOConstrainedGenMode(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5573</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCOConstrainedGenMode(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCOConstrainedGenMode(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCOConstrainedGenMode(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set ConstrainedGenMode<br>
	 * Original signature : <code>int32 DAQmxGetCOConstrainedGenMode(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5573</i>
	 */
	// int DAQmxGetCOConstrainedGenMode(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOConstrainedGenMode(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5574</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCOConstrainedGenMode(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCOConstrainedGenMode(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCOConstrainedGenMode(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOConstrainedGenMode(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5574</i>
	 */
	// int DAQmxSetCOConstrainedGenMode(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCOConstrainedGenMode(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5575</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCOConstrainedGenMode(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCOConstrainedGenMode(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCOConstrainedGenMode(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCOConstrainedGenMode(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5575</i>
	 */
	// int DAQmxResetCOConstrainedGenMode(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CO_UseOnlyOnBrdMem ***<br>
	 * Original signature : <code>int32 DAQmxGetCOUseOnlyOnBrdMem(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5577</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCOUseOnlyOnBrdMem(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetCOUseOnlyOnBrdMem(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCOUseOnlyOnBrdMem(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CO_UseOnlyOnBrdMem ***<br>
	 * Original signature : <code>int32 DAQmxGetCOUseOnlyOnBrdMem(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5577</i>
	 */
	// int DAQmxGetCOUseOnlyOnBrdMem(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOUseOnlyOnBrdMem(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5578</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCOUseOnlyOnBrdMem(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetCOUseOnlyOnBrdMem(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetCOUseOnlyOnBrdMem(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOUseOnlyOnBrdMem(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5578</i>
	 */
	// int DAQmxSetCOUseOnlyOnBrdMem(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCOUseOnlyOnBrdMem(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5579</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCOUseOnlyOnBrdMem(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCOUseOnlyOnBrdMem(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCOUseOnlyOnBrdMem(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCOUseOnlyOnBrdMem(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5579</i>
	 */
	// int DAQmxResetCOUseOnlyOnBrdMem(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set DataTransferMechanism<br>
	 * Original signature : <code>int32 DAQmxGetCODataXferMech(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5582</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCODataXferMech(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCODataXferMech(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCODataXferMech(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set DataTransferMechanism<br>
	 * Original signature : <code>int32 DAQmxGetCODataXferMech(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5582</i>
	 */
	// int DAQmxGetCODataXferMech(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCODataXferMech(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5583</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCODataXferMech(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCODataXferMech(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCODataXferMech(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCODataXferMech(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5583</i>
	 */
	// int DAQmxSetCODataXferMech(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCODataXferMech(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5584</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCODataXferMech(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCODataXferMech(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCODataXferMech(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCODataXferMech(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5584</i>
	 */
	// int DAQmxResetCODataXferMech(Pointer taskHandle, byte channel[]);
	/**
	 * Uses value set OutputDataTransferCondition<br>
	 * Original signature : <code>int32 DAQmxGetCODataXferReqCond(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5587</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCODataXferReqCond(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetCODataXferReqCond(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCODataXferReqCond(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set OutputDataTransferCondition<br>
	 * Original signature : <code>int32 DAQmxGetCODataXferReqCond(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5587</i>
	 */
	// int DAQmxGetCODataXferReqCond(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetCODataXferReqCond(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5588</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCODataXferReqCond(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetCODataXferReqCond(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetCODataXferReqCond(Pointer taskHandle, Pointer channel, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetCODataXferReqCond(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 5588</i>
	 */
	// int DAQmxSetCODataXferReqCond(Pointer taskHandle, byte channel[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetCODataXferReqCond(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5589</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCODataXferReqCond(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCODataXferReqCond(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCODataXferReqCond(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCODataXferReqCond(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5589</i>
	 */
	// int DAQmxResetCODataXferReqCond(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CO_UsbXferReqSize ***<br>
	 * Original signature : <code>int32 DAQmxGetCOUsbXferReqSize(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5591</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCOUsbXferReqSize(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetCOUsbXferReqSize(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCOUsbXferReqSize(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CO_UsbXferReqSize ***<br>
	 * Original signature : <code>int32 DAQmxGetCOUsbXferReqSize(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5591</i>
	 */
	// int DAQmxGetCOUsbXferReqSize(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOUsbXferReqSize(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 5592</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCOUsbXferReqSize(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetCOUsbXferReqSize(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetCOUsbXferReqSize(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOUsbXferReqSize(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 5592</i>
	 */
	// int DAQmxSetCOUsbXferReqSize(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCOUsbXferReqSize(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5593</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCOUsbXferReqSize(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCOUsbXferReqSize(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCOUsbXferReqSize(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCOUsbXferReqSize(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5593</i>
	 */
	// int DAQmxResetCOUsbXferReqSize(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CO_UsbXferReqCount ***<br>
	 * Original signature : <code>int32 DAQmxGetCOUsbXferReqCount(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5595</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCOUsbXferReqCount(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetCOUsbXferReqCount(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCOUsbXferReqCount(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CO_UsbXferReqCount ***<br>
	 * Original signature : <code>int32 DAQmxGetCOUsbXferReqCount(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5595</i>
	 */
	// int DAQmxGetCOUsbXferReqCount(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOUsbXferReqCount(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 5596</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCOUsbXferReqCount(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetCOUsbXferReqCount(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetCOUsbXferReqCount(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOUsbXferReqCount(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 5596</i>
	 */
	// int DAQmxSetCOUsbXferReqCount(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCOUsbXferReqCount(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5597</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCOUsbXferReqCount(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCOUsbXferReqCount(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCOUsbXferReqCount(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCOUsbXferReqCount(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5597</i>
	 */
	// int DAQmxResetCOUsbXferReqCount(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CO_MemMapEnable ***<br>
	 * Original signature : <code>int32 DAQmxGetCOMemMapEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5599</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCOMemMapEnable(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetCOMemMapEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCOMemMapEnable(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CO_MemMapEnable ***<br>
	 * Original signature : <code>int32 DAQmxGetCOMemMapEnable(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5599</i>
	 */
	// int DAQmxGetCOMemMapEnable(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOMemMapEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5600</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCOMemMapEnable(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetCOMemMapEnable(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetCOMemMapEnable(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOMemMapEnable(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 5600</i>
	 */
	// int DAQmxSetCOMemMapEnable(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCOMemMapEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5601</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCOMemMapEnable(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCOMemMapEnable(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCOMemMapEnable(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCOMemMapEnable(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5601</i>
	 */
	// int DAQmxResetCOMemMapEnable(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CO_Prescaler ***<br>
	 * Original signature : <code>int32 DAQmxGetCOPrescaler(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5603</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCOPrescaler(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetCOPrescaler(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCOPrescaler(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CO_Prescaler ***<br>
	 * Original signature : <code>int32 DAQmxGetCOPrescaler(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5603</i>
	 */
	// int DAQmxGetCOPrescaler(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOPrescaler(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 5604</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetCOPrescaler(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetCOPrescaler(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetCOPrescaler(Pointer taskHandle, Pointer channel, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetCOPrescaler(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 5604</i>
	 */
	// int DAQmxSetCOPrescaler(Pointer taskHandle, byte channel[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetCOPrescaler(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5605</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetCOPrescaler(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetCOPrescaler(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetCOPrescaler(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetCOPrescaler(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5605</i>
	 */
	// int DAQmxResetCOPrescaler(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_CO_RdyForNewVal ***<br>
	 * Original signature : <code>int32 DAQmxGetCORdyForNewVal(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5607</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCORdyForNewVal(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetCORdyForNewVal(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCORdyForNewVal(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_CO_RdyForNewVal ***<br>
	 * Original signature : <code>int32 DAQmxGetCORdyForNewVal(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5607</i>
	 */
	// int DAQmxGetCORdyForNewVal(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * Uses value set ChannelType<br>
	 * Original signature : <code>int32 DAQmxGetChanType(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5610</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetChanType(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetChanType(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetChanType(Pointer taskHandle, Pointer channel, IntByReference data);
	/**
	 * Uses value set ChannelType<br>
	 * Original signature : <code>int32 DAQmxGetChanType(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 5610</i>
	 */
	// int DAQmxGetChanType(Pointer taskHandle, byte channel[], IntBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_PhysicalChanName ***<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanName(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5612</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetPhysicalChanName(com.sun.jna.Pointer, byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetPhysicalChanName(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetPhysicalChanName(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_PhysicalChanName ***<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanName(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5612</i>
	 */
	// int DAQmxGetPhysicalChanName(Pointer taskHandle, byte channel[], ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetPhysicalChanName(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5613</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetPhysicalChanName(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #DAQmxSetPhysicalChanName(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetPhysicalChanName(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetPhysicalChanName(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5613</i>
	 */
	// int DAQmxSetPhysicalChanName(Pointer taskHandle, byte channel[], String data);
	/**
	 * *** Set/Get functions for DAQmx_ChanDescr ***<br>
	 * Original signature : <code>int32 DAQmxGetChanDescr(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5615</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetChanDescr(com.sun.jna.Pointer, byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetChanDescr(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetChanDescr(Pointer taskHandle, Pointer channel, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_ChanDescr ***<br>
	 * Original signature : <code>int32 DAQmxGetChanDescr(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5615</i>
	 */
	// int DAQmxGetChanDescr(Pointer taskHandle, byte channel[], ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetChanDescr(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5616</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetChanDescr(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #DAQmxSetChanDescr(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetChanDescr(Pointer taskHandle, Pointer channel, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetChanDescr(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 5616</i>
	 */
	// int DAQmxSetChanDescr(Pointer taskHandle, byte channel[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetChanDescr(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5617</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetChanDescr(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetChanDescr(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetChanDescr(Pointer taskHandle, Pointer channel);
	/**
	 * Original signature : <code>int32 DAQmxResetChanDescr(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 5617</i>
	 */
	// int DAQmxResetChanDescr(Pointer taskHandle, byte channel[]);
	/**
	 * *** Set/Get functions for DAQmx_ChanIsGlobal ***<br>
	 * Original signature : <code>int32 DAQmxGetChanIsGlobal(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5619</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetChanIsGlobal(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetChanIsGlobal(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetChanIsGlobal(Pointer taskHandle, Pointer channel, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_ChanIsGlobal ***<br>
	 * Original signature : <code>int32 DAQmxGetChanIsGlobal(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 5619</i>
	 */
	// int DAQmxGetChanIsGlobal(Pointer taskHandle, byte channel[], NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Exported_AIConvClk_OutputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedAIConvClkOutputTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 5623</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetExportedAIConvClkOutputTerm(com.sun.jna.Pointer, java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetExportedAIConvClkOutputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetExportedAIConvClkOutputTerm(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Exported_AIConvClk_OutputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedAIConvClkOutputTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 5623</i>
	 */
	// int DAQmxGetExportedAIConvClkOutputTerm(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedAIConvClkOutputTerm(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 5624</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetExportedAIConvClkOutputTerm(com.sun.jna.Pointer, java.lang.String)} and {@link #DAQmxSetExportedAIConvClkOutputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetExportedAIConvClkOutputTerm(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedAIConvClkOutputTerm(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 5624</i>
	 */
	// int DAQmxSetExportedAIConvClkOutputTerm(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedAIConvClkOutputTerm(TaskHandle)</code><br>
	 * <i>native declaration : line 5625</i>
	 */
	// int DAQmxResetExportedAIConvClkOutputTerm(Pointer taskHandle);
	/**
	 * Uses value set Polarity2<br>
	 * Original signature : <code>int32 DAQmxGetExportedAIConvClkPulsePolarity(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5628</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetExportedAIConvClkPulsePolarity(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #DAQmxGetExportedAIConvClkPulsePolarity(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetExportedAIConvClkPulsePolarity(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set Polarity2<br>
	 * Original signature : <code>int32 DAQmxGetExportedAIConvClkPulsePolarity(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5628</i>
	 */
	// int DAQmxGetExportedAIConvClkPulsePolarity(Pointer taskHandle, IntBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_Exported_10MHzRefClk_OutputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetExported10MHzRefClkOutputTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 5630</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetExported10MHzRefClkOutputTerm(com.sun.jna.Pointer, java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetExported10MHzRefClkOutputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetExported10MHzRefClkOutputTerm(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Exported_10MHzRefClk_OutputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetExported10MHzRefClkOutputTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 5630</i>
	 */
	// int DAQmxGetExported10MHzRefClkOutputTerm(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetExported10MHzRefClkOutputTerm(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 5631</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetExported10MHzRefClkOutputTerm(com.sun.jna.Pointer, java.lang.String)} and {@link #DAQmxSetExported10MHzRefClkOutputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetExported10MHzRefClkOutputTerm(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExported10MHzRefClkOutputTerm(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 5631</i>
	 */
	// int DAQmxSetExported10MHzRefClkOutputTerm(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetExported10MHzRefClkOutputTerm(TaskHandle)</code><br>
	 * <i>native declaration : line 5632</i>
	 */
	// int DAQmxResetExported10MHzRefClkOutputTerm(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Exported_20MHzTimebase_OutputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetExported20MHzTimebaseOutputTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 5634</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetExported20MHzTimebaseOutputTerm(com.sun.jna.Pointer, java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetExported20MHzTimebaseOutputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetExported20MHzTimebaseOutputTerm(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Exported_20MHzTimebase_OutputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetExported20MHzTimebaseOutputTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 5634</i>
	 */
	// int DAQmxGetExported20MHzTimebaseOutputTerm(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetExported20MHzTimebaseOutputTerm(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 5635</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetExported20MHzTimebaseOutputTerm(com.sun.jna.Pointer, java.lang.String)} and {@link #DAQmxSetExported20MHzTimebaseOutputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetExported20MHzTimebaseOutputTerm(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExported20MHzTimebaseOutputTerm(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 5635</i>
	 */
	// int DAQmxSetExported20MHzTimebaseOutputTerm(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetExported20MHzTimebaseOutputTerm(TaskHandle)</code><br>
	 * <i>native declaration : line 5636</i>
	 */
	// int DAQmxResetExported20MHzTimebaseOutputTerm(Pointer taskHandle);
	/**
	 * Uses value set ExportActions3<br>
	 * Original signature : <code>int32 DAQmxGetExportedSampClkOutputBehavior(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5639</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetExportedSampClkOutputBehavior(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #DAQmxGetExportedSampClkOutputBehavior(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetExportedSampClkOutputBehavior(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set ExportActions3<br>
	 * Original signature : <code>int32 DAQmxGetExportedSampClkOutputBehavior(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5639</i>
	 */
	// int DAQmxGetExportedSampClkOutputBehavior(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedSampClkOutputBehavior(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 5640</i>
	 */
	// int DAQmxSetExportedSampClkOutputBehavior(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedSampClkOutputBehavior(TaskHandle)</code><br>
	 * <i>native declaration : line 5641</i>
	 */
	// int DAQmxResetExportedSampClkOutputBehavior(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Exported_SampClk_OutputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedSampClkOutputTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 5643</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetExportedSampClkOutputTerm(com.sun.jna.Pointer, java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetExportedSampClkOutputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetExportedSampClkOutputTerm(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Exported_SampClk_OutputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedSampClkOutputTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 5643</i>
	 */
	// int DAQmxGetExportedSampClkOutputTerm(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedSampClkOutputTerm(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 5644</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetExportedSampClkOutputTerm(com.sun.jna.Pointer, java.lang.String)} and {@link #DAQmxSetExportedSampClkOutputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetExportedSampClkOutputTerm(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedSampClkOutputTerm(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 5644</i>
	 */
	// int DAQmxSetExportedSampClkOutputTerm(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedSampClkOutputTerm(TaskHandle)</code><br>
	 * <i>native declaration : line 5645</i>
	 */
	// int DAQmxResetExportedSampClkOutputTerm(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Exported_SampClk_DelayOffset ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedSampClkDelayOffset(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 5647</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetExportedSampClkDelayOffset(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #DAQmxGetExportedSampClkDelayOffset(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetExportedSampClkDelayOffset(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Exported_SampClk_DelayOffset ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedSampClkDelayOffset(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 5647</i>
	 */
	// int DAQmxGetExportedSampClkDelayOffset(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedSampClkDelayOffset(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 5648</i>
	 */
	// int DAQmxSetExportedSampClkDelayOffset(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedSampClkDelayOffset(TaskHandle)</code><br>
	 * <i>native declaration : line 5649</i>
	 */
	// int DAQmxResetExportedSampClkDelayOffset(Pointer taskHandle);
	/**
	 * Uses value set Polarity2<br>
	 * Original signature : <code>int32 DAQmxGetExportedSampClkPulsePolarity(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5652</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetExportedSampClkPulsePolarity(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #DAQmxGetExportedSampClkPulsePolarity(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetExportedSampClkPulsePolarity(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set Polarity2<br>
	 * Original signature : <code>int32 DAQmxGetExportedSampClkPulsePolarity(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5652</i>
	 */
	// int DAQmxGetExportedSampClkPulsePolarity(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedSampClkPulsePolarity(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 5653</i>
	 */
	// int DAQmxSetExportedSampClkPulsePolarity(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedSampClkPulsePolarity(TaskHandle)</code><br>
	 * <i>native declaration : line 5654</i>
	 */
	// int DAQmxResetExportedSampClkPulsePolarity(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Exported_SampClkTimebase_OutputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedSampClkTimebaseOutputTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 5656</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetExportedSampClkTimebaseOutputTerm(com.sun.jna.Pointer, java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetExportedSampClkTimebaseOutputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetExportedSampClkTimebaseOutputTerm(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Exported_SampClkTimebase_OutputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedSampClkTimebaseOutputTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 5656</i>
	 */
	// int DAQmxGetExportedSampClkTimebaseOutputTerm(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedSampClkTimebaseOutputTerm(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 5657</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetExportedSampClkTimebaseOutputTerm(com.sun.jna.Pointer, java.lang.String)} and {@link #DAQmxSetExportedSampClkTimebaseOutputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetExportedSampClkTimebaseOutputTerm(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedSampClkTimebaseOutputTerm(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 5657</i>
	 */
	// int DAQmxSetExportedSampClkTimebaseOutputTerm(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedSampClkTimebaseOutputTerm(TaskHandle)</code><br>
	 * <i>native declaration : line 5658</i>
	 */
	// int DAQmxResetExportedSampClkTimebaseOutputTerm(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Exported_DividedSampClkTimebase_OutputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedDividedSampClkTimebaseOutputTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 5660</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetExportedDividedSampClkTimebaseOutputTerm(com.sun.jna.Pointer, java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetExportedDividedSampClkTimebaseOutputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetExportedDividedSampClkTimebaseOutputTerm(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Exported_DividedSampClkTimebase_OutputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedDividedSampClkTimebaseOutputTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 5660</i>
	 */
	// int DAQmxGetExportedDividedSampClkTimebaseOutputTerm(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedDividedSampClkTimebaseOutputTerm(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 5661</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetExportedDividedSampClkTimebaseOutputTerm(com.sun.jna.Pointer, java.lang.String)} and {@link #DAQmxSetExportedDividedSampClkTimebaseOutputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetExportedDividedSampClkTimebaseOutputTerm(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedDividedSampClkTimebaseOutputTerm(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 5661</i>
	 */
	// int DAQmxSetExportedDividedSampClkTimebaseOutputTerm(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedDividedSampClkTimebaseOutputTerm(TaskHandle)</code><br>
	 * <i>native declaration : line 5662</i>
	 */
	// int DAQmxResetExportedDividedSampClkTimebaseOutputTerm(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Exported_AdvTrig_OutputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedAdvTrigOutputTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 5664</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetExportedAdvTrigOutputTerm(com.sun.jna.Pointer, java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetExportedAdvTrigOutputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetExportedAdvTrigOutputTerm(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Exported_AdvTrig_OutputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedAdvTrigOutputTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 5664</i>
	 */
	// int DAQmxGetExportedAdvTrigOutputTerm(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedAdvTrigOutputTerm(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 5665</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetExportedAdvTrigOutputTerm(com.sun.jna.Pointer, java.lang.String)} and {@link #DAQmxSetExportedAdvTrigOutputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetExportedAdvTrigOutputTerm(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedAdvTrigOutputTerm(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 5665</i>
	 */
	// int DAQmxSetExportedAdvTrigOutputTerm(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedAdvTrigOutputTerm(TaskHandle)</code><br>
	 * <i>native declaration : line 5666</i>
	 */
	// int DAQmxResetExportedAdvTrigOutputTerm(Pointer taskHandle);
	/**
	 * Uses value set Polarity2<br>
	 * Original signature : <code>int32 DAQmxGetExportedAdvTrigPulsePolarity(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5669</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetExportedAdvTrigPulsePolarity(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #DAQmxGetExportedAdvTrigPulsePolarity(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetExportedAdvTrigPulsePolarity(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set Polarity2<br>
	 * Original signature : <code>int32 DAQmxGetExportedAdvTrigPulsePolarity(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5669</i>
	 */
	// int DAQmxGetExportedAdvTrigPulsePolarity(Pointer taskHandle, IntBuffer data);
	/**
	 * Uses value set DigitalWidthUnits3<br>
	 * Original signature : <code>int32 DAQmxGetExportedAdvTrigPulseWidthUnits(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5672</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetExportedAdvTrigPulseWidthUnits(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #DAQmxGetExportedAdvTrigPulseWidthUnits(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetExportedAdvTrigPulseWidthUnits(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set DigitalWidthUnits3<br>
	 * Original signature : <code>int32 DAQmxGetExportedAdvTrigPulseWidthUnits(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5672</i>
	 */
	// int DAQmxGetExportedAdvTrigPulseWidthUnits(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedAdvTrigPulseWidthUnits(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 5673</i>
	 */
	// int DAQmxSetExportedAdvTrigPulseWidthUnits(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedAdvTrigPulseWidthUnits(TaskHandle)</code><br>
	 * <i>native declaration : line 5674</i>
	 */
	// int DAQmxResetExportedAdvTrigPulseWidthUnits(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Exported_AdvTrig_Pulse_Width ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedAdvTrigPulseWidth(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 5676</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetExportedAdvTrigPulseWidth(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #DAQmxGetExportedAdvTrigPulseWidth(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetExportedAdvTrigPulseWidth(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Exported_AdvTrig_Pulse_Width ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedAdvTrigPulseWidth(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 5676</i>
	 */
	// int DAQmxGetExportedAdvTrigPulseWidth(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedAdvTrigPulseWidth(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 5677</i>
	 */
	// int DAQmxSetExportedAdvTrigPulseWidth(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedAdvTrigPulseWidth(TaskHandle)</code><br>
	 * <i>native declaration : line 5678</i>
	 */
	// int DAQmxResetExportedAdvTrigPulseWidth(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Exported_PauseTrig_OutputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedPauseTrigOutputTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 5680</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetExportedPauseTrigOutputTerm(com.sun.jna.Pointer, java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetExportedPauseTrigOutputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetExportedPauseTrigOutputTerm(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Exported_PauseTrig_OutputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedPauseTrigOutputTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 5680</i>
	 */
	// int DAQmxGetExportedPauseTrigOutputTerm(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedPauseTrigOutputTerm(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 5681</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetExportedPauseTrigOutputTerm(com.sun.jna.Pointer, java.lang.String)} and {@link #DAQmxSetExportedPauseTrigOutputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetExportedPauseTrigOutputTerm(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedPauseTrigOutputTerm(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 5681</i>
	 */
	// int DAQmxSetExportedPauseTrigOutputTerm(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedPauseTrigOutputTerm(TaskHandle)</code><br>
	 * <i>native declaration : line 5682</i>
	 */
	// int DAQmxResetExportedPauseTrigOutputTerm(Pointer taskHandle);
	/**
	 * Uses value set Polarity2<br>
	 * Original signature : <code>int32 DAQmxGetExportedPauseTrigLvlActiveLvl(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5685</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetExportedPauseTrigLvlActiveLvl(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #DAQmxGetExportedPauseTrigLvlActiveLvl(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetExportedPauseTrigLvlActiveLvl(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set Polarity2<br>
	 * Original signature : <code>int32 DAQmxGetExportedPauseTrigLvlActiveLvl(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5685</i>
	 */
	// int DAQmxGetExportedPauseTrigLvlActiveLvl(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedPauseTrigLvlActiveLvl(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 5686</i>
	 */
	// int DAQmxSetExportedPauseTrigLvlActiveLvl(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedPauseTrigLvlActiveLvl(TaskHandle)</code><br>
	 * <i>native declaration : line 5687</i>
	 */
	// int DAQmxResetExportedPauseTrigLvlActiveLvl(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Exported_RefTrig_OutputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedRefTrigOutputTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 5689</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetExportedRefTrigOutputTerm(com.sun.jna.Pointer, java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetExportedRefTrigOutputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetExportedRefTrigOutputTerm(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Exported_RefTrig_OutputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedRefTrigOutputTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 5689</i>
	 */
	// int DAQmxGetExportedRefTrigOutputTerm(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedRefTrigOutputTerm(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 5690</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetExportedRefTrigOutputTerm(com.sun.jna.Pointer, java.lang.String)} and {@link #DAQmxSetExportedRefTrigOutputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetExportedRefTrigOutputTerm(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedRefTrigOutputTerm(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 5690</i>
	 */
	// int DAQmxSetExportedRefTrigOutputTerm(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedRefTrigOutputTerm(TaskHandle)</code><br>
	 * <i>native declaration : line 5691</i>
	 */
	// int DAQmxResetExportedRefTrigOutputTerm(Pointer taskHandle);
	/**
	 * Uses value set Polarity2<br>
	 * Original signature : <code>int32 DAQmxGetExportedRefTrigPulsePolarity(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5694</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetExportedRefTrigPulsePolarity(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #DAQmxGetExportedRefTrigPulsePolarity(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetExportedRefTrigPulsePolarity(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set Polarity2<br>
	 * Original signature : <code>int32 DAQmxGetExportedRefTrigPulsePolarity(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5694</i>
	 */
	// int DAQmxGetExportedRefTrigPulsePolarity(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedRefTrigPulsePolarity(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 5695</i>
	 */
	// int DAQmxSetExportedRefTrigPulsePolarity(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedRefTrigPulsePolarity(TaskHandle)</code><br>
	 * <i>native declaration : line 5696</i>
	 */
	// int DAQmxResetExportedRefTrigPulsePolarity(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Exported_StartTrig_OutputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedStartTrigOutputTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 5698</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetExportedStartTrigOutputTerm(com.sun.jna.Pointer, java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetExportedStartTrigOutputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetExportedStartTrigOutputTerm(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Exported_StartTrig_OutputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedStartTrigOutputTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 5698</i>
	 */
	// int DAQmxGetExportedStartTrigOutputTerm(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedStartTrigOutputTerm(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 5699</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetExportedStartTrigOutputTerm(com.sun.jna.Pointer, java.lang.String)} and {@link #DAQmxSetExportedStartTrigOutputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetExportedStartTrigOutputTerm(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedStartTrigOutputTerm(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 5699</i>
	 */
	// int DAQmxSetExportedStartTrigOutputTerm(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedStartTrigOutputTerm(TaskHandle)</code><br>
	 * <i>native declaration : line 5700</i>
	 */
	// int DAQmxResetExportedStartTrigOutputTerm(Pointer taskHandle);
	/**
	 * Uses value set Polarity2<br>
	 * Original signature : <code>int32 DAQmxGetExportedStartTrigPulsePolarity(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5703</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetExportedStartTrigPulsePolarity(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #DAQmxGetExportedStartTrigPulsePolarity(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetExportedStartTrigPulsePolarity(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set Polarity2<br>
	 * Original signature : <code>int32 DAQmxGetExportedStartTrigPulsePolarity(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5703</i>
	 */
	// int DAQmxGetExportedStartTrigPulsePolarity(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedStartTrigPulsePolarity(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 5704</i>
	 */
	// int DAQmxSetExportedStartTrigPulsePolarity(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedStartTrigPulsePolarity(TaskHandle)</code><br>
	 * <i>native declaration : line 5705</i>
	 */
	// int DAQmxResetExportedStartTrigPulsePolarity(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Exported_AdvCmpltEvent_OutputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedAdvCmpltEventOutputTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 5707</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetExportedAdvCmpltEventOutputTerm(com.sun.jna.Pointer, java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetExportedAdvCmpltEventOutputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetExportedAdvCmpltEventOutputTerm(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Exported_AdvCmpltEvent_OutputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedAdvCmpltEventOutputTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 5707</i>
	 */
	// int DAQmxGetExportedAdvCmpltEventOutputTerm(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedAdvCmpltEventOutputTerm(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 5708</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetExportedAdvCmpltEventOutputTerm(com.sun.jna.Pointer, java.lang.String)} and {@link #DAQmxSetExportedAdvCmpltEventOutputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetExportedAdvCmpltEventOutputTerm(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedAdvCmpltEventOutputTerm(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 5708</i>
	 */
	// int DAQmxSetExportedAdvCmpltEventOutputTerm(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedAdvCmpltEventOutputTerm(TaskHandle)</code><br>
	 * <i>native declaration : line 5709</i>
	 */
	// int DAQmxResetExportedAdvCmpltEventOutputTerm(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Exported_AdvCmpltEvent_Delay ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedAdvCmpltEventDelay(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 5711</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetExportedAdvCmpltEventDelay(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #DAQmxGetExportedAdvCmpltEventDelay(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetExportedAdvCmpltEventDelay(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Exported_AdvCmpltEvent_Delay ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedAdvCmpltEventDelay(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 5711</i>
	 */
	// int DAQmxGetExportedAdvCmpltEventDelay(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedAdvCmpltEventDelay(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 5712</i>
	 */
	// int DAQmxSetExportedAdvCmpltEventDelay(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedAdvCmpltEventDelay(TaskHandle)</code><br>
	 * <i>native declaration : line 5713</i>
	 */
	// int DAQmxResetExportedAdvCmpltEventDelay(Pointer taskHandle);
	/**
	 * Uses value set Polarity2<br>
	 * Original signature : <code>int32 DAQmxGetExportedAdvCmpltEventPulsePolarity(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5716</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetExportedAdvCmpltEventPulsePolarity(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #DAQmxGetExportedAdvCmpltEventPulsePolarity(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetExportedAdvCmpltEventPulsePolarity(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set Polarity2<br>
	 * Original signature : <code>int32 DAQmxGetExportedAdvCmpltEventPulsePolarity(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5716</i>
	 */
	// int DAQmxGetExportedAdvCmpltEventPulsePolarity(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedAdvCmpltEventPulsePolarity(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 5717</i>
	 */
	// int DAQmxSetExportedAdvCmpltEventPulsePolarity(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedAdvCmpltEventPulsePolarity(TaskHandle)</code><br>
	 * <i>native declaration : line 5718</i>
	 */
	// int DAQmxResetExportedAdvCmpltEventPulsePolarity(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Exported_AdvCmpltEvent_Pulse_Width ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedAdvCmpltEventPulseWidth(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 5720</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetExportedAdvCmpltEventPulseWidth(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #DAQmxGetExportedAdvCmpltEventPulseWidth(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetExportedAdvCmpltEventPulseWidth(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Exported_AdvCmpltEvent_Pulse_Width ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedAdvCmpltEventPulseWidth(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 5720</i>
	 */
	// int DAQmxGetExportedAdvCmpltEventPulseWidth(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedAdvCmpltEventPulseWidth(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 5721</i>
	 */
	// int DAQmxSetExportedAdvCmpltEventPulseWidth(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedAdvCmpltEventPulseWidth(TaskHandle)</code><br>
	 * <i>native declaration : line 5722</i>
	 */
	// int DAQmxResetExportedAdvCmpltEventPulseWidth(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Exported_AIHoldCmpltEvent_OutputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedAIHoldCmpltEventOutputTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 5724</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetExportedAIHoldCmpltEventOutputTerm(com.sun.jna.Pointer, java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetExportedAIHoldCmpltEventOutputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetExportedAIHoldCmpltEventOutputTerm(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Exported_AIHoldCmpltEvent_OutputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedAIHoldCmpltEventOutputTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 5724</i>
	 */
	// int DAQmxGetExportedAIHoldCmpltEventOutputTerm(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedAIHoldCmpltEventOutputTerm(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 5725</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetExportedAIHoldCmpltEventOutputTerm(com.sun.jna.Pointer, java.lang.String)} and {@link #DAQmxSetExportedAIHoldCmpltEventOutputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetExportedAIHoldCmpltEventOutputTerm(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedAIHoldCmpltEventOutputTerm(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 5725</i>
	 */
	// int DAQmxSetExportedAIHoldCmpltEventOutputTerm(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedAIHoldCmpltEventOutputTerm(TaskHandle)</code><br>
	 * <i>native declaration : line 5726</i>
	 */
	// int DAQmxResetExportedAIHoldCmpltEventOutputTerm(Pointer taskHandle);
	/**
	 * Uses value set Polarity2<br>
	 * Original signature : <code>int32 DAQmxGetExportedAIHoldCmpltEventPulsePolarity(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5729</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetExportedAIHoldCmpltEventPulsePolarity(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #DAQmxGetExportedAIHoldCmpltEventPulsePolarity(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetExportedAIHoldCmpltEventPulsePolarity(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set Polarity2<br>
	 * Original signature : <code>int32 DAQmxGetExportedAIHoldCmpltEventPulsePolarity(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5729</i>
	 */
	// int DAQmxGetExportedAIHoldCmpltEventPulsePolarity(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedAIHoldCmpltEventPulsePolarity(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 5730</i>
	 */
	// int DAQmxSetExportedAIHoldCmpltEventPulsePolarity(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedAIHoldCmpltEventPulsePolarity(TaskHandle)</code><br>
	 * <i>native declaration : line 5731</i>
	 */
	// int DAQmxResetExportedAIHoldCmpltEventPulsePolarity(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Exported_ChangeDetectEvent_OutputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedChangeDetectEventOutputTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 5733</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetExportedChangeDetectEventOutputTerm(com.sun.jna.Pointer, java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetExportedChangeDetectEventOutputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetExportedChangeDetectEventOutputTerm(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Exported_ChangeDetectEvent_OutputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedChangeDetectEventOutputTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 5733</i>
	 */
	// int DAQmxGetExportedChangeDetectEventOutputTerm(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedChangeDetectEventOutputTerm(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 5734</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetExportedChangeDetectEventOutputTerm(com.sun.jna.Pointer, java.lang.String)} and {@link #DAQmxSetExportedChangeDetectEventOutputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetExportedChangeDetectEventOutputTerm(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedChangeDetectEventOutputTerm(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 5734</i>
	 */
	// int DAQmxSetExportedChangeDetectEventOutputTerm(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedChangeDetectEventOutputTerm(TaskHandle)</code><br>
	 * <i>native declaration : line 5735</i>
	 */
	// int DAQmxResetExportedChangeDetectEventOutputTerm(Pointer taskHandle);
	/**
	 * Uses value set Polarity2<br>
	 * Original signature : <code>int32 DAQmxGetExportedChangeDetectEventPulsePolarity(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5738</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetExportedChangeDetectEventPulsePolarity(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #DAQmxGetExportedChangeDetectEventPulsePolarity(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetExportedChangeDetectEventPulsePolarity(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set Polarity2<br>
	 * Original signature : <code>int32 DAQmxGetExportedChangeDetectEventPulsePolarity(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5738</i>
	 */
	// int DAQmxGetExportedChangeDetectEventPulsePolarity(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedChangeDetectEventPulsePolarity(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 5739</i>
	 */
	// int DAQmxSetExportedChangeDetectEventPulsePolarity(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedChangeDetectEventPulsePolarity(TaskHandle)</code><br>
	 * <i>native declaration : line 5740</i>
	 */
	// int DAQmxResetExportedChangeDetectEventPulsePolarity(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Exported_CtrOutEvent_OutputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedCtrOutEventOutputTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 5742</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetExportedCtrOutEventOutputTerm(com.sun.jna.Pointer, java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetExportedCtrOutEventOutputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetExportedCtrOutEventOutputTerm(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Exported_CtrOutEvent_OutputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedCtrOutEventOutputTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 5742</i>
	 */
	// int DAQmxGetExportedCtrOutEventOutputTerm(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedCtrOutEventOutputTerm(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 5743</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetExportedCtrOutEventOutputTerm(com.sun.jna.Pointer, java.lang.String)} and {@link #DAQmxSetExportedCtrOutEventOutputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetExportedCtrOutEventOutputTerm(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedCtrOutEventOutputTerm(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 5743</i>
	 */
	// int DAQmxSetExportedCtrOutEventOutputTerm(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedCtrOutEventOutputTerm(TaskHandle)</code><br>
	 * <i>native declaration : line 5744</i>
	 */
	// int DAQmxResetExportedCtrOutEventOutputTerm(Pointer taskHandle);
	/**
	 * Uses value set ExportActions2<br>
	 * Original signature : <code>int32 DAQmxGetExportedCtrOutEventOutputBehavior(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5747</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetExportedCtrOutEventOutputBehavior(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #DAQmxGetExportedCtrOutEventOutputBehavior(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetExportedCtrOutEventOutputBehavior(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set ExportActions2<br>
	 * Original signature : <code>int32 DAQmxGetExportedCtrOutEventOutputBehavior(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5747</i>
	 */
	// int DAQmxGetExportedCtrOutEventOutputBehavior(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedCtrOutEventOutputBehavior(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 5748</i>
	 */
	// int DAQmxSetExportedCtrOutEventOutputBehavior(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedCtrOutEventOutputBehavior(TaskHandle)</code><br>
	 * <i>native declaration : line 5749</i>
	 */
	// int DAQmxResetExportedCtrOutEventOutputBehavior(Pointer taskHandle);
	/**
	 * Uses value set Polarity2<br>
	 * Original signature : <code>int32 DAQmxGetExportedCtrOutEventPulsePolarity(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5752</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetExportedCtrOutEventPulsePolarity(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #DAQmxGetExportedCtrOutEventPulsePolarity(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetExportedCtrOutEventPulsePolarity(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set Polarity2<br>
	 * Original signature : <code>int32 DAQmxGetExportedCtrOutEventPulsePolarity(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5752</i>
	 */
	// int DAQmxGetExportedCtrOutEventPulsePolarity(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedCtrOutEventPulsePolarity(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 5753</i>
	 */
	// int DAQmxSetExportedCtrOutEventPulsePolarity(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedCtrOutEventPulsePolarity(TaskHandle)</code><br>
	 * <i>native declaration : line 5754</i>
	 */
	// int DAQmxResetExportedCtrOutEventPulsePolarity(Pointer taskHandle);
	/**
	 * Uses value set Level1<br>
	 * Original signature : <code>int32 DAQmxGetExportedCtrOutEventToggleIdleState(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5757</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetExportedCtrOutEventToggleIdleState(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #DAQmxGetExportedCtrOutEventToggleIdleState(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetExportedCtrOutEventToggleIdleState(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set Level1<br>
	 * Original signature : <code>int32 DAQmxGetExportedCtrOutEventToggleIdleState(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5757</i>
	 */
	// int DAQmxGetExportedCtrOutEventToggleIdleState(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedCtrOutEventToggleIdleState(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 5758</i>
	 */
	// int DAQmxSetExportedCtrOutEventToggleIdleState(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedCtrOutEventToggleIdleState(TaskHandle)</code><br>
	 * <i>native declaration : line 5759</i>
	 */
	// int DAQmxResetExportedCtrOutEventToggleIdleState(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Exported_HshkEvent_OutputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedHshkEventOutputTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 5761</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetExportedHshkEventOutputTerm(com.sun.jna.Pointer, java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetExportedHshkEventOutputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetExportedHshkEventOutputTerm(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Exported_HshkEvent_OutputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedHshkEventOutputTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 5761</i>
	 */
	// int DAQmxGetExportedHshkEventOutputTerm(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedHshkEventOutputTerm(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 5762</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetExportedHshkEventOutputTerm(com.sun.jna.Pointer, java.lang.String)} and {@link #DAQmxSetExportedHshkEventOutputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetExportedHshkEventOutputTerm(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedHshkEventOutputTerm(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 5762</i>
	 */
	// int DAQmxSetExportedHshkEventOutputTerm(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedHshkEventOutputTerm(TaskHandle)</code><br>
	 * <i>native declaration : line 5763</i>
	 */
	// int DAQmxResetExportedHshkEventOutputTerm(Pointer taskHandle);
	/**
	 * Uses value set ExportActions5<br>
	 * Original signature : <code>int32 DAQmxGetExportedHshkEventOutputBehavior(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5766</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetExportedHshkEventOutputBehavior(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #DAQmxGetExportedHshkEventOutputBehavior(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetExportedHshkEventOutputBehavior(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set ExportActions5<br>
	 * Original signature : <code>int32 DAQmxGetExportedHshkEventOutputBehavior(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5766</i>
	 */
	// int DAQmxGetExportedHshkEventOutputBehavior(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedHshkEventOutputBehavior(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 5767</i>
	 */
	// int DAQmxSetExportedHshkEventOutputBehavior(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedHshkEventOutputBehavior(TaskHandle)</code><br>
	 * <i>native declaration : line 5768</i>
	 */
	// int DAQmxResetExportedHshkEventOutputBehavior(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Exported_HshkEvent_Delay ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedHshkEventDelay(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 5770</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetExportedHshkEventDelay(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #DAQmxGetExportedHshkEventDelay(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetExportedHshkEventDelay(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Exported_HshkEvent_Delay ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedHshkEventDelay(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 5770</i>
	 */
	// int DAQmxGetExportedHshkEventDelay(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedHshkEventDelay(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 5771</i>
	 */
	// int DAQmxSetExportedHshkEventDelay(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedHshkEventDelay(TaskHandle)</code><br>
	 * <i>native declaration : line 5772</i>
	 */
	// int DAQmxResetExportedHshkEventDelay(Pointer taskHandle);
	/**
	 * Uses value set Level1<br>
	 * Original signature : <code>int32 DAQmxGetExportedHshkEventInterlockedAssertedLvl(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5775</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetExportedHshkEventInterlockedAssertedLvl(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #DAQmxGetExportedHshkEventInterlockedAssertedLvl(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetExportedHshkEventInterlockedAssertedLvl(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set Level1<br>
	 * Original signature : <code>int32 DAQmxGetExportedHshkEventInterlockedAssertedLvl(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5775</i>
	 */
	// int DAQmxGetExportedHshkEventInterlockedAssertedLvl(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedHshkEventInterlockedAssertedLvl(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 5776</i>
	 */
	// int DAQmxSetExportedHshkEventInterlockedAssertedLvl(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedHshkEventInterlockedAssertedLvl(TaskHandle)</code><br>
	 * <i>native declaration : line 5777</i>
	 */
	// int DAQmxResetExportedHshkEventInterlockedAssertedLvl(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Exported_HshkEvent_Interlocked_AssertOnStart ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedHshkEventInterlockedAssertOnStart(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 5779</i>
	 */
	// int DAQmxGetExportedHshkEventInterlockedAssertOnStart(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedHshkEventInterlockedAssertOnStart(TaskHandle, bool32)</code><br>
	 * <i>native declaration : line 5780</i>
	 */
	// int DAQmxSetExportedHshkEventInterlockedAssertOnStart(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedHshkEventInterlockedAssertOnStart(TaskHandle)</code><br>
	 * <i>native declaration : line 5781</i>
	 */
	// int DAQmxResetExportedHshkEventInterlockedAssertOnStart(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Exported_HshkEvent_Interlocked_DeassertDelay ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedHshkEventInterlockedDeassertDelay(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 5783</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetExportedHshkEventInterlockedDeassertDelay(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #DAQmxGetExportedHshkEventInterlockedDeassertDelay(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetExportedHshkEventInterlockedDeassertDelay(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Exported_HshkEvent_Interlocked_DeassertDelay ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedHshkEventInterlockedDeassertDelay(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 5783</i>
	 */
	// int DAQmxGetExportedHshkEventInterlockedDeassertDelay(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedHshkEventInterlockedDeassertDelay(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 5784</i>
	 */
	// int DAQmxSetExportedHshkEventInterlockedDeassertDelay(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedHshkEventInterlockedDeassertDelay(TaskHandle)</code><br>
	 * <i>native declaration : line 5785</i>
	 */
	// int DAQmxResetExportedHshkEventInterlockedDeassertDelay(Pointer taskHandle);
	/**
	 * Uses value set Polarity2<br>
	 * Original signature : <code>int32 DAQmxGetExportedHshkEventPulsePolarity(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5788</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetExportedHshkEventPulsePolarity(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #DAQmxGetExportedHshkEventPulsePolarity(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetExportedHshkEventPulsePolarity(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set Polarity2<br>
	 * Original signature : <code>int32 DAQmxGetExportedHshkEventPulsePolarity(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5788</i>
	 */
	// int DAQmxGetExportedHshkEventPulsePolarity(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedHshkEventPulsePolarity(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 5789</i>
	 */
	// int DAQmxSetExportedHshkEventPulsePolarity(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedHshkEventPulsePolarity(TaskHandle)</code><br>
	 * <i>native declaration : line 5790</i>
	 */
	// int DAQmxResetExportedHshkEventPulsePolarity(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Exported_HshkEvent_Pulse_Width ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedHshkEventPulseWidth(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 5792</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetExportedHshkEventPulseWidth(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #DAQmxGetExportedHshkEventPulseWidth(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetExportedHshkEventPulseWidth(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Exported_HshkEvent_Pulse_Width ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedHshkEventPulseWidth(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 5792</i>
	 */
	// int DAQmxGetExportedHshkEventPulseWidth(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedHshkEventPulseWidth(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 5793</i>
	 */
	// int DAQmxSetExportedHshkEventPulseWidth(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedHshkEventPulseWidth(TaskHandle)</code><br>
	 * <i>native declaration : line 5794</i>
	 */
	// int DAQmxResetExportedHshkEventPulseWidth(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Exported_RdyForXferEvent_OutputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedRdyForXferEventOutputTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 5796</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetExportedRdyForXferEventOutputTerm(com.sun.jna.Pointer, java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetExportedRdyForXferEventOutputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetExportedRdyForXferEventOutputTerm(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Exported_RdyForXferEvent_OutputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedRdyForXferEventOutputTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 5796</i>
	 */
	// int DAQmxGetExportedRdyForXferEventOutputTerm(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedRdyForXferEventOutputTerm(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 5797</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetExportedRdyForXferEventOutputTerm(com.sun.jna.Pointer, java.lang.String)} and {@link #DAQmxSetExportedRdyForXferEventOutputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetExportedRdyForXferEventOutputTerm(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedRdyForXferEventOutputTerm(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 5797</i>
	 */
	// int DAQmxSetExportedRdyForXferEventOutputTerm(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedRdyForXferEventOutputTerm(TaskHandle)</code><br>
	 * <i>native declaration : line 5798</i>
	 */
	// int DAQmxResetExportedRdyForXferEventOutputTerm(Pointer taskHandle);
	/**
	 * Uses value set Polarity2<br>
	 * Original signature : <code>int32 DAQmxGetExportedRdyForXferEventLvlActiveLvl(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5801</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetExportedRdyForXferEventLvlActiveLvl(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #DAQmxGetExportedRdyForXferEventLvlActiveLvl(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetExportedRdyForXferEventLvlActiveLvl(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set Polarity2<br>
	 * Original signature : <code>int32 DAQmxGetExportedRdyForXferEventLvlActiveLvl(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5801</i>
	 */
	// int DAQmxGetExportedRdyForXferEventLvlActiveLvl(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedRdyForXferEventLvlActiveLvl(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 5802</i>
	 */
	// int DAQmxSetExportedRdyForXferEventLvlActiveLvl(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedRdyForXferEventLvlActiveLvl(TaskHandle)</code><br>
	 * <i>native declaration : line 5803</i>
	 */
	// int DAQmxResetExportedRdyForXferEventLvlActiveLvl(Pointer taskHandle);
	/**
	 * Uses value set DeassertCondition<br>
	 * Original signature : <code>int32 DAQmxGetExportedRdyForXferEventDeassertCond(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5806</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetExportedRdyForXferEventDeassertCond(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #DAQmxGetExportedRdyForXferEventDeassertCond(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetExportedRdyForXferEventDeassertCond(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set DeassertCondition<br>
	 * Original signature : <code>int32 DAQmxGetExportedRdyForXferEventDeassertCond(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5806</i>
	 */
	// int DAQmxGetExportedRdyForXferEventDeassertCond(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedRdyForXferEventDeassertCond(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 5807</i>
	 */
	// int DAQmxSetExportedRdyForXferEventDeassertCond(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedRdyForXferEventDeassertCond(TaskHandle)</code><br>
	 * <i>native declaration : line 5808</i>
	 */
	// int DAQmxResetExportedRdyForXferEventDeassertCond(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Exported_RdyForXferEvent_DeassertCondCustomThreshold ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedRdyForXferEventDeassertCondCustomThreshold(TaskHandle, uInt32*)</code><br>
	 * <i>native declaration : line 5810</i>
	 */
	// int DAQmxGetExportedRdyForXferEventDeassertCondCustomThreshold(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedRdyForXferEventDeassertCondCustomThreshold(TaskHandle, uInt32)</code><br>
	 * <i>native declaration : line 5811</i>
	 */
	// int DAQmxSetExportedRdyForXferEventDeassertCondCustomThreshold(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedRdyForXferEventDeassertCondCustomThreshold(TaskHandle)</code><br>
	 * <i>native declaration : line 5812</i>
	 */
	// int DAQmxResetExportedRdyForXferEventDeassertCondCustomThreshold(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Exported_DataActiveEvent_OutputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedDataActiveEventOutputTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 5814</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetExportedDataActiveEventOutputTerm(com.sun.jna.Pointer, java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetExportedDataActiveEventOutputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetExportedDataActiveEventOutputTerm(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Exported_DataActiveEvent_OutputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedDataActiveEventOutputTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 5814</i>
	 */
	// int DAQmxGetExportedDataActiveEventOutputTerm(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedDataActiveEventOutputTerm(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 5815</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetExportedDataActiveEventOutputTerm(com.sun.jna.Pointer, java.lang.String)} and {@link #DAQmxSetExportedDataActiveEventOutputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetExportedDataActiveEventOutputTerm(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedDataActiveEventOutputTerm(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 5815</i>
	 */
	// int DAQmxSetExportedDataActiveEventOutputTerm(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedDataActiveEventOutputTerm(TaskHandle)</code><br>
	 * <i>native declaration : line 5816</i>
	 */
	// int DAQmxResetExportedDataActiveEventOutputTerm(Pointer taskHandle);
	/**
	 * Uses value set Polarity2<br>
	 * Original signature : <code>int32 DAQmxGetExportedDataActiveEventLvlActiveLvl(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5819</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetExportedDataActiveEventLvlActiveLvl(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #DAQmxGetExportedDataActiveEventLvlActiveLvl(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetExportedDataActiveEventLvlActiveLvl(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set Polarity2<br>
	 * Original signature : <code>int32 DAQmxGetExportedDataActiveEventLvlActiveLvl(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5819</i>
	 */
	// int DAQmxGetExportedDataActiveEventLvlActiveLvl(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedDataActiveEventLvlActiveLvl(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 5820</i>
	 */
	// int DAQmxSetExportedDataActiveEventLvlActiveLvl(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedDataActiveEventLvlActiveLvl(TaskHandle)</code><br>
	 * <i>native declaration : line 5821</i>
	 */
	// int DAQmxResetExportedDataActiveEventLvlActiveLvl(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Exported_RdyForStartEvent_OutputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedRdyForStartEventOutputTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 5823</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetExportedRdyForStartEventOutputTerm(com.sun.jna.Pointer, java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetExportedRdyForStartEventOutputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetExportedRdyForStartEventOutputTerm(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Exported_RdyForStartEvent_OutputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedRdyForStartEventOutputTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 5823</i>
	 */
	// int DAQmxGetExportedRdyForStartEventOutputTerm(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedRdyForStartEventOutputTerm(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 5824</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetExportedRdyForStartEventOutputTerm(com.sun.jna.Pointer, java.lang.String)} and {@link #DAQmxSetExportedRdyForStartEventOutputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetExportedRdyForStartEventOutputTerm(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedRdyForStartEventOutputTerm(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 5824</i>
	 */
	// int DAQmxSetExportedRdyForStartEventOutputTerm(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedRdyForStartEventOutputTerm(TaskHandle)</code><br>
	 * <i>native declaration : line 5825</i>
	 */
	// int DAQmxResetExportedRdyForStartEventOutputTerm(Pointer taskHandle);
	/**
	 * Uses value set Polarity2<br>
	 * Original signature : <code>int32 DAQmxGetExportedRdyForStartEventLvlActiveLvl(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5828</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetExportedRdyForStartEventLvlActiveLvl(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #DAQmxGetExportedRdyForStartEventLvlActiveLvl(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetExportedRdyForStartEventLvlActiveLvl(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set Polarity2<br>
	 * Original signature : <code>int32 DAQmxGetExportedRdyForStartEventLvlActiveLvl(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 5828</i>
	 */
	// int DAQmxGetExportedRdyForStartEventLvlActiveLvl(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedRdyForStartEventLvlActiveLvl(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 5829</i>
	 */
	// int DAQmxSetExportedRdyForStartEventLvlActiveLvl(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedRdyForStartEventLvlActiveLvl(TaskHandle)</code><br>
	 * <i>native declaration : line 5830</i>
	 */
	// int DAQmxResetExportedRdyForStartEventLvlActiveLvl(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Exported_SyncPulseEvent_OutputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedSyncPulseEventOutputTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 5832</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetExportedSyncPulseEventOutputTerm(com.sun.jna.Pointer, java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetExportedSyncPulseEventOutputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetExportedSyncPulseEventOutputTerm(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Exported_SyncPulseEvent_OutputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedSyncPulseEventOutputTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 5832</i>
	 */
	// int DAQmxGetExportedSyncPulseEventOutputTerm(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedSyncPulseEventOutputTerm(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 5833</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetExportedSyncPulseEventOutputTerm(com.sun.jna.Pointer, java.lang.String)} and {@link #DAQmxSetExportedSyncPulseEventOutputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetExportedSyncPulseEventOutputTerm(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedSyncPulseEventOutputTerm(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 5833</i>
	 */
	// int DAQmxSetExportedSyncPulseEventOutputTerm(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedSyncPulseEventOutputTerm(TaskHandle)</code><br>
	 * <i>native declaration : line 5834</i>
	 */
	// int DAQmxResetExportedSyncPulseEventOutputTerm(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Exported_WatchdogExpiredEvent_OutputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedWatchdogExpiredEventOutputTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 5836</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetExportedWatchdogExpiredEventOutputTerm(com.sun.jna.Pointer, java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetExportedWatchdogExpiredEventOutputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetExportedWatchdogExpiredEventOutputTerm(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Exported_WatchdogExpiredEvent_OutputTerm ***<br>
	 * Original signature : <code>int32 DAQmxGetExportedWatchdogExpiredEventOutputTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 5836</i>
	 */
	// int DAQmxGetExportedWatchdogExpiredEventOutputTerm(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedWatchdogExpiredEventOutputTerm(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 5837</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetExportedWatchdogExpiredEventOutputTerm(com.sun.jna.Pointer, java.lang.String)} and {@link #DAQmxSetExportedWatchdogExpiredEventOutputTerm(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetExportedWatchdogExpiredEventOutputTerm(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetExportedWatchdogExpiredEventOutputTerm(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 5837</i>
	 */
	// int DAQmxSetExportedWatchdogExpiredEventOutputTerm(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetExportedWatchdogExpiredEventOutputTerm(TaskHandle)</code><br>
	 * <i>native declaration : line 5838</i>
	 */
	// int DAQmxResetExportedWatchdogExpiredEventOutputTerm(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Dev_IsSimulated ***<br>
	 * Original signature : <code>int32 DAQmxGetDevIsSimulated(const char[], bool32*)</code><br>
	 * <i>native declaration : line 5842</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDevIsSimulated(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetDevIsSimulated(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDevIsSimulated(Pointer device, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_IsSimulated ***<br>
	 * Original signature : <code>int32 DAQmxGetDevIsSimulated(const char[], bool32*)</code><br>
	 * <i>native declaration : line 5842</i>
	 */
	// int DAQmxGetDevIsSimulated(byte device[], NativeLongByReference data);
	/**
	 * Uses value set ProductCategory<br>
	 * Original signature : <code>int32 DAQmxGetDevProductCategory(const char[], int32*)</code><br>
	 * <i>native declaration : line 5845</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDevProductCategory(byte[], java.nio.IntBuffer)} and {@link #DAQmxGetDevProductCategory(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDevProductCategory(Pointer device, IntByReference data);
	/**
	 * Uses value set ProductCategory<br>
	 * Original signature : <code>int32 DAQmxGetDevProductCategory(const char[], int32*)</code><br>
	 * <i>native declaration : line 5845</i>
	 */
	// int DAQmxGetDevProductCategory(byte device[], IntBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_ProductType ***<br>
	 * Original signature : <code>int32 DAQmxGetDevProductType(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5847</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDevProductType(byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetDevProductType(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetDevProductType(Pointer device, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Dev_ProductType ***<br>
	 * Original signature : <code>int32 DAQmxGetDevProductType(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5847</i>
	 */
	// int DAQmxGetDevProductType(byte device[], ByteBuffer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Dev_ProductNum ***<br>
	 * Original signature : <code>int32 DAQmxGetDevProductNum(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5849</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDevProductNum(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetDevProductNum(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDevProductNum(Pointer device, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_ProductNum ***<br>
	 * Original signature : <code>int32 DAQmxGetDevProductNum(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5849</i>
	 */
	// int DAQmxGetDevProductNum(byte device[], NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_SerialNum ***<br>
	 * Original signature : <code>int32 DAQmxGetDevSerialNum(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5851</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDevSerialNum(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetDevSerialNum(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDevSerialNum(Pointer device, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_SerialNum ***<br>
	 * Original signature : <code>int32 DAQmxGetDevSerialNum(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5851</i>
	 */
	// int DAQmxGetDevSerialNum(byte device[], NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_Accessory_ProductTypes ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAccessoryProductTypes(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5853</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDevAccessoryProductTypes(byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetDevAccessoryProductTypes(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetDevAccessoryProductTypes(Pointer device, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Dev_Accessory_ProductTypes ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAccessoryProductTypes(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5853</i>
	 */
	// int DAQmxGetDevAccessoryProductTypes(byte device[], ByteBuffer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Dev_Accessory_ProductNums ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAccessoryProductNums(const char[], uInt32*, uInt32)</code><br>
	 * <i>native declaration : line 5855</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDevAccessoryProductNums(byte[], com.sun.jna.ptr.NativeLongByReference, com.sun.jna.NativeLong)} and {@link #DAQmxGetDevAccessoryProductNums(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetDevAccessoryProductNums(Pointer device, NativeLongByReference data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Dev_Accessory_ProductNums ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAccessoryProductNums(const char[], uInt32*, uInt32)</code><br>
	 * <i>native declaration : line 5855</i>
	 */
	// int DAQmxGetDevAccessoryProductNums(byte device[], NativeLongByReference data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Dev_Accessory_SerialNums ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAccessorySerialNums(const char[], uInt32*, uInt32)</code><br>
	 * <i>native declaration : line 5857</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDevAccessorySerialNums(byte[], com.sun.jna.ptr.NativeLongByReference, com.sun.jna.NativeLong)} and {@link #DAQmxGetDevAccessorySerialNums(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetDevAccessorySerialNums(Pointer device, NativeLongByReference data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Dev_Accessory_SerialNums ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAccessorySerialNums(const char[], uInt32*, uInt32)</code><br>
	 * <i>native declaration : line 5857</i>
	 */
	// int DAQmxGetDevAccessorySerialNums(byte device[], NativeLongByReference data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Carrier_SerialNum ***<br>
	 * Original signature : <code>int32 DAQmxGetCarrierSerialNum(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5859</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetCarrierSerialNum(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetCarrierSerialNum(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetCarrierSerialNum(Pointer device, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Carrier_SerialNum ***<br>
	 * Original signature : <code>int32 DAQmxGetCarrierSerialNum(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5859</i>
	 */
	// int DAQmxGetCarrierSerialNum(byte device[], NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_Chassis_ModuleDevNames ***<br>
	 * Original signature : <code>int32 DAQmxGetDevChassisModuleDevNames(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5861</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDevChassisModuleDevNames(byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetDevChassisModuleDevNames(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetDevChassisModuleDevNames(Pointer device, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Dev_Chassis_ModuleDevNames ***<br>
	 * Original signature : <code>int32 DAQmxGetDevChassisModuleDevNames(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5861</i>
	 */
	// int DAQmxGetDevChassisModuleDevNames(byte device[], ByteBuffer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AnlgTrigSupported ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAnlgTrigSupported(const char[], bool32*)</code><br>
	 * <i>native declaration : line 5863</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDevAnlgTrigSupported(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetDevAnlgTrigSupported(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDevAnlgTrigSupported(Pointer device, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AnlgTrigSupported ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAnlgTrigSupported(const char[], bool32*)</code><br>
	 * <i>native declaration : line 5863</i>
	 */
	// int DAQmxGetDevAnlgTrigSupported(byte device[], NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_DigTrigSupported ***<br>
	 * Original signature : <code>int32 DAQmxGetDevDigTrigSupported(const char[], bool32*)</code><br>
	 * <i>native declaration : line 5865</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDevDigTrigSupported(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetDevDigTrigSupported(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDevDigTrigSupported(Pointer device, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_DigTrigSupported ***<br>
	 * Original signature : <code>int32 DAQmxGetDevDigTrigSupported(const char[], bool32*)</code><br>
	 * <i>native declaration : line 5865</i>
	 */
	// int DAQmxGetDevDigTrigSupported(byte device[], NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AI_PhysicalChans ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAIPhysicalChans(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5867</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDevAIPhysicalChans(byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetDevAIPhysicalChans(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetDevAIPhysicalChans(Pointer device, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AI_PhysicalChans ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAIPhysicalChans(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5867</i>
	 */
	// int DAQmxGetDevAIPhysicalChans(byte device[], ByteBuffer data, NativeLong bufferSize);
	/**
	 * Uses value set AIMeasurementType<br>
	 * Original signature : <code>int32 DAQmxGetDevAISupportedMeasTypes(const char[], int32*, uInt32)</code><br>
	 * <i>native declaration : line 5870</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDevAISupportedMeasTypes(byte[], java.nio.IntBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetDevAISupportedMeasTypes(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetDevAISupportedMeasTypes(Pointer device, IntByReference data, NativeLong arraySizeInElements);
	/**
	 * Uses value set AIMeasurementType<br>
	 * Original signature : <code>int32 DAQmxGetDevAISupportedMeasTypes(const char[], int32*, uInt32)</code><br>
	 * <i>native declaration : line 5870</i>
	 */
	// int DAQmxGetDevAISupportedMeasTypes(byte device[], IntBuffer data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AI_MaxSingleChanRate ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAIMaxSingleChanRate(const char[], float64*)</code><br>
	 * <i>native declaration : line 5872</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDevAIMaxSingleChanRate(byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetDevAIMaxSingleChanRate(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDevAIMaxSingleChanRate(Pointer device, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AI_MaxSingleChanRate ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAIMaxSingleChanRate(const char[], float64*)</code><br>
	 * <i>native declaration : line 5872</i>
	 */
	// int DAQmxGetDevAIMaxSingleChanRate(byte device[], DoubleBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AI_MaxMultiChanRate ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAIMaxMultiChanRate(const char[], float64*)</code><br>
	 * <i>native declaration : line 5874</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDevAIMaxMultiChanRate(byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetDevAIMaxMultiChanRate(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDevAIMaxMultiChanRate(Pointer device, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AI_MaxMultiChanRate ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAIMaxMultiChanRate(const char[], float64*)</code><br>
	 * <i>native declaration : line 5874</i>
	 */
	// int DAQmxGetDevAIMaxMultiChanRate(byte device[], DoubleBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AI_MinRate ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAIMinRate(const char[], float64*)</code><br>
	 * <i>native declaration : line 5876</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDevAIMinRate(byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetDevAIMinRate(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDevAIMinRate(Pointer device, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AI_MinRate ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAIMinRate(const char[], float64*)</code><br>
	 * <i>native declaration : line 5876</i>
	 */
	// int DAQmxGetDevAIMinRate(byte device[], DoubleBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AI_SimultaneousSamplingSupported ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAISimultaneousSamplingSupported(const char[], bool32*)</code><br>
	 * <i>native declaration : line 5878</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDevAISimultaneousSamplingSupported(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetDevAISimultaneousSamplingSupported(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDevAISimultaneousSamplingSupported(Pointer device, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AI_SimultaneousSamplingSupported ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAISimultaneousSamplingSupported(const char[], bool32*)</code><br>
	 * <i>native declaration : line 5878</i>
	 */
	// int DAQmxGetDevAISimultaneousSamplingSupported(byte device[], NativeLongByReference data);
	/**
	 * Uses value set AcquisitionType<br>
	 * Original signature : <code>int32 DAQmxGetDevAISampModes(const char[], int32*, uInt32)</code><br>
	 * <i>native declaration : line 5881</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDevAISampModes(byte[], java.nio.IntBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetDevAISampModes(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetDevAISampModes(Pointer device, IntByReference data, NativeLong arraySizeInElements);
	/**
	 * Uses value set AcquisitionType<br>
	 * Original signature : <code>int32 DAQmxGetDevAISampModes(const char[], int32*, uInt32)</code><br>
	 * <i>native declaration : line 5881</i>
	 */
	// int DAQmxGetDevAISampModes(byte device[], IntBuffer data, NativeLong arraySizeInElements);
	/**
	 * Uses bits from enum TriggerUsageTypeBits<br>
	 * Original signature : <code>int32 DAQmxGetDevAITrigUsage(const char[], int32*)</code><br>
	 * <i>native declaration : line 5884</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDevAITrigUsage(byte[], java.nio.IntBuffer)} and {@link #DAQmxGetDevAITrigUsage(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDevAITrigUsage(Pointer device, IntByReference data);
	/**
	 * Uses bits from enum TriggerUsageTypeBits<br>
	 * Original signature : <code>int32 DAQmxGetDevAITrigUsage(const char[], int32*)</code><br>
	 * <i>native declaration : line 5884</i>
	 */
	// int DAQmxGetDevAITrigUsage(byte device[], IntBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AI_VoltageRngs ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAIVoltageRngs(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 5886</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDevAIVoltageRngs(byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetDevAIVoltageRngs(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetDevAIVoltageRngs(Pointer device, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AI_VoltageRngs ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAIVoltageRngs(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 5886</i>
	 */
	// int DAQmxGetDevAIVoltageRngs(byte device[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AI_VoltageIntExcitDiscreteVals ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAIVoltageIntExcitDiscreteVals(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 5888</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDevAIVoltageIntExcitDiscreteVals(byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetDevAIVoltageIntExcitDiscreteVals(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetDevAIVoltageIntExcitDiscreteVals(Pointer device, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AI_VoltageIntExcitDiscreteVals ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAIVoltageIntExcitDiscreteVals(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 5888</i>
	 */
	// int DAQmxGetDevAIVoltageIntExcitDiscreteVals(byte device[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AI_VoltageIntExcitRangeVals ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAIVoltageIntExcitRangeVals(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 5890</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDevAIVoltageIntExcitRangeVals(byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetDevAIVoltageIntExcitRangeVals(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetDevAIVoltageIntExcitRangeVals(Pointer device, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AI_VoltageIntExcitRangeVals ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAIVoltageIntExcitRangeVals(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 5890</i>
	 */
	// int DAQmxGetDevAIVoltageIntExcitRangeVals(byte device[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AI_CurrentRngs ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAICurrentRngs(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 5892</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDevAICurrentRngs(byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetDevAICurrentRngs(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetDevAICurrentRngs(Pointer device, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AI_CurrentRngs ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAICurrentRngs(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 5892</i>
	 */
	// int DAQmxGetDevAICurrentRngs(byte device[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AI_CurrentIntExcitDiscreteVals ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAICurrentIntExcitDiscreteVals(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 5894</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDevAICurrentIntExcitDiscreteVals(byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetDevAICurrentIntExcitDiscreteVals(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetDevAICurrentIntExcitDiscreteVals(Pointer device, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AI_CurrentIntExcitDiscreteVals ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAICurrentIntExcitDiscreteVals(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 5894</i>
	 */
	// int DAQmxGetDevAICurrentIntExcitDiscreteVals(byte device[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AI_BridgeRngs ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAIBridgeRngs(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 5896</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDevAIBridgeRngs(byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetDevAIBridgeRngs(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetDevAIBridgeRngs(Pointer device, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AI_BridgeRngs ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAIBridgeRngs(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 5896</i>
	 */
	// int DAQmxGetDevAIBridgeRngs(byte device[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AI_ResistanceRngs ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAIResistanceRngs(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 5898</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDevAIResistanceRngs(byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetDevAIResistanceRngs(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetDevAIResistanceRngs(Pointer device, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AI_ResistanceRngs ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAIResistanceRngs(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 5898</i>
	 */
	// int DAQmxGetDevAIResistanceRngs(byte device[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AI_FreqRngs ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAIFreqRngs(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 5900</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDevAIFreqRngs(byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetDevAIFreqRngs(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetDevAIFreqRngs(Pointer device, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AI_FreqRngs ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAIFreqRngs(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 5900</i>
	 */
	// int DAQmxGetDevAIFreqRngs(byte device[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AI_Gains ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAIGains(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 5902</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDevAIGains(byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetDevAIGains(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetDevAIGains(Pointer device, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AI_Gains ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAIGains(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 5902</i>
	 */
	// int DAQmxGetDevAIGains(byte device[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * Uses bits from enum CouplingTypeBits<br>
	 * Original signature : <code>int32 DAQmxGetDevAICouplings(const char[], int32*)</code><br>
	 * <i>native declaration : line 5905</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDevAICouplings(byte[], java.nio.IntBuffer)} and {@link #DAQmxGetDevAICouplings(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDevAICouplings(Pointer device, IntByReference data);
	/**
	 * Uses bits from enum CouplingTypeBits<br>
	 * Original signature : <code>int32 DAQmxGetDevAICouplings(const char[], int32*)</code><br>
	 * <i>native declaration : line 5905</i>
	 */
	// int DAQmxGetDevAICouplings(byte device[], IntBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AI_LowpassCutoffFreqDiscreteVals ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAILowpassCutoffFreqDiscreteVals(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 5907</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDevAILowpassCutoffFreqDiscreteVals(byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetDevAILowpassCutoffFreqDiscreteVals(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetDevAILowpassCutoffFreqDiscreteVals(Pointer device, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AI_LowpassCutoffFreqDiscreteVals ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAILowpassCutoffFreqDiscreteVals(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 5907</i>
	 */
	// int DAQmxGetDevAILowpassCutoffFreqDiscreteVals(byte device[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AI_LowpassCutoffFreqRangeVals ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAILowpassCutoffFreqRangeVals(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 5909</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDevAILowpassCutoffFreqRangeVals(byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetDevAILowpassCutoffFreqRangeVals(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetDevAILowpassCutoffFreqRangeVals(Pointer device, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AI_LowpassCutoffFreqRangeVals ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAILowpassCutoffFreqRangeVals(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 5909</i>
	 */
	// int DAQmxGetDevAILowpassCutoffFreqRangeVals(byte device[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * Uses value set FilterType2<br>
	 * Original signature : <code>int32 DAQmxGetAIDigFltrTypes(const char[], int32*, uInt32)</code><br>
	 * <i>native declaration : line 5912</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIDigFltrTypes(byte[], java.nio.IntBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetAIDigFltrTypes(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIDigFltrTypes(Pointer device, IntByReference data, NativeLong arraySizeInElements);
	/**
	 * Uses value set FilterType2<br>
	 * Original signature : <code>int32 DAQmxGetAIDigFltrTypes(const char[], int32*, uInt32)</code><br>
	 * <i>native declaration : line 5912</i>
	 */
	// int DAQmxGetAIDigFltrTypes(byte device[], IntBuffer data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AI_DigFltr_LowpassCutoffFreqDiscreteVals ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAIDigFltrLowpassCutoffFreqDiscreteVals(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 5914</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDevAIDigFltrLowpassCutoffFreqDiscreteVals(byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetDevAIDigFltrLowpassCutoffFreqDiscreteVals(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetDevAIDigFltrLowpassCutoffFreqDiscreteVals(Pointer device, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AI_DigFltr_LowpassCutoffFreqDiscreteVals ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAIDigFltrLowpassCutoffFreqDiscreteVals(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 5914</i>
	 */
	// int DAQmxGetDevAIDigFltrLowpassCutoffFreqDiscreteVals(byte device[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AI_DigFltr_LowpassCutoffFreqRangeVals ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAIDigFltrLowpassCutoffFreqRangeVals(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 5916</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDevAIDigFltrLowpassCutoffFreqRangeVals(byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetDevAIDigFltrLowpassCutoffFreqRangeVals(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetDevAIDigFltrLowpassCutoffFreqRangeVals(Pointer device, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AI_DigFltr_LowpassCutoffFreqRangeVals ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAIDigFltrLowpassCutoffFreqRangeVals(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 5916</i>
	 */
	// int DAQmxGetDevAIDigFltrLowpassCutoffFreqRangeVals(byte device[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AO_PhysicalChans ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAOPhysicalChans(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5918</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDevAOPhysicalChans(byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetDevAOPhysicalChans(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetDevAOPhysicalChans(Pointer device, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AO_PhysicalChans ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAOPhysicalChans(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5918</i>
	 */
	// int DAQmxGetDevAOPhysicalChans(byte device[], ByteBuffer data, NativeLong bufferSize);
	/**
	 * Uses value set AOOutputChannelType<br>
	 * Original signature : <code>int32 DAQmxGetDevAOSupportedOutputTypes(const char[], int32*, uInt32)</code><br>
	 * <i>native declaration : line 5921</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDevAOSupportedOutputTypes(byte[], java.nio.IntBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetDevAOSupportedOutputTypes(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetDevAOSupportedOutputTypes(Pointer device, IntByReference data, NativeLong arraySizeInElements);
	/**
	 * Uses value set AOOutputChannelType<br>
	 * Original signature : <code>int32 DAQmxGetDevAOSupportedOutputTypes(const char[], int32*, uInt32)</code><br>
	 * <i>native declaration : line 5921</i>
	 */
	// int DAQmxGetDevAOSupportedOutputTypes(byte device[], IntBuffer data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AO_SampClkSupported ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAOSampClkSupported(const char[], bool32*)</code><br>
	 * <i>native declaration : line 5923</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDevAOSampClkSupported(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetDevAOSampClkSupported(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDevAOSampClkSupported(Pointer device, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AO_SampClkSupported ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAOSampClkSupported(const char[], bool32*)</code><br>
	 * <i>native declaration : line 5923</i>
	 */
	// int DAQmxGetDevAOSampClkSupported(byte device[], NativeLongByReference data);
	/**
	 * Uses value set AcquisitionType<br>
	 * Original signature : <code>int32 DAQmxGetDevAOSampModes(const char[], int32*, uInt32)</code><br>
	 * <i>native declaration : line 5926</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDevAOSampModes(byte[], java.nio.IntBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetDevAOSampModes(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetDevAOSampModes(Pointer device, IntByReference data, NativeLong arraySizeInElements);
	/**
	 * Uses value set AcquisitionType<br>
	 * Original signature : <code>int32 DAQmxGetDevAOSampModes(const char[], int32*, uInt32)</code><br>
	 * <i>native declaration : line 5926</i>
	 */
	// int DAQmxGetDevAOSampModes(byte device[], IntBuffer data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AO_MaxRate ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAOMaxRate(const char[], float64*)</code><br>
	 * <i>native declaration : line 5928</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDevAOMaxRate(byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetDevAOMaxRate(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDevAOMaxRate(Pointer device, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AO_MaxRate ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAOMaxRate(const char[], float64*)</code><br>
	 * <i>native declaration : line 5928</i>
	 */
	// int DAQmxGetDevAOMaxRate(byte device[], DoubleBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AO_MinRate ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAOMinRate(const char[], float64*)</code><br>
	 * <i>native declaration : line 5930</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDevAOMinRate(byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetDevAOMinRate(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDevAOMinRate(Pointer device, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AO_MinRate ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAOMinRate(const char[], float64*)</code><br>
	 * <i>native declaration : line 5930</i>
	 */
	// int DAQmxGetDevAOMinRate(byte device[], DoubleBuffer data);
	/**
	 * Uses bits from enum TriggerUsageTypeBits<br>
	 * Original signature : <code>int32 DAQmxGetDevAOTrigUsage(const char[], int32*)</code><br>
	 * <i>native declaration : line 5933</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDevAOTrigUsage(byte[], java.nio.IntBuffer)} and {@link #DAQmxGetDevAOTrigUsage(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDevAOTrigUsage(Pointer device, IntByReference data);
	/**
	 * Uses bits from enum TriggerUsageTypeBits<br>
	 * Original signature : <code>int32 DAQmxGetDevAOTrigUsage(const char[], int32*)</code><br>
	 * <i>native declaration : line 5933</i>
	 */
	// int DAQmxGetDevAOTrigUsage(byte device[], IntBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AO_VoltageRngs ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAOVoltageRngs(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 5935</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDevAOVoltageRngs(byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetDevAOVoltageRngs(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetDevAOVoltageRngs(Pointer device, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AO_VoltageRngs ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAOVoltageRngs(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 5935</i>
	 */
	// int DAQmxGetDevAOVoltageRngs(byte device[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AO_CurrentRngs ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAOCurrentRngs(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 5937</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDevAOCurrentRngs(byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetDevAOCurrentRngs(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetDevAOCurrentRngs(Pointer device, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AO_CurrentRngs ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAOCurrentRngs(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 5937</i>
	 */
	// int DAQmxGetDevAOCurrentRngs(byte device[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AO_Gains ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAOGains(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 5939</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDevAOGains(byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetDevAOGains(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetDevAOGains(Pointer device, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Dev_AO_Gains ***<br>
	 * Original signature : <code>int32 DAQmxGetDevAOGains(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 5939</i>
	 */
	// int DAQmxGetDevAOGains(byte device[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Dev_DI_Lines ***<br>
	 * Original signature : <code>int32 DAQmxGetDevDILines(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5941</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDevDILines(byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetDevDILines(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetDevDILines(Pointer device, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Dev_DI_Lines ***<br>
	 * Original signature : <code>int32 DAQmxGetDevDILines(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5941</i>
	 */
	// int DAQmxGetDevDILines(byte device[], ByteBuffer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Dev_DI_Ports ***<br>
	 * Original signature : <code>int32 DAQmxGetDevDIPorts(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5943</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDevDIPorts(byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetDevDIPorts(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetDevDIPorts(Pointer device, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Dev_DI_Ports ***<br>
	 * Original signature : <code>int32 DAQmxGetDevDIPorts(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5943</i>
	 */
	// int DAQmxGetDevDIPorts(byte device[], ByteBuffer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Dev_DI_MaxRate ***<br>
	 * Original signature : <code>int32 DAQmxGetDevDIMaxRate(const char[], float64*)</code><br>
	 * <i>native declaration : line 5945</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDevDIMaxRate(byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetDevDIMaxRate(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDevDIMaxRate(Pointer device, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_DI_MaxRate ***<br>
	 * Original signature : <code>int32 DAQmxGetDevDIMaxRate(const char[], float64*)</code><br>
	 * <i>native declaration : line 5945</i>
	 */
	// int DAQmxGetDevDIMaxRate(byte device[], DoubleBuffer data);
	/**
	 * Uses bits from enum TriggerUsageTypeBits<br>
	 * Original signature : <code>int32 DAQmxGetDevDITrigUsage(const char[], int32*)</code><br>
	 * <i>native declaration : line 5948</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDevDITrigUsage(byte[], java.nio.IntBuffer)} and {@link #DAQmxGetDevDITrigUsage(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDevDITrigUsage(Pointer device, IntByReference data);
	/**
	 * Uses bits from enum TriggerUsageTypeBits<br>
	 * Original signature : <code>int32 DAQmxGetDevDITrigUsage(const char[], int32*)</code><br>
	 * <i>native declaration : line 5948</i>
	 */
	// int DAQmxGetDevDITrigUsage(byte device[], IntBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_DO_Lines ***<br>
	 * Original signature : <code>int32 DAQmxGetDevDOLines(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5950</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDevDOLines(byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetDevDOLines(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetDevDOLines(Pointer device, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Dev_DO_Lines ***<br>
	 * Original signature : <code>int32 DAQmxGetDevDOLines(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5950</i>
	 */
	// int DAQmxGetDevDOLines(byte device[], ByteBuffer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Dev_DO_Ports ***<br>
	 * Original signature : <code>int32 DAQmxGetDevDOPorts(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5952</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDevDOPorts(byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetDevDOPorts(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetDevDOPorts(Pointer device, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Dev_DO_Ports ***<br>
	 * Original signature : <code>int32 DAQmxGetDevDOPorts(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5952</i>
	 */
	// int DAQmxGetDevDOPorts(byte device[], ByteBuffer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Dev_DO_MaxRate ***<br>
	 * Original signature : <code>int32 DAQmxGetDevDOMaxRate(const char[], float64*)</code><br>
	 * <i>native declaration : line 5954</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDevDOMaxRate(byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetDevDOMaxRate(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDevDOMaxRate(Pointer device, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_DO_MaxRate ***<br>
	 * Original signature : <code>int32 DAQmxGetDevDOMaxRate(const char[], float64*)</code><br>
	 * <i>native declaration : line 5954</i>
	 */
	// int DAQmxGetDevDOMaxRate(byte device[], DoubleBuffer data);
	/**
	 * Uses bits from enum TriggerUsageTypeBits<br>
	 * Original signature : <code>int32 DAQmxGetDevDOTrigUsage(const char[], int32*)</code><br>
	 * <i>native declaration : line 5957</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDevDOTrigUsage(byte[], java.nio.IntBuffer)} and {@link #DAQmxGetDevDOTrigUsage(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDevDOTrigUsage(Pointer device, IntByReference data);
	/**
	 * Uses bits from enum TriggerUsageTypeBits<br>
	 * Original signature : <code>int32 DAQmxGetDevDOTrigUsage(const char[], int32*)</code><br>
	 * <i>native declaration : line 5957</i>
	 */
	// int DAQmxGetDevDOTrigUsage(byte device[], IntBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_CI_PhysicalChans ***<br>
	 * Original signature : <code>int32 DAQmxGetDevCIPhysicalChans(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5959</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDevCIPhysicalChans(byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetDevCIPhysicalChans(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetDevCIPhysicalChans(Pointer device, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Dev_CI_PhysicalChans ***<br>
	 * Original signature : <code>int32 DAQmxGetDevCIPhysicalChans(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5959</i>
	 */
	// int DAQmxGetDevCIPhysicalChans(byte device[], ByteBuffer data, NativeLong bufferSize);
	/**
	 * Uses value set CIMeasurementType<br>
	 * Original signature : <code>int32 DAQmxGetDevCISupportedMeasTypes(const char[], int32*, uInt32)</code><br>
	 * <i>native declaration : line 5962</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDevCISupportedMeasTypes(byte[], java.nio.IntBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetDevCISupportedMeasTypes(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetDevCISupportedMeasTypes(Pointer device, IntByReference data, NativeLong arraySizeInElements);
	/**
	 * Uses value set CIMeasurementType<br>
	 * Original signature : <code>int32 DAQmxGetDevCISupportedMeasTypes(const char[], int32*, uInt32)</code><br>
	 * <i>native declaration : line 5962</i>
	 */
	// int DAQmxGetDevCISupportedMeasTypes(byte device[], IntBuffer data, NativeLong arraySizeInElements);
	/**
	 * Uses bits from enum TriggerUsageTypeBits<br>
	 * Original signature : <code>int32 DAQmxGetDevCITrigUsage(const char[], int32*)</code><br>
	 * <i>native declaration : line 5965</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDevCITrigUsage(byte[], java.nio.IntBuffer)} and {@link #DAQmxGetDevCITrigUsage(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDevCITrigUsage(Pointer device, IntByReference data);
	/**
	 * Uses bits from enum TriggerUsageTypeBits<br>
	 * Original signature : <code>int32 DAQmxGetDevCITrigUsage(const char[], int32*)</code><br>
	 * <i>native declaration : line 5965</i>
	 */
	// int DAQmxGetDevCITrigUsage(byte device[], IntBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_CI_SampClkSupported ***<br>
	 * Original signature : <code>int32 DAQmxGetDevCISampClkSupported(const char[], bool32*)</code><br>
	 * <i>native declaration : line 5967</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDevCISampClkSupported(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetDevCISampClkSupported(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDevCISampClkSupported(Pointer device, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_CI_SampClkSupported ***<br>
	 * Original signature : <code>int32 DAQmxGetDevCISampClkSupported(const char[], bool32*)</code><br>
	 * <i>native declaration : line 5967</i>
	 */
	// int DAQmxGetDevCISampClkSupported(byte device[], NativeLongByReference data);
	/**
	 * Uses value set AcquisitionType<br>
	 * Original signature : <code>int32 DAQmxGetDevCISampModes(const char[], int32*, uInt32)</code><br>
	 * <i>native declaration : line 5970</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDevCISampModes(byte[], java.nio.IntBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetDevCISampModes(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetDevCISampModes(Pointer device, IntByReference data, NativeLong arraySizeInElements);
	/**
	 * Uses value set AcquisitionType<br>
	 * Original signature : <code>int32 DAQmxGetDevCISampModes(const char[], int32*, uInt32)</code><br>
	 * <i>native declaration : line 5970</i>
	 */
	// int DAQmxGetDevCISampModes(byte device[], IntBuffer data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Dev_CI_MaxSize ***<br>
	 * Original signature : <code>int32 DAQmxGetDevCIMaxSize(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5972</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDevCIMaxSize(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetDevCIMaxSize(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDevCIMaxSize(Pointer device, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_CI_MaxSize ***<br>
	 * Original signature : <code>int32 DAQmxGetDevCIMaxSize(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5972</i>
	 */
	// int DAQmxGetDevCIMaxSize(byte device[], NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_CI_MaxTimebase ***<br>
	 * Original signature : <code>int32 DAQmxGetDevCIMaxTimebase(const char[], float64*)</code><br>
	 * <i>native declaration : line 5974</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDevCIMaxTimebase(byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetDevCIMaxTimebase(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDevCIMaxTimebase(Pointer device, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_CI_MaxTimebase ***<br>
	 * Original signature : <code>int32 DAQmxGetDevCIMaxTimebase(const char[], float64*)</code><br>
	 * <i>native declaration : line 5974</i>
	 */
	// int DAQmxGetDevCIMaxTimebase(byte device[], DoubleBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_CO_PhysicalChans ***<br>
	 * Original signature : <code>int32 DAQmxGetDevCOPhysicalChans(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5976</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDevCOPhysicalChans(byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetDevCOPhysicalChans(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetDevCOPhysicalChans(Pointer device, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Dev_CO_PhysicalChans ***<br>
	 * Original signature : <code>int32 DAQmxGetDevCOPhysicalChans(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 5976</i>
	 */
	// int DAQmxGetDevCOPhysicalChans(byte device[], ByteBuffer data, NativeLong bufferSize);
	/**
	 * Uses value set COOutputType<br>
	 * Original signature : <code>int32 DAQmxGetDevCOSupportedOutputTypes(const char[], int32*, uInt32)</code><br>
	 * <i>native declaration : line 5979</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDevCOSupportedOutputTypes(byte[], java.nio.IntBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetDevCOSupportedOutputTypes(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetDevCOSupportedOutputTypes(Pointer device, IntByReference data, NativeLong arraySizeInElements);
	/**
	 * Uses value set COOutputType<br>
	 * Original signature : <code>int32 DAQmxGetDevCOSupportedOutputTypes(const char[], int32*, uInt32)</code><br>
	 * <i>native declaration : line 5979</i>
	 */
	// int DAQmxGetDevCOSupportedOutputTypes(byte device[], IntBuffer data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Dev_CO_SampClkSupported ***<br>
	 * Original signature : <code>int32 DAQmxGetDevCOSampClkSupported(const char[], bool32*)</code><br>
	 * <i>native declaration : line 5981</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDevCOSampClkSupported(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetDevCOSampClkSupported(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDevCOSampClkSupported(Pointer device, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_CO_SampClkSupported ***<br>
	 * Original signature : <code>int32 DAQmxGetDevCOSampClkSupported(const char[], bool32*)</code><br>
	 * <i>native declaration : line 5981</i>
	 */
	// int DAQmxGetDevCOSampClkSupported(byte device[], NativeLongByReference data);
	/**
	 * Uses value set AcquisitionType<br>
	 * Original signature : <code>int32 DAQmxGetDevCOSampModes(const char[], int32*, uInt32)</code><br>
	 * <i>native declaration : line 5984</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDevCOSampModes(byte[], java.nio.IntBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetDevCOSampModes(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetDevCOSampModes(Pointer device, IntByReference data, NativeLong arraySizeInElements);
	/**
	 * Uses value set AcquisitionType<br>
	 * Original signature : <code>int32 DAQmxGetDevCOSampModes(const char[], int32*, uInt32)</code><br>
	 * <i>native declaration : line 5984</i>
	 */
	// int DAQmxGetDevCOSampModes(byte device[], IntBuffer data, NativeLong arraySizeInElements);
	/**
	 * Uses bits from enum TriggerUsageTypeBits<br>
	 * Original signature : <code>int32 DAQmxGetDevCOTrigUsage(const char[], int32*)</code><br>
	 * <i>native declaration : line 5987</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDevCOTrigUsage(byte[], java.nio.IntBuffer)} and {@link #DAQmxGetDevCOTrigUsage(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDevCOTrigUsage(Pointer device, IntByReference data);
	/**
	 * Uses bits from enum TriggerUsageTypeBits<br>
	 * Original signature : <code>int32 DAQmxGetDevCOTrigUsage(const char[], int32*)</code><br>
	 * <i>native declaration : line 5987</i>
	 */
	// int DAQmxGetDevCOTrigUsage(byte device[], IntBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_CO_MaxSize ***<br>
	 * Original signature : <code>int32 DAQmxGetDevCOMaxSize(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5989</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDevCOMaxSize(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetDevCOMaxSize(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDevCOMaxSize(Pointer device, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_CO_MaxSize ***<br>
	 * Original signature : <code>int32 DAQmxGetDevCOMaxSize(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5989</i>
	 */
	// int DAQmxGetDevCOMaxSize(byte device[], NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_CO_MaxTimebase ***<br>
	 * Original signature : <code>int32 DAQmxGetDevCOMaxTimebase(const char[], float64*)</code><br>
	 * <i>native declaration : line 5991</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDevCOMaxTimebase(byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetDevCOMaxTimebase(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDevCOMaxTimebase(Pointer device, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_CO_MaxTimebase ***<br>
	 * Original signature : <code>int32 DAQmxGetDevCOMaxTimebase(const char[], float64*)</code><br>
	 * <i>native declaration : line 5991</i>
	 */
	// int DAQmxGetDevCOMaxTimebase(byte device[], DoubleBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_TEDS_HWTEDSSupported ***<br>
	 * Original signature : <code>int32 DAQmxGetDevTEDSHWTEDSSupported(const char[], bool32*)</code><br>
	 * <i>native declaration : line 5993</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDevTEDSHWTEDSSupported(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetDevTEDSHWTEDSSupported(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDevTEDSHWTEDSSupported(Pointer device, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_TEDS_HWTEDSSupported ***<br>
	 * Original signature : <code>int32 DAQmxGetDevTEDSHWTEDSSupported(const char[], bool32*)</code><br>
	 * <i>native declaration : line 5993</i>
	 */
	// int DAQmxGetDevTEDSHWTEDSSupported(byte device[], NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_NumDMAChans ***<br>
	 * Original signature : <code>int32 DAQmxGetDevNumDMAChans(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5995</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDevNumDMAChans(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetDevNumDMAChans(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDevNumDMAChans(Pointer device, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_NumDMAChans ***<br>
	 * Original signature : <code>int32 DAQmxGetDevNumDMAChans(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 5995</i>
	 */
	// int DAQmxGetDevNumDMAChans(byte device[], NativeLongByReference data);
	/**
	 * Uses value set BusType<br>
	 * Original signature : <code>int32 DAQmxGetDevBusType(const char[], int32*)</code><br>
	 * <i>native declaration : line 5998</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDevBusType(byte[], java.nio.IntBuffer)} and {@link #DAQmxGetDevBusType(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDevBusType(Pointer device, IntByReference data);
	/**
	 * Uses value set BusType<br>
	 * Original signature : <code>int32 DAQmxGetDevBusType(const char[], int32*)</code><br>
	 * <i>native declaration : line 5998</i>
	 */
	// int DAQmxGetDevBusType(byte device[], IntBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_PCI_BusNum ***<br>
	 * Original signature : <code>int32 DAQmxGetDevPCIBusNum(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 6000</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDevPCIBusNum(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetDevPCIBusNum(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDevPCIBusNum(Pointer device, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_PCI_BusNum ***<br>
	 * Original signature : <code>int32 DAQmxGetDevPCIBusNum(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 6000</i>
	 */
	// int DAQmxGetDevPCIBusNum(byte device[], NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_PCI_DevNum ***<br>
	 * Original signature : <code>int32 DAQmxGetDevPCIDevNum(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 6002</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDevPCIDevNum(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetDevPCIDevNum(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDevPCIDevNum(Pointer device, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_PCI_DevNum ***<br>
	 * Original signature : <code>int32 DAQmxGetDevPCIDevNum(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 6002</i>
	 */
	// int DAQmxGetDevPCIDevNum(byte device[], NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_PXI_ChassisNum ***<br>
	 * Original signature : <code>int32 DAQmxGetDevPXIChassisNum(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 6004</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDevPXIChassisNum(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetDevPXIChassisNum(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDevPXIChassisNum(Pointer device, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_PXI_ChassisNum ***<br>
	 * Original signature : <code>int32 DAQmxGetDevPXIChassisNum(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 6004</i>
	 */
	// int DAQmxGetDevPXIChassisNum(byte device[], NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_PXI_SlotNum ***<br>
	 * Original signature : <code>int32 DAQmxGetDevPXISlotNum(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 6006</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDevPXISlotNum(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetDevPXISlotNum(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDevPXISlotNum(Pointer device, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_PXI_SlotNum ***<br>
	 * Original signature : <code>int32 DAQmxGetDevPXISlotNum(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 6006</i>
	 */
	// int DAQmxGetDevPXISlotNum(byte device[], NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_CompactDAQ_ChassisDevName ***<br>
	 * Original signature : <code>int32 DAQmxGetDevCompactDAQChassisDevName(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 6008</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDevCompactDAQChassisDevName(byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetDevCompactDAQChassisDevName(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetDevCompactDAQChassisDevName(Pointer device, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Dev_CompactDAQ_ChassisDevName ***<br>
	 * Original signature : <code>int32 DAQmxGetDevCompactDAQChassisDevName(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 6008</i>
	 */
	// int DAQmxGetDevCompactDAQChassisDevName(byte device[], ByteBuffer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Dev_CompactDAQ_SlotNum ***<br>
	 * Original signature : <code>int32 DAQmxGetDevCompactDAQSlotNum(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 6010</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDevCompactDAQSlotNum(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetDevCompactDAQSlotNum(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDevCompactDAQSlotNum(Pointer device, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_CompactDAQ_SlotNum ***<br>
	 * Original signature : <code>int32 DAQmxGetDevCompactDAQSlotNum(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 6010</i>
	 */
	// int DAQmxGetDevCompactDAQSlotNum(byte device[], NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Dev_TCPIP_Hostname ***<br>
	 * Original signature : <code>int32 DAQmxGetDevTCPIPHostname(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 6012</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDevTCPIPHostname(byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetDevTCPIPHostname(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetDevTCPIPHostname(Pointer device, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Dev_TCPIP_Hostname ***<br>
	 * Original signature : <code>int32 DAQmxGetDevTCPIPHostname(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 6012</i>
	 */
	// int DAQmxGetDevTCPIPHostname(byte device[], ByteBuffer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Dev_TCPIP_EthernetIP ***<br>
	 * Original signature : <code>int32 DAQmxGetDevTCPIPEthernetIP(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 6014</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDevTCPIPEthernetIP(byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetDevTCPIPEthernetIP(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetDevTCPIPEthernetIP(Pointer device, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Dev_TCPIP_EthernetIP ***<br>
	 * Original signature : <code>int32 DAQmxGetDevTCPIPEthernetIP(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 6014</i>
	 */
	// int DAQmxGetDevTCPIPEthernetIP(byte device[], ByteBuffer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Dev_TCPIP_WirelessIP ***<br>
	 * Original signature : <code>int32 DAQmxGetDevTCPIPWirelessIP(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 6016</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDevTCPIPWirelessIP(byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetDevTCPIPWirelessIP(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetDevTCPIPWirelessIP(Pointer device, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Dev_TCPIP_WirelessIP ***<br>
	 * Original signature : <code>int32 DAQmxGetDevTCPIPWirelessIP(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 6016</i>
	 */
	// int DAQmxGetDevTCPIPWirelessIP(byte device[], ByteBuffer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Dev_Terminals ***<br>
	 * Original signature : <code>int32 DAQmxGetDevTerminals(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 6018</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDevTerminals(byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetDevTerminals(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetDevTerminals(Pointer device, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Dev_Terminals ***<br>
	 * Original signature : <code>int32 DAQmxGetDevTerminals(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 6018</i>
	 */
	// int DAQmxGetDevTerminals(byte device[], ByteBuffer data, NativeLong bufferSize);
	/**
	 * Uses value set ReadRelativeTo<br>
	 * Original signature : <code>int32 DAQmxGetReadRelativeTo(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6023</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetReadRelativeTo(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #DAQmxGetReadRelativeTo(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetReadRelativeTo(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set ReadRelativeTo<br>
	 * Original signature : <code>int32 DAQmxGetReadRelativeTo(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6023</i>
	 */
	// int DAQmxGetReadRelativeTo(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetReadRelativeTo(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6024</i>
	 */
	// int DAQmxSetReadRelativeTo(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetReadRelativeTo(TaskHandle)</code><br>
	 * <i>native declaration : line 6025</i>
	 */
	// int DAQmxResetReadRelativeTo(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Read_Offset ***<br>
	 * Original signature : <code>int32 DAQmxGetReadOffset(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6027</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetReadOffset(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #DAQmxGetReadOffset(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetReadOffset(Pointer taskHandle, IntByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Read_Offset ***<br>
	 * Original signature : <code>int32 DAQmxGetReadOffset(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6027</i>
	 */
	// int DAQmxGetReadOffset(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetReadOffset(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6028</i>
	 */
	// int DAQmxSetReadOffset(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetReadOffset(TaskHandle)</code><br>
	 * <i>native declaration : line 6029</i>
	 */
	// int DAQmxResetReadOffset(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Read_ChannelsToRead ***<br>
	 * Original signature : <code>int32 DAQmxGetReadChannelsToRead(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6031</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetReadChannelsToRead(com.sun.jna.Pointer, java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetReadChannelsToRead(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetReadChannelsToRead(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Read_ChannelsToRead ***<br>
	 * Original signature : <code>int32 DAQmxGetReadChannelsToRead(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6031</i>
	 */
	// int DAQmxGetReadChannelsToRead(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetReadChannelsToRead(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6032</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetReadChannelsToRead(com.sun.jna.Pointer, java.lang.String)} and {@link #DAQmxSetReadChannelsToRead(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetReadChannelsToRead(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetReadChannelsToRead(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6032</i>
	 */
	// int DAQmxSetReadChannelsToRead(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetReadChannelsToRead(TaskHandle)</code><br>
	 * <i>native declaration : line 6033</i>
	 */
	// int DAQmxResetReadChannelsToRead(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Read_ReadAllAvailSamp ***<br>
	 * Original signature : <code>int32 DAQmxGetReadReadAllAvailSamp(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6035</i>
	 */
	// int DAQmxGetReadReadAllAvailSamp(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetReadReadAllAvailSamp(TaskHandle, bool32)</code><br>
	 * <i>native declaration : line 6036</i>
	 */
	// int DAQmxSetReadReadAllAvailSamp(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetReadReadAllAvailSamp(TaskHandle)</code><br>
	 * <i>native declaration : line 6037</i>
	 */
	// int DAQmxResetReadReadAllAvailSamp(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Read_AutoStart ***<br>
	 * Original signature : <code>int32 DAQmxGetReadAutoStart(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6039</i>
	 */
	// int DAQmxGetReadAutoStart(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetReadAutoStart(TaskHandle, bool32)</code><br>
	 * <i>native declaration : line 6040</i>
	 */
	// int DAQmxSetReadAutoStart(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetReadAutoStart(TaskHandle)</code><br>
	 * <i>native declaration : line 6041</i>
	 */
	// int DAQmxResetReadAutoStart(Pointer taskHandle);
	/**
	 * Uses value set OverwriteMode1<br>
	 * Original signature : <code>int32 DAQmxGetReadOverWrite(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6044</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetReadOverWrite(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #DAQmxGetReadOverWrite(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetReadOverWrite(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set OverwriteMode1<br>
	 * Original signature : <code>int32 DAQmxGetReadOverWrite(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6044</i>
	 */
	// int DAQmxGetReadOverWrite(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetReadOverWrite(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6045</i>
	 */
	// int DAQmxSetReadOverWrite(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetReadOverWrite(TaskHandle)</code><br>
	 * <i>native declaration : line 6046</i>
	 */
	// int DAQmxResetReadOverWrite(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Logging_FilePath ***<br>
	 * Original signature : <code>int32 DAQmxGetLoggingFilePath(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6048</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetLoggingFilePath(com.sun.jna.Pointer, java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetLoggingFilePath(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetLoggingFilePath(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Logging_FilePath ***<br>
	 * Original signature : <code>int32 DAQmxGetLoggingFilePath(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6048</i>
	 */
	// int DAQmxGetLoggingFilePath(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetLoggingFilePath(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6049</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetLoggingFilePath(com.sun.jna.Pointer, java.lang.String)} and {@link #DAQmxSetLoggingFilePath(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetLoggingFilePath(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetLoggingFilePath(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6049</i>
	 */
	// int DAQmxSetLoggingFilePath(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetLoggingFilePath(TaskHandle)</code><br>
	 * <i>native declaration : line 6050</i>
	 */
	// int DAQmxResetLoggingFilePath(Pointer taskHandle);
	/**
	 * Uses value set LoggingMode<br>
	 * Original signature : <code>int32 DAQmxGetLoggingMode(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6053</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetLoggingMode(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #DAQmxGetLoggingMode(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetLoggingMode(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set LoggingMode<br>
	 * Original signature : <code>int32 DAQmxGetLoggingMode(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6053</i>
	 */
	// int DAQmxGetLoggingMode(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetLoggingMode(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6054</i>
	 */
	// int DAQmxSetLoggingMode(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetLoggingMode(TaskHandle)</code><br>
	 * <i>native declaration : line 6055</i>
	 */
	// int DAQmxResetLoggingMode(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Logging_TDMS_GroupName ***<br>
	 * Original signature : <code>int32 DAQmxGetLoggingTDMSGroupName(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6057</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetLoggingTDMSGroupName(com.sun.jna.Pointer, java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetLoggingTDMSGroupName(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetLoggingTDMSGroupName(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Logging_TDMS_GroupName ***<br>
	 * Original signature : <code>int32 DAQmxGetLoggingTDMSGroupName(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6057</i>
	 */
	// int DAQmxGetLoggingTDMSGroupName(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetLoggingTDMSGroupName(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6058</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetLoggingTDMSGroupName(com.sun.jna.Pointer, java.lang.String)} and {@link #DAQmxSetLoggingTDMSGroupName(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetLoggingTDMSGroupName(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetLoggingTDMSGroupName(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6058</i>
	 */
	// int DAQmxSetLoggingTDMSGroupName(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetLoggingTDMSGroupName(TaskHandle)</code><br>
	 * <i>native declaration : line 6059</i>
	 */
	// int DAQmxResetLoggingTDMSGroupName(Pointer taskHandle);
	/**
	 * Uses value set LoggingOperation<br>
	 * Original signature : <code>int32 DAQmxGetLoggingTDMSOperation(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6062</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetLoggingTDMSOperation(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #DAQmxGetLoggingTDMSOperation(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetLoggingTDMSOperation(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set LoggingOperation<br>
	 * Original signature : <code>int32 DAQmxGetLoggingTDMSOperation(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6062</i>
	 */
	// int DAQmxGetLoggingTDMSOperation(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetLoggingTDMSOperation(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6063</i>
	 */
	// int DAQmxSetLoggingTDMSOperation(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetLoggingTDMSOperation(TaskHandle)</code><br>
	 * <i>native declaration : line 6064</i>
	 */
	// int DAQmxResetLoggingTDMSOperation(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Logging_Pause ***<br>
	 * Original signature : <code>int32 DAQmxGetLoggingPause(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6066</i>
	 */
	// int DAQmxGetLoggingPause(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetLoggingPause(TaskHandle, bool32)</code><br>
	 * <i>native declaration : line 6067</i>
	 */
	// int DAQmxSetLoggingPause(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetLoggingPause(TaskHandle)</code><br>
	 * <i>native declaration : line 6068</i>
	 */
	// int DAQmxResetLoggingPause(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Logging_SampsPerFile ***<br>
	 * Original signature : <code>int32 DAQmxGetLoggingSampsPerFile(TaskHandle, uInt64*)</code><br>
	 * <i>native declaration : line 6070</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetLoggingSampsPerFile(com.sun.jna.Pointer, java.nio.LongBuffer)} and {@link #DAQmxGetLoggingSampsPerFile(com.sun.jna.Pointer, com.sun.jna.ptr.LongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetLoggingSampsPerFile(Pointer taskHandle, LongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Logging_SampsPerFile ***<br>
	 * Original signature : <code>int32 DAQmxGetLoggingSampsPerFile(TaskHandle, uInt64*)</code><br>
	 * <i>native declaration : line 6070</i>
	 */
	// int DAQmxGetLoggingSampsPerFile(Pointer taskHandle, LongBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetLoggingSampsPerFile(TaskHandle, uInt64)</code><br>
	 * <i>native declaration : line 6071</i>
	 */
	// int DAQmxSetLoggingSampsPerFile(Pointer taskHandle, long data);
	/**
	 * Original signature : <code>int32 DAQmxResetLoggingSampsPerFile(TaskHandle)</code><br>
	 * <i>native declaration : line 6072</i>
	 */
	// int DAQmxResetLoggingSampsPerFile(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Logging_FileWriteSize ***<br>
	 * Original signature : <code>int32 DAQmxGetLoggingFileWriteSize(TaskHandle, uInt32*)</code><br>
	 * <i>native declaration : line 6074</i>
	 */
	// int DAQmxGetLoggingFileWriteSize(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetLoggingFileWriteSize(TaskHandle, uInt32)</code><br>
	 * <i>native declaration : line 6075</i>
	 */
	// int DAQmxSetLoggingFileWriteSize(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetLoggingFileWriteSize(TaskHandle)</code><br>
	 * <i>native declaration : line 6076</i>
	 */
	// int DAQmxResetLoggingFileWriteSize(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Logging_FilePreallocationSize ***<br>
	 * Original signature : <code>int32 DAQmxGetLoggingFilePreallocationSize(TaskHandle, uInt64*)</code><br>
	 * <i>native declaration : line 6078</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetLoggingFilePreallocationSize(com.sun.jna.Pointer, java.nio.LongBuffer)} and {@link #DAQmxGetLoggingFilePreallocationSize(com.sun.jna.Pointer, com.sun.jna.ptr.LongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetLoggingFilePreallocationSize(Pointer taskHandle, LongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Logging_FilePreallocationSize ***<br>
	 * Original signature : <code>int32 DAQmxGetLoggingFilePreallocationSize(TaskHandle, uInt64*)</code><br>
	 * <i>native declaration : line 6078</i>
	 */
	// int DAQmxGetLoggingFilePreallocationSize(Pointer taskHandle, LongBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetLoggingFilePreallocationSize(TaskHandle, uInt64)</code><br>
	 * <i>native declaration : line 6079</i>
	 */
	// int DAQmxSetLoggingFilePreallocationSize(Pointer taskHandle, long data);
	/**
	 * Original signature : <code>int32 DAQmxResetLoggingFilePreallocationSize(TaskHandle)</code><br>
	 * <i>native declaration : line 6080</i>
	 */
	// int DAQmxResetLoggingFilePreallocationSize(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Read_CurrReadPos ***<br>
	 * Original signature : <code>int32 DAQmxGetReadCurrReadPos(TaskHandle, uInt64*)</code><br>
	 * <i>native declaration : line 6082</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetReadCurrReadPos(com.sun.jna.Pointer, java.nio.LongBuffer)} and {@link #DAQmxGetReadCurrReadPos(com.sun.jna.Pointer, com.sun.jna.ptr.LongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetReadCurrReadPos(Pointer taskHandle, LongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Read_CurrReadPos ***<br>
	 * Original signature : <code>int32 DAQmxGetReadCurrReadPos(TaskHandle, uInt64*)</code><br>
	 * <i>native declaration : line 6082</i>
	 */
	// int DAQmxGetReadCurrReadPos(Pointer taskHandle, LongBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_Read_AvailSampPerChan ***<br>
	 * Original signature : <code>int32 DAQmxGetReadAvailSampPerChan(TaskHandle, uInt32*)</code><br>
	 * <i>native declaration : line 6084</i>
	 */
	// int DAQmxGetReadAvailSampPerChan(Pointer taskHandle, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Read_TotalSampPerChanAcquired ***<br>
	 * Original signature : <code>int32 DAQmxGetReadTotalSampPerChanAcquired(TaskHandle, uInt64*)</code><br>
	 * <i>native declaration : line 6086</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetReadTotalSampPerChanAcquired(com.sun.jna.Pointer, java.nio.LongBuffer)} and {@link #DAQmxGetReadTotalSampPerChanAcquired(com.sun.jna.Pointer, com.sun.jna.ptr.LongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetReadTotalSampPerChanAcquired(Pointer taskHandle, LongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Read_TotalSampPerChanAcquired ***<br>
	 * Original signature : <code>int32 DAQmxGetReadTotalSampPerChanAcquired(TaskHandle, uInt64*)</code><br>
	 * <i>native declaration : line 6086</i>
	 */
	// int DAQmxGetReadTotalSampPerChanAcquired(Pointer taskHandle, LongBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_Read_CommonModeRangeErrorChansExist ***<br>
	 * Original signature : <code>int32 DAQmxGetReadCommonModeRangeErrorChansExist(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6088</i>
	 */
	// int DAQmxGetReadCommonModeRangeErrorChansExist(Pointer taskHandle, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Read_CommonModeRangeErrorChans ***<br>
	 * Original signature : <code>int32 DAQmxGetReadCommonModeRangeErrorChans(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6090</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetReadCommonModeRangeErrorChans(com.sun.jna.Pointer, java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetReadCommonModeRangeErrorChans(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetReadCommonModeRangeErrorChans(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Read_CommonModeRangeErrorChans ***<br>
	 * Original signature : <code>int32 DAQmxGetReadCommonModeRangeErrorChans(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6090</i>
	 */
	// int DAQmxGetReadCommonModeRangeErrorChans(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Read_ExcitFaultChansExist ***<br>
	 * Original signature : <code>int32 DAQmxGetReadExcitFaultChansExist(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6092</i>
	 */
	// int DAQmxGetReadExcitFaultChansExist(Pointer taskHandle, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Read_ExcitFaultChans ***<br>
	 * Original signature : <code>int32 DAQmxGetReadExcitFaultChans(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6094</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetReadExcitFaultChans(com.sun.jna.Pointer, java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetReadExcitFaultChans(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetReadExcitFaultChans(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Read_ExcitFaultChans ***<br>
	 * Original signature : <code>int32 DAQmxGetReadExcitFaultChans(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6094</i>
	 */
	// int DAQmxGetReadExcitFaultChans(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Read_OvercurrentChansExist ***<br>
	 * Original signature : <code>int32 DAQmxGetReadOvercurrentChansExist(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6096</i>
	 */
	// int DAQmxGetReadOvercurrentChansExist(Pointer taskHandle, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Read_OvercurrentChans ***<br>
	 * Original signature : <code>int32 DAQmxGetReadOvercurrentChans(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6098</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetReadOvercurrentChans(com.sun.jna.Pointer, java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetReadOvercurrentChans(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetReadOvercurrentChans(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Read_OvercurrentChans ***<br>
	 * Original signature : <code>int32 DAQmxGetReadOvercurrentChans(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6098</i>
	 */
	// int DAQmxGetReadOvercurrentChans(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Read_OvertemperatureChansExist ***<br>
	 * Original signature : <code>int32 DAQmxGetReadOvertemperatureChansExist(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6100</i>
	 */
	// int DAQmxGetReadOvertemperatureChansExist(Pointer taskHandle, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Read_OvertemperatureChans ***<br>
	 * Original signature : <code>int32 DAQmxGetReadOvertemperatureChans(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6102</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetReadOvertemperatureChans(com.sun.jna.Pointer, java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetReadOvertemperatureChans(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetReadOvertemperatureChans(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Read_OvertemperatureChans ***<br>
	 * Original signature : <code>int32 DAQmxGetReadOvertemperatureChans(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6102</i>
	 */
	// int DAQmxGetReadOvertemperatureChans(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Read_OpenChansExist ***<br>
	 * Original signature : <code>int32 DAQmxGetReadOpenChansExist(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6104</i>
	 */
	// int DAQmxGetReadOpenChansExist(Pointer taskHandle, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Read_OpenChans ***<br>
	 * Original signature : <code>int32 DAQmxGetReadOpenChans(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6106</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetReadOpenChans(com.sun.jna.Pointer, java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetReadOpenChans(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetReadOpenChans(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Read_OpenChans ***<br>
	 * Original signature : <code>int32 DAQmxGetReadOpenChans(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6106</i>
	 */
	// int DAQmxGetReadOpenChans(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Read_OpenChansDetails ***<br>
	 * Original signature : <code>int32 DAQmxGetReadOpenChansDetails(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6108</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetReadOpenChansDetails(com.sun.jna.Pointer, java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetReadOpenChansDetails(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetReadOpenChansDetails(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Read_OpenChansDetails ***<br>
	 * Original signature : <code>int32 DAQmxGetReadOpenChansDetails(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6108</i>
	 */
	// int DAQmxGetReadOpenChansDetails(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Read_OpenCurrentLoopChansExist ***<br>
	 * Original signature : <code>int32 DAQmxGetReadOpenCurrentLoopChansExist(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6110</i>
	 */
	// int DAQmxGetReadOpenCurrentLoopChansExist(Pointer taskHandle, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Read_OpenCurrentLoopChans ***<br>
	 * Original signature : <code>int32 DAQmxGetReadOpenCurrentLoopChans(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6112</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetReadOpenCurrentLoopChans(com.sun.jna.Pointer, java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetReadOpenCurrentLoopChans(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetReadOpenCurrentLoopChans(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Read_OpenCurrentLoopChans ***<br>
	 * Original signature : <code>int32 DAQmxGetReadOpenCurrentLoopChans(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6112</i>
	 */
	// int DAQmxGetReadOpenCurrentLoopChans(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Read_OpenThrmcplChansExist ***<br>
	 * Original signature : <code>int32 DAQmxGetReadOpenThrmcplChansExist(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6114</i>
	 */
	// int DAQmxGetReadOpenThrmcplChansExist(Pointer taskHandle, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Read_OpenThrmcplChans ***<br>
	 * Original signature : <code>int32 DAQmxGetReadOpenThrmcplChans(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6116</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetReadOpenThrmcplChans(com.sun.jna.Pointer, java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetReadOpenThrmcplChans(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetReadOpenThrmcplChans(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Read_OpenThrmcplChans ***<br>
	 * Original signature : <code>int32 DAQmxGetReadOpenThrmcplChans(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6116</i>
	 */
	// int DAQmxGetReadOpenThrmcplChans(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Read_OverloadedChansExist ***<br>
	 * Original signature : <code>int32 DAQmxGetReadOverloadedChansExist(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6118</i>
	 */
	// int DAQmxGetReadOverloadedChansExist(Pointer taskHandle, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Read_OverloadedChans ***<br>
	 * Original signature : <code>int32 DAQmxGetReadOverloadedChans(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6120</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetReadOverloadedChans(com.sun.jna.Pointer, java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetReadOverloadedChans(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetReadOverloadedChans(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Read_OverloadedChans ***<br>
	 * Original signature : <code>int32 DAQmxGetReadOverloadedChans(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6120</i>
	 */
	// int DAQmxGetReadOverloadedChans(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Read_AccessoryInsertionOrRemovalDetected ***<br>
	 * Original signature : <code>int32 DAQmxGetReadAccessoryInsertionOrRemovalDetected(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6122</i>
	 */
	// int DAQmxGetReadAccessoryInsertionOrRemovalDetected(Pointer taskHandle, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Read_DevsWithInsertedOrRemovedAccessories ***<br>
	 * Original signature : <code>int32 DAQmxGetReadDevsWithInsertedOrRemovedAccessories(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6124</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetReadDevsWithInsertedOrRemovedAccessories(com.sun.jna.Pointer, java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetReadDevsWithInsertedOrRemovedAccessories(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetReadDevsWithInsertedOrRemovedAccessories(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Read_DevsWithInsertedOrRemovedAccessories ***<br>
	 * Original signature : <code>int32 DAQmxGetReadDevsWithInsertedOrRemovedAccessories(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6124</i>
	 */
	// int DAQmxGetReadDevsWithInsertedOrRemovedAccessories(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Read_ChangeDetect_HasOverflowed ***<br>
	 * Original signature : <code>int32 DAQmxGetReadChangeDetectHasOverflowed(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6126</i>
	 */
	// int DAQmxGetReadChangeDetectHasOverflowed(Pointer taskHandle, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Read_RawDataWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetReadRawDataWidth(TaskHandle, uInt32*)</code><br>
	 * <i>native declaration : line 6128</i>
	 */
	// int DAQmxGetReadRawDataWidth(Pointer taskHandle, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Read_NumChans ***<br>
	 * Original signature : <code>int32 DAQmxGetReadNumChans(TaskHandle, uInt32*)</code><br>
	 * <i>native declaration : line 6130</i>
	 */
	// int DAQmxGetReadNumChans(Pointer taskHandle, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Read_DigitalLines_BytesPerChan ***<br>
	 * Original signature : <code>int32 DAQmxGetReadDigitalLinesBytesPerChan(TaskHandle, uInt32*)</code><br>
	 * <i>native declaration : line 6132</i>
	 */
	// int DAQmxGetReadDigitalLinesBytesPerChan(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Uses value set WaitMode<br>
	 * Original signature : <code>int32 DAQmxGetReadWaitMode(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6135</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetReadWaitMode(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #DAQmxGetReadWaitMode(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetReadWaitMode(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set WaitMode<br>
	 * Original signature : <code>int32 DAQmxGetReadWaitMode(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6135</i>
	 */
	// int DAQmxGetReadWaitMode(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetReadWaitMode(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6136</i>
	 */
	// int DAQmxSetReadWaitMode(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetReadWaitMode(TaskHandle)</code><br>
	 * <i>native declaration : line 6137</i>
	 */
	// int DAQmxResetReadWaitMode(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Read_SleepTime ***<br>
	 * Original signature : <code>int32 DAQmxGetReadSleepTime(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6139</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetReadSleepTime(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #DAQmxGetReadSleepTime(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetReadSleepTime(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Read_SleepTime ***<br>
	 * Original signature : <code>int32 DAQmxGetReadSleepTime(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6139</i>
	 */
	// int DAQmxGetReadSleepTime(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetReadSleepTime(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6140</i>
	 */
	// int DAQmxSetReadSleepTime(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetReadSleepTime(TaskHandle)</code><br>
	 * <i>native declaration : line 6141</i>
	 */
	// int DAQmxResetReadSleepTime(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_RealTime_ConvLateErrorsToWarnings ***<br>
	 * Original signature : <code>int32 DAQmxGetRealTimeConvLateErrorsToWarnings(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6145</i>
	 */
	// int DAQmxGetRealTimeConvLateErrorsToWarnings(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetRealTimeConvLateErrorsToWarnings(TaskHandle, bool32)</code><br>
	 * <i>native declaration : line 6146</i>
	 */
	// int DAQmxSetRealTimeConvLateErrorsToWarnings(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetRealTimeConvLateErrorsToWarnings(TaskHandle)</code><br>
	 * <i>native declaration : line 6147</i>
	 */
	// int DAQmxResetRealTimeConvLateErrorsToWarnings(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_RealTime_NumOfWarmupIters ***<br>
	 * Original signature : <code>int32 DAQmxGetRealTimeNumOfWarmupIters(TaskHandle, uInt32*)</code><br>
	 * <i>native declaration : line 6149</i>
	 */
	// int DAQmxGetRealTimeNumOfWarmupIters(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetRealTimeNumOfWarmupIters(TaskHandle, uInt32)</code><br>
	 * <i>native declaration : line 6150</i>
	 */
	// int DAQmxSetRealTimeNumOfWarmupIters(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetRealTimeNumOfWarmupIters(TaskHandle)</code><br>
	 * <i>native declaration : line 6151</i>
	 */
	// int DAQmxResetRealTimeNumOfWarmupIters(Pointer taskHandle);
	/**
	 * Uses value set WaitMode3<br>
	 * Original signature : <code>int32 DAQmxGetRealTimeWaitForNextSampClkWaitMode(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6154</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetRealTimeWaitForNextSampClkWaitMode(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #DAQmxGetRealTimeWaitForNextSampClkWaitMode(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetRealTimeWaitForNextSampClkWaitMode(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set WaitMode3<br>
	 * Original signature : <code>int32 DAQmxGetRealTimeWaitForNextSampClkWaitMode(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6154</i>
	 */
	// int DAQmxGetRealTimeWaitForNextSampClkWaitMode(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetRealTimeWaitForNextSampClkWaitMode(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6155</i>
	 */
	// int DAQmxSetRealTimeWaitForNextSampClkWaitMode(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetRealTimeWaitForNextSampClkWaitMode(TaskHandle)</code><br>
	 * <i>native declaration : line 6156</i>
	 */
	// int DAQmxResetRealTimeWaitForNextSampClkWaitMode(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_RealTime_ReportMissedSamp ***<br>
	 * Original signature : <code>int32 DAQmxGetRealTimeReportMissedSamp(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6158</i>
	 */
	// int DAQmxGetRealTimeReportMissedSamp(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetRealTimeReportMissedSamp(TaskHandle, bool32)</code><br>
	 * <i>native declaration : line 6159</i>
	 */
	// int DAQmxSetRealTimeReportMissedSamp(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetRealTimeReportMissedSamp(TaskHandle)</code><br>
	 * <i>native declaration : line 6160</i>
	 */
	// int DAQmxResetRealTimeReportMissedSamp(Pointer taskHandle);
	/**
	 * Uses value set WaitMode4<br>
	 * Original signature : <code>int32 DAQmxGetRealTimeWriteRecoveryMode(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6163</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetRealTimeWriteRecoveryMode(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #DAQmxGetRealTimeWriteRecoveryMode(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetRealTimeWriteRecoveryMode(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set WaitMode4<br>
	 * Original signature : <code>int32 DAQmxGetRealTimeWriteRecoveryMode(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6163</i>
	 */
	// int DAQmxGetRealTimeWriteRecoveryMode(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetRealTimeWriteRecoveryMode(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6164</i>
	 */
	// int DAQmxSetRealTimeWriteRecoveryMode(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetRealTimeWriteRecoveryMode(TaskHandle)</code><br>
	 * <i>native declaration : line 6165</i>
	 */
	// int DAQmxResetRealTimeWriteRecoveryMode(Pointer taskHandle);
	/**
	 * Uses value set SwitchUsageTypes<br>
	 * Original signature : <code>int32 DAQmxGetSwitchChanUsage(const char[], int32*)</code><br>
	 * <i>native declaration : line 6170</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetSwitchChanUsage(byte[], java.nio.IntBuffer)} and {@link #DAQmxGetSwitchChanUsage(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetSwitchChanUsage(Pointer switchChannelName, IntByReference data);
	/**
	 * Uses value set SwitchUsageTypes<br>
	 * Original signature : <code>int32 DAQmxGetSwitchChanUsage(const char[], int32*)</code><br>
	 * <i>native declaration : line 6170</i>
	 */
	// int DAQmxGetSwitchChanUsage(byte switchChannelName[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetSwitchChanUsage(const char[], int32)</code><br>
	 * <i>native declaration : line 6171</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetSwitchChanUsage(byte[], int)} and {@link #DAQmxSetSwitchChanUsage(com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetSwitchChanUsage(Pointer switchChannelName, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetSwitchChanUsage(const char[], int32)</code><br>
	 * <i>native declaration : line 6171</i>
	 */
	// int DAQmxSetSwitchChanUsage(byte switchChannelName[], int data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchChan_AnlgBusSharingEnable ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchChanAnlgBusSharingEnable(const char[], bool32*)</code><br>
	 * <i>native declaration : line 6173</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetSwitchChanAnlgBusSharingEnable(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetSwitchChanAnlgBusSharingEnable(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetSwitchChanAnlgBusSharingEnable(Pointer switchChannelName, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchChan_AnlgBusSharingEnable ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchChanAnlgBusSharingEnable(const char[], bool32*)</code><br>
	 * <i>native declaration : line 6173</i>
	 */
	// int DAQmxGetSwitchChanAnlgBusSharingEnable(byte switchChannelName[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetSwitchChanAnlgBusSharingEnable(const char[], bool32)</code><br>
	 * <i>native declaration : line 6174</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetSwitchChanAnlgBusSharingEnable(byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetSwitchChanAnlgBusSharingEnable(com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetSwitchChanAnlgBusSharingEnable(Pointer switchChannelName, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetSwitchChanAnlgBusSharingEnable(const char[], bool32)</code><br>
	 * <i>native declaration : line 6174</i>
	 */
	// int DAQmxSetSwitchChanAnlgBusSharingEnable(byte switchChannelName[], NativeLong data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchChan_MaxACCarryCurrent ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchChanMaxACCarryCurrent(const char[], float64*)</code><br>
	 * <i>native declaration : line 6176</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetSwitchChanMaxACCarryCurrent(byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetSwitchChanMaxACCarryCurrent(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetSwitchChanMaxACCarryCurrent(Pointer switchChannelName, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchChan_MaxACCarryCurrent ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchChanMaxACCarryCurrent(const char[], float64*)</code><br>
	 * <i>native declaration : line 6176</i>
	 */
	// int DAQmxGetSwitchChanMaxACCarryCurrent(byte switchChannelName[], DoubleBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchChan_MaxACSwitchCurrent ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchChanMaxACSwitchCurrent(const char[], float64*)</code><br>
	 * <i>native declaration : line 6178</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetSwitchChanMaxACSwitchCurrent(byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetSwitchChanMaxACSwitchCurrent(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetSwitchChanMaxACSwitchCurrent(Pointer switchChannelName, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchChan_MaxACSwitchCurrent ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchChanMaxACSwitchCurrent(const char[], float64*)</code><br>
	 * <i>native declaration : line 6178</i>
	 */
	// int DAQmxGetSwitchChanMaxACSwitchCurrent(byte switchChannelName[], DoubleBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchChan_MaxACCarryPwr ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchChanMaxACCarryPwr(const char[], float64*)</code><br>
	 * <i>native declaration : line 6180</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetSwitchChanMaxACCarryPwr(byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetSwitchChanMaxACCarryPwr(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetSwitchChanMaxACCarryPwr(Pointer switchChannelName, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchChan_MaxACCarryPwr ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchChanMaxACCarryPwr(const char[], float64*)</code><br>
	 * <i>native declaration : line 6180</i>
	 */
	// int DAQmxGetSwitchChanMaxACCarryPwr(byte switchChannelName[], DoubleBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchChan_MaxACSwitchPwr ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchChanMaxACSwitchPwr(const char[], float64*)</code><br>
	 * <i>native declaration : line 6182</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetSwitchChanMaxACSwitchPwr(byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetSwitchChanMaxACSwitchPwr(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetSwitchChanMaxACSwitchPwr(Pointer switchChannelName, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchChan_MaxACSwitchPwr ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchChanMaxACSwitchPwr(const char[], float64*)</code><br>
	 * <i>native declaration : line 6182</i>
	 */
	// int DAQmxGetSwitchChanMaxACSwitchPwr(byte switchChannelName[], DoubleBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchChan_MaxDCCarryCurrent ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchChanMaxDCCarryCurrent(const char[], float64*)</code><br>
	 * <i>native declaration : line 6184</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetSwitchChanMaxDCCarryCurrent(byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetSwitchChanMaxDCCarryCurrent(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetSwitchChanMaxDCCarryCurrent(Pointer switchChannelName, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchChan_MaxDCCarryCurrent ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchChanMaxDCCarryCurrent(const char[], float64*)</code><br>
	 * <i>native declaration : line 6184</i>
	 */
	// int DAQmxGetSwitchChanMaxDCCarryCurrent(byte switchChannelName[], DoubleBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchChan_MaxDCSwitchCurrent ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchChanMaxDCSwitchCurrent(const char[], float64*)</code><br>
	 * <i>native declaration : line 6186</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetSwitchChanMaxDCSwitchCurrent(byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetSwitchChanMaxDCSwitchCurrent(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetSwitchChanMaxDCSwitchCurrent(Pointer switchChannelName, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchChan_MaxDCSwitchCurrent ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchChanMaxDCSwitchCurrent(const char[], float64*)</code><br>
	 * <i>native declaration : line 6186</i>
	 */
	// int DAQmxGetSwitchChanMaxDCSwitchCurrent(byte switchChannelName[], DoubleBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchChan_MaxDCCarryPwr ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchChanMaxDCCarryPwr(const char[], float64*)</code><br>
	 * <i>native declaration : line 6188</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetSwitchChanMaxDCCarryPwr(byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetSwitchChanMaxDCCarryPwr(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetSwitchChanMaxDCCarryPwr(Pointer switchChannelName, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchChan_MaxDCCarryPwr ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchChanMaxDCCarryPwr(const char[], float64*)</code><br>
	 * <i>native declaration : line 6188</i>
	 */
	// int DAQmxGetSwitchChanMaxDCCarryPwr(byte switchChannelName[], DoubleBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchChan_MaxDCSwitchPwr ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchChanMaxDCSwitchPwr(const char[], float64*)</code><br>
	 * <i>native declaration : line 6190</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetSwitchChanMaxDCSwitchPwr(byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetSwitchChanMaxDCSwitchPwr(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetSwitchChanMaxDCSwitchPwr(Pointer switchChannelName, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchChan_MaxDCSwitchPwr ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchChanMaxDCSwitchPwr(const char[], float64*)</code><br>
	 * <i>native declaration : line 6190</i>
	 */
	// int DAQmxGetSwitchChanMaxDCSwitchPwr(byte switchChannelName[], DoubleBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchChan_MaxACVoltage ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchChanMaxACVoltage(const char[], float64*)</code><br>
	 * <i>native declaration : line 6192</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetSwitchChanMaxACVoltage(byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetSwitchChanMaxACVoltage(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetSwitchChanMaxACVoltage(Pointer switchChannelName, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchChan_MaxACVoltage ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchChanMaxACVoltage(const char[], float64*)</code><br>
	 * <i>native declaration : line 6192</i>
	 */
	// int DAQmxGetSwitchChanMaxACVoltage(byte switchChannelName[], DoubleBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchChan_MaxDCVoltage ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchChanMaxDCVoltage(const char[], float64*)</code><br>
	 * <i>native declaration : line 6194</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetSwitchChanMaxDCVoltage(byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetSwitchChanMaxDCVoltage(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetSwitchChanMaxDCVoltage(Pointer switchChannelName, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchChan_MaxDCVoltage ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchChanMaxDCVoltage(const char[], float64*)</code><br>
	 * <i>native declaration : line 6194</i>
	 */
	// int DAQmxGetSwitchChanMaxDCVoltage(byte switchChannelName[], DoubleBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchChan_WireMode ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchChanWireMode(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 6196</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetSwitchChanWireMode(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetSwitchChanWireMode(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetSwitchChanWireMode(Pointer switchChannelName, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchChan_WireMode ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchChanWireMode(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 6196</i>
	 */
	// int DAQmxGetSwitchChanWireMode(byte switchChannelName[], NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchChan_Bandwidth ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchChanBandwidth(const char[], float64*)</code><br>
	 * <i>native declaration : line 6198</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetSwitchChanBandwidth(byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetSwitchChanBandwidth(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetSwitchChanBandwidth(Pointer switchChannelName, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchChan_Bandwidth ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchChanBandwidth(const char[], float64*)</code><br>
	 * <i>native declaration : line 6198</i>
	 */
	// int DAQmxGetSwitchChanBandwidth(byte switchChannelName[], DoubleBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchChan_Impedance ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchChanImpedance(const char[], float64*)</code><br>
	 * <i>native declaration : line 6200</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetSwitchChanImpedance(byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetSwitchChanImpedance(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetSwitchChanImpedance(Pointer switchChannelName, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchChan_Impedance ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchChanImpedance(const char[], float64*)</code><br>
	 * <i>native declaration : line 6200</i>
	 */
	// int DAQmxGetSwitchChanImpedance(byte switchChannelName[], DoubleBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchDev_SettlingTime ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchDevSettlingTime(const char[], float64*)</code><br>
	 * <i>native declaration : line 6204</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetSwitchDevSettlingTime(byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetSwitchDevSettlingTime(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetSwitchDevSettlingTime(Pointer deviceName, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchDev_SettlingTime ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchDevSettlingTime(const char[], float64*)</code><br>
	 * <i>native declaration : line 6204</i>
	 */
	// int DAQmxGetSwitchDevSettlingTime(byte deviceName[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetSwitchDevSettlingTime(const char[], float64)</code><br>
	 * <i>native declaration : line 6205</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetSwitchDevSettlingTime(byte[], double)} and {@link #DAQmxSetSwitchDevSettlingTime(com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetSwitchDevSettlingTime(Pointer deviceName, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetSwitchDevSettlingTime(const char[], float64)</code><br>
	 * <i>native declaration : line 6205</i>
	 */
	// int DAQmxSetSwitchDevSettlingTime(byte deviceName[], double data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchDev_AutoConnAnlgBus ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchDevAutoConnAnlgBus(const char[], bool32*)</code><br>
	 * <i>native declaration : line 6207</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetSwitchDevAutoConnAnlgBus(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetSwitchDevAutoConnAnlgBus(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetSwitchDevAutoConnAnlgBus(Pointer deviceName, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchDev_AutoConnAnlgBus ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchDevAutoConnAnlgBus(const char[], bool32*)</code><br>
	 * <i>native declaration : line 6207</i>
	 */
	// int DAQmxGetSwitchDevAutoConnAnlgBus(byte deviceName[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetSwitchDevAutoConnAnlgBus(const char[], bool32)</code><br>
	 * <i>native declaration : line 6208</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetSwitchDevAutoConnAnlgBus(byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetSwitchDevAutoConnAnlgBus(com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetSwitchDevAutoConnAnlgBus(Pointer deviceName, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetSwitchDevAutoConnAnlgBus(const char[], bool32)</code><br>
	 * <i>native declaration : line 6208</i>
	 */
	// int DAQmxSetSwitchDevAutoConnAnlgBus(byte deviceName[], NativeLong data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchDev_PwrDownLatchRelaysAfterSettling ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchDevPwrDownLatchRelaysAfterSettling(const char[], bool32*)</code><br>
	 * <i>native declaration : line 6210</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetSwitchDevPwrDownLatchRelaysAfterSettling(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetSwitchDevPwrDownLatchRelaysAfterSettling(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetSwitchDevPwrDownLatchRelaysAfterSettling(Pointer deviceName, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchDev_PwrDownLatchRelaysAfterSettling ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchDevPwrDownLatchRelaysAfterSettling(const char[], bool32*)</code><br>
	 * <i>native declaration : line 6210</i>
	 */
	// int DAQmxGetSwitchDevPwrDownLatchRelaysAfterSettling(byte deviceName[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetSwitchDevPwrDownLatchRelaysAfterSettling(const char[], bool32)</code><br>
	 * <i>native declaration : line 6211</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetSwitchDevPwrDownLatchRelaysAfterSettling(byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetSwitchDevPwrDownLatchRelaysAfterSettling(com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetSwitchDevPwrDownLatchRelaysAfterSettling(Pointer deviceName, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetSwitchDevPwrDownLatchRelaysAfterSettling(const char[], bool32)</code><br>
	 * <i>native declaration : line 6211</i>
	 */
	// int DAQmxSetSwitchDevPwrDownLatchRelaysAfterSettling(byte deviceName[], NativeLong data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchDev_Settled ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchDevSettled(const char[], bool32*)</code><br>
	 * <i>native declaration : line 6213</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetSwitchDevSettled(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetSwitchDevSettled(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetSwitchDevSettled(Pointer deviceName, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchDev_Settled ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchDevSettled(const char[], bool32*)</code><br>
	 * <i>native declaration : line 6213</i>
	 */
	// int DAQmxGetSwitchDevSettled(byte deviceName[], NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchDev_RelayList ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchDevRelayList(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 6215</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetSwitchDevRelayList(byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetSwitchDevRelayList(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetSwitchDevRelayList(Pointer deviceName, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_SwitchDev_RelayList ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchDevRelayList(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 6215</i>
	 */
	// int DAQmxGetSwitchDevRelayList(byte deviceName[], ByteBuffer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_SwitchDev_NumRelays ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchDevNumRelays(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 6217</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetSwitchDevNumRelays(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetSwitchDevNumRelays(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetSwitchDevNumRelays(Pointer deviceName, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchDev_NumRelays ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchDevNumRelays(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 6217</i>
	 */
	// int DAQmxGetSwitchDevNumRelays(byte deviceName[], NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchDev_SwitchChanList ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchDevSwitchChanList(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 6219</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetSwitchDevSwitchChanList(byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetSwitchDevSwitchChanList(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetSwitchDevSwitchChanList(Pointer deviceName, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_SwitchDev_SwitchChanList ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchDevSwitchChanList(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 6219</i>
	 */
	// int DAQmxGetSwitchDevSwitchChanList(byte deviceName[], ByteBuffer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_SwitchDev_NumSwitchChans ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchDevNumSwitchChans(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 6221</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetSwitchDevNumSwitchChans(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetSwitchDevNumSwitchChans(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetSwitchDevNumSwitchChans(Pointer deviceName, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchDev_NumSwitchChans ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchDevNumSwitchChans(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 6221</i>
	 */
	// int DAQmxGetSwitchDevNumSwitchChans(byte deviceName[], NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchDev_NumRows ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchDevNumRows(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 6223</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetSwitchDevNumRows(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetSwitchDevNumRows(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetSwitchDevNumRows(Pointer deviceName, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchDev_NumRows ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchDevNumRows(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 6223</i>
	 */
	// int DAQmxGetSwitchDevNumRows(byte deviceName[], NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchDev_NumColumns ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchDevNumColumns(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 6225</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetSwitchDevNumColumns(byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetSwitchDevNumColumns(com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetSwitchDevNumColumns(Pointer deviceName, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchDev_NumColumns ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchDevNumColumns(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 6225</i>
	 */
	// int DAQmxGetSwitchDevNumColumns(byte deviceName[], NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchDev_Topology ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchDevTopology(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 6227</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetSwitchDevTopology(byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetSwitchDevTopology(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetSwitchDevTopology(Pointer deviceName, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_SwitchDev_Topology ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchDevTopology(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 6227</i>
	 */
	// int DAQmxGetSwitchDevTopology(byte deviceName[], ByteBuffer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_SwitchDev_Temperature ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchDevTemperature(const char[], float64*)</code><br>
	 * <i>native declaration : line 6229</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetSwitchDevTemperature(byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetSwitchDevTemperature(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetSwitchDevTemperature(Pointer deviceName, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SwitchDev_Temperature ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchDevTemperature(const char[], float64*)</code><br>
	 * <i>native declaration : line 6229</i>
	 */
	// int DAQmxGetSwitchDevTemperature(byte deviceName[], DoubleBuffer data);
	/**
	 * Uses value set BreakMode<br>
	 * Original signature : <code>int32 DAQmxGetSwitchScanBreakMode(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6234</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetSwitchScanBreakMode(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #DAQmxGetSwitchScanBreakMode(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetSwitchScanBreakMode(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set BreakMode<br>
	 * Original signature : <code>int32 DAQmxGetSwitchScanBreakMode(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6234</i>
	 */
	// int DAQmxGetSwitchScanBreakMode(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetSwitchScanBreakMode(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6235</i>
	 */
	// int DAQmxSetSwitchScanBreakMode(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetSwitchScanBreakMode(TaskHandle)</code><br>
	 * <i>native declaration : line 6236</i>
	 */
	// int DAQmxResetSwitchScanBreakMode(Pointer taskHandle);
	/**
	 * Uses value set SwitchScanRepeatMode<br>
	 * Original signature : <code>int32 DAQmxGetSwitchScanRepeatMode(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6239</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetSwitchScanRepeatMode(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #DAQmxGetSwitchScanRepeatMode(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetSwitchScanRepeatMode(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set SwitchScanRepeatMode<br>
	 * Original signature : <code>int32 DAQmxGetSwitchScanRepeatMode(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6239</i>
	 */
	// int DAQmxGetSwitchScanRepeatMode(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetSwitchScanRepeatMode(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6240</i>
	 */
	// int DAQmxSetSwitchScanRepeatMode(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetSwitchScanRepeatMode(TaskHandle)</code><br>
	 * <i>native declaration : line 6241</i>
	 */
	// int DAQmxResetSwitchScanRepeatMode(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_SwitchScan_WaitingForAdv ***<br>
	 * Original signature : <code>int32 DAQmxGetSwitchScanWaitingForAdv(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6243</i>
	 */
	// int DAQmxGetSwitchScanWaitingForAdv(Pointer taskHandle, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Scale_Descr ***<br>
	 * Original signature : <code>int32 DAQmxGetScaleDescr(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 6247</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetScaleDescr(byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetScaleDescr(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetScaleDescr(Pointer scaleName, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Scale_Descr ***<br>
	 * Original signature : <code>int32 DAQmxGetScaleDescr(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 6247</i>
	 */
	// int DAQmxGetScaleDescr(byte scaleName[], ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetScaleDescr(const char[], const char*)</code><br>
	 * <i>native declaration : line 6248</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetScaleDescr(byte[], java.lang.String)} and {@link #DAQmxSetScaleDescr(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetScaleDescr(Pointer scaleName, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetScaleDescr(const char[], const char*)</code><br>
	 * <i>native declaration : line 6248</i>
	 */
	// int DAQmxSetScaleDescr(byte scaleName[], String data);
	/**
	 * *** Set/Get functions for DAQmx_Scale_ScaledUnits ***<br>
	 * Original signature : <code>int32 DAQmxGetScaleScaledUnits(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 6250</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetScaleScaledUnits(byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetScaleScaledUnits(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetScaleScaledUnits(Pointer scaleName, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Scale_ScaledUnits ***<br>
	 * Original signature : <code>int32 DAQmxGetScaleScaledUnits(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 6250</i>
	 */
	// int DAQmxGetScaleScaledUnits(byte scaleName[], ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetScaleScaledUnits(const char[], const char*)</code><br>
	 * <i>native declaration : line 6251</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetScaleScaledUnits(byte[], java.lang.String)} and {@link #DAQmxSetScaleScaledUnits(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetScaleScaledUnits(Pointer scaleName, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetScaleScaledUnits(const char[], const char*)</code><br>
	 * <i>native declaration : line 6251</i>
	 */
	// int DAQmxSetScaleScaledUnits(byte scaleName[], String data);
	/**
	 * Uses value set UnitsPreScaled<br>
	 * Original signature : <code>int32 DAQmxGetScalePreScaledUnits(const char[], int32*)</code><br>
	 * <i>native declaration : line 6254</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetScalePreScaledUnits(byte[], java.nio.IntBuffer)} and {@link #DAQmxGetScalePreScaledUnits(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetScalePreScaledUnits(Pointer scaleName, IntByReference data);
	/**
	 * Uses value set UnitsPreScaled<br>
	 * Original signature : <code>int32 DAQmxGetScalePreScaledUnits(const char[], int32*)</code><br>
	 * <i>native declaration : line 6254</i>
	 */
	// int DAQmxGetScalePreScaledUnits(byte scaleName[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetScalePreScaledUnits(const char[], int32)</code><br>
	 * <i>native declaration : line 6255</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetScalePreScaledUnits(byte[], int)} and {@link #DAQmxSetScalePreScaledUnits(com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetScalePreScaledUnits(Pointer scaleName, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetScalePreScaledUnits(const char[], int32)</code><br>
	 * <i>native declaration : line 6255</i>
	 */
	// int DAQmxSetScalePreScaledUnits(byte scaleName[], int data);
	/**
	 * Uses value set ScaleType<br>
	 * Original signature : <code>int32 DAQmxGetScaleType(const char[], int32*)</code><br>
	 * <i>native declaration : line 6258</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetScaleType(byte[], java.nio.IntBuffer)} and {@link #DAQmxGetScaleType(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetScaleType(Pointer scaleName, IntByReference data);
	/**
	 * Uses value set ScaleType<br>
	 * Original signature : <code>int32 DAQmxGetScaleType(const char[], int32*)</code><br>
	 * <i>native declaration : line 6258</i>
	 */
	// int DAQmxGetScaleType(byte scaleName[], IntBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_Scale_Lin_Slope ***<br>
	 * Original signature : <code>int32 DAQmxGetScaleLinSlope(const char[], float64*)</code><br>
	 * <i>native declaration : line 6260</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetScaleLinSlope(byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetScaleLinSlope(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetScaleLinSlope(Pointer scaleName, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Scale_Lin_Slope ***<br>
	 * Original signature : <code>int32 DAQmxGetScaleLinSlope(const char[], float64*)</code><br>
	 * <i>native declaration : line 6260</i>
	 */
	// int DAQmxGetScaleLinSlope(byte scaleName[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetScaleLinSlope(const char[], float64)</code><br>
	 * <i>native declaration : line 6261</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetScaleLinSlope(byte[], double)} and {@link #DAQmxSetScaleLinSlope(com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetScaleLinSlope(Pointer scaleName, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetScaleLinSlope(const char[], float64)</code><br>
	 * <i>native declaration : line 6261</i>
	 */
	// int DAQmxSetScaleLinSlope(byte scaleName[], double data);
	/**
	 * *** Set/Get functions for DAQmx_Scale_Lin_YIntercept ***<br>
	 * Original signature : <code>int32 DAQmxGetScaleLinYIntercept(const char[], float64*)</code><br>
	 * <i>native declaration : line 6263</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetScaleLinYIntercept(byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetScaleLinYIntercept(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetScaleLinYIntercept(Pointer scaleName, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Scale_Lin_YIntercept ***<br>
	 * Original signature : <code>int32 DAQmxGetScaleLinYIntercept(const char[], float64*)</code><br>
	 * <i>native declaration : line 6263</i>
	 */
	// int DAQmxGetScaleLinYIntercept(byte scaleName[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetScaleLinYIntercept(const char[], float64)</code><br>
	 * <i>native declaration : line 6264</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetScaleLinYIntercept(byte[], double)} and {@link #DAQmxSetScaleLinYIntercept(com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetScaleLinYIntercept(Pointer scaleName, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetScaleLinYIntercept(const char[], float64)</code><br>
	 * <i>native declaration : line 6264</i>
	 */
	// int DAQmxSetScaleLinYIntercept(byte scaleName[], double data);
	/**
	 * *** Set/Get functions for DAQmx_Scale_Map_ScaledMax ***<br>
	 * Original signature : <code>int32 DAQmxGetScaleMapScaledMax(const char[], float64*)</code><br>
	 * <i>native declaration : line 6266</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetScaleMapScaledMax(byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetScaleMapScaledMax(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetScaleMapScaledMax(Pointer scaleName, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Scale_Map_ScaledMax ***<br>
	 * Original signature : <code>int32 DAQmxGetScaleMapScaledMax(const char[], float64*)</code><br>
	 * <i>native declaration : line 6266</i>
	 */
	// int DAQmxGetScaleMapScaledMax(byte scaleName[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetScaleMapScaledMax(const char[], float64)</code><br>
	 * <i>native declaration : line 6267</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetScaleMapScaledMax(byte[], double)} and {@link #DAQmxSetScaleMapScaledMax(com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetScaleMapScaledMax(Pointer scaleName, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetScaleMapScaledMax(const char[], float64)</code><br>
	 * <i>native declaration : line 6267</i>
	 */
	// int DAQmxSetScaleMapScaledMax(byte scaleName[], double data);
	/**
	 * *** Set/Get functions for DAQmx_Scale_Map_PreScaledMax ***<br>
	 * Original signature : <code>int32 DAQmxGetScaleMapPreScaledMax(const char[], float64*)</code><br>
	 * <i>native declaration : line 6269</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetScaleMapPreScaledMax(byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetScaleMapPreScaledMax(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetScaleMapPreScaledMax(Pointer scaleName, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Scale_Map_PreScaledMax ***<br>
	 * Original signature : <code>int32 DAQmxGetScaleMapPreScaledMax(const char[], float64*)</code><br>
	 * <i>native declaration : line 6269</i>
	 */
	// int DAQmxGetScaleMapPreScaledMax(byte scaleName[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetScaleMapPreScaledMax(const char[], float64)</code><br>
	 * <i>native declaration : line 6270</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetScaleMapPreScaledMax(byte[], double)} and {@link #DAQmxSetScaleMapPreScaledMax(com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetScaleMapPreScaledMax(Pointer scaleName, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetScaleMapPreScaledMax(const char[], float64)</code><br>
	 * <i>native declaration : line 6270</i>
	 */
	// int DAQmxSetScaleMapPreScaledMax(byte scaleName[], double data);
	/**
	 * *** Set/Get functions for DAQmx_Scale_Map_ScaledMin ***<br>
	 * Original signature : <code>int32 DAQmxGetScaleMapScaledMin(const char[], float64*)</code><br>
	 * <i>native declaration : line 6272</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetScaleMapScaledMin(byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetScaleMapScaledMin(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetScaleMapScaledMin(Pointer scaleName, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Scale_Map_ScaledMin ***<br>
	 * Original signature : <code>int32 DAQmxGetScaleMapScaledMin(const char[], float64*)</code><br>
	 * <i>native declaration : line 6272</i>
	 */
	// int DAQmxGetScaleMapScaledMin(byte scaleName[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetScaleMapScaledMin(const char[], float64)</code><br>
	 * <i>native declaration : line 6273</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetScaleMapScaledMin(byte[], double)} and {@link #DAQmxSetScaleMapScaledMin(com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetScaleMapScaledMin(Pointer scaleName, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetScaleMapScaledMin(const char[], float64)</code><br>
	 * <i>native declaration : line 6273</i>
	 */
	// int DAQmxSetScaleMapScaledMin(byte scaleName[], double data);
	/**
	 * *** Set/Get functions for DAQmx_Scale_Map_PreScaledMin ***<br>
	 * Original signature : <code>int32 DAQmxGetScaleMapPreScaledMin(const char[], float64*)</code><br>
	 * <i>native declaration : line 6275</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetScaleMapPreScaledMin(byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetScaleMapPreScaledMin(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetScaleMapPreScaledMin(Pointer scaleName, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Scale_Map_PreScaledMin ***<br>
	 * Original signature : <code>int32 DAQmxGetScaleMapPreScaledMin(const char[], float64*)</code><br>
	 * <i>native declaration : line 6275</i>
	 */
	// int DAQmxGetScaleMapPreScaledMin(byte scaleName[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetScaleMapPreScaledMin(const char[], float64)</code><br>
	 * <i>native declaration : line 6276</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetScaleMapPreScaledMin(byte[], double)} and {@link #DAQmxSetScaleMapPreScaledMin(com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetScaleMapPreScaledMin(Pointer scaleName, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetScaleMapPreScaledMin(const char[], float64)</code><br>
	 * <i>native declaration : line 6276</i>
	 */
	// int DAQmxSetScaleMapPreScaledMin(byte scaleName[], double data);
	/**
	 * *** Set/Get functions for DAQmx_Scale_Poly_ForwardCoeff ***<br>
	 * Original signature : <code>int32 DAQmxGetScalePolyForwardCoeff(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 6278</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetScalePolyForwardCoeff(byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetScalePolyForwardCoeff(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetScalePolyForwardCoeff(Pointer scaleName, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Scale_Poly_ForwardCoeff ***<br>
	 * Original signature : <code>int32 DAQmxGetScalePolyForwardCoeff(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 6278</i>
	 */
	// int DAQmxGetScalePolyForwardCoeff(byte scaleName[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxSetScalePolyForwardCoeff(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 6279</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetScalePolyForwardCoeff(byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxSetScalePolyForwardCoeff(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetScalePolyForwardCoeff(Pointer scaleName, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxSetScalePolyForwardCoeff(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 6279</i>
	 */
	// int DAQmxSetScalePolyForwardCoeff(byte scaleName[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Scale_Poly_ReverseCoeff ***<br>
	 * Original signature : <code>int32 DAQmxGetScalePolyReverseCoeff(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 6281</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetScalePolyReverseCoeff(byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetScalePolyReverseCoeff(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetScalePolyReverseCoeff(Pointer scaleName, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Scale_Poly_ReverseCoeff ***<br>
	 * Original signature : <code>int32 DAQmxGetScalePolyReverseCoeff(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 6281</i>
	 */
	// int DAQmxGetScalePolyReverseCoeff(byte scaleName[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxSetScalePolyReverseCoeff(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 6282</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetScalePolyReverseCoeff(byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxSetScalePolyReverseCoeff(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetScalePolyReverseCoeff(Pointer scaleName, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxSetScalePolyReverseCoeff(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 6282</i>
	 */
	// int DAQmxSetScalePolyReverseCoeff(byte scaleName[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Scale_Table_ScaledVals ***<br>
	 * Original signature : <code>int32 DAQmxGetScaleTableScaledVals(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 6284</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetScaleTableScaledVals(byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetScaleTableScaledVals(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetScaleTableScaledVals(Pointer scaleName, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Scale_Table_ScaledVals ***<br>
	 * Original signature : <code>int32 DAQmxGetScaleTableScaledVals(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 6284</i>
	 */
	// int DAQmxGetScaleTableScaledVals(byte scaleName[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxSetScaleTableScaledVals(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 6285</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetScaleTableScaledVals(byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxSetScaleTableScaledVals(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetScaleTableScaledVals(Pointer scaleName, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxSetScaleTableScaledVals(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 6285</i>
	 */
	// int DAQmxSetScaleTableScaledVals(byte scaleName[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Scale_Table_PreScaledVals ***<br>
	 * Original signature : <code>int32 DAQmxGetScaleTablePreScaledVals(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 6287</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetScaleTablePreScaledVals(byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetScaleTablePreScaledVals(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetScaleTablePreScaledVals(Pointer scaleName, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Scale_Table_PreScaledVals ***<br>
	 * Original signature : <code>int32 DAQmxGetScaleTablePreScaledVals(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 6287</i>
	 */
	// int DAQmxGetScaleTablePreScaledVals(byte scaleName[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxSetScaleTablePreScaledVals(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 6288</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetScaleTablePreScaledVals(byte[], java.nio.DoubleBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxSetScaleTablePreScaledVals(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetScaleTablePreScaledVals(Pointer scaleName, DoubleByReference data, NativeLong arraySizeInElements);
	/**
	 * Original signature : <code>int32 DAQmxSetScaleTablePreScaledVals(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 6288</i>
	 */
	// int DAQmxSetScaleTablePreScaledVals(byte scaleName[], DoubleBuffer data, NativeLong arraySizeInElements);
	/**
	 * *** Set/Get functions for DAQmx_Sys_GlobalChans ***<br>
	 * Original signature : <code>int32 DAQmxGetSysGlobalChans(char*, uInt32)</code><br>
	 * <i>native declaration : line 6292</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetSysGlobalChans(java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetSysGlobalChans(com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetSysGlobalChans(Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Sys_GlobalChans ***<br>
	 * Original signature : <code>int32 DAQmxGetSysGlobalChans(char*, uInt32)</code><br>
	 * <i>native declaration : line 6292</i>
	 */
	// int DAQmxGetSysGlobalChans(ByteBuffer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Sys_Scales ***<br>
	 * Original signature : <code>int32 DAQmxGetSysScales(char*, uInt32)</code><br>
	 * <i>native declaration : line 6294</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetSysScales(java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetSysScales(com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetSysScales(Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Sys_Scales ***<br>
	 * Original signature : <code>int32 DAQmxGetSysScales(char*, uInt32)</code><br>
	 * <i>native declaration : line 6294</i>
	 */
	// int DAQmxGetSysScales(ByteBuffer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Sys_Tasks ***<br>
	 * Original signature : <code>int32 DAQmxGetSysTasks(char*, uInt32)</code><br>
	 * <i>native declaration : line 6296</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetSysTasks(java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetSysTasks(com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetSysTasks(Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Sys_Tasks ***<br>
	 * Original signature : <code>int32 DAQmxGetSysTasks(char*, uInt32)</code><br>
	 * <i>native declaration : line 6296</i>
	 */
	// int DAQmxGetSysTasks(ByteBuffer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Sys_DevNames ***<br>
	 * Original signature : <code>int32 DAQmxGetSysDevNames(char*, uInt32)</code><br>
	 * <i>native declaration : line 6298</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetSysDevNames(java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetSysDevNames(com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetSysDevNames(Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Sys_DevNames ***<br>
	 * Original signature : <code>int32 DAQmxGetSysDevNames(char*, uInt32)</code><br>
	 * <i>native declaration : line 6298</i>
	 */
	// int DAQmxGetSysDevNames(ByteBuffer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Sys_NIDAQMajorVersion ***<br>
	 * Original signature : <code>int32 DAQmxGetSysNIDAQMajorVersion(uInt32*)</code><br>
	 * <i>native declaration : line 6300</i>
	 */
	// int DAQmxGetSysNIDAQMajorVersion(NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Sys_NIDAQMinorVersion ***<br>
	 * Original signature : <code>int32 DAQmxGetSysNIDAQMinorVersion(uInt32*)</code><br>
	 * <i>native declaration : line 6302</i>
	 */
	// int DAQmxGetSysNIDAQMinorVersion(NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Sys_NIDAQUpdateVersion ***<br>
	 * Original signature : <code>int32 DAQmxGetSysNIDAQUpdateVersion(uInt32*)</code><br>
	 * <i>native declaration : line 6304</i>
	 */
	// int DAQmxGetSysNIDAQUpdateVersion(NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Task_Name ***<br>
	 * Original signature : <code>int32 DAQmxGetTaskName(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6308</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetTaskName(com.sun.jna.Pointer, java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetTaskName(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetTaskName(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Task_Name ***<br>
	 * Original signature : <code>int32 DAQmxGetTaskName(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6308</i>
	 */
	int DAQmxGetTaskName(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Task_Channels ***<br>
	 * Original signature : <code>int32 DAQmxGetTaskChannels(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6310</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetTaskChannels(com.sun.jna.Pointer, java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetTaskChannels(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetTaskChannels(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Task_Channels ***<br>
	 * Original signature : <code>int32 DAQmxGetTaskChannels(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6310</i>
	 */
	// int DAQmxGetTaskChannels(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Task_NumChans ***<br>
	 * Original signature : <code>int32 DAQmxGetTaskNumChans(TaskHandle, uInt32*)</code><br>
	 * <i>native declaration : line 6312</i>
	 */
	// int DAQmxGetTaskNumChans(Pointer taskHandle, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Task_Devices ***<br>
	 * Original signature : <code>int32 DAQmxGetTaskDevices(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6314</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetTaskDevices(com.sun.jna.Pointer, java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetTaskDevices(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetTaskDevices(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Task_Devices ***<br>
	 * Original signature : <code>int32 DAQmxGetTaskDevices(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6314</i>
	 */
	// int DAQmxGetTaskDevices(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Task_NumDevices ***<br>
	 * Original signature : <code>int32 DAQmxGetTaskNumDevices(TaskHandle, uInt32*)</code><br>
	 * <i>native declaration : line 6316</i>
	 */
	// int DAQmxGetTaskNumDevices(Pointer taskHandle, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Task_Complete ***<br>
	 * Original signature : <code>int32 DAQmxGetTaskComplete(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6318</i>
	 */
	// int DAQmxGetTaskComplete(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Uses value set AcquisitionType<br>
	 * Original signature : <code>int32 DAQmxGetSampQuantSampMode(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6323</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetSampQuantSampMode(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #DAQmxGetSampQuantSampMode(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetSampQuantSampMode(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set AcquisitionType<br>
	 * Original signature : <code>int32 DAQmxGetSampQuantSampMode(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6323</i>
	 */
	// int DAQmxGetSampQuantSampMode(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetSampQuantSampMode(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6324</i>
	 */
	// int DAQmxSetSampQuantSampMode(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetSampQuantSampMode(TaskHandle)</code><br>
	 * <i>native declaration : line 6325</i>
	 */
	// int DAQmxResetSampQuantSampMode(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_SampQuant_SampPerChan ***<br>
	 * Original signature : <code>int32 DAQmxGetSampQuantSampPerChan(TaskHandle, uInt64*)</code><br>
	 * <i>native declaration : line 6327</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetSampQuantSampPerChan(com.sun.jna.Pointer, java.nio.LongBuffer)} and {@link #DAQmxGetSampQuantSampPerChan(com.sun.jna.Pointer, com.sun.jna.ptr.LongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetSampQuantSampPerChan(Pointer taskHandle, LongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SampQuant_SampPerChan ***<br>
	 * Original signature : <code>int32 DAQmxGetSampQuantSampPerChan(TaskHandle, uInt64*)</code><br>
	 * <i>native declaration : line 6327</i>
	 */
	// int DAQmxGetSampQuantSampPerChan(Pointer taskHandle, LongBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetSampQuantSampPerChan(TaskHandle, uInt64)</code><br>
	 * <i>native declaration : line 6328</i>
	 */
	// int DAQmxSetSampQuantSampPerChan(Pointer taskHandle, long data);
	/**
	 * Original signature : <code>int32 DAQmxResetSampQuantSampPerChan(TaskHandle)</code><br>
	 * <i>native declaration : line 6329</i>
	 */
	// int DAQmxResetSampQuantSampPerChan(Pointer taskHandle);
	/**
	 * Uses value set SampleTimingType<br>
	 * Original signature : <code>int32 DAQmxGetSampTimingType(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6332</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetSampTimingType(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #DAQmxGetSampTimingType(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetSampTimingType(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set SampleTimingType<br>
	 * Original signature : <code>int32 DAQmxGetSampTimingType(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6332</i>
	 */
	// int DAQmxGetSampTimingType(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetSampTimingType(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6333</i>
	 */
	// int DAQmxSetSampTimingType(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetSampTimingType(TaskHandle)</code><br>
	 * <i>native declaration : line 6334</i>
	 */
	// int DAQmxResetSampTimingType(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_SampClk_Rate ***<br>
	 * Original signature : <code>int32 DAQmxGetSampClkRate(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6336</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetSampClkRate(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #DAQmxGetSampClkRate(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetSampClkRate(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SampClk_Rate ***<br>
	 * Original signature : <code>int32 DAQmxGetSampClkRate(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6336</i>
	 */
	// int DAQmxGetSampClkRate(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetSampClkRate(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6337</i>
	 */
	// int DAQmxSetSampClkRate(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetSampClkRate(TaskHandle)</code><br>
	 * <i>native declaration : line 6338</i>
	 */
	// int DAQmxResetSampClkRate(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_SampClk_MaxRate ***<br>
	 * Original signature : <code>int32 DAQmxGetSampClkMaxRate(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6340</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetSampClkMaxRate(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #DAQmxGetSampClkMaxRate(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetSampClkMaxRate(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SampClk_MaxRate ***<br>
	 * Original signature : <code>int32 DAQmxGetSampClkMaxRate(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6340</i>
	 */
	// int DAQmxGetSampClkMaxRate(Pointer taskHandle, DoubleBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_SampClk_Src ***<br>
	 * Original signature : <code>int32 DAQmxGetSampClkSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6342</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetSampClkSrc(com.sun.jna.Pointer, java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetSampClkSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetSampClkSrc(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_SampClk_Src ***<br>
	 * Original signature : <code>int32 DAQmxGetSampClkSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6342</i>
	 */
	// int DAQmxGetSampClkSrc(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetSampClkSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6343</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetSampClkSrc(com.sun.jna.Pointer, java.lang.String)} and {@link #DAQmxSetSampClkSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetSampClkSrc(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetSampClkSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6343</i>
	 */
	// int DAQmxSetSampClkSrc(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetSampClkSrc(TaskHandle)</code><br>
	 * <i>native declaration : line 6344</i>
	 */
	// int DAQmxResetSampClkSrc(Pointer taskHandle);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetSampClkActiveEdge(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6347</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetSampClkActiveEdge(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #DAQmxGetSampClkActiveEdge(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetSampClkActiveEdge(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetSampClkActiveEdge(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6347</i>
	 */
	// int DAQmxGetSampClkActiveEdge(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetSampClkActiveEdge(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6348</i>
	 */
	// int DAQmxSetSampClkActiveEdge(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetSampClkActiveEdge(TaskHandle)</code><br>
	 * <i>native declaration : line 6349</i>
	 */
	// int DAQmxResetSampClkActiveEdge(Pointer taskHandle);
	/**
	 * Uses value set OverflowBehavior<br>
	 * Original signature : <code>int32 DAQmxGetSampClkOverrunBehavior(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6352</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetSampClkOverrunBehavior(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #DAQmxGetSampClkOverrunBehavior(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetSampClkOverrunBehavior(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set OverflowBehavior<br>
	 * Original signature : <code>int32 DAQmxGetSampClkOverrunBehavior(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6352</i>
	 */
	// int DAQmxGetSampClkOverrunBehavior(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetSampClkOverrunBehavior(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6353</i>
	 */
	// int DAQmxSetSampClkOverrunBehavior(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetSampClkOverrunBehavior(TaskHandle)</code><br>
	 * <i>native declaration : line 6354</i>
	 */
	// int DAQmxResetSampClkOverrunBehavior(Pointer taskHandle);
	/**
	 * Uses value set UnderflowBehavior<br>
	 * Original signature : <code>int32 DAQmxGetSampClkUnderflowBehavior(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6357</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetSampClkUnderflowBehavior(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #DAQmxGetSampClkUnderflowBehavior(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetSampClkUnderflowBehavior(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set UnderflowBehavior<br>
	 * Original signature : <code>int32 DAQmxGetSampClkUnderflowBehavior(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6357</i>
	 */
	// int DAQmxGetSampClkUnderflowBehavior(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetSampClkUnderflowBehavior(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6358</i>
	 */
	// int DAQmxSetSampClkUnderflowBehavior(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetSampClkUnderflowBehavior(TaskHandle)</code><br>
	 * <i>native declaration : line 6359</i>
	 */
	// int DAQmxResetSampClkUnderflowBehavior(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_SampClk_TimebaseDiv ***<br>
	 * Original signature : <code>int32 DAQmxGetSampClkTimebaseDiv(TaskHandle, uInt32*)</code><br>
	 * <i>native declaration : line 6361</i>
	 */
	// int DAQmxGetSampClkTimebaseDiv(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetSampClkTimebaseDiv(TaskHandle, uInt32)</code><br>
	 * <i>native declaration : line 6362</i>
	 */
	// int DAQmxSetSampClkTimebaseDiv(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetSampClkTimebaseDiv(TaskHandle)</code><br>
	 * <i>native declaration : line 6363</i>
	 */
	// int DAQmxResetSampClkTimebaseDiv(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_SampClk_Term ***<br>
	 * Original signature : <code>int32 DAQmxGetSampClkTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6365</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetSampClkTerm(com.sun.jna.Pointer, java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetSampClkTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetSampClkTerm(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_SampClk_Term ***<br>
	 * Original signature : <code>int32 DAQmxGetSampClkTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6365</i>
	 */
	// int DAQmxGetSampClkTerm(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_SampClk_Timebase_Rate ***<br>
	 * Original signature : <code>int32 DAQmxGetSampClkTimebaseRate(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6367</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetSampClkTimebaseRate(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #DAQmxGetSampClkTimebaseRate(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetSampClkTimebaseRate(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SampClk_Timebase_Rate ***<br>
	 * Original signature : <code>int32 DAQmxGetSampClkTimebaseRate(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6367</i>
	 */
	// int DAQmxGetSampClkTimebaseRate(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetSampClkTimebaseRate(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6368</i>
	 */
	// int DAQmxSetSampClkTimebaseRate(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetSampClkTimebaseRate(TaskHandle)</code><br>
	 * <i>native declaration : line 6369</i>
	 */
	// int DAQmxResetSampClkTimebaseRate(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_SampClk_Timebase_Src ***<br>
	 * Original signature : <code>int32 DAQmxGetSampClkTimebaseSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6371</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetSampClkTimebaseSrc(com.sun.jna.Pointer, java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetSampClkTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetSampClkTimebaseSrc(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_SampClk_Timebase_Src ***<br>
	 * Original signature : <code>int32 DAQmxGetSampClkTimebaseSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6371</i>
	 */
	// int DAQmxGetSampClkTimebaseSrc(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetSampClkTimebaseSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6372</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetSampClkTimebaseSrc(com.sun.jna.Pointer, java.lang.String)} and {@link #DAQmxSetSampClkTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetSampClkTimebaseSrc(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetSampClkTimebaseSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6372</i>
	 */
	// int DAQmxSetSampClkTimebaseSrc(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetSampClkTimebaseSrc(TaskHandle)</code><br>
	 * <i>native declaration : line 6373</i>
	 */
	// int DAQmxResetSampClkTimebaseSrc(Pointer taskHandle);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetSampClkTimebaseActiveEdge(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6376</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetSampClkTimebaseActiveEdge(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #DAQmxGetSampClkTimebaseActiveEdge(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetSampClkTimebaseActiveEdge(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetSampClkTimebaseActiveEdge(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6376</i>
	 */
	// int DAQmxGetSampClkTimebaseActiveEdge(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetSampClkTimebaseActiveEdge(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6377</i>
	 */
	// int DAQmxSetSampClkTimebaseActiveEdge(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetSampClkTimebaseActiveEdge(TaskHandle)</code><br>
	 * <i>native declaration : line 6378</i>
	 */
	// int DAQmxResetSampClkTimebaseActiveEdge(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_SampClk_Timebase_MasterTimebaseDiv ***<br>
	 * Original signature : <code>int32 DAQmxGetSampClkTimebaseMasterTimebaseDiv(TaskHandle, uInt32*)</code><br>
	 * <i>native declaration : line 6380</i>
	 */
	// int DAQmxGetSampClkTimebaseMasterTimebaseDiv(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetSampClkTimebaseMasterTimebaseDiv(TaskHandle, uInt32)</code><br>
	 * <i>native declaration : line 6381</i>
	 */
	// int DAQmxSetSampClkTimebaseMasterTimebaseDiv(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetSampClkTimebaseMasterTimebaseDiv(TaskHandle)</code><br>
	 * <i>native declaration : line 6382</i>
	 */
	// int DAQmxResetSampClkTimebaseMasterTimebaseDiv(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_SampClkTimebase_Term ***<br>
	 * Original signature : <code>int32 DAQmxGetSampClkTimebaseTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6384</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetSampClkTimebaseTerm(com.sun.jna.Pointer, java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetSampClkTimebaseTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetSampClkTimebaseTerm(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_SampClkTimebase_Term ***<br>
	 * Original signature : <code>int32 DAQmxGetSampClkTimebaseTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6384</i>
	 */
	// int DAQmxGetSampClkTimebaseTerm(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_SampClk_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetSampClkDigFltrEnable(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6386</i>
	 */
	// int DAQmxGetSampClkDigFltrEnable(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetSampClkDigFltrEnable(TaskHandle, bool32)</code><br>
	 * <i>native declaration : line 6387</i>
	 */
	// int DAQmxSetSampClkDigFltrEnable(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetSampClkDigFltrEnable(TaskHandle)</code><br>
	 * <i>native declaration : line 6388</i>
	 */
	// int DAQmxResetSampClkDigFltrEnable(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_SampClk_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetSampClkDigFltrMinPulseWidth(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6390</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetSampClkDigFltrMinPulseWidth(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #DAQmxGetSampClkDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetSampClkDigFltrMinPulseWidth(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SampClk_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetSampClkDigFltrMinPulseWidth(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6390</i>
	 */
	// int DAQmxGetSampClkDigFltrMinPulseWidth(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetSampClkDigFltrMinPulseWidth(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6391</i>
	 */
	// int DAQmxSetSampClkDigFltrMinPulseWidth(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetSampClkDigFltrMinPulseWidth(TaskHandle)</code><br>
	 * <i>native declaration : line 6392</i>
	 */
	// int DAQmxResetSampClkDigFltrMinPulseWidth(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_SampClk_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetSampClkDigFltrTimebaseSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6394</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetSampClkDigFltrTimebaseSrc(com.sun.jna.Pointer, java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetSampClkDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetSampClkDigFltrTimebaseSrc(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_SampClk_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetSampClkDigFltrTimebaseSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6394</i>
	 */
	// int DAQmxGetSampClkDigFltrTimebaseSrc(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetSampClkDigFltrTimebaseSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6395</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetSampClkDigFltrTimebaseSrc(com.sun.jna.Pointer, java.lang.String)} and {@link #DAQmxSetSampClkDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetSampClkDigFltrTimebaseSrc(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetSampClkDigFltrTimebaseSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6395</i>
	 */
	// int DAQmxSetSampClkDigFltrTimebaseSrc(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetSampClkDigFltrTimebaseSrc(TaskHandle)</code><br>
	 * <i>native declaration : line 6396</i>
	 */
	// int DAQmxResetSampClkDigFltrTimebaseSrc(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_SampClk_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetSampClkDigFltrTimebaseRate(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6398</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetSampClkDigFltrTimebaseRate(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #DAQmxGetSampClkDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetSampClkDigFltrTimebaseRate(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SampClk_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetSampClkDigFltrTimebaseRate(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6398</i>
	 */
	// int DAQmxGetSampClkDigFltrTimebaseRate(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetSampClkDigFltrTimebaseRate(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6399</i>
	 */
	// int DAQmxSetSampClkDigFltrTimebaseRate(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetSampClkDigFltrTimebaseRate(TaskHandle)</code><br>
	 * <i>native declaration : line 6400</i>
	 */
	// int DAQmxResetSampClkDigFltrTimebaseRate(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_SampClk_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetSampClkDigSyncEnable(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6402</i>
	 */
	// int DAQmxGetSampClkDigSyncEnable(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetSampClkDigSyncEnable(TaskHandle, bool32)</code><br>
	 * <i>native declaration : line 6403</i>
	 */
	// int DAQmxSetSampClkDigSyncEnable(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetSampClkDigSyncEnable(TaskHandle)</code><br>
	 * <i>native declaration : line 6404</i>
	 */
	// int DAQmxResetSampClkDigSyncEnable(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_SampClk_WriteWfm_UseInitialWfmDT ***<br>
	 * Original signature : <code>int32 DAQmxGetSampClkWriteWfmUseInitialWfmDT(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6406</i>
	 */
	// int DAQmxGetSampClkWriteWfmUseInitialWfmDT(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetSampClkWriteWfmUseInitialWfmDT(TaskHandle, bool32)</code><br>
	 * <i>native declaration : line 6407</i>
	 */
	// int DAQmxSetSampClkWriteWfmUseInitialWfmDT(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetSampClkWriteWfmUseInitialWfmDT(TaskHandle)</code><br>
	 * <i>native declaration : line 6408</i>
	 */
	// int DAQmxResetSampClkWriteWfmUseInitialWfmDT(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Hshk_DelayAfterXfer ***<br>
	 * Original signature : <code>int32 DAQmxGetHshkDelayAfterXfer(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6410</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetHshkDelayAfterXfer(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #DAQmxGetHshkDelayAfterXfer(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetHshkDelayAfterXfer(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Hshk_DelayAfterXfer ***<br>
	 * Original signature : <code>int32 DAQmxGetHshkDelayAfterXfer(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6410</i>
	 */
	// int DAQmxGetHshkDelayAfterXfer(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetHshkDelayAfterXfer(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6411</i>
	 */
	// int DAQmxSetHshkDelayAfterXfer(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetHshkDelayAfterXfer(TaskHandle)</code><br>
	 * <i>native declaration : line 6412</i>
	 */
	// int DAQmxResetHshkDelayAfterXfer(Pointer taskHandle);
	/**
	 * Uses value set HandshakeStartCondition<br>
	 * Original signature : <code>int32 DAQmxGetHshkStartCond(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6415</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetHshkStartCond(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #DAQmxGetHshkStartCond(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetHshkStartCond(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set HandshakeStartCondition<br>
	 * Original signature : <code>int32 DAQmxGetHshkStartCond(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6415</i>
	 */
	// int DAQmxGetHshkStartCond(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetHshkStartCond(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6416</i>
	 */
	// int DAQmxSetHshkStartCond(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetHshkStartCond(TaskHandle)</code><br>
	 * <i>native declaration : line 6417</i>
	 */
	// int DAQmxResetHshkStartCond(Pointer taskHandle);
	/**
	 * Uses value set SampleInputDataWhen<br>
	 * Original signature : <code>int32 DAQmxGetHshkSampleInputDataWhen(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6420</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetHshkSampleInputDataWhen(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #DAQmxGetHshkSampleInputDataWhen(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetHshkSampleInputDataWhen(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set SampleInputDataWhen<br>
	 * Original signature : <code>int32 DAQmxGetHshkSampleInputDataWhen(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6420</i>
	 */
	// int DAQmxGetHshkSampleInputDataWhen(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetHshkSampleInputDataWhen(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6421</i>
	 */
	// int DAQmxSetHshkSampleInputDataWhen(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetHshkSampleInputDataWhen(TaskHandle)</code><br>
	 * <i>native declaration : line 6422</i>
	 */
	// int DAQmxResetHshkSampleInputDataWhen(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_ChangeDetect_DI_RisingEdgePhysicalChans ***<br>
	 * Original signature : <code>int32 DAQmxGetChangeDetectDIRisingEdgePhysicalChans(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6424</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetChangeDetectDIRisingEdgePhysicalChans(com.sun.jna.Pointer, java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetChangeDetectDIRisingEdgePhysicalChans(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetChangeDetectDIRisingEdgePhysicalChans(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_ChangeDetect_DI_RisingEdgePhysicalChans ***<br>
	 * Original signature : <code>int32 DAQmxGetChangeDetectDIRisingEdgePhysicalChans(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6424</i>
	 */
	// int DAQmxGetChangeDetectDIRisingEdgePhysicalChans(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetChangeDetectDIRisingEdgePhysicalChans(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6425</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetChangeDetectDIRisingEdgePhysicalChans(com.sun.jna.Pointer, java.lang.String)} and {@link #DAQmxSetChangeDetectDIRisingEdgePhysicalChans(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetChangeDetectDIRisingEdgePhysicalChans(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetChangeDetectDIRisingEdgePhysicalChans(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6425</i>
	 */
	// int DAQmxSetChangeDetectDIRisingEdgePhysicalChans(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetChangeDetectDIRisingEdgePhysicalChans(TaskHandle)</code><br>
	 * <i>native declaration : line 6426</i>
	 */
	// int DAQmxResetChangeDetectDIRisingEdgePhysicalChans(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_ChangeDetect_DI_FallingEdgePhysicalChans ***<br>
	 * Original signature : <code>int32 DAQmxGetChangeDetectDIFallingEdgePhysicalChans(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6428</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetChangeDetectDIFallingEdgePhysicalChans(com.sun.jna.Pointer, java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetChangeDetectDIFallingEdgePhysicalChans(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetChangeDetectDIFallingEdgePhysicalChans(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_ChangeDetect_DI_FallingEdgePhysicalChans ***<br>
	 * Original signature : <code>int32 DAQmxGetChangeDetectDIFallingEdgePhysicalChans(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6428</i>
	 */
	// int DAQmxGetChangeDetectDIFallingEdgePhysicalChans(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetChangeDetectDIFallingEdgePhysicalChans(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6429</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetChangeDetectDIFallingEdgePhysicalChans(com.sun.jna.Pointer, java.lang.String)} and {@link #DAQmxSetChangeDetectDIFallingEdgePhysicalChans(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetChangeDetectDIFallingEdgePhysicalChans(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetChangeDetectDIFallingEdgePhysicalChans(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6429</i>
	 */
	// int DAQmxSetChangeDetectDIFallingEdgePhysicalChans(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetChangeDetectDIFallingEdgePhysicalChans(TaskHandle)</code><br>
	 * <i>native declaration : line 6430</i>
	 */
	// int DAQmxResetChangeDetectDIFallingEdgePhysicalChans(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_ChangeDetect_DI_Tristate ***<br>
	 * Original signature : <code>int32 DAQmxGetChangeDetectDITristate(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6432</i>
	 */
	// int DAQmxGetChangeDetectDITristate(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetChangeDetectDITristate(TaskHandle, bool32)</code><br>
	 * <i>native declaration : line 6433</i>
	 */
	// int DAQmxSetChangeDetectDITristate(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetChangeDetectDITristate(TaskHandle)</code><br>
	 * <i>native declaration : line 6434</i>
	 */
	// int DAQmxResetChangeDetectDITristate(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_OnDemand_SimultaneousAOEnable ***<br>
	 * Original signature : <code>int32 DAQmxGetOnDemandSimultaneousAOEnable(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6436</i>
	 */
	// int DAQmxGetOnDemandSimultaneousAOEnable(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetOnDemandSimultaneousAOEnable(TaskHandle, bool32)</code><br>
	 * <i>native declaration : line 6437</i>
	 */
	// int DAQmxSetOnDemandSimultaneousAOEnable(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetOnDemandSimultaneousAOEnable(TaskHandle)</code><br>
	 * <i>native declaration : line 6438</i>
	 */
	// int DAQmxResetOnDemandSimultaneousAOEnable(Pointer taskHandle);
	/**
	 * Uses value set UnderflowBehavior<br>
	 * Original signature : <code>int32 DAQmxGetImplicitUnderflowBehavior(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6441</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetImplicitUnderflowBehavior(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #DAQmxGetImplicitUnderflowBehavior(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetImplicitUnderflowBehavior(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set UnderflowBehavior<br>
	 * Original signature : <code>int32 DAQmxGetImplicitUnderflowBehavior(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6441</i>
	 */
	// int DAQmxGetImplicitUnderflowBehavior(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetImplicitUnderflowBehavior(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6442</i>
	 */
	// int DAQmxSetImplicitUnderflowBehavior(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetImplicitUnderflowBehavior(TaskHandle)</code><br>
	 * <i>native declaration : line 6443</i>
	 */
	// int DAQmxResetImplicitUnderflowBehavior(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_AIConv_Rate ***<br>
	 * Original signature : <code>int32 DAQmxGetAIConvRate(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6445</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIConvRate(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #DAQmxGetAIConvRate(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIConvRate(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AIConv_Rate ***<br>
	 * Original signature : <code>int32 DAQmxGetAIConvRate(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6445</i>
	 */
	// int DAQmxGetAIConvRate(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIConvRate(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6446</i>
	 */
	// int DAQmxSetAIConvRate(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIConvRate(TaskHandle)</code><br>
	 * <i>native declaration : line 6447</i>
	 */
	// int DAQmxResetAIConvRate(Pointer taskHandle);
	/**
	 * Original signature : <code>int32 DAQmxGetAIConvRateEx(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 6448</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIConvRateEx(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAIConvRateEx(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIConvRateEx(Pointer taskHandle, Pointer deviceNames, DoubleByReference data);
	/**
	 * Original signature : <code>int32 DAQmxGetAIConvRateEx(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 6448</i>
	 */
	// int DAQmxGetAIConvRateEx(Pointer taskHandle, byte deviceNames[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIConvRateEx(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 6449</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIConvRateEx(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetAIConvRateEx(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIConvRateEx(Pointer taskHandle, Pointer deviceNames, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIConvRateEx(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 6449</i>
	 */
	// int DAQmxSetAIConvRateEx(Pointer taskHandle, byte deviceNames[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIConvRateEx(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 6450</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIConvRateEx(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIConvRateEx(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIConvRateEx(Pointer taskHandle, Pointer deviceNames);
	/**
	 * Original signature : <code>int32 DAQmxResetAIConvRateEx(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 6450</i>
	 */
	// int DAQmxResetAIConvRateEx(Pointer taskHandle, byte deviceNames[]);
	/**
	 * *** Set/Get functions for DAQmx_AIConv_MaxRate ***<br>
	 * Original signature : <code>int32 DAQmxGetAIConvMaxRate(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6452</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIConvMaxRate(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #DAQmxGetAIConvMaxRate(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIConvMaxRate(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AIConv_MaxRate ***<br>
	 * Original signature : <code>int32 DAQmxGetAIConvMaxRate(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6452</i>
	 */
	// int DAQmxGetAIConvMaxRate(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxGetAIConvMaxRateEx(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 6453</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIConvMaxRateEx(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAIConvMaxRateEx(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIConvMaxRateEx(Pointer taskHandle, Pointer deviceNames, DoubleByReference data);
	/**
	 * Original signature : <code>int32 DAQmxGetAIConvMaxRateEx(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 6453</i>
	 */
	// int DAQmxGetAIConvMaxRateEx(Pointer taskHandle, byte deviceNames[], DoubleBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_AIConv_Src ***<br>
	 * Original signature : <code>int32 DAQmxGetAIConvSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6455</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIConvSrc(com.sun.jna.Pointer, java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetAIConvSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIConvSrc(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_AIConv_Src ***<br>
	 * Original signature : <code>int32 DAQmxGetAIConvSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6455</i>
	 */
	// int DAQmxGetAIConvSrc(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetAIConvSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6456</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIConvSrc(com.sun.jna.Pointer, java.lang.String)} and {@link #DAQmxSetAIConvSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIConvSrc(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIConvSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6456</i>
	 */
	// int DAQmxSetAIConvSrc(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIConvSrc(TaskHandle)</code><br>
	 * <i>native declaration : line 6457</i>
	 */
	// int DAQmxResetAIConvSrc(Pointer taskHandle);
	/**
	 * Original signature : <code>int32 DAQmxGetAIConvSrcEx(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 6458</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIConvSrcEx(com.sun.jna.Pointer, byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetAIConvSrcEx(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIConvSrcEx(Pointer taskHandle, Pointer deviceNames, Pointer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxGetAIConvSrcEx(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 6458</i>
	 */
	// int DAQmxGetAIConvSrcEx(Pointer taskHandle, byte deviceNames[], ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetAIConvSrcEx(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 6459</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIConvSrcEx(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #DAQmxSetAIConvSrcEx(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIConvSrcEx(Pointer taskHandle, Pointer deviceNames, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIConvSrcEx(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 6459</i>
	 */
	// int DAQmxSetAIConvSrcEx(Pointer taskHandle, byte deviceNames[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIConvSrcEx(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 6460</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIConvSrcEx(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIConvSrcEx(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIConvSrcEx(Pointer taskHandle, Pointer deviceNames);
	/**
	 * Original signature : <code>int32 DAQmxResetAIConvSrcEx(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 6460</i>
	 */
	// int DAQmxResetAIConvSrcEx(Pointer taskHandle, byte deviceNames[]);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetAIConvActiveEdge(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6463</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIConvActiveEdge(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #DAQmxGetAIConvActiveEdge(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIConvActiveEdge(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetAIConvActiveEdge(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6463</i>
	 */
	// int DAQmxGetAIConvActiveEdge(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIConvActiveEdge(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6464</i>
	 */
	// int DAQmxSetAIConvActiveEdge(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIConvActiveEdge(TaskHandle)</code><br>
	 * <i>native declaration : line 6465</i>
	 */
	// int DAQmxResetAIConvActiveEdge(Pointer taskHandle);
	/**
	 * Original signature : <code>int32 DAQmxGetAIConvActiveEdgeEx(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 6466</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIConvActiveEdgeEx(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetAIConvActiveEdgeEx(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIConvActiveEdgeEx(Pointer taskHandle, Pointer deviceNames, IntByReference data);
	/**
	 * Original signature : <code>int32 DAQmxGetAIConvActiveEdgeEx(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 6466</i>
	 */
	// int DAQmxGetAIConvActiveEdgeEx(Pointer taskHandle, byte deviceNames[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIConvActiveEdgeEx(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 6467</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIConvActiveEdgeEx(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetAIConvActiveEdgeEx(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIConvActiveEdgeEx(Pointer taskHandle, Pointer deviceNames, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIConvActiveEdgeEx(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 6467</i>
	 */
	// int DAQmxSetAIConvActiveEdgeEx(Pointer taskHandle, byte deviceNames[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIConvActiveEdgeEx(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 6468</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIConvActiveEdgeEx(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIConvActiveEdgeEx(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIConvActiveEdgeEx(Pointer taskHandle, Pointer deviceNames);
	/**
	 * Original signature : <code>int32 DAQmxResetAIConvActiveEdgeEx(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 6468</i>
	 */
	// int DAQmxResetAIConvActiveEdgeEx(Pointer taskHandle, byte deviceNames[]);
	/**
	 * *** Set/Get functions for DAQmx_AIConv_TimebaseDiv ***<br>
	 * Original signature : <code>int32 DAQmxGetAIConvTimebaseDiv(TaskHandle, uInt32*)</code><br>
	 * <i>native declaration : line 6470</i>
	 */
	// int DAQmxGetAIConvTimebaseDiv(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIConvTimebaseDiv(TaskHandle, uInt32)</code><br>
	 * <i>native declaration : line 6471</i>
	 */
	// int DAQmxSetAIConvTimebaseDiv(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIConvTimebaseDiv(TaskHandle)</code><br>
	 * <i>native declaration : line 6472</i>
	 */
	// int DAQmxResetAIConvTimebaseDiv(Pointer taskHandle);
	/**
	 * Original signature : <code>int32 DAQmxGetAIConvTimebaseDivEx(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 6473</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIConvTimebaseDivEx(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetAIConvTimebaseDivEx(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIConvTimebaseDivEx(Pointer taskHandle, Pointer deviceNames, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxGetAIConvTimebaseDivEx(TaskHandle, const char[], uInt32*)</code><br>
	 * <i>native declaration : line 6473</i>
	 */
	// int DAQmxGetAIConvTimebaseDivEx(Pointer taskHandle, byte deviceNames[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIConvTimebaseDivEx(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 6474</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIConvTimebaseDivEx(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetAIConvTimebaseDivEx(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIConvTimebaseDivEx(Pointer taskHandle, Pointer deviceNames, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIConvTimebaseDivEx(TaskHandle, const char[], uInt32)</code><br>
	 * <i>native declaration : line 6474</i>
	 */
	// int DAQmxSetAIConvTimebaseDivEx(Pointer taskHandle, byte deviceNames[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIConvTimebaseDivEx(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 6475</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIConvTimebaseDivEx(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIConvTimebaseDivEx(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIConvTimebaseDivEx(Pointer taskHandle, Pointer deviceNames);
	/**
	 * Original signature : <code>int32 DAQmxResetAIConvTimebaseDivEx(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 6475</i>
	 */
	// int DAQmxResetAIConvTimebaseDivEx(Pointer taskHandle, byte deviceNames[]);
	/**
	 * Uses value set MIOAIConvertTbSrc<br>
	 * Original signature : <code>int32 DAQmxGetAIConvTimebaseSrc(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6478</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIConvTimebaseSrc(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #DAQmxGetAIConvTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIConvTimebaseSrc(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set MIOAIConvertTbSrc<br>
	 * Original signature : <code>int32 DAQmxGetAIConvTimebaseSrc(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6478</i>
	 */
	// int DAQmxGetAIConvTimebaseSrc(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIConvTimebaseSrc(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6479</i>
	 */
	// int DAQmxSetAIConvTimebaseSrc(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIConvTimebaseSrc(TaskHandle)</code><br>
	 * <i>native declaration : line 6480</i>
	 */
	// int DAQmxResetAIConvTimebaseSrc(Pointer taskHandle);
	/**
	 * Original signature : <code>int32 DAQmxGetAIConvTimebaseSrcEx(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 6481</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIConvTimebaseSrcEx(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetAIConvTimebaseSrcEx(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIConvTimebaseSrcEx(Pointer taskHandle, Pointer deviceNames, IntByReference data);
	/**
	 * Original signature : <code>int32 DAQmxGetAIConvTimebaseSrcEx(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 6481</i>
	 */
	// int DAQmxGetAIConvTimebaseSrcEx(Pointer taskHandle, byte deviceNames[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIConvTimebaseSrcEx(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 6482</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIConvTimebaseSrcEx(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetAIConvTimebaseSrcEx(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIConvTimebaseSrcEx(Pointer taskHandle, Pointer deviceNames, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIConvTimebaseSrcEx(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 6482</i>
	 */
	// int DAQmxSetAIConvTimebaseSrcEx(Pointer taskHandle, byte deviceNames[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIConvTimebaseSrcEx(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 6483</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIConvTimebaseSrcEx(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIConvTimebaseSrcEx(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIConvTimebaseSrcEx(Pointer taskHandle, Pointer deviceNames);
	/**
	 * Original signature : <code>int32 DAQmxResetAIConvTimebaseSrcEx(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 6483</i>
	 */
	// int DAQmxResetAIConvTimebaseSrcEx(Pointer taskHandle, byte deviceNames[]);
	/**
	 * Uses value set DigitalWidthUnits2<br>
	 * Original signature : <code>int32 DAQmxGetDelayFromSampClkDelayUnits(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6486</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDelayFromSampClkDelayUnits(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #DAQmxGetDelayFromSampClkDelayUnits(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDelayFromSampClkDelayUnits(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set DigitalWidthUnits2<br>
	 * Original signature : <code>int32 DAQmxGetDelayFromSampClkDelayUnits(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6486</i>
	 */
	// int DAQmxGetDelayFromSampClkDelayUnits(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDelayFromSampClkDelayUnits(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6487</i>
	 */
	// int DAQmxSetDelayFromSampClkDelayUnits(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetDelayFromSampClkDelayUnits(TaskHandle)</code><br>
	 * <i>native declaration : line 6488</i>
	 */
	// int DAQmxResetDelayFromSampClkDelayUnits(Pointer taskHandle);
	/**
	 * Original signature : <code>int32 DAQmxGetDelayFromSampClkDelayUnitsEx(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 6489</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDelayFromSampClkDelayUnitsEx(com.sun.jna.Pointer, byte[], java.nio.IntBuffer)} and {@link #DAQmxGetDelayFromSampClkDelayUnitsEx(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDelayFromSampClkDelayUnitsEx(Pointer taskHandle, Pointer deviceNames, IntByReference data);
	/**
	 * Original signature : <code>int32 DAQmxGetDelayFromSampClkDelayUnitsEx(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 6489</i>
	 */
	// int DAQmxGetDelayFromSampClkDelayUnitsEx(Pointer taskHandle, byte deviceNames[], IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDelayFromSampClkDelayUnitsEx(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 6490</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetDelayFromSampClkDelayUnitsEx(com.sun.jna.Pointer, byte[], int)} and {@link #DAQmxSetDelayFromSampClkDelayUnitsEx(com.sun.jna.Pointer, com.sun.jna.Pointer, int)} instead
	 */
	//Deprecated 
	// int DAQmxSetDelayFromSampClkDelayUnitsEx(Pointer taskHandle, Pointer deviceNames, int data);
	/**
	 * Original signature : <code>int32 DAQmxSetDelayFromSampClkDelayUnitsEx(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 6490</i>
	 */
	// int DAQmxSetDelayFromSampClkDelayUnitsEx(Pointer taskHandle, byte deviceNames[], int data);
	/**
	 * Original signature : <code>int32 DAQmxResetDelayFromSampClkDelayUnitsEx(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 6491</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetDelayFromSampClkDelayUnitsEx(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetDelayFromSampClkDelayUnitsEx(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetDelayFromSampClkDelayUnitsEx(Pointer taskHandle, Pointer deviceNames);
	/**
	 * Original signature : <code>int32 DAQmxResetDelayFromSampClkDelayUnitsEx(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 6491</i>
	 */
	// int DAQmxResetDelayFromSampClkDelayUnitsEx(Pointer taskHandle, byte deviceNames[]);
	/**
	 * *** Set/Get functions for DAQmx_DelayFromSampClk_Delay ***<br>
	 * Original signature : <code>int32 DAQmxGetDelayFromSampClkDelay(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6493</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDelayFromSampClkDelay(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #DAQmxGetDelayFromSampClkDelay(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDelayFromSampClkDelay(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_DelayFromSampClk_Delay ***<br>
	 * Original signature : <code>int32 DAQmxGetDelayFromSampClkDelay(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6493</i>
	 */
	// int DAQmxGetDelayFromSampClkDelay(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDelayFromSampClkDelay(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6494</i>
	 */
	// int DAQmxSetDelayFromSampClkDelay(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetDelayFromSampClkDelay(TaskHandle)</code><br>
	 * <i>native declaration : line 6495</i>
	 */
	// int DAQmxResetDelayFromSampClkDelay(Pointer taskHandle);
	/**
	 * Original signature : <code>int32 DAQmxGetDelayFromSampClkDelayEx(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 6496</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDelayFromSampClkDelayEx(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetDelayFromSampClkDelayEx(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDelayFromSampClkDelayEx(Pointer taskHandle, Pointer deviceNames, DoubleByReference data);
	/**
	 * Original signature : <code>int32 DAQmxGetDelayFromSampClkDelayEx(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 6496</i>
	 */
	// int DAQmxGetDelayFromSampClkDelayEx(Pointer taskHandle, byte deviceNames[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDelayFromSampClkDelayEx(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 6497</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetDelayFromSampClkDelayEx(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetDelayFromSampClkDelayEx(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetDelayFromSampClkDelayEx(Pointer taskHandle, Pointer deviceNames, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetDelayFromSampClkDelayEx(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 6497</i>
	 */
	// int DAQmxSetDelayFromSampClkDelayEx(Pointer taskHandle, byte deviceNames[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetDelayFromSampClkDelayEx(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 6498</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetDelayFromSampClkDelayEx(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetDelayFromSampClkDelayEx(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetDelayFromSampClkDelayEx(Pointer taskHandle, Pointer deviceNames);
	/**
	 * Original signature : <code>int32 DAQmxResetDelayFromSampClkDelayEx(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 6498</i>
	 */
	// int DAQmxResetDelayFromSampClkDelayEx(Pointer taskHandle, byte deviceNames[]);
	/**
	 * *** Set/Get functions for DAQmx_AIConv_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetAIConvDigFltrEnable(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6500</i>
	 */
	// int DAQmxGetAIConvDigFltrEnable(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIConvDigFltrEnable(TaskHandle, bool32)</code><br>
	 * <i>native declaration : line 6501</i>
	 */
	// int DAQmxSetAIConvDigFltrEnable(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIConvDigFltrEnable(TaskHandle)</code><br>
	 * <i>native declaration : line 6502</i>
	 */
	// int DAQmxResetAIConvDigFltrEnable(Pointer taskHandle);
	/**
	 * Original signature : <code>int32 DAQmxGetAIConvDigFltrEnableEx(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 6503</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIConvDigFltrEnableEx(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetAIConvDigFltrEnableEx(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIConvDigFltrEnableEx(Pointer taskHandle, Pointer deviceNames, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxGetAIConvDigFltrEnableEx(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 6503</i>
	 */
	// int DAQmxGetAIConvDigFltrEnableEx(Pointer taskHandle, byte deviceNames[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIConvDigFltrEnableEx(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 6504</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIConvDigFltrEnableEx(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetAIConvDigFltrEnableEx(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIConvDigFltrEnableEx(Pointer taskHandle, Pointer deviceNames, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIConvDigFltrEnableEx(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 6504</i>
	 */
	// int DAQmxSetAIConvDigFltrEnableEx(Pointer taskHandle, byte deviceNames[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIConvDigFltrEnableEx(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 6505</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIConvDigFltrEnableEx(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIConvDigFltrEnableEx(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIConvDigFltrEnableEx(Pointer taskHandle, Pointer deviceNames);
	/**
	 * Original signature : <code>int32 DAQmxResetAIConvDigFltrEnableEx(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 6505</i>
	 */
	// int DAQmxResetAIConvDigFltrEnableEx(Pointer taskHandle, byte deviceNames[]);
	/**
	 * *** Set/Get functions for DAQmx_AIConv_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetAIConvDigFltrMinPulseWidth(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6507</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIConvDigFltrMinPulseWidth(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #DAQmxGetAIConvDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIConvDigFltrMinPulseWidth(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AIConv_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetAIConvDigFltrMinPulseWidth(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6507</i>
	 */
	// int DAQmxGetAIConvDigFltrMinPulseWidth(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIConvDigFltrMinPulseWidth(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6508</i>
	 */
	// int DAQmxSetAIConvDigFltrMinPulseWidth(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIConvDigFltrMinPulseWidth(TaskHandle)</code><br>
	 * <i>native declaration : line 6509</i>
	 */
	// int DAQmxResetAIConvDigFltrMinPulseWidth(Pointer taskHandle);
	/**
	 * Original signature : <code>int32 DAQmxGetAIConvDigFltrMinPulseWidthEx(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 6510</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIConvDigFltrMinPulseWidthEx(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAIConvDigFltrMinPulseWidthEx(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIConvDigFltrMinPulseWidthEx(Pointer taskHandle, Pointer deviceNames, DoubleByReference data);
	/**
	 * Original signature : <code>int32 DAQmxGetAIConvDigFltrMinPulseWidthEx(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 6510</i>
	 */
	// int DAQmxGetAIConvDigFltrMinPulseWidthEx(Pointer taskHandle, byte deviceNames[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIConvDigFltrMinPulseWidthEx(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 6511</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIConvDigFltrMinPulseWidthEx(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetAIConvDigFltrMinPulseWidthEx(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIConvDigFltrMinPulseWidthEx(Pointer taskHandle, Pointer deviceNames, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIConvDigFltrMinPulseWidthEx(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 6511</i>
	 */
	// int DAQmxSetAIConvDigFltrMinPulseWidthEx(Pointer taskHandle, byte deviceNames[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIConvDigFltrMinPulseWidthEx(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 6512</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIConvDigFltrMinPulseWidthEx(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIConvDigFltrMinPulseWidthEx(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIConvDigFltrMinPulseWidthEx(Pointer taskHandle, Pointer deviceNames);
	/**
	 * Original signature : <code>int32 DAQmxResetAIConvDigFltrMinPulseWidthEx(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 6512</i>
	 */
	// int DAQmxResetAIConvDigFltrMinPulseWidthEx(Pointer taskHandle, byte deviceNames[]);
	/**
	 * *** Set/Get functions for DAQmx_AIConv_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetAIConvDigFltrTimebaseSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6514</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIConvDigFltrTimebaseSrc(com.sun.jna.Pointer, java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetAIConvDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIConvDigFltrTimebaseSrc(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_AIConv_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetAIConvDigFltrTimebaseSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6514</i>
	 */
	// int DAQmxGetAIConvDigFltrTimebaseSrc(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetAIConvDigFltrTimebaseSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6515</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIConvDigFltrTimebaseSrc(com.sun.jna.Pointer, java.lang.String)} and {@link #DAQmxSetAIConvDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIConvDigFltrTimebaseSrc(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIConvDigFltrTimebaseSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6515</i>
	 */
	// int DAQmxSetAIConvDigFltrTimebaseSrc(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIConvDigFltrTimebaseSrc(TaskHandle)</code><br>
	 * <i>native declaration : line 6516</i>
	 */
	// int DAQmxResetAIConvDigFltrTimebaseSrc(Pointer taskHandle);
	/**
	 * Original signature : <code>int32 DAQmxGetAIConvDigFltrTimebaseSrcEx(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 6517</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIConvDigFltrTimebaseSrcEx(com.sun.jna.Pointer, byte[], java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetAIConvDigFltrTimebaseSrcEx(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIConvDigFltrTimebaseSrcEx(Pointer taskHandle, Pointer deviceNames, Pointer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxGetAIConvDigFltrTimebaseSrcEx(TaskHandle, const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 6517</i>
	 */
	// int DAQmxGetAIConvDigFltrTimebaseSrcEx(Pointer taskHandle, byte deviceNames[], ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetAIConvDigFltrTimebaseSrcEx(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 6518</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIConvDigFltrTimebaseSrcEx(com.sun.jna.Pointer, byte[], java.lang.String)} and {@link #DAQmxSetAIConvDigFltrTimebaseSrcEx(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIConvDigFltrTimebaseSrcEx(Pointer taskHandle, Pointer deviceNames, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIConvDigFltrTimebaseSrcEx(TaskHandle, const char[], const char*)</code><br>
	 * <i>native declaration : line 6518</i>
	 */
	// int DAQmxSetAIConvDigFltrTimebaseSrcEx(Pointer taskHandle, byte deviceNames[], String data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIConvDigFltrTimebaseSrcEx(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 6519</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIConvDigFltrTimebaseSrcEx(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIConvDigFltrTimebaseSrcEx(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIConvDigFltrTimebaseSrcEx(Pointer taskHandle, Pointer deviceNames);
	/**
	 * Original signature : <code>int32 DAQmxResetAIConvDigFltrTimebaseSrcEx(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 6519</i>
	 */
	// int DAQmxResetAIConvDigFltrTimebaseSrcEx(Pointer taskHandle, byte deviceNames[]);
	/**
	 * *** Set/Get functions for DAQmx_AIConv_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetAIConvDigFltrTimebaseRate(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6521</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIConvDigFltrTimebaseRate(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #DAQmxGetAIConvDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIConvDigFltrTimebaseRate(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AIConv_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetAIConvDigFltrTimebaseRate(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6521</i>
	 */
	// int DAQmxGetAIConvDigFltrTimebaseRate(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIConvDigFltrTimebaseRate(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6522</i>
	 */
	// int DAQmxSetAIConvDigFltrTimebaseRate(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIConvDigFltrTimebaseRate(TaskHandle)</code><br>
	 * <i>native declaration : line 6523</i>
	 */
	// int DAQmxResetAIConvDigFltrTimebaseRate(Pointer taskHandle);
	/**
	 * Original signature : <code>int32 DAQmxGetAIConvDigFltrTimebaseRateEx(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 6524</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIConvDigFltrTimebaseRateEx(com.sun.jna.Pointer, byte[], java.nio.DoubleBuffer)} and {@link #DAQmxGetAIConvDigFltrTimebaseRateEx(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIConvDigFltrTimebaseRateEx(Pointer taskHandle, Pointer deviceNames, DoubleByReference data);
	/**
	 * Original signature : <code>int32 DAQmxGetAIConvDigFltrTimebaseRateEx(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 6524</i>
	 */
	// int DAQmxGetAIConvDigFltrTimebaseRateEx(Pointer taskHandle, byte deviceNames[], DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIConvDigFltrTimebaseRateEx(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 6525</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIConvDigFltrTimebaseRateEx(com.sun.jna.Pointer, byte[], double)} and {@link #DAQmxSetAIConvDigFltrTimebaseRateEx(com.sun.jna.Pointer, com.sun.jna.Pointer, double)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIConvDigFltrTimebaseRateEx(Pointer taskHandle, Pointer deviceNames, double data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIConvDigFltrTimebaseRateEx(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 6525</i>
	 */
	// int DAQmxSetAIConvDigFltrTimebaseRateEx(Pointer taskHandle, byte deviceNames[], double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIConvDigFltrTimebaseRateEx(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 6526</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIConvDigFltrTimebaseRateEx(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIConvDigFltrTimebaseRateEx(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIConvDigFltrTimebaseRateEx(Pointer taskHandle, Pointer deviceNames);
	/**
	 * Original signature : <code>int32 DAQmxResetAIConvDigFltrTimebaseRateEx(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 6526</i>
	 */
	// int DAQmxResetAIConvDigFltrTimebaseRateEx(Pointer taskHandle, byte deviceNames[]);
	/**
	 * *** Set/Get functions for DAQmx_AIConv_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetAIConvDigSyncEnable(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6528</i>
	 */
	// int DAQmxGetAIConvDigSyncEnable(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIConvDigSyncEnable(TaskHandle, bool32)</code><br>
	 * <i>native declaration : line 6529</i>
	 */
	// int DAQmxSetAIConvDigSyncEnable(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIConvDigSyncEnable(TaskHandle)</code><br>
	 * <i>native declaration : line 6530</i>
	 */
	// int DAQmxResetAIConvDigSyncEnable(Pointer taskHandle);
	/**
	 * Original signature : <code>int32 DAQmxGetAIConvDigSyncEnableEx(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 6531</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAIConvDigSyncEnableEx(com.sun.jna.Pointer, byte[], com.sun.jna.ptr.NativeLongByReference)} and {@link #DAQmxGetAIConvDigSyncEnableEx(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.ptr.NativeLongByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAIConvDigSyncEnableEx(Pointer taskHandle, Pointer deviceNames, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxGetAIConvDigSyncEnableEx(TaskHandle, const char[], bool32*)</code><br>
	 * <i>native declaration : line 6531</i>
	 */
	// int DAQmxGetAIConvDigSyncEnableEx(Pointer taskHandle, byte deviceNames[], NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIConvDigSyncEnableEx(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 6532</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAIConvDigSyncEnableEx(com.sun.jna.Pointer, byte[], com.sun.jna.NativeLong)} and {@link #DAQmxSetAIConvDigSyncEnableEx(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxSetAIConvDigSyncEnableEx(Pointer taskHandle, Pointer deviceNames, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxSetAIConvDigSyncEnableEx(TaskHandle, const char[], bool32)</code><br>
	 * <i>native declaration : line 6532</i>
	 */
	// int DAQmxSetAIConvDigSyncEnableEx(Pointer taskHandle, byte deviceNames[], NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAIConvDigSyncEnableEx(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 6533</i><br>
	 * @deprecated use the safer methods {@link #DAQmxResetAIConvDigSyncEnableEx(com.sun.jna.Pointer, byte[])} and {@link #DAQmxResetAIConvDigSyncEnableEx(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxResetAIConvDigSyncEnableEx(Pointer taskHandle, Pointer deviceNames);
	/**
	 * Original signature : <code>int32 DAQmxResetAIConvDigSyncEnableEx(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 6533</i>
	 */
	// int DAQmxResetAIConvDigSyncEnableEx(Pointer taskHandle, byte deviceNames[]);
	/**
	 * *** Set/Get functions for DAQmx_MasterTimebase_Rate ***<br>
	 * Original signature : <code>int32 DAQmxGetMasterTimebaseRate(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6535</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetMasterTimebaseRate(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #DAQmxGetMasterTimebaseRate(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetMasterTimebaseRate(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_MasterTimebase_Rate ***<br>
	 * Original signature : <code>int32 DAQmxGetMasterTimebaseRate(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6535</i>
	 */
	// int DAQmxGetMasterTimebaseRate(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetMasterTimebaseRate(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6536</i>
	 */
	// int DAQmxSetMasterTimebaseRate(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetMasterTimebaseRate(TaskHandle)</code><br>
	 * <i>native declaration : line 6537</i>
	 */
	// int DAQmxResetMasterTimebaseRate(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_MasterTimebase_Src ***<br>
	 * Original signature : <code>int32 DAQmxGetMasterTimebaseSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6539</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetMasterTimebaseSrc(com.sun.jna.Pointer, java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetMasterTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetMasterTimebaseSrc(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_MasterTimebase_Src ***<br>
	 * Original signature : <code>int32 DAQmxGetMasterTimebaseSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6539</i>
	 */
	// int DAQmxGetMasterTimebaseSrc(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetMasterTimebaseSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6540</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetMasterTimebaseSrc(com.sun.jna.Pointer, java.lang.String)} and {@link #DAQmxSetMasterTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetMasterTimebaseSrc(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetMasterTimebaseSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6540</i>
	 */
	// int DAQmxSetMasterTimebaseSrc(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetMasterTimebaseSrc(TaskHandle)</code><br>
	 * <i>native declaration : line 6541</i>
	 */
	// int DAQmxResetMasterTimebaseSrc(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_RefClk_Rate ***<br>
	 * Original signature : <code>int32 DAQmxGetRefClkRate(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6543</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetRefClkRate(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #DAQmxGetRefClkRate(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetRefClkRate(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_RefClk_Rate ***<br>
	 * Original signature : <code>int32 DAQmxGetRefClkRate(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6543</i>
	 */
	// int DAQmxGetRefClkRate(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetRefClkRate(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6544</i>
	 */
	// int DAQmxSetRefClkRate(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetRefClkRate(TaskHandle)</code><br>
	 * <i>native declaration : line 6545</i>
	 */
	// int DAQmxResetRefClkRate(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_RefClk_Src ***<br>
	 * Original signature : <code>int32 DAQmxGetRefClkSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6547</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetRefClkSrc(com.sun.jna.Pointer, java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetRefClkSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetRefClkSrc(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_RefClk_Src ***<br>
	 * Original signature : <code>int32 DAQmxGetRefClkSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6547</i>
	 */
	// int DAQmxGetRefClkSrc(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetRefClkSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6548</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetRefClkSrc(com.sun.jna.Pointer, java.lang.String)} and {@link #DAQmxSetRefClkSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetRefClkSrc(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetRefClkSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6548</i>
	 */
	// int DAQmxSetRefClkSrc(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetRefClkSrc(TaskHandle)</code><br>
	 * <i>native declaration : line 6549</i>
	 */
	// int DAQmxResetRefClkSrc(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_SyncPulse_Src ***<br>
	 * Original signature : <code>int32 DAQmxGetSyncPulseSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6551</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetSyncPulseSrc(com.sun.jna.Pointer, java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetSyncPulseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetSyncPulseSrc(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_SyncPulse_Src ***<br>
	 * Original signature : <code>int32 DAQmxGetSyncPulseSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6551</i>
	 */
	// int DAQmxGetSyncPulseSrc(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetSyncPulseSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6552</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetSyncPulseSrc(com.sun.jna.Pointer, java.lang.String)} and {@link #DAQmxSetSyncPulseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetSyncPulseSrc(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetSyncPulseSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6552</i>
	 */
	// int DAQmxSetSyncPulseSrc(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetSyncPulseSrc(TaskHandle)</code><br>
	 * <i>native declaration : line 6553</i>
	 */
	// int DAQmxResetSyncPulseSrc(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_SyncPulse_SyncTime ***<br>
	 * Original signature : <code>int32 DAQmxGetSyncPulseSyncTime(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6555</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetSyncPulseSyncTime(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #DAQmxGetSyncPulseSyncTime(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetSyncPulseSyncTime(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SyncPulse_SyncTime ***<br>
	 * Original signature : <code>int32 DAQmxGetSyncPulseSyncTime(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6555</i>
	 */
	// int DAQmxGetSyncPulseSyncTime(Pointer taskHandle, DoubleBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_SyncPulse_MinDelayToStart ***<br>
	 * Original signature : <code>int32 DAQmxGetSyncPulseMinDelayToStart(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6557</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetSyncPulseMinDelayToStart(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #DAQmxGetSyncPulseMinDelayToStart(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetSyncPulseMinDelayToStart(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SyncPulse_MinDelayToStart ***<br>
	 * Original signature : <code>int32 DAQmxGetSyncPulseMinDelayToStart(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6557</i>
	 */
	// int DAQmxGetSyncPulseMinDelayToStart(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetSyncPulseMinDelayToStart(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6558</i>
	 */
	// int DAQmxSetSyncPulseMinDelayToStart(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetSyncPulseMinDelayToStart(TaskHandle)</code><br>
	 * <i>native declaration : line 6559</i>
	 */
	// int DAQmxResetSyncPulseMinDelayToStart(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_SyncPulse_ResetTime ***<br>
	 * Original signature : <code>int32 DAQmxGetSyncPulseResetTime(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6561</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetSyncPulseResetTime(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #DAQmxGetSyncPulseResetTime(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetSyncPulseResetTime(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SyncPulse_ResetTime ***<br>
	 * Original signature : <code>int32 DAQmxGetSyncPulseResetTime(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6561</i>
	 */
	// int DAQmxGetSyncPulseResetTime(Pointer taskHandle, DoubleBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_SyncPulse_ResetDelay ***<br>
	 * Original signature : <code>int32 DAQmxGetSyncPulseResetDelay(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6563</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetSyncPulseResetDelay(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #DAQmxGetSyncPulseResetDelay(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetSyncPulseResetDelay(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_SyncPulse_ResetDelay ***<br>
	 * Original signature : <code>int32 DAQmxGetSyncPulseResetDelay(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6563</i>
	 */
	// int DAQmxGetSyncPulseResetDelay(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetSyncPulseResetDelay(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6564</i>
	 */
	// int DAQmxSetSyncPulseResetDelay(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetSyncPulseResetDelay(TaskHandle)</code><br>
	 * <i>native declaration : line 6565</i>
	 */
	// int DAQmxResetSyncPulseResetDelay(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_SyncPulse_Term ***<br>
	 * Original signature : <code>int32 DAQmxGetSyncPulseTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6567</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetSyncPulseTerm(com.sun.jna.Pointer, java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetSyncPulseTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetSyncPulseTerm(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_SyncPulse_Term ***<br>
	 * Original signature : <code>int32 DAQmxGetSyncPulseTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6567</i>
	 */
	// int DAQmxGetSyncPulseTerm(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_SyncClk_Interval ***<br>
	 * Original signature : <code>int32 DAQmxGetSyncClkInterval(TaskHandle, uInt32*)</code><br>
	 * <i>native declaration : line 6569</i>
	 */
	// int DAQmxGetSyncClkInterval(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetSyncClkInterval(TaskHandle, uInt32)</code><br>
	 * <i>native declaration : line 6570</i>
	 */
	// int DAQmxSetSyncClkInterval(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetSyncClkInterval(TaskHandle)</code><br>
	 * <i>native declaration : line 6571</i>
	 */
	// int DAQmxResetSyncClkInterval(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_SampTimingEngine ***<br>
	 * Original signature : <code>int32 DAQmxGetSampTimingEngine(TaskHandle, uInt32*)</code><br>
	 * <i>native declaration : line 6573</i>
	 */
	// int DAQmxGetSampTimingEngine(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetSampTimingEngine(TaskHandle, uInt32)</code><br>
	 * <i>native declaration : line 6574</i>
	 */
	// int DAQmxSetSampTimingEngine(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetSampTimingEngine(TaskHandle)</code><br>
	 * <i>native declaration : line 6575</i>
	 */
	// int DAQmxResetSampTimingEngine(Pointer taskHandle);
	/**
	 * Uses value set TriggerType10<br>
	 * Original signature : <code>int32 DAQmxGetStartTrigType(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6580</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetStartTrigType(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #DAQmxGetStartTrigType(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetStartTrigType(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set TriggerType10<br>
	 * Original signature : <code>int32 DAQmxGetStartTrigType(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6580</i>
	 */
	// int DAQmxGetStartTrigType(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetStartTrigType(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6581</i>
	 */
	// int DAQmxSetStartTrigType(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetStartTrigType(TaskHandle)</code><br>
	 * <i>native declaration : line 6582</i>
	 */
	// int DAQmxResetStartTrigType(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_StartTrig_Term ***<br>
	 * Original signature : <code>int32 DAQmxGetStartTrigTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6584</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetStartTrigTerm(com.sun.jna.Pointer, java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetStartTrigTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetStartTrigTerm(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_StartTrig_Term ***<br>
	 * Original signature : <code>int32 DAQmxGetStartTrigTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6584</i>
	 */
	// int DAQmxGetStartTrigTerm(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_DigEdge_StartTrig_Src ***<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeStartTrigSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6586</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDigEdgeStartTrigSrc(com.sun.jna.Pointer, java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetDigEdgeStartTrigSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetDigEdgeStartTrigSrc(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_DigEdge_StartTrig_Src ***<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeStartTrigSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6586</i>
	 */
	// int DAQmxGetDigEdgeStartTrigSrc(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetDigEdgeStartTrigSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6587</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetDigEdgeStartTrigSrc(com.sun.jna.Pointer, java.lang.String)} and {@link #DAQmxSetDigEdgeStartTrigSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetDigEdgeStartTrigSrc(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDigEdgeStartTrigSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6587</i>
	 */
	// int DAQmxSetDigEdgeStartTrigSrc(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigEdgeStartTrigSrc(TaskHandle)</code><br>
	 * <i>native declaration : line 6588</i>
	 */
	// int DAQmxResetDigEdgeStartTrigSrc(Pointer taskHandle);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeStartTrigEdge(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6591</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDigEdgeStartTrigEdge(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #DAQmxGetDigEdgeStartTrigEdge(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDigEdgeStartTrigEdge(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeStartTrigEdge(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6591</i>
	 */
	// int DAQmxGetDigEdgeStartTrigEdge(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDigEdgeStartTrigEdge(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6592</i>
	 */
	// int DAQmxSetDigEdgeStartTrigEdge(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigEdgeStartTrigEdge(TaskHandle)</code><br>
	 * <i>native declaration : line 6593</i>
	 */
	// int DAQmxResetDigEdgeStartTrigEdge(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_DigEdge_StartTrig_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeStartTrigDigFltrEnable(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6595</i>
	 */
	// int DAQmxGetDigEdgeStartTrigDigFltrEnable(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetDigEdgeStartTrigDigFltrEnable(TaskHandle, bool32)</code><br>
	 * <i>native declaration : line 6596</i>
	 */
	// int DAQmxSetDigEdgeStartTrigDigFltrEnable(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigEdgeStartTrigDigFltrEnable(TaskHandle)</code><br>
	 * <i>native declaration : line 6597</i>
	 */
	// int DAQmxResetDigEdgeStartTrigDigFltrEnable(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_DigEdge_StartTrig_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeStartTrigDigFltrMinPulseWidth(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6599</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDigEdgeStartTrigDigFltrMinPulseWidth(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #DAQmxGetDigEdgeStartTrigDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDigEdgeStartTrigDigFltrMinPulseWidth(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_DigEdge_StartTrig_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeStartTrigDigFltrMinPulseWidth(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6599</i>
	 */
	// int DAQmxGetDigEdgeStartTrigDigFltrMinPulseWidth(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDigEdgeStartTrigDigFltrMinPulseWidth(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6600</i>
	 */
	// int DAQmxSetDigEdgeStartTrigDigFltrMinPulseWidth(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigEdgeStartTrigDigFltrMinPulseWidth(TaskHandle)</code><br>
	 * <i>native declaration : line 6601</i>
	 */
	// int DAQmxResetDigEdgeStartTrigDigFltrMinPulseWidth(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_DigEdge_StartTrig_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeStartTrigDigFltrTimebaseSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6603</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDigEdgeStartTrigDigFltrTimebaseSrc(com.sun.jna.Pointer, java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetDigEdgeStartTrigDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetDigEdgeStartTrigDigFltrTimebaseSrc(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_DigEdge_StartTrig_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeStartTrigDigFltrTimebaseSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6603</i>
	 */
	// int DAQmxGetDigEdgeStartTrigDigFltrTimebaseSrc(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetDigEdgeStartTrigDigFltrTimebaseSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6604</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetDigEdgeStartTrigDigFltrTimebaseSrc(com.sun.jna.Pointer, java.lang.String)} and {@link #DAQmxSetDigEdgeStartTrigDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetDigEdgeStartTrigDigFltrTimebaseSrc(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDigEdgeStartTrigDigFltrTimebaseSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6604</i>
	 */
	// int DAQmxSetDigEdgeStartTrigDigFltrTimebaseSrc(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigEdgeStartTrigDigFltrTimebaseSrc(TaskHandle)</code><br>
	 * <i>native declaration : line 6605</i>
	 */
	// int DAQmxResetDigEdgeStartTrigDigFltrTimebaseSrc(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_DigEdge_StartTrig_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeStartTrigDigFltrTimebaseRate(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6607</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDigEdgeStartTrigDigFltrTimebaseRate(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #DAQmxGetDigEdgeStartTrigDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDigEdgeStartTrigDigFltrTimebaseRate(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_DigEdge_StartTrig_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeStartTrigDigFltrTimebaseRate(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6607</i>
	 */
	// int DAQmxGetDigEdgeStartTrigDigFltrTimebaseRate(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDigEdgeStartTrigDigFltrTimebaseRate(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6608</i>
	 */
	// int DAQmxSetDigEdgeStartTrigDigFltrTimebaseRate(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigEdgeStartTrigDigFltrTimebaseRate(TaskHandle)</code><br>
	 * <i>native declaration : line 6609</i>
	 */
	// int DAQmxResetDigEdgeStartTrigDigFltrTimebaseRate(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_DigEdge_StartTrig_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeStartTrigDigSyncEnable(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6611</i>
	 */
	// int DAQmxGetDigEdgeStartTrigDigSyncEnable(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetDigEdgeStartTrigDigSyncEnable(TaskHandle, bool32)</code><br>
	 * <i>native declaration : line 6612</i>
	 */
	// int DAQmxSetDigEdgeStartTrigDigSyncEnable(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigEdgeStartTrigDigSyncEnable(TaskHandle)</code><br>
	 * <i>native declaration : line 6613</i>
	 */
	// int DAQmxResetDigEdgeStartTrigDigSyncEnable(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_DigPattern_StartTrig_Src ***<br>
	 * Original signature : <code>int32 DAQmxGetDigPatternStartTrigSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6615</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDigPatternStartTrigSrc(com.sun.jna.Pointer, java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetDigPatternStartTrigSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetDigPatternStartTrigSrc(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_DigPattern_StartTrig_Src ***<br>
	 * Original signature : <code>int32 DAQmxGetDigPatternStartTrigSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6615</i>
	 */
	// int DAQmxGetDigPatternStartTrigSrc(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetDigPatternStartTrigSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6616</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetDigPatternStartTrigSrc(com.sun.jna.Pointer, java.lang.String)} and {@link #DAQmxSetDigPatternStartTrigSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetDigPatternStartTrigSrc(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDigPatternStartTrigSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6616</i>
	 */
	// int DAQmxSetDigPatternStartTrigSrc(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigPatternStartTrigSrc(TaskHandle)</code><br>
	 * <i>native declaration : line 6617</i>
	 */
	// int DAQmxResetDigPatternStartTrigSrc(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_DigPattern_StartTrig_Pattern ***<br>
	 * Original signature : <code>int32 DAQmxGetDigPatternStartTrigPattern(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6619</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDigPatternStartTrigPattern(com.sun.jna.Pointer, java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetDigPatternStartTrigPattern(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetDigPatternStartTrigPattern(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_DigPattern_StartTrig_Pattern ***<br>
	 * Original signature : <code>int32 DAQmxGetDigPatternStartTrigPattern(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6619</i>
	 */
	// int DAQmxGetDigPatternStartTrigPattern(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetDigPatternStartTrigPattern(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6620</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetDigPatternStartTrigPattern(com.sun.jna.Pointer, java.lang.String)} and {@link #DAQmxSetDigPatternStartTrigPattern(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetDigPatternStartTrigPattern(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDigPatternStartTrigPattern(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6620</i>
	 */
	// int DAQmxSetDigPatternStartTrigPattern(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigPatternStartTrigPattern(TaskHandle)</code><br>
	 * <i>native declaration : line 6621</i>
	 */
	// int DAQmxResetDigPatternStartTrigPattern(Pointer taskHandle);
	/**
	 * Uses value set DigitalPatternCondition1<br>
	 * Original signature : <code>int32 DAQmxGetDigPatternStartTrigWhen(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6624</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDigPatternStartTrigWhen(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #DAQmxGetDigPatternStartTrigWhen(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDigPatternStartTrigWhen(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set DigitalPatternCondition1<br>
	 * Original signature : <code>int32 DAQmxGetDigPatternStartTrigWhen(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6624</i>
	 */
	// int DAQmxGetDigPatternStartTrigWhen(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDigPatternStartTrigWhen(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6625</i>
	 */
	// int DAQmxSetDigPatternStartTrigWhen(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigPatternStartTrigWhen(TaskHandle)</code><br>
	 * <i>native declaration : line 6626</i>
	 */
	// int DAQmxResetDigPatternStartTrigWhen(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_AnlgEdge_StartTrig_Src ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgEdgeStartTrigSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6628</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAnlgEdgeStartTrigSrc(com.sun.jna.Pointer, java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetAnlgEdgeStartTrigSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetAnlgEdgeStartTrigSrc(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_AnlgEdge_StartTrig_Src ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgEdgeStartTrigSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6628</i>
	 */
	// int DAQmxGetAnlgEdgeStartTrigSrc(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgEdgeStartTrigSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6629</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAnlgEdgeStartTrigSrc(com.sun.jna.Pointer, java.lang.String)} and {@link #DAQmxSetAnlgEdgeStartTrigSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetAnlgEdgeStartTrigSrc(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgEdgeStartTrigSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6629</i>
	 */
	// int DAQmxSetAnlgEdgeStartTrigSrc(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgEdgeStartTrigSrc(TaskHandle)</code><br>
	 * <i>native declaration : line 6630</i>
	 */
	// int DAQmxResetAnlgEdgeStartTrigSrc(Pointer taskHandle);
	/**
	 * Uses value set Slope1<br>
	 * Original signature : <code>int32 DAQmxGetAnlgEdgeStartTrigSlope(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6633</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAnlgEdgeStartTrigSlope(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #DAQmxGetAnlgEdgeStartTrigSlope(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAnlgEdgeStartTrigSlope(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set Slope1<br>
	 * Original signature : <code>int32 DAQmxGetAnlgEdgeStartTrigSlope(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6633</i>
	 */
	// int DAQmxGetAnlgEdgeStartTrigSlope(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgEdgeStartTrigSlope(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6634</i>
	 */
	// int DAQmxSetAnlgEdgeStartTrigSlope(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgEdgeStartTrigSlope(TaskHandle)</code><br>
	 * <i>native declaration : line 6635</i>
	 */
	// int DAQmxResetAnlgEdgeStartTrigSlope(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_AnlgEdge_StartTrig_Lvl ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgEdgeStartTrigLvl(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6637</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAnlgEdgeStartTrigLvl(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #DAQmxGetAnlgEdgeStartTrigLvl(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAnlgEdgeStartTrigLvl(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AnlgEdge_StartTrig_Lvl ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgEdgeStartTrigLvl(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6637</i>
	 */
	// int DAQmxGetAnlgEdgeStartTrigLvl(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgEdgeStartTrigLvl(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6638</i>
	 */
	// int DAQmxSetAnlgEdgeStartTrigLvl(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgEdgeStartTrigLvl(TaskHandle)</code><br>
	 * <i>native declaration : line 6639</i>
	 */
	// int DAQmxResetAnlgEdgeStartTrigLvl(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_AnlgEdge_StartTrig_Hyst ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgEdgeStartTrigHyst(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6641</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAnlgEdgeStartTrigHyst(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #DAQmxGetAnlgEdgeStartTrigHyst(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAnlgEdgeStartTrigHyst(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AnlgEdge_StartTrig_Hyst ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgEdgeStartTrigHyst(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6641</i>
	 */
	// int DAQmxGetAnlgEdgeStartTrigHyst(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgEdgeStartTrigHyst(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6642</i>
	 */
	// int DAQmxSetAnlgEdgeStartTrigHyst(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgEdgeStartTrigHyst(TaskHandle)</code><br>
	 * <i>native declaration : line 6643</i>
	 */
	// int DAQmxResetAnlgEdgeStartTrigHyst(Pointer taskHandle);
	/**
	 * Uses value set Coupling2<br>
	 * Original signature : <code>int32 DAQmxGetAnlgEdgeStartTrigCoupling(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6646</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAnlgEdgeStartTrigCoupling(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #DAQmxGetAnlgEdgeStartTrigCoupling(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAnlgEdgeStartTrigCoupling(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set Coupling2<br>
	 * Original signature : <code>int32 DAQmxGetAnlgEdgeStartTrigCoupling(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6646</i>
	 */
	// int DAQmxGetAnlgEdgeStartTrigCoupling(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgEdgeStartTrigCoupling(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6647</i>
	 */
	// int DAQmxSetAnlgEdgeStartTrigCoupling(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgEdgeStartTrigCoupling(TaskHandle)</code><br>
	 * <i>native declaration : line 6648</i>
	 */
	// int DAQmxResetAnlgEdgeStartTrigCoupling(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_AnlgEdge_StartTrig_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgEdgeStartTrigDigFltrEnable(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6650</i>
	 */
	// int DAQmxGetAnlgEdgeStartTrigDigFltrEnable(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgEdgeStartTrigDigFltrEnable(TaskHandle, bool32)</code><br>
	 * <i>native declaration : line 6651</i>
	 */
	// int DAQmxSetAnlgEdgeStartTrigDigFltrEnable(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgEdgeStartTrigDigFltrEnable(TaskHandle)</code><br>
	 * <i>native declaration : line 6652</i>
	 */
	// int DAQmxResetAnlgEdgeStartTrigDigFltrEnable(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_AnlgEdge_StartTrig_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgEdgeStartTrigDigFltrMinPulseWidth(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6654</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAnlgEdgeStartTrigDigFltrMinPulseWidth(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #DAQmxGetAnlgEdgeStartTrigDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAnlgEdgeStartTrigDigFltrMinPulseWidth(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AnlgEdge_StartTrig_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgEdgeStartTrigDigFltrMinPulseWidth(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6654</i>
	 */
	// int DAQmxGetAnlgEdgeStartTrigDigFltrMinPulseWidth(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgEdgeStartTrigDigFltrMinPulseWidth(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6655</i>
	 */
	// int DAQmxSetAnlgEdgeStartTrigDigFltrMinPulseWidth(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgEdgeStartTrigDigFltrMinPulseWidth(TaskHandle)</code><br>
	 * <i>native declaration : line 6656</i>
	 */
	// int DAQmxResetAnlgEdgeStartTrigDigFltrMinPulseWidth(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_AnlgEdge_StartTrig_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgEdgeStartTrigDigFltrTimebaseSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6658</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAnlgEdgeStartTrigDigFltrTimebaseSrc(com.sun.jna.Pointer, java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetAnlgEdgeStartTrigDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetAnlgEdgeStartTrigDigFltrTimebaseSrc(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_AnlgEdge_StartTrig_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgEdgeStartTrigDigFltrTimebaseSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6658</i>
	 */
	// int DAQmxGetAnlgEdgeStartTrigDigFltrTimebaseSrc(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgEdgeStartTrigDigFltrTimebaseSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6659</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAnlgEdgeStartTrigDigFltrTimebaseSrc(com.sun.jna.Pointer, java.lang.String)} and {@link #DAQmxSetAnlgEdgeStartTrigDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetAnlgEdgeStartTrigDigFltrTimebaseSrc(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgEdgeStartTrigDigFltrTimebaseSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6659</i>
	 */
	// int DAQmxSetAnlgEdgeStartTrigDigFltrTimebaseSrc(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgEdgeStartTrigDigFltrTimebaseSrc(TaskHandle)</code><br>
	 * <i>native declaration : line 6660</i>
	 */
	// int DAQmxResetAnlgEdgeStartTrigDigFltrTimebaseSrc(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_AnlgEdge_StartTrig_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgEdgeStartTrigDigFltrTimebaseRate(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6662</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAnlgEdgeStartTrigDigFltrTimebaseRate(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #DAQmxGetAnlgEdgeStartTrigDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAnlgEdgeStartTrigDigFltrTimebaseRate(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AnlgEdge_StartTrig_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgEdgeStartTrigDigFltrTimebaseRate(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6662</i>
	 */
	// int DAQmxGetAnlgEdgeStartTrigDigFltrTimebaseRate(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgEdgeStartTrigDigFltrTimebaseRate(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6663</i>
	 */
	// int DAQmxSetAnlgEdgeStartTrigDigFltrTimebaseRate(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgEdgeStartTrigDigFltrTimebaseRate(TaskHandle)</code><br>
	 * <i>native declaration : line 6664</i>
	 */
	// int DAQmxResetAnlgEdgeStartTrigDigFltrTimebaseRate(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_AnlgEdge_StartTrig_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgEdgeStartTrigDigSyncEnable(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6666</i>
	 */
	// int DAQmxGetAnlgEdgeStartTrigDigSyncEnable(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgEdgeStartTrigDigSyncEnable(TaskHandle, bool32)</code><br>
	 * <i>native declaration : line 6667</i>
	 */
	// int DAQmxSetAnlgEdgeStartTrigDigSyncEnable(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgEdgeStartTrigDigSyncEnable(TaskHandle)</code><br>
	 * <i>native declaration : line 6668</i>
	 */
	// int DAQmxResetAnlgEdgeStartTrigDigSyncEnable(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_AnlgWin_StartTrig_Src ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinStartTrigSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6670</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAnlgWinStartTrigSrc(com.sun.jna.Pointer, java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetAnlgWinStartTrigSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetAnlgWinStartTrigSrc(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_AnlgWin_StartTrig_Src ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinStartTrigSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6670</i>
	 */
	// int DAQmxGetAnlgWinStartTrigSrc(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgWinStartTrigSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6671</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAnlgWinStartTrigSrc(com.sun.jna.Pointer, java.lang.String)} and {@link #DAQmxSetAnlgWinStartTrigSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetAnlgWinStartTrigSrc(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgWinStartTrigSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6671</i>
	 */
	// int DAQmxSetAnlgWinStartTrigSrc(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgWinStartTrigSrc(TaskHandle)</code><br>
	 * <i>native declaration : line 6672</i>
	 */
	// int DAQmxResetAnlgWinStartTrigSrc(Pointer taskHandle);
	/**
	 * Uses value set WindowTriggerCondition1<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinStartTrigWhen(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6675</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAnlgWinStartTrigWhen(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #DAQmxGetAnlgWinStartTrigWhen(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAnlgWinStartTrigWhen(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set WindowTriggerCondition1<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinStartTrigWhen(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6675</i>
	 */
	// int DAQmxGetAnlgWinStartTrigWhen(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgWinStartTrigWhen(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6676</i>
	 */
	// int DAQmxSetAnlgWinStartTrigWhen(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgWinStartTrigWhen(TaskHandle)</code><br>
	 * <i>native declaration : line 6677</i>
	 */
	// int DAQmxResetAnlgWinStartTrigWhen(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_AnlgWin_StartTrig_Top ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinStartTrigTop(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6679</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAnlgWinStartTrigTop(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #DAQmxGetAnlgWinStartTrigTop(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAnlgWinStartTrigTop(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AnlgWin_StartTrig_Top ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinStartTrigTop(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6679</i>
	 */
	// int DAQmxGetAnlgWinStartTrigTop(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgWinStartTrigTop(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6680</i>
	 */
	// int DAQmxSetAnlgWinStartTrigTop(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgWinStartTrigTop(TaskHandle)</code><br>
	 * <i>native declaration : line 6681</i>
	 */
	// int DAQmxResetAnlgWinStartTrigTop(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_AnlgWin_StartTrig_Btm ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinStartTrigBtm(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6683</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAnlgWinStartTrigBtm(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #DAQmxGetAnlgWinStartTrigBtm(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAnlgWinStartTrigBtm(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AnlgWin_StartTrig_Btm ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinStartTrigBtm(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6683</i>
	 */
	// int DAQmxGetAnlgWinStartTrigBtm(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgWinStartTrigBtm(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6684</i>
	 */
	// int DAQmxSetAnlgWinStartTrigBtm(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgWinStartTrigBtm(TaskHandle)</code><br>
	 * <i>native declaration : line 6685</i>
	 */
	// int DAQmxResetAnlgWinStartTrigBtm(Pointer taskHandle);
	/**
	 * Uses value set Coupling2<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinStartTrigCoupling(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6688</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAnlgWinStartTrigCoupling(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #DAQmxGetAnlgWinStartTrigCoupling(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAnlgWinStartTrigCoupling(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set Coupling2<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinStartTrigCoupling(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6688</i>
	 */
	// int DAQmxGetAnlgWinStartTrigCoupling(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgWinStartTrigCoupling(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6689</i>
	 */
	// int DAQmxSetAnlgWinStartTrigCoupling(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgWinStartTrigCoupling(TaskHandle)</code><br>
	 * <i>native declaration : line 6690</i>
	 */
	// int DAQmxResetAnlgWinStartTrigCoupling(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_AnlgWin_StartTrig_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinStartTrigDigFltrEnable(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6692</i>
	 */
	// int DAQmxGetAnlgWinStartTrigDigFltrEnable(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgWinStartTrigDigFltrEnable(TaskHandle, bool32)</code><br>
	 * <i>native declaration : line 6693</i>
	 */
	// int DAQmxSetAnlgWinStartTrigDigFltrEnable(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgWinStartTrigDigFltrEnable(TaskHandle)</code><br>
	 * <i>native declaration : line 6694</i>
	 */
	// int DAQmxResetAnlgWinStartTrigDigFltrEnable(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_AnlgWin_StartTrig_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinStartTrigDigFltrMinPulseWidth(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6696</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAnlgWinStartTrigDigFltrMinPulseWidth(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #DAQmxGetAnlgWinStartTrigDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAnlgWinStartTrigDigFltrMinPulseWidth(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AnlgWin_StartTrig_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinStartTrigDigFltrMinPulseWidth(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6696</i>
	 */
	// int DAQmxGetAnlgWinStartTrigDigFltrMinPulseWidth(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgWinStartTrigDigFltrMinPulseWidth(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6697</i>
	 */
	// int DAQmxSetAnlgWinStartTrigDigFltrMinPulseWidth(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgWinStartTrigDigFltrMinPulseWidth(TaskHandle)</code><br>
	 * <i>native declaration : line 6698</i>
	 */
	// int DAQmxResetAnlgWinStartTrigDigFltrMinPulseWidth(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_AnlgWin_StartTrig_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinStartTrigDigFltrTimebaseSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6700</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAnlgWinStartTrigDigFltrTimebaseSrc(com.sun.jna.Pointer, java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetAnlgWinStartTrigDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetAnlgWinStartTrigDigFltrTimebaseSrc(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_AnlgWin_StartTrig_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinStartTrigDigFltrTimebaseSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6700</i>
	 */
	// int DAQmxGetAnlgWinStartTrigDigFltrTimebaseSrc(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgWinStartTrigDigFltrTimebaseSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6701</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAnlgWinStartTrigDigFltrTimebaseSrc(com.sun.jna.Pointer, java.lang.String)} and {@link #DAQmxSetAnlgWinStartTrigDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetAnlgWinStartTrigDigFltrTimebaseSrc(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgWinStartTrigDigFltrTimebaseSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6701</i>
	 */
	// int DAQmxSetAnlgWinStartTrigDigFltrTimebaseSrc(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgWinStartTrigDigFltrTimebaseSrc(TaskHandle)</code><br>
	 * <i>native declaration : line 6702</i>
	 */
	// int DAQmxResetAnlgWinStartTrigDigFltrTimebaseSrc(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_AnlgWin_StartTrig_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinStartTrigDigFltrTimebaseRate(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6704</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAnlgWinStartTrigDigFltrTimebaseRate(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #DAQmxGetAnlgWinStartTrigDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAnlgWinStartTrigDigFltrTimebaseRate(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AnlgWin_StartTrig_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinStartTrigDigFltrTimebaseRate(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6704</i>
	 */
	// int DAQmxGetAnlgWinStartTrigDigFltrTimebaseRate(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgWinStartTrigDigFltrTimebaseRate(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6705</i>
	 */
	// int DAQmxSetAnlgWinStartTrigDigFltrTimebaseRate(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgWinStartTrigDigFltrTimebaseRate(TaskHandle)</code><br>
	 * <i>native declaration : line 6706</i>
	 */
	// int DAQmxResetAnlgWinStartTrigDigFltrTimebaseRate(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_AnlgWin_StartTrig_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinStartTrigDigSyncEnable(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6708</i>
	 */
	// int DAQmxGetAnlgWinStartTrigDigSyncEnable(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgWinStartTrigDigSyncEnable(TaskHandle, bool32)</code><br>
	 * <i>native declaration : line 6709</i>
	 */
	// int DAQmxSetAnlgWinStartTrigDigSyncEnable(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgWinStartTrigDigSyncEnable(TaskHandle)</code><br>
	 * <i>native declaration : line 6710</i>
	 */
	// int DAQmxResetAnlgWinStartTrigDigSyncEnable(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_StartTrig_Delay ***<br>
	 * Original signature : <code>int32 DAQmxGetStartTrigDelay(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6712</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetStartTrigDelay(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #DAQmxGetStartTrigDelay(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetStartTrigDelay(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_StartTrig_Delay ***<br>
	 * Original signature : <code>int32 DAQmxGetStartTrigDelay(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6712</i>
	 */
	// int DAQmxGetStartTrigDelay(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetStartTrigDelay(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6713</i>
	 */
	// int DAQmxSetStartTrigDelay(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetStartTrigDelay(TaskHandle)</code><br>
	 * <i>native declaration : line 6714</i>
	 */
	// int DAQmxResetStartTrigDelay(Pointer taskHandle);
	/**
	 * Uses value set DigitalWidthUnits1<br>
	 * Original signature : <code>int32 DAQmxGetStartTrigDelayUnits(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6717</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetStartTrigDelayUnits(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #DAQmxGetStartTrigDelayUnits(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetStartTrigDelayUnits(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set DigitalWidthUnits1<br>
	 * Original signature : <code>int32 DAQmxGetStartTrigDelayUnits(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6717</i>
	 */
	// int DAQmxGetStartTrigDelayUnits(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetStartTrigDelayUnits(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6718</i>
	 */
	// int DAQmxSetStartTrigDelayUnits(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetStartTrigDelayUnits(TaskHandle)</code><br>
	 * <i>native declaration : line 6719</i>
	 */
	// int DAQmxResetStartTrigDelayUnits(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_StartTrig_Retriggerable ***<br>
	 * Original signature : <code>int32 DAQmxGetStartTrigRetriggerable(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6721</i>
	 */
	// int DAQmxGetStartTrigRetriggerable(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetStartTrigRetriggerable(TaskHandle, bool32)</code><br>
	 * <i>native declaration : line 6722</i>
	 */
	// int DAQmxSetStartTrigRetriggerable(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetStartTrigRetriggerable(TaskHandle)</code><br>
	 * <i>native declaration : line 6723</i>
	 */
	// int DAQmxResetStartTrigRetriggerable(Pointer taskHandle);
	/**
	 * Uses value set TriggerType8<br>
	 * Original signature : <code>int32 DAQmxGetRefTrigType(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6726</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetRefTrigType(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #DAQmxGetRefTrigType(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetRefTrigType(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set TriggerType8<br>
	 * Original signature : <code>int32 DAQmxGetRefTrigType(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6726</i>
	 */
	// int DAQmxGetRefTrigType(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetRefTrigType(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6727</i>
	 */
	// int DAQmxSetRefTrigType(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetRefTrigType(TaskHandle)</code><br>
	 * <i>native declaration : line 6728</i>
	 */
	// int DAQmxResetRefTrigType(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_RefTrig_PretrigSamples ***<br>
	 * Original signature : <code>int32 DAQmxGetRefTrigPretrigSamples(TaskHandle, uInt32*)</code><br>
	 * <i>native declaration : line 6730</i>
	 */
	// int DAQmxGetRefTrigPretrigSamples(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetRefTrigPretrigSamples(TaskHandle, uInt32)</code><br>
	 * <i>native declaration : line 6731</i>
	 */
	// int DAQmxSetRefTrigPretrigSamples(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetRefTrigPretrigSamples(TaskHandle)</code><br>
	 * <i>native declaration : line 6732</i>
	 */
	// int DAQmxResetRefTrigPretrigSamples(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_RefTrig_Term ***<br>
	 * Original signature : <code>int32 DAQmxGetRefTrigTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6734</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetRefTrigTerm(com.sun.jna.Pointer, java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetRefTrigTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetRefTrigTerm(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_RefTrig_Term ***<br>
	 * Original signature : <code>int32 DAQmxGetRefTrigTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6734</i>
	 */
	// int DAQmxGetRefTrigTerm(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_DigEdge_RefTrig_Src ***<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeRefTrigSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6736</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDigEdgeRefTrigSrc(com.sun.jna.Pointer, java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetDigEdgeRefTrigSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetDigEdgeRefTrigSrc(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_DigEdge_RefTrig_Src ***<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeRefTrigSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6736</i>
	 */
	// int DAQmxGetDigEdgeRefTrigSrc(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetDigEdgeRefTrigSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6737</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetDigEdgeRefTrigSrc(com.sun.jna.Pointer, java.lang.String)} and {@link #DAQmxSetDigEdgeRefTrigSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetDigEdgeRefTrigSrc(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDigEdgeRefTrigSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6737</i>
	 */
	// int DAQmxSetDigEdgeRefTrigSrc(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigEdgeRefTrigSrc(TaskHandle)</code><br>
	 * <i>native declaration : line 6738</i>
	 */
	// int DAQmxResetDigEdgeRefTrigSrc(Pointer taskHandle);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeRefTrigEdge(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6741</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDigEdgeRefTrigEdge(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #DAQmxGetDigEdgeRefTrigEdge(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDigEdgeRefTrigEdge(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeRefTrigEdge(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6741</i>
	 */
	// int DAQmxGetDigEdgeRefTrigEdge(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDigEdgeRefTrigEdge(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6742</i>
	 */
	// int DAQmxSetDigEdgeRefTrigEdge(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigEdgeRefTrigEdge(TaskHandle)</code><br>
	 * <i>native declaration : line 6743</i>
	 */
	// int DAQmxResetDigEdgeRefTrigEdge(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_DigEdge_RefTrig_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeRefTrigDigFltrEnable(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6745</i>
	 */
	// int DAQmxGetDigEdgeRefTrigDigFltrEnable(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetDigEdgeRefTrigDigFltrEnable(TaskHandle, bool32)</code><br>
	 * <i>native declaration : line 6746</i>
	 */
	// int DAQmxSetDigEdgeRefTrigDigFltrEnable(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigEdgeRefTrigDigFltrEnable(TaskHandle)</code><br>
	 * <i>native declaration : line 6747</i>
	 */
	// int DAQmxResetDigEdgeRefTrigDigFltrEnable(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_DigEdge_RefTrig_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeRefTrigDigFltrMinPulseWidth(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6749</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDigEdgeRefTrigDigFltrMinPulseWidth(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #DAQmxGetDigEdgeRefTrigDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDigEdgeRefTrigDigFltrMinPulseWidth(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_DigEdge_RefTrig_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeRefTrigDigFltrMinPulseWidth(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6749</i>
	 */
	// int DAQmxGetDigEdgeRefTrigDigFltrMinPulseWidth(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDigEdgeRefTrigDigFltrMinPulseWidth(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6750</i>
	 */
	// int DAQmxSetDigEdgeRefTrigDigFltrMinPulseWidth(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigEdgeRefTrigDigFltrMinPulseWidth(TaskHandle)</code><br>
	 * <i>native declaration : line 6751</i>
	 */
	// int DAQmxResetDigEdgeRefTrigDigFltrMinPulseWidth(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_DigEdge_RefTrig_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeRefTrigDigFltrTimebaseSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6753</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDigEdgeRefTrigDigFltrTimebaseSrc(com.sun.jna.Pointer, java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetDigEdgeRefTrigDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetDigEdgeRefTrigDigFltrTimebaseSrc(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_DigEdge_RefTrig_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeRefTrigDigFltrTimebaseSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6753</i>
	 */
	// int DAQmxGetDigEdgeRefTrigDigFltrTimebaseSrc(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetDigEdgeRefTrigDigFltrTimebaseSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6754</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetDigEdgeRefTrigDigFltrTimebaseSrc(com.sun.jna.Pointer, java.lang.String)} and {@link #DAQmxSetDigEdgeRefTrigDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetDigEdgeRefTrigDigFltrTimebaseSrc(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDigEdgeRefTrigDigFltrTimebaseSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6754</i>
	 */
	// int DAQmxSetDigEdgeRefTrigDigFltrTimebaseSrc(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigEdgeRefTrigDigFltrTimebaseSrc(TaskHandle)</code><br>
	 * <i>native declaration : line 6755</i>
	 */
	// int DAQmxResetDigEdgeRefTrigDigFltrTimebaseSrc(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_DigEdge_RefTrig_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeRefTrigDigFltrTimebaseRate(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6757</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDigEdgeRefTrigDigFltrTimebaseRate(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #DAQmxGetDigEdgeRefTrigDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDigEdgeRefTrigDigFltrTimebaseRate(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_DigEdge_RefTrig_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeRefTrigDigFltrTimebaseRate(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6757</i>
	 */
	// int DAQmxGetDigEdgeRefTrigDigFltrTimebaseRate(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDigEdgeRefTrigDigFltrTimebaseRate(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6758</i>
	 */
	// int DAQmxSetDigEdgeRefTrigDigFltrTimebaseRate(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigEdgeRefTrigDigFltrTimebaseRate(TaskHandle)</code><br>
	 * <i>native declaration : line 6759</i>
	 */
	// int DAQmxResetDigEdgeRefTrigDigFltrTimebaseRate(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_DigEdge_RefTrig_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeRefTrigDigSyncEnable(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6761</i>
	 */
	// int DAQmxGetDigEdgeRefTrigDigSyncEnable(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetDigEdgeRefTrigDigSyncEnable(TaskHandle, bool32)</code><br>
	 * <i>native declaration : line 6762</i>
	 */
	// int DAQmxSetDigEdgeRefTrigDigSyncEnable(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigEdgeRefTrigDigSyncEnable(TaskHandle)</code><br>
	 * <i>native declaration : line 6763</i>
	 */
	// int DAQmxResetDigEdgeRefTrigDigSyncEnable(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_DigPattern_RefTrig_Src ***<br>
	 * Original signature : <code>int32 DAQmxGetDigPatternRefTrigSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6765</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDigPatternRefTrigSrc(com.sun.jna.Pointer, java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetDigPatternRefTrigSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetDigPatternRefTrigSrc(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_DigPattern_RefTrig_Src ***<br>
	 * Original signature : <code>int32 DAQmxGetDigPatternRefTrigSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6765</i>
	 */
	// int DAQmxGetDigPatternRefTrigSrc(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetDigPatternRefTrigSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6766</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetDigPatternRefTrigSrc(com.sun.jna.Pointer, java.lang.String)} and {@link #DAQmxSetDigPatternRefTrigSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetDigPatternRefTrigSrc(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDigPatternRefTrigSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6766</i>
	 */
	// int DAQmxSetDigPatternRefTrigSrc(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigPatternRefTrigSrc(TaskHandle)</code><br>
	 * <i>native declaration : line 6767</i>
	 */
	// int DAQmxResetDigPatternRefTrigSrc(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_DigPattern_RefTrig_Pattern ***<br>
	 * Original signature : <code>int32 DAQmxGetDigPatternRefTrigPattern(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6769</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDigPatternRefTrigPattern(com.sun.jna.Pointer, java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetDigPatternRefTrigPattern(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetDigPatternRefTrigPattern(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_DigPattern_RefTrig_Pattern ***<br>
	 * Original signature : <code>int32 DAQmxGetDigPatternRefTrigPattern(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6769</i>
	 */
	// int DAQmxGetDigPatternRefTrigPattern(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetDigPatternRefTrigPattern(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6770</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetDigPatternRefTrigPattern(com.sun.jna.Pointer, java.lang.String)} and {@link #DAQmxSetDigPatternRefTrigPattern(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetDigPatternRefTrigPattern(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDigPatternRefTrigPattern(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6770</i>
	 */
	// int DAQmxSetDigPatternRefTrigPattern(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigPatternRefTrigPattern(TaskHandle)</code><br>
	 * <i>native declaration : line 6771</i>
	 */
	// int DAQmxResetDigPatternRefTrigPattern(Pointer taskHandle);
	/**
	 * Uses value set DigitalPatternCondition1<br>
	 * Original signature : <code>int32 DAQmxGetDigPatternRefTrigWhen(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6774</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDigPatternRefTrigWhen(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #DAQmxGetDigPatternRefTrigWhen(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDigPatternRefTrigWhen(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set DigitalPatternCondition1<br>
	 * Original signature : <code>int32 DAQmxGetDigPatternRefTrigWhen(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6774</i>
	 */
	// int DAQmxGetDigPatternRefTrigWhen(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDigPatternRefTrigWhen(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6775</i>
	 */
	// int DAQmxSetDigPatternRefTrigWhen(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigPatternRefTrigWhen(TaskHandle)</code><br>
	 * <i>native declaration : line 6776</i>
	 */
	// int DAQmxResetDigPatternRefTrigWhen(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_AnlgEdge_RefTrig_Src ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgEdgeRefTrigSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6778</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAnlgEdgeRefTrigSrc(com.sun.jna.Pointer, java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetAnlgEdgeRefTrigSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetAnlgEdgeRefTrigSrc(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_AnlgEdge_RefTrig_Src ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgEdgeRefTrigSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6778</i>
	 */
	// int DAQmxGetAnlgEdgeRefTrigSrc(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgEdgeRefTrigSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6779</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetAnlgEdgeRefTrigSrc(com.sun.jna.Pointer, java.lang.String)} and {@link #DAQmxSetAnlgEdgeRefTrigSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetAnlgEdgeRefTrigSrc(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgEdgeRefTrigSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6779</i>
	 */
	// int DAQmxSetAnlgEdgeRefTrigSrc(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgEdgeRefTrigSrc(TaskHandle)</code><br>
	 * <i>native declaration : line 6780</i>
	 */
	// int DAQmxResetAnlgEdgeRefTrigSrc(Pointer taskHandle);
	/**
	 * Uses value set Slope1<br>
	 * Original signature : <code>int32 DAQmxGetAnlgEdgeRefTrigSlope(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6783</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAnlgEdgeRefTrigSlope(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #DAQmxGetAnlgEdgeRefTrigSlope(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAnlgEdgeRefTrigSlope(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set Slope1<br>
	 * Original signature : <code>int32 DAQmxGetAnlgEdgeRefTrigSlope(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6783</i>
	 */
	// int DAQmxGetAnlgEdgeRefTrigSlope(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgEdgeRefTrigSlope(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6784</i>
	 */
	// int DAQmxSetAnlgEdgeRefTrigSlope(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgEdgeRefTrigSlope(TaskHandle)</code><br>
	 * <i>native declaration : line 6785</i>
	 */
	// int DAQmxResetAnlgEdgeRefTrigSlope(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_AnlgEdge_RefTrig_Lvl ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgEdgeRefTrigLvl(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6787</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAnlgEdgeRefTrigLvl(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #DAQmxGetAnlgEdgeRefTrigLvl(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAnlgEdgeRefTrigLvl(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AnlgEdge_RefTrig_Lvl ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgEdgeRefTrigLvl(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6787</i>
	 */
	// int DAQmxGetAnlgEdgeRefTrigLvl(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgEdgeRefTrigLvl(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6788</i>
	 */
	// int DAQmxSetAnlgEdgeRefTrigLvl(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgEdgeRefTrigLvl(TaskHandle)</code><br>
	 * <i>native declaration : line 6789</i>
	 */
	// int DAQmxResetAnlgEdgeRefTrigLvl(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_AnlgEdge_RefTrig_Hyst ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgEdgeRefTrigHyst(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6791</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAnlgEdgeRefTrigHyst(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #DAQmxGetAnlgEdgeRefTrigHyst(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAnlgEdgeRefTrigHyst(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_AnlgEdge_RefTrig_Hyst ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgEdgeRefTrigHyst(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6791</i>
	 */
	// int DAQmxGetAnlgEdgeRefTrigHyst(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgEdgeRefTrigHyst(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6792</i>
	 */
	// int DAQmxSetAnlgEdgeRefTrigHyst(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgEdgeRefTrigHyst(TaskHandle)</code><br>
	 * <i>native declaration : line 6793</i>
	 */
	// int DAQmxResetAnlgEdgeRefTrigHyst(Pointer taskHandle);
	/**
	 * Uses value set Coupling2<br>
	 * Original signature : <code>int32 DAQmxGetAnlgEdgeRefTrigCoupling(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6796</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetAnlgEdgeRefTrigCoupling(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #DAQmxGetAnlgEdgeRefTrigCoupling(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetAnlgEdgeRefTrigCoupling(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set Coupling2<br>
	 * Original signature : <code>int32 DAQmxGetAnlgEdgeRefTrigCoupling(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6796</i>
	 */
	// int DAQmxGetAnlgEdgeRefTrigCoupling(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgEdgeRefTrigCoupling(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6797</i>
	 */
	// int DAQmxSetAnlgEdgeRefTrigCoupling(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgEdgeRefTrigCoupling(TaskHandle)</code><br>
	 * <i>native declaration : line 6798</i>
	 */
	// int DAQmxResetAnlgEdgeRefTrigCoupling(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_AnlgEdge_RefTrig_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgEdgeRefTrigDigFltrEnable(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6800</i>
	 */
	// int DAQmxGetAnlgEdgeRefTrigDigFltrEnable(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgEdgeRefTrigDigFltrEnable(TaskHandle, bool32)</code><br>
	 * <i>native declaration : line 6801</i>
	 */
	// int DAQmxSetAnlgEdgeRefTrigDigFltrEnable(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgEdgeRefTrigDigFltrEnable(TaskHandle)</code><br>
	 * <i>native declaration : line 6802</i>
	 */
	// int DAQmxResetAnlgEdgeRefTrigDigFltrEnable(Pointer taskHandle);

	/**
	 * *** Set/Get functions for DAQmx_AnlgEdge_RefTrig_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgEdgeRefTrigDigFltrMinPulseWidth(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6804</i>
	 */
	// int DAQmxGetAnlgEdgeRefTrigDigFltrMinPulseWidth(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgEdgeRefTrigDigFltrMinPulseWidth(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6805</i>
	 */
	// int DAQmxSetAnlgEdgeRefTrigDigFltrMinPulseWidth(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgEdgeRefTrigDigFltrMinPulseWidth(TaskHandle)</code><br>
	 * <i>native declaration : line 6806</i>
	 */
	// int DAQmxResetAnlgEdgeRefTrigDigFltrMinPulseWidth(Pointer taskHandle);

	/**
	 * *** Set/Get functions for DAQmx_AnlgEdge_RefTrig_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgEdgeRefTrigDigFltrTimebaseSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6808</i>
	 */
	// int DAQmxGetAnlgEdgeRefTrigDigFltrTimebaseSrc(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);

	/**
	 * Original signature : <code>int32 DAQmxSetAnlgEdgeRefTrigDigFltrTimebaseSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6809</i>
	 */
	// int DAQmxSetAnlgEdgeRefTrigDigFltrTimebaseSrc(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgEdgeRefTrigDigFltrTimebaseSrc(TaskHandle)</code><br>
	 * <i>native declaration : line 6810</i>
	 */
	// int DAQmxResetAnlgEdgeRefTrigDigFltrTimebaseSrc(Pointer taskHandle);

	/**
	 * *** Set/Get functions for DAQmx_AnlgEdge_RefTrig_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgEdgeRefTrigDigFltrTimebaseRate(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6812</i>
	 */
	// int DAQmxGetAnlgEdgeRefTrigDigFltrTimebaseRate(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgEdgeRefTrigDigFltrTimebaseRate(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6813</i>
	 */
	// int DAQmxSetAnlgEdgeRefTrigDigFltrTimebaseRate(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgEdgeRefTrigDigFltrTimebaseRate(TaskHandle)</code><br>
	 * <i>native declaration : line 6814</i>
	 */
	// int DAQmxResetAnlgEdgeRefTrigDigFltrTimebaseRate(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_AnlgEdge_RefTrig_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgEdgeRefTrigDigSyncEnable(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6816</i>
	 */
	// int DAQmxGetAnlgEdgeRefTrigDigSyncEnable(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgEdgeRefTrigDigSyncEnable(TaskHandle, bool32)</code><br>
	 * <i>native declaration : line 6817</i>
	 */
	// int DAQmxSetAnlgEdgeRefTrigDigSyncEnable(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgEdgeRefTrigDigSyncEnable(TaskHandle)</code><br>
	 * <i>native declaration : line 6818</i>
	 */
	// int DAQmxResetAnlgEdgeRefTrigDigSyncEnable(Pointer taskHandle);

	/**
	 * *** Set/Get functions for DAQmx_AnlgWin_RefTrig_Src ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinRefTrigSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6820</i>
	 */
	// int DAQmxGetAnlgWinRefTrigSrc(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);

	/**
	 * Original signature : <code>int32 DAQmxSetAnlgWinRefTrigSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6821</i>
	 */
	// int DAQmxSetAnlgWinRefTrigSrc(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgWinRefTrigSrc(TaskHandle)</code><br>
	 * <i>native declaration : line 6822</i>
	 */
	// int DAQmxResetAnlgWinRefTrigSrc(Pointer taskHandle);

	/**
	 * Uses value set WindowTriggerCondition1<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinRefTrigWhen(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6825</i>
	 */
	// int DAQmxGetAnlgWinRefTrigWhen(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgWinRefTrigWhen(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6826</i>
	 */
	// int DAQmxSetAnlgWinRefTrigWhen(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgWinRefTrigWhen(TaskHandle)</code><br>
	 * <i>native declaration : line 6827</i>
	 */
	// int DAQmxResetAnlgWinRefTrigWhen(Pointer taskHandle);

	/**
	 * *** Set/Get functions for DAQmx_AnlgWin_RefTrig_Top ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinRefTrigTop(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6829</i>
	 */
	// int DAQmxGetAnlgWinRefTrigTop(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgWinRefTrigTop(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6830</i>
	 */
	// int DAQmxSetAnlgWinRefTrigTop(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgWinRefTrigTop(TaskHandle)</code><br>
	 * <i>native declaration : line 6831</i>
	 */
	// int DAQmxResetAnlgWinRefTrigTop(Pointer taskHandle);

	/**
	 * *** Set/Get functions for DAQmx_AnlgWin_RefTrig_Btm ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinRefTrigBtm(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6833</i>
	 */
	// int DAQmxGetAnlgWinRefTrigBtm(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgWinRefTrigBtm(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6834</i>
	 */
	// int DAQmxSetAnlgWinRefTrigBtm(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgWinRefTrigBtm(TaskHandle)</code><br>
	 * <i>native declaration : line 6835</i>
	 */
	// int DAQmxResetAnlgWinRefTrigBtm(Pointer taskHandle);

	/**
	 * Uses value set Coupling2<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinRefTrigCoupling(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6838</i>
	 */
	// int DAQmxGetAnlgWinRefTrigCoupling(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgWinRefTrigCoupling(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6839</i>
	 */
	// int DAQmxSetAnlgWinRefTrigCoupling(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgWinRefTrigCoupling(TaskHandle)</code><br>
	 * <i>native declaration : line 6840</i>
	 */
	// int DAQmxResetAnlgWinRefTrigCoupling(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_AnlgWin_RefTrig_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinRefTrigDigFltrEnable(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6842</i>
	 */
	// int DAQmxGetAnlgWinRefTrigDigFltrEnable(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgWinRefTrigDigFltrEnable(TaskHandle, bool32)</code><br>
	 * <i>native declaration : line 6843</i>
	 */
	// int DAQmxSetAnlgWinRefTrigDigFltrEnable(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgWinRefTrigDigFltrEnable(TaskHandle)</code><br>
	 * <i>native declaration : line 6844</i>
	 */
	// int DAQmxResetAnlgWinRefTrigDigFltrEnable(Pointer taskHandle);

	/**
	 * *** Set/Get functions for DAQmx_AnlgWin_RefTrig_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinRefTrigDigFltrMinPulseWidth(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6846</i>
	 */
	// int DAQmxGetAnlgWinRefTrigDigFltrMinPulseWidth(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgWinRefTrigDigFltrMinPulseWidth(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6847</i>
	 */
	// int DAQmxSetAnlgWinRefTrigDigFltrMinPulseWidth(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgWinRefTrigDigFltrMinPulseWidth(TaskHandle)</code><br>
	 * <i>native declaration : line 6848</i>
	 */
	// int DAQmxResetAnlgWinRefTrigDigFltrMinPulseWidth(Pointer taskHandle);

	/**
	 * *** Set/Get functions for DAQmx_AnlgWin_RefTrig_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinRefTrigDigFltrTimebaseSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6850</i>
	 */
	// int DAQmxGetAnlgWinRefTrigDigFltrTimebaseSrc(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);

	/**
	 * Original signature : <code>int32 DAQmxSetAnlgWinRefTrigDigFltrTimebaseSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6851</i>
	 */
	// int DAQmxSetAnlgWinRefTrigDigFltrTimebaseSrc(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgWinRefTrigDigFltrTimebaseSrc(TaskHandle)</code><br>
	 * <i>native declaration : line 6852</i>
	 */
	// int DAQmxResetAnlgWinRefTrigDigFltrTimebaseSrc(Pointer taskHandle);

	/**
	 * *** Set/Get functions for DAQmx_AnlgWin_RefTrig_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinRefTrigDigFltrTimebaseRate(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6854</i>
	 */
	// int DAQmxGetAnlgWinRefTrigDigFltrTimebaseRate(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgWinRefTrigDigFltrTimebaseRate(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6855</i>
	 */
	// int DAQmxSetAnlgWinRefTrigDigFltrTimebaseRate(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgWinRefTrigDigFltrTimebaseRate(TaskHandle)</code><br>
	 * <i>native declaration : line 6856</i>
	 */
	// int DAQmxResetAnlgWinRefTrigDigFltrTimebaseRate(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_AnlgWin_RefTrig_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinRefTrigDigSyncEnable(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6858</i>
	 */
	// int DAQmxGetAnlgWinRefTrigDigSyncEnable(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgWinRefTrigDigSyncEnable(TaskHandle, bool32)</code><br>
	 * <i>native declaration : line 6859</i>
	 */
	// int DAQmxSetAnlgWinRefTrigDigSyncEnable(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgWinRefTrigDigSyncEnable(TaskHandle)</code><br>
	 * <i>native declaration : line 6860</i>
	 */
	// int DAQmxResetAnlgWinRefTrigDigSyncEnable(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_RefTrig_AutoTrigEnable ***<br>
	 * Original signature : <code>int32 DAQmxGetRefTrigAutoTrigEnable(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6862</i>
	 */
	// int DAQmxGetRefTrigAutoTrigEnable(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetRefTrigAutoTrigEnable(TaskHandle, bool32)</code><br>
	 * <i>native declaration : line 6863</i>
	 */
	// int DAQmxSetRefTrigAutoTrigEnable(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetRefTrigAutoTrigEnable(TaskHandle)</code><br>
	 * <i>native declaration : line 6864</i>
	 */
	// int DAQmxResetRefTrigAutoTrigEnable(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_RefTrig_AutoTriggered ***<br>
	 * Original signature : <code>int32 DAQmxGetRefTrigAutoTriggered(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6866</i>
	 */
	// int DAQmxGetRefTrigAutoTriggered(Pointer taskHandle, NativeLongByReference data);

	/**
	 * *** Set/Get functions for DAQmx_RefTrig_Delay ***<br>
	 * Original signature : <code>int32 DAQmxGetRefTrigDelay(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6868</i>
	 */
	// int DAQmxGetRefTrigDelay(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetRefTrigDelay(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6869</i>
	 */
	// int DAQmxSetRefTrigDelay(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetRefTrigDelay(TaskHandle)</code><br>
	 * <i>native declaration : line 6870</i>
	 */
	// int DAQmxResetRefTrigDelay(Pointer taskHandle);

	/**
	 * Uses value set TriggerType5<br>
	 * Original signature : <code>int32 DAQmxGetAdvTrigType(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6873</i>
	 */
	// int DAQmxGetAdvTrigType(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAdvTrigType(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6874</i>
	 */
	// int DAQmxSetAdvTrigType(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAdvTrigType(TaskHandle)</code><br>
	 * <i>native declaration : line 6875</i>
	 */
	// int DAQmxResetAdvTrigType(Pointer taskHandle);

	/**
	 * *** Set/Get functions for DAQmx_DigEdge_AdvTrig_Src ***<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeAdvTrigSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6877</i>
	 */
	// int DAQmxGetDigEdgeAdvTrigSrc(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);

	/**
	 * Original signature : <code>int32 DAQmxSetDigEdgeAdvTrigSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6878</i>
	 */
	// int DAQmxSetDigEdgeAdvTrigSrc(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigEdgeAdvTrigSrc(TaskHandle)</code><br>
	 * <i>native declaration : line 6879</i>
	 */
	// int DAQmxResetDigEdgeAdvTrigSrc(Pointer taskHandle);

	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeAdvTrigEdge(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6882</i>
	 */
	// int DAQmxGetDigEdgeAdvTrigEdge(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDigEdgeAdvTrigEdge(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6883</i>
	 */
	// int DAQmxSetDigEdgeAdvTrigEdge(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigEdgeAdvTrigEdge(TaskHandle)</code><br>
	 * <i>native declaration : line 6884</i>
	 */
	// int DAQmxResetDigEdgeAdvTrigEdge(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_DigEdge_AdvTrig_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeAdvTrigDigFltrEnable(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6886</i>
	 */
	// int DAQmxGetDigEdgeAdvTrigDigFltrEnable(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetDigEdgeAdvTrigDigFltrEnable(TaskHandle, bool32)</code><br>
	 * <i>native declaration : line 6887</i>
	 */
	// int DAQmxSetDigEdgeAdvTrigDigFltrEnable(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigEdgeAdvTrigDigFltrEnable(TaskHandle)</code><br>
	 * <i>native declaration : line 6888</i>
	 */
	// int DAQmxResetDigEdgeAdvTrigDigFltrEnable(Pointer taskHandle);

	/**
	 * Uses value set TriggerType9<br>
	 * Original signature : <code>int32 DAQmxGetHshkTrigType(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6891</i>
	 */
	// int DAQmxGetHshkTrigType(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetHshkTrigType(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6892</i>
	 */
	// int DAQmxSetHshkTrigType(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetHshkTrigType(TaskHandle)</code><br>
	 * <i>native declaration : line 6893</i>
	 */
	// int DAQmxResetHshkTrigType(Pointer taskHandle);

	/**
	 * *** Set/Get functions for DAQmx_Interlocked_HshkTrig_Src ***<br>
	 * Original signature : <code>int32 DAQmxGetInterlockedHshkTrigSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6895</i>
	 */
	// int DAQmxGetInterlockedHshkTrigSrc(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);

	/**
	 * Original signature : <code>int32 DAQmxSetInterlockedHshkTrigSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6896</i>
	 */
	// int DAQmxSetInterlockedHshkTrigSrc(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetInterlockedHshkTrigSrc(TaskHandle)</code><br>
	 * <i>native declaration : line 6897</i>
	 */
	// int DAQmxResetInterlockedHshkTrigSrc(Pointer taskHandle);

	/**
	 * Uses value set Level1<br>
	 * Original signature : <code>int32 DAQmxGetInterlockedHshkTrigAssertedLvl(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6900</i>
	 */
	// int DAQmxGetInterlockedHshkTrigAssertedLvl(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetInterlockedHshkTrigAssertedLvl(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6901</i>
	 */
	// int DAQmxSetInterlockedHshkTrigAssertedLvl(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetInterlockedHshkTrigAssertedLvl(TaskHandle)</code><br>
	 * <i>native declaration : line 6902</i>
	 */
	// int DAQmxResetInterlockedHshkTrigAssertedLvl(Pointer taskHandle);

	/**
	 * Uses value set TriggerType6<br>
	 * Original signature : <code>int32 DAQmxGetPauseTrigType(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6905</i>
	 */
	// int DAQmxGetPauseTrigType(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetPauseTrigType(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6906</i>
	 */
	// int DAQmxSetPauseTrigType(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetPauseTrigType(TaskHandle)</code><br>
	 * <i>native declaration : line 6907</i>
	 */
	// int DAQmxResetPauseTrigType(Pointer taskHandle);

	/**
	 * *** Set/Get functions for DAQmx_PauseTrig_Term ***<br>
	 * Original signature : <code>int32 DAQmxGetPauseTrigTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6909</i>
	 */
	// int DAQmxGetPauseTrigTerm(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);

	/**
	 * *** Set/Get functions for DAQmx_AnlgLvl_PauseTrig_Src ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgLvlPauseTrigSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6911</i>
	 */
	// int DAQmxGetAnlgLvlPauseTrigSrc(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);

	/**
	 * Original signature : <code>int32 DAQmxSetAnlgLvlPauseTrigSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6912</i>
	 */
	// int DAQmxSetAnlgLvlPauseTrigSrc(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgLvlPauseTrigSrc(TaskHandle)</code><br>
	 * <i>native declaration : line 6913</i>
	 */
	// int DAQmxResetAnlgLvlPauseTrigSrc(Pointer taskHandle);

	/**
	 * Uses value set ActiveLevel<br>
	 * Original signature : <code>int32 DAQmxGetAnlgLvlPauseTrigWhen(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6916</i>
	 */
	// int DAQmxGetAnlgLvlPauseTrigWhen(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgLvlPauseTrigWhen(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6917</i>
	 */
	// int DAQmxSetAnlgLvlPauseTrigWhen(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgLvlPauseTrigWhen(TaskHandle)</code><br>
	 * <i>native declaration : line 6918</i>
	 */
	// int DAQmxResetAnlgLvlPauseTrigWhen(Pointer taskHandle);

	/**
	 * *** Set/Get functions for DAQmx_AnlgLvl_PauseTrig_Lvl ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgLvlPauseTrigLvl(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6920</i>
	 */
	// int DAQmxGetAnlgLvlPauseTrigLvl(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgLvlPauseTrigLvl(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6921</i>
	 */
	// int DAQmxSetAnlgLvlPauseTrigLvl(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgLvlPauseTrigLvl(TaskHandle)</code><br>
	 * <i>native declaration : line 6922</i>
	 */
	// int DAQmxResetAnlgLvlPauseTrigLvl(Pointer taskHandle);

	/**
	 * *** Set/Get functions for DAQmx_AnlgLvl_PauseTrig_Hyst ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgLvlPauseTrigHyst(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6924</i>
	 */
	// int DAQmxGetAnlgLvlPauseTrigHyst(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgLvlPauseTrigHyst(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6925</i>
	 */
	// int DAQmxSetAnlgLvlPauseTrigHyst(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgLvlPauseTrigHyst(TaskHandle)</code><br>
	 * <i>native declaration : line 6926</i>
	 */
	// int DAQmxResetAnlgLvlPauseTrigHyst(Pointer taskHandle);

	/**
	 * Uses value set Coupling2<br>
	 * Original signature : <code>int32 DAQmxGetAnlgLvlPauseTrigCoupling(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6929</i>
	 */
	// int DAQmxGetAnlgLvlPauseTrigCoupling(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgLvlPauseTrigCoupling(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6930</i>
	 */
	// int DAQmxSetAnlgLvlPauseTrigCoupling(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgLvlPauseTrigCoupling(TaskHandle)</code><br>
	 * <i>native declaration : line 6931</i>
	 */
	// int DAQmxResetAnlgLvlPauseTrigCoupling(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_AnlgLvl_PauseTrig_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgLvlPauseTrigDigFltrEnable(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6933</i>
	 */
	// int DAQmxGetAnlgLvlPauseTrigDigFltrEnable(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgLvlPauseTrigDigFltrEnable(TaskHandle, bool32)</code><br>
	 * <i>native declaration : line 6934</i>
	 */
	// int DAQmxSetAnlgLvlPauseTrigDigFltrEnable(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgLvlPauseTrigDigFltrEnable(TaskHandle)</code><br>
	 * <i>native declaration : line 6935</i>
	 */
	// int DAQmxResetAnlgLvlPauseTrigDigFltrEnable(Pointer taskHandle);

	/**
	 * *** Set/Get functions for DAQmx_AnlgLvl_PauseTrig_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgLvlPauseTrigDigFltrMinPulseWidth(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6937</i>
	 */
	// int DAQmxGetAnlgLvlPauseTrigDigFltrMinPulseWidth(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgLvlPauseTrigDigFltrMinPulseWidth(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6938</i>
	 */
	// int DAQmxSetAnlgLvlPauseTrigDigFltrMinPulseWidth(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgLvlPauseTrigDigFltrMinPulseWidth(TaskHandle)</code><br>
	 * <i>native declaration : line 6939</i>
	 */
	// int DAQmxResetAnlgLvlPauseTrigDigFltrMinPulseWidth(Pointer taskHandle);

	/**
	 * *** Set/Get functions for DAQmx_AnlgLvl_PauseTrig_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgLvlPauseTrigDigFltrTimebaseSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6941</i>
	 */
	// int DAQmxGetAnlgLvlPauseTrigDigFltrTimebaseSrc(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);

	/**
	 * Original signature : <code>int32 DAQmxSetAnlgLvlPauseTrigDigFltrTimebaseSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6942</i>
	 */
	// int DAQmxSetAnlgLvlPauseTrigDigFltrTimebaseSrc(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgLvlPauseTrigDigFltrTimebaseSrc(TaskHandle)</code><br>
	 * <i>native declaration : line 6943</i>
	 */
	// int DAQmxResetAnlgLvlPauseTrigDigFltrTimebaseSrc(Pointer taskHandle);

	/**
	 * *** Set/Get functions for DAQmx_AnlgLvl_PauseTrig_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgLvlPauseTrigDigFltrTimebaseRate(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6945</i>
	 */
	// int DAQmxGetAnlgLvlPauseTrigDigFltrTimebaseRate(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgLvlPauseTrigDigFltrTimebaseRate(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6946</i>
	 */
	// int DAQmxSetAnlgLvlPauseTrigDigFltrTimebaseRate(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgLvlPauseTrigDigFltrTimebaseRate(TaskHandle)</code><br>
	 * <i>native declaration : line 6947</i>
	 */
	// int DAQmxResetAnlgLvlPauseTrigDigFltrTimebaseRate(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_AnlgLvl_PauseTrig_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgLvlPauseTrigDigSyncEnable(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6949</i>
	 */
	// int DAQmxGetAnlgLvlPauseTrigDigSyncEnable(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgLvlPauseTrigDigSyncEnable(TaskHandle, bool32)</code><br>
	 * <i>native declaration : line 6950</i>
	 */
	// int DAQmxSetAnlgLvlPauseTrigDigSyncEnable(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgLvlPauseTrigDigSyncEnable(TaskHandle)</code><br>
	 * <i>native declaration : line 6951</i>
	 */
	// int DAQmxResetAnlgLvlPauseTrigDigSyncEnable(Pointer taskHandle);

	/**
	 * *** Set/Get functions for DAQmx_AnlgWin_PauseTrig_Src ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinPauseTrigSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6953</i>
	 */
	// int DAQmxGetAnlgWinPauseTrigSrc(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);

	/**
	 * Original signature : <code>int32 DAQmxSetAnlgWinPauseTrigSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6954</i>
	 */
	// int DAQmxSetAnlgWinPauseTrigSrc(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgWinPauseTrigSrc(TaskHandle)</code><br>
	 * <i>native declaration : line 6955</i>
	 */
	// int DAQmxResetAnlgWinPauseTrigSrc(Pointer taskHandle);

	/**
	 * Uses value set WindowTriggerCondition2<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinPauseTrigWhen(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6958</i>
	 */
	// int DAQmxGetAnlgWinPauseTrigWhen(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgWinPauseTrigWhen(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6959</i>
	 */
	// int DAQmxSetAnlgWinPauseTrigWhen(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgWinPauseTrigWhen(TaskHandle)</code><br>
	 * <i>native declaration : line 6960</i>
	 */
	// int DAQmxResetAnlgWinPauseTrigWhen(Pointer taskHandle);

	/**
	 * *** Set/Get functions for DAQmx_AnlgWin_PauseTrig_Top ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinPauseTrigTop(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6962</i>
	 */
	// int DAQmxGetAnlgWinPauseTrigTop(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgWinPauseTrigTop(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6963</i>
	 */
	// int DAQmxSetAnlgWinPauseTrigTop(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgWinPauseTrigTop(TaskHandle)</code><br>
	 * <i>native declaration : line 6964</i>
	 */
	// int DAQmxResetAnlgWinPauseTrigTop(Pointer taskHandle);

	/**
	 * *** Set/Get functions for DAQmx_AnlgWin_PauseTrig_Btm ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinPauseTrigBtm(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6966</i>
	 */
	// int DAQmxGetAnlgWinPauseTrigBtm(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgWinPauseTrigBtm(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6967</i>
	 */
	// int DAQmxSetAnlgWinPauseTrigBtm(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgWinPauseTrigBtm(TaskHandle)</code><br>
	 * <i>native declaration : line 6968</i>
	 */
	// int DAQmxResetAnlgWinPauseTrigBtm(Pointer taskHandle);

	/**
	 * Uses value set Coupling2<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinPauseTrigCoupling(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 6971</i>
	 */
	// int DAQmxGetAnlgWinPauseTrigCoupling(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgWinPauseTrigCoupling(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 6972</i>
	 */
	// int DAQmxSetAnlgWinPauseTrigCoupling(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgWinPauseTrigCoupling(TaskHandle)</code><br>
	 * <i>native declaration : line 6973</i>
	 */
	// int DAQmxResetAnlgWinPauseTrigCoupling(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_AnlgWin_PauseTrig_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinPauseTrigDigFltrEnable(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6975</i>
	 */
	// int DAQmxGetAnlgWinPauseTrigDigFltrEnable(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgWinPauseTrigDigFltrEnable(TaskHandle, bool32)</code><br>
	 * <i>native declaration : line 6976</i>
	 */
	// int DAQmxSetAnlgWinPauseTrigDigFltrEnable(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgWinPauseTrigDigFltrEnable(TaskHandle)</code><br>
	 * <i>native declaration : line 6977</i>
	 */
	// int DAQmxResetAnlgWinPauseTrigDigFltrEnable(Pointer taskHandle);

	/**
	 * *** Set/Get functions for DAQmx_AnlgWin_PauseTrig_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinPauseTrigDigFltrMinPulseWidth(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6979</i>
	 */
	// int DAQmxGetAnlgWinPauseTrigDigFltrMinPulseWidth(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgWinPauseTrigDigFltrMinPulseWidth(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6980</i>
	 */
	// int DAQmxSetAnlgWinPauseTrigDigFltrMinPulseWidth(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgWinPauseTrigDigFltrMinPulseWidth(TaskHandle)</code><br>
	 * <i>native declaration : line 6981</i>
	 */
	// int DAQmxResetAnlgWinPauseTrigDigFltrMinPulseWidth(Pointer taskHandle);

	/**
	 * *** Set/Get functions for DAQmx_AnlgWin_PauseTrig_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinPauseTrigDigFltrTimebaseSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6983</i>
	 */
	// int DAQmxGetAnlgWinPauseTrigDigFltrTimebaseSrc(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);

	/**
	 * Original signature : <code>int32 DAQmxSetAnlgWinPauseTrigDigFltrTimebaseSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6984</i>
	 */
	// int DAQmxSetAnlgWinPauseTrigDigFltrTimebaseSrc(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgWinPauseTrigDigFltrTimebaseSrc(TaskHandle)</code><br>
	 * <i>native declaration : line 6985</i>
	 */
	// int DAQmxResetAnlgWinPauseTrigDigFltrTimebaseSrc(Pointer taskHandle);

	/**
	 * *** Set/Get functions for DAQmx_AnlgWin_PauseTrig_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinPauseTrigDigFltrTimebaseRate(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 6987</i>
	 */
	// int DAQmxGetAnlgWinPauseTrigDigFltrTimebaseRate(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgWinPauseTrigDigFltrTimebaseRate(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 6988</i>
	 */
	// int DAQmxSetAnlgWinPauseTrigDigFltrTimebaseRate(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgWinPauseTrigDigFltrTimebaseRate(TaskHandle)</code><br>
	 * <i>native declaration : line 6989</i>
	 */
	// int DAQmxResetAnlgWinPauseTrigDigFltrTimebaseRate(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_AnlgWin_PauseTrig_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetAnlgWinPauseTrigDigSyncEnable(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 6991</i>
	 */
	// int DAQmxGetAnlgWinPauseTrigDigSyncEnable(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetAnlgWinPauseTrigDigSyncEnable(TaskHandle, bool32)</code><br>
	 * <i>native declaration : line 6992</i>
	 */
	// int DAQmxSetAnlgWinPauseTrigDigSyncEnable(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetAnlgWinPauseTrigDigSyncEnable(TaskHandle)</code><br>
	 * <i>native declaration : line 6993</i>
	 */
	// int DAQmxResetAnlgWinPauseTrigDigSyncEnable(Pointer taskHandle);

	/**
	 * *** Set/Get functions for DAQmx_DigLvl_PauseTrig_Src ***<br>
	 * Original signature : <code>int32 DAQmxGetDigLvlPauseTrigSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 6995</i>
	 */
	// int DAQmxGetDigLvlPauseTrigSrc(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetDigLvlPauseTrigSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 6996</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetDigLvlPauseTrigSrc(com.sun.jna.Pointer, java.lang.String)} and {@link #DAQmxSetDigLvlPauseTrigSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */

	/**
	 * Original signature : <code>int32 DAQmxResetDigLvlPauseTrigSrc(TaskHandle)</code><br>
	 * <i>native declaration : line 6997</i>
	 */
	// int DAQmxResetDigLvlPauseTrigSrc(Pointer taskHandle);

	/**
	 * Uses value set Level1<br>
	 * Original signature : <code>int32 DAQmxGetDigLvlPauseTrigWhen(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 7000</i>
	 */
	// int DAQmxGetDigLvlPauseTrigWhen(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDigLvlPauseTrigWhen(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 7001</i>
	 */
	// int DAQmxSetDigLvlPauseTrigWhen(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigLvlPauseTrigWhen(TaskHandle)</code><br>
	 * <i>native declaration : line 7002</i>
	 */
	// int DAQmxResetDigLvlPauseTrigWhen(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_DigLvl_PauseTrig_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetDigLvlPauseTrigDigFltrEnable(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 7004</i>
	 */
	// int DAQmxGetDigLvlPauseTrigDigFltrEnable(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetDigLvlPauseTrigDigFltrEnable(TaskHandle, bool32)</code><br>
	 * <i>native declaration : line 7005</i>
	 */
	// int DAQmxSetDigLvlPauseTrigDigFltrEnable(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigLvlPauseTrigDigFltrEnable(TaskHandle)</code><br>
	 * <i>native declaration : line 7006</i>
	 */
	// int DAQmxResetDigLvlPauseTrigDigFltrEnable(Pointer taskHandle);

	/**
	 * *** Set/Get functions for DAQmx_DigLvl_PauseTrig_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetDigLvlPauseTrigDigFltrMinPulseWidth(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 7008</i>
	 */
	// int DAQmxGetDigLvlPauseTrigDigFltrMinPulseWidth(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDigLvlPauseTrigDigFltrMinPulseWidth(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 7009</i>
	 */
	// int DAQmxSetDigLvlPauseTrigDigFltrMinPulseWidth(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigLvlPauseTrigDigFltrMinPulseWidth(TaskHandle)</code><br>
	 * <i>native declaration : line 7010</i>
	 */
	// int DAQmxResetDigLvlPauseTrigDigFltrMinPulseWidth(Pointer taskHandle);

	/**
	 * *** Set/Get functions for DAQmx_DigLvl_PauseTrig_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetDigLvlPauseTrigDigFltrTimebaseSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 7012</i>
	 */
	// int DAQmxGetDigLvlPauseTrigDigFltrTimebaseSrc(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);

	/**
	 * Original signature : <code>int32 DAQmxSetDigLvlPauseTrigDigFltrTimebaseSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 7013</i>
	 */
	// int DAQmxSetDigLvlPauseTrigDigFltrTimebaseSrc(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigLvlPauseTrigDigFltrTimebaseSrc(TaskHandle)</code><br>
	 * <i>native declaration : line 7014</i>
	 */
	// int DAQmxResetDigLvlPauseTrigDigFltrTimebaseSrc(Pointer taskHandle);

	/**
	 * *** Set/Get functions for DAQmx_DigLvl_PauseTrig_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetDigLvlPauseTrigDigFltrTimebaseRate(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 7016</i>
	 */
	// int DAQmxGetDigLvlPauseTrigDigFltrTimebaseRate(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDigLvlPauseTrigDigFltrTimebaseRate(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 7017</i>
	 */
	// int DAQmxSetDigLvlPauseTrigDigFltrTimebaseRate(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigLvlPauseTrigDigFltrTimebaseRate(TaskHandle)</code><br>
	 * <i>native declaration : line 7018</i>
	 */
	// int DAQmxResetDigLvlPauseTrigDigFltrTimebaseRate(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_DigLvl_PauseTrig_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetDigLvlPauseTrigDigSyncEnable(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 7020</i>
	 */
	// int DAQmxGetDigLvlPauseTrigDigSyncEnable(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetDigLvlPauseTrigDigSyncEnable(TaskHandle, bool32)</code><br>
	 * <i>native declaration : line 7021</i>
	 */
	// int DAQmxSetDigLvlPauseTrigDigSyncEnable(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigLvlPauseTrigDigSyncEnable(TaskHandle)</code><br>
	 * <i>native declaration : line 7022</i>
	 */
	// int DAQmxResetDigLvlPauseTrigDigSyncEnable(Pointer taskHandle);

	/**
	 * *** Set/Get functions for DAQmx_DigPattern_PauseTrig_Src ***<br>
	 * Original signature : <code>int32 DAQmxGetDigPatternPauseTrigSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 7024</i>
	 */
	// int DAQmxGetDigPatternPauseTrigSrc(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);

	/**
	 * Original signature : <code>int32 DAQmxSetDigPatternPauseTrigSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 7025</i>
	 */
	// int DAQmxSetDigPatternPauseTrigSrc(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigPatternPauseTrigSrc(TaskHandle)</code><br>
	 * <i>native declaration : line 7026</i>
	 */
	// int DAQmxResetDigPatternPauseTrigSrc(Pointer taskHandle);

	/**
	 * *** Set/Get functions for DAQmx_DigPattern_PauseTrig_Pattern ***<br>
	 * Original signature : <code>int32 DAQmxGetDigPatternPauseTrigPattern(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 7028</i>
	 */
	// int DAQmxGetDigPatternPauseTrigPattern(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);

	/**
	 * Original signature : <code>int32 DAQmxSetDigPatternPauseTrigPattern(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 7029</i>
	 */
	// int DAQmxSetDigPatternPauseTrigPattern(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigPatternPauseTrigPattern(TaskHandle)</code><br>
	 * <i>native declaration : line 7030</i>
	 */
	// int DAQmxResetDigPatternPauseTrigPattern(Pointer taskHandle);

	/**
	 * Uses value set DigitalPatternCondition1<br>
	 * Original signature : <code>int32 DAQmxGetDigPatternPauseTrigWhen(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 7033</i>
	 */
	// int DAQmxGetDigPatternPauseTrigWhen(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDigPatternPauseTrigWhen(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 7034</i>
	 */
	// int DAQmxSetDigPatternPauseTrigWhen(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigPatternPauseTrigWhen(TaskHandle)</code><br>
	 * <i>native declaration : line 7035</i>
	 */
	// int DAQmxResetDigPatternPauseTrigWhen(Pointer taskHandle);
	/**
	 * Uses value set TriggerType4<br>
	 * Original signature : <code>int32 DAQmxGetArmStartTrigType(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 7038</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetArmStartTrigType(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #DAQmxGetArmStartTrigType(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetArmStartTrigType(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set TriggerType4<br>
	 * Original signature : <code>int32 DAQmxGetArmStartTrigType(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 7038</i>
	 */
	// int DAQmxGetArmStartTrigType(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetArmStartTrigType(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 7039</i>
	 */
	// int DAQmxSetArmStartTrigType(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetArmStartTrigType(TaskHandle)</code><br>
	 * <i>native declaration : line 7040</i>
	 */
	// int DAQmxResetArmStartTrigType(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_ArmStart_Term ***<br>
	 * Original signature : <code>int32 DAQmxGetArmStartTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 7042</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetArmStartTerm(com.sun.jna.Pointer, java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetArmStartTerm(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetArmStartTerm(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_ArmStart_Term ***<br>
	 * Original signature : <code>int32 DAQmxGetArmStartTerm(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 7042</i>
	 */
	// int DAQmxGetArmStartTerm(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_DigEdge_ArmStartTrig_Src ***<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeArmStartTrigSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 7044</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDigEdgeArmStartTrigSrc(com.sun.jna.Pointer, java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetDigEdgeArmStartTrigSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetDigEdgeArmStartTrigSrc(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_DigEdge_ArmStartTrig_Src ***<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeArmStartTrigSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 7044</i>
	 */
	// int DAQmxGetDigEdgeArmStartTrigSrc(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetDigEdgeArmStartTrigSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 7045</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetDigEdgeArmStartTrigSrc(com.sun.jna.Pointer, java.lang.String)} and {@link #DAQmxSetDigEdgeArmStartTrigSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetDigEdgeArmStartTrigSrc(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDigEdgeArmStartTrigSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 7045</i>
	 */
	// int DAQmxSetDigEdgeArmStartTrigSrc(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigEdgeArmStartTrigSrc(TaskHandle)</code><br>
	 * <i>native declaration : line 7046</i>
	 */
	// int DAQmxResetDigEdgeArmStartTrigSrc(Pointer taskHandle);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeArmStartTrigEdge(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 7049</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDigEdgeArmStartTrigEdge(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #DAQmxGetDigEdgeArmStartTrigEdge(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDigEdgeArmStartTrigEdge(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeArmStartTrigEdge(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 7049</i>
	 */
	// int DAQmxGetDigEdgeArmStartTrigEdge(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDigEdgeArmStartTrigEdge(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 7050</i>
	 */
	// int DAQmxSetDigEdgeArmStartTrigEdge(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigEdgeArmStartTrigEdge(TaskHandle)</code><br>
	 * <i>native declaration : line 7051</i>
	 */
	// int DAQmxResetDigEdgeArmStartTrigEdge(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_DigEdge_ArmStartTrig_DigFltr_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeArmStartTrigDigFltrEnable(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 7053</i>
	 */
	// int DAQmxGetDigEdgeArmStartTrigDigFltrEnable(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetDigEdgeArmStartTrigDigFltrEnable(TaskHandle, bool32)</code><br>
	 * <i>native declaration : line 7054</i>
	 */
	// int DAQmxSetDigEdgeArmStartTrigDigFltrEnable(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigEdgeArmStartTrigDigFltrEnable(TaskHandle)</code><br>
	 * <i>native declaration : line 7055</i>
	 */
	// int DAQmxResetDigEdgeArmStartTrigDigFltrEnable(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_DigEdge_ArmStartTrig_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeArmStartTrigDigFltrMinPulseWidth(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 7057</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDigEdgeArmStartTrigDigFltrMinPulseWidth(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #DAQmxGetDigEdgeArmStartTrigDigFltrMinPulseWidth(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDigEdgeArmStartTrigDigFltrMinPulseWidth(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_DigEdge_ArmStartTrig_DigFltr_MinPulseWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeArmStartTrigDigFltrMinPulseWidth(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 7057</i>
	 */
	// int DAQmxGetDigEdgeArmStartTrigDigFltrMinPulseWidth(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDigEdgeArmStartTrigDigFltrMinPulseWidth(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 7058</i>
	 */
	// int DAQmxSetDigEdgeArmStartTrigDigFltrMinPulseWidth(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigEdgeArmStartTrigDigFltrMinPulseWidth(TaskHandle)</code><br>
	 * <i>native declaration : line 7059</i>
	 */
	// int DAQmxResetDigEdgeArmStartTrigDigFltrMinPulseWidth(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_DigEdge_ArmStartTrig_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeArmStartTrigDigFltrTimebaseSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 7061</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDigEdgeArmStartTrigDigFltrTimebaseSrc(com.sun.jna.Pointer, java.nio.ByteBuffer, com.sun.jna.NativeLong)} and {@link #DAQmxGetDigEdgeArmStartTrigDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer, com.sun.jna.NativeLong)} instead
	 */
	//Deprecated 
	// int DAQmxGetDigEdgeArmStartTrigDigFltrTimebaseSrc(Pointer taskHandle, Pointer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_DigEdge_ArmStartTrig_DigFltr_TimebaseSrc ***<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeArmStartTrigDigFltrTimebaseSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 7061</i>
	 */
	// int DAQmxGetDigEdgeArmStartTrigDigFltrTimebaseSrc(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);
	/**
	 * Original signature : <code>int32 DAQmxSetDigEdgeArmStartTrigDigFltrTimebaseSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 7062</i><br>
	 * @deprecated use the safer methods {@link #DAQmxSetDigEdgeArmStartTrigDigFltrTimebaseSrc(com.sun.jna.Pointer, java.lang.String)} and {@link #DAQmxSetDigEdgeArmStartTrigDigFltrTimebaseSrc(com.sun.jna.Pointer, com.sun.jna.Pointer)} instead
	 */
	//Deprecated 
	// int DAQmxSetDigEdgeArmStartTrigDigFltrTimebaseSrc(Pointer taskHandle, Pointer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDigEdgeArmStartTrigDigFltrTimebaseSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 7062</i>
	 */
	// int DAQmxSetDigEdgeArmStartTrigDigFltrTimebaseSrc(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigEdgeArmStartTrigDigFltrTimebaseSrc(TaskHandle)</code><br>
	 * <i>native declaration : line 7063</i>
	 */
	// int DAQmxResetDigEdgeArmStartTrigDigFltrTimebaseSrc(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_DigEdge_ArmStartTrig_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeArmStartTrigDigFltrTimebaseRate(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 7065</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetDigEdgeArmStartTrigDigFltrTimebaseRate(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #DAQmxGetDigEdgeArmStartTrigDigFltrTimebaseRate(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetDigEdgeArmStartTrigDigFltrTimebaseRate(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_DigEdge_ArmStartTrig_DigFltr_TimebaseRate ***<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeArmStartTrigDigFltrTimebaseRate(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 7065</i>
	 */
	// int DAQmxGetDigEdgeArmStartTrigDigFltrTimebaseRate(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDigEdgeArmStartTrigDigFltrTimebaseRate(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 7066</i>
	 */
	// int DAQmxSetDigEdgeArmStartTrigDigFltrTimebaseRate(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigEdgeArmStartTrigDigFltrTimebaseRate(TaskHandle)</code><br>
	 * <i>native declaration : line 7067</i>
	 */
	// int DAQmxResetDigEdgeArmStartTrigDigFltrTimebaseRate(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_DigEdge_ArmStartTrig_DigSync_Enable ***<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeArmStartTrigDigSyncEnable(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 7069</i>
	 */
	// int DAQmxGetDigEdgeArmStartTrigDigSyncEnable(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetDigEdgeArmStartTrigDigSyncEnable(TaskHandle, bool32)</code><br>
	 * <i>native declaration : line 7070</i>
	 */
	// int DAQmxSetDigEdgeArmStartTrigDigSyncEnable(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigEdgeArmStartTrigDigSyncEnable(TaskHandle)</code><br>
	 * <i>native declaration : line 7071</i>
	 */
	// int DAQmxResetDigEdgeArmStartTrigDigSyncEnable(Pointer taskHandle);
	/**
	 * Uses value set SyncType<br>
	 * Original signature : <code>int32 DAQmxGetTriggerSyncType(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 7074</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetTriggerSyncType(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #DAQmxGetTriggerSyncType(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetTriggerSyncType(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set SyncType<br>
	 * Original signature : <code>int32 DAQmxGetTriggerSyncType(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 7074</i>
	 */
	// int DAQmxGetTriggerSyncType(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetTriggerSyncType(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 7075</i>
	 */
	// int DAQmxSetTriggerSyncType(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetTriggerSyncType(TaskHandle)</code><br>
	 * <i>native declaration : line 7076</i>
	 */
	// int DAQmxResetTriggerSyncType(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Watchdog_Timeout ***<br>
	 * Original signature : <code>int32 DAQmxGetWatchdogTimeout(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 7080</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetWatchdogTimeout(com.sun.jna.Pointer, java.nio.DoubleBuffer)} and {@link #DAQmxGetWatchdogTimeout(com.sun.jna.Pointer, com.sun.jna.ptr.DoubleByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetWatchdogTimeout(Pointer taskHandle, DoubleByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Watchdog_Timeout ***<br>
	 * Original signature : <code>int32 DAQmxGetWatchdogTimeout(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 7080</i>
	 */
	// int DAQmxGetWatchdogTimeout(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetWatchdogTimeout(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 7081</i>
	 */
	// int DAQmxSetWatchdogTimeout(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetWatchdogTimeout(TaskHandle)</code><br>
	 * <i>native declaration : line 7082</i>
	 */
	// int DAQmxResetWatchdogTimeout(Pointer taskHandle);
	/**
	 * Uses value set TriggerType4<br>
	 * Original signature : <code>int32 DAQmxGetWatchdogExpirTrigType(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 7085</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetWatchdogExpirTrigType(com.sun.jna.Pointer, java.nio.IntBuffer)} and {@link #DAQmxGetWatchdogExpirTrigType(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetWatchdogExpirTrigType(Pointer taskHandle, IntByReference data);
	/**
	 * Uses value set TriggerType4<br>
	 * Original signature : <code>int32 DAQmxGetWatchdogExpirTrigType(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 7085</i>
	 */
	// int DAQmxGetWatchdogExpirTrigType(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetWatchdogExpirTrigType(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 7086</i>
	 */
	// int DAQmxSetWatchdogExpirTrigType(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetWatchdogExpirTrigType(TaskHandle)</code><br>
	 * <i>native declaration : line 7087</i>
	 */
	// int DAQmxResetWatchdogExpirTrigType(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_WatchdogExpirTrig_TrigOnNetworkConnLoss ***<br>
	 * Original signature : <code>int32 DAQmxGetWatchdogExpirTrigTrigOnNetworkConnLoss(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 7089</i>
	 */
	// int DAQmxGetWatchdogExpirTrigTrigOnNetworkConnLoss(Pointer taskHandle, NativeLongByReference data);
	/**
	 * Original signature : <code>int32 DAQmxSetWatchdogExpirTrigTrigOnNetworkConnLoss(TaskHandle, bool32)</code><br>
	 * <i>native declaration : line 7090</i>
	 */
	// int DAQmxSetWatchdogExpirTrigTrigOnNetworkConnLoss(Pointer taskHandle, NativeLong data);
	/**
	 * Original signature : <code>int32 DAQmxResetWatchdogExpirTrigTrigOnNetworkConnLoss(TaskHandle)</code><br>
	 * <i>native declaration : line 7091</i>
	 */
	// int DAQmxResetWatchdogExpirTrigTrigOnNetworkConnLoss(Pointer taskHandle);

	/**
	 * *** Set/Get functions for DAQmx_DigEdge_WatchdogExpirTrig_Src ***<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeWatchdogExpirTrigSrc(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 7093</i>
	 */
	// int DAQmxGetDigEdgeWatchdogExpirTrigSrc(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);

	/**
	 * Original signature : <code>int32 DAQmxSetDigEdgeWatchdogExpirTrigSrc(TaskHandle, const char*)</code><br>
	 * <i>native declaration : line 7094</i>
	 */
	// int DAQmxSetDigEdgeWatchdogExpirTrigSrc(Pointer taskHandle, String data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigEdgeWatchdogExpirTrigSrc(TaskHandle)</code><br>
	 * <i>native declaration : line 7095</i>
	 */
	// int DAQmxResetDigEdgeWatchdogExpirTrigSrc(Pointer taskHandle);

	/**
	 * Uses value set Edge1<br>
	 * Original signature : <code>int32 DAQmxGetDigEdgeWatchdogExpirTrigEdge(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 7098</i>
	 */
	// int DAQmxGetDigEdgeWatchdogExpirTrigEdge(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetDigEdgeWatchdogExpirTrigEdge(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 7099</i>
	 */
	// int DAQmxSetDigEdgeWatchdogExpirTrigEdge(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetDigEdgeWatchdogExpirTrigEdge(TaskHandle)</code><br>
	 * <i>native declaration : line 7100</i>
	 */
	// int DAQmxResetDigEdgeWatchdogExpirTrigEdge(Pointer taskHandle);

	/**
	 * Uses value set DigitalLineState<br>
	 * Original signature : <code>int32 DAQmxGetWatchdogDOExpirState(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 7103</i>
	 */
	// int DAQmxGetWatchdogDOExpirState(Pointer taskHandle, byte lines[], IntBuffer data);

	/**
	 * Original signature : <code>int32 DAQmxSetWatchdogDOExpirState(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 7104</i>
	 */
	// int DAQmxSetWatchdogDOExpirState(Pointer taskHandle, byte lines[], int data);

	/**
	 * Original signature : <code>int32 DAQmxResetWatchdogDOExpirState(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 7105</i>
	 */
	// int DAQmxResetWatchdogDOExpirState(Pointer taskHandle, byte lines[]);

	/**
	 * Uses value set WatchdogAOExpirState<br>
	 * Original signature : <code>int32 DAQmxGetWatchdogAOOutputType(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 7108</i>
	 */
	// int DAQmxGetWatchdogAOOutputType(Pointer taskHandle, byte lines[], IntBuffer data);

	/**
	 * Original signature : <code>int32 DAQmxSetWatchdogAOOutputType(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 7109</i>
	 */
	// int DAQmxSetWatchdogAOOutputType(Pointer taskHandle, byte lines[], int data);

	/**
	 * Original signature : <code>int32 DAQmxResetWatchdogAOOutputType(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 7110</i>
	 */
	// int DAQmxResetWatchdogAOOutputType(Pointer taskHandle, byte lines[]);

	/**
	 * *** Set/Get functions for DAQmx_Watchdog_AO_ExpirState ***<br>
	 * Original signature : <code>int32 DAQmxGetWatchdogAOExpirState(TaskHandle, const char[], float64*)</code><br>
	 * <i>native declaration : line 7112</i>
	 */
	// int DAQmxGetWatchdogAOExpirState(Pointer taskHandle, byte lines[], DoubleBuffer data);

	/**
	 * Original signature : <code>int32 DAQmxSetWatchdogAOExpirState(TaskHandle, const char[], float64)</code><br>
	 * <i>native declaration : line 7113</i>
	 */
	// int DAQmxSetWatchdogAOExpirState(Pointer taskHandle, byte lines[], double data);

	/**
	 * Original signature : <code>int32 DAQmxResetWatchdogAOExpirState(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 7114</i>
	 */
	// int DAQmxResetWatchdogAOExpirState(Pointer taskHandle, byte lines[]);

	/**
	 * Uses value set WatchdogCOExpirState<br>
	 * Original signature : <code>int32 DAQmxGetWatchdogCOExpirState(TaskHandle, const char[], int32*)</code><br>
	 * <i>native declaration : line 7117</i>
	 */
	// int DAQmxGetWatchdogCOExpirState(Pointer taskHandle, byte lines[], IntBuffer data);

	/**
	 * Original signature : <code>int32 DAQmxSetWatchdogCOExpirState(TaskHandle, const char[], int32)</code><br>
	 * <i>native declaration : line 7118</i>
	 */
	// int DAQmxSetWatchdogCOExpirState(Pointer taskHandle, byte lines[], int data);

	/**
	 * Original signature : <code>int32 DAQmxResetWatchdogCOExpirState(TaskHandle, const char[])</code><br>
	 * <i>native declaration : line 7119</i>
	 */
	// int DAQmxResetWatchdogCOExpirState(Pointer taskHandle, byte lines[]);
	/**
	 * *** Set/Get functions for DAQmx_Watchdog_HasExpired ***<br>
	 * Original signature : <code>int32 DAQmxGetWatchdogHasExpired(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 7121</i>
	 */
	// int DAQmxGetWatchdogHasExpired(Pointer taskHandle, NativeLongByReference data);

	/**
	 * Uses value set WriteRelativeTo<br>
	 * Original signature : <code>int32 DAQmxGetWriteRelativeTo(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 7126</i>
	 */
	// int DAQmxGetWriteRelativeTo(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetWriteRelativeTo(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 7127</i>
	 */
	// int DAQmxSetWriteRelativeTo(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetWriteRelativeTo(TaskHandle)</code><br>
	 * <i>native declaration : line 7128</i>
	 */
	// int DAQmxResetWriteRelativeTo(Pointer taskHandle);

	/**
	 * *** Set/Get functions for DAQmx_Write_Offset ***<br>
	 * Original signature : <code>int32 DAQmxGetWriteOffset(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 7130</i>
	 */
	// int DAQmxGetWriteOffset(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetWriteOffset(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 7131</i>
	 */
	// int DAQmxSetWriteOffset(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetWriteOffset(TaskHandle)</code><br>
	 * <i>native declaration : line 7132</i>
	 */
	// int DAQmxResetWriteOffset(Pointer taskHandle);

	/**
	 * Uses value set RegenerationMode1<br>
	 * Original signature : <code>int32 DAQmxGetWriteRegenMode(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 7135</i>
	 */
	// int DAQmxGetWriteRegenMode(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetWriteRegenMode(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 7136</i>
	 */
	// int DAQmxSetWriteRegenMode(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetWriteRegenMode(TaskHandle)</code><br>
	 * <i>native declaration : line 7137</i>
	 */
	// int DAQmxResetWriteRegenMode(Pointer taskHandle);

	/**
	 * *** Set/Get functions for DAQmx_Write_CurrWritePos ***<br>
	 * Original signature : <code>int32 DAQmxGetWriteCurrWritePos(TaskHandle, uInt64*)</code><br>
	 * <i>native declaration : line 7139</i>
	 */
	// int DAQmxGetWriteCurrWritePos(Pointer taskHandle, LongBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_Write_OvercurrentChansExist ***<br>
	 * Original signature : <code>int32 DAQmxGetWriteOvercurrentChansExist(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 7141</i>
	 */
	// int DAQmxGetWriteOvercurrentChansExist(Pointer taskHandle, NativeLongByReference data);

	/**
	 * *** Set/Get functions for DAQmx_Write_OvercurrentChans ***<br>
	 * Original signature : <code>int32 DAQmxGetWriteOvercurrentChans(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 7143</i>
	 */
	// int DAQmxGetWriteOvercurrentChans(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Write_OvertemperatureChansExist ***<br>
	 * Original signature : <code>int32 DAQmxGetWriteOvertemperatureChansExist(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 7145</i>
	 */
	// int DAQmxGetWriteOvertemperatureChansExist(Pointer taskHandle, NativeLongByReference data);

	/**
	 * *** Set/Get functions for DAQmx_Write_OvertemperatureChans ***<br>
	 * Original signature : <code>int32 DAQmxGetWriteOvertemperatureChans(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 7147</i>
	 */
	// int DAQmxGetWriteOvertemperatureChans(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Write_ExternalOvervoltageChansExist ***<br>
	 * Original signature : <code>int32 DAQmxGetWriteExternalOvervoltageChansExist(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 7149</i>
	 */
	// int DAQmxGetWriteExternalOvervoltageChansExist(Pointer taskHandle, NativeLongByReference data);


	/**
	 * *** Set/Get functions for DAQmx_Write_ExternalOvervoltageChans ***<br>
	 * Original signature : <code>int32 DAQmxGetWriteExternalOvervoltageChans(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 7151</i>
	 */
	// int DAQmxGetWriteExternalOvervoltageChans(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Write_OverloadedChansExist ***<br>
	 * Original signature : <code>int32 DAQmxGetWriteOverloadedChansExist(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 7153</i>
	 */
	// int DAQmxGetWriteOverloadedChansExist(Pointer taskHandle, NativeLongByReference data);

	/**
	 * *** Set/Get functions for DAQmx_Write_OverloadedChans ***<br>
	 * Original signature : <code>int32 DAQmxGetWriteOverloadedChans(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 7155</i>
	 */
	// int DAQmxGetWriteOverloadedChans(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Write_OpenCurrentLoopChansExist ***<br>
	 * Original signature : <code>int32 DAQmxGetWriteOpenCurrentLoopChansExist(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 7157</i>
	 */
	// int DAQmxGetWriteOpenCurrentLoopChansExist(Pointer taskHandle, NativeLongByReference data);

	/**
	 * *** Set/Get functions for DAQmx_Write_OpenCurrentLoopChans ***<br>
	 * Original signature : <code>int32 DAQmxGetWriteOpenCurrentLoopChans(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 7159</i>
	 */
	// int DAQmxGetWriteOpenCurrentLoopChans(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Write_PowerSupplyFaultChansExist ***<br>
	 * Original signature : <code>int32 DAQmxGetWritePowerSupplyFaultChansExist(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 7161</i>
	 */
	// int DAQmxGetWritePowerSupplyFaultChansExist(Pointer taskHandle, NativeLongByReference data);

	/**
	 * *** Set/Get functions for DAQmx_Write_PowerSupplyFaultChans ***<br>
	 * Original signature : <code>int32 DAQmxGetWritePowerSupplyFaultChans(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 7163</i>
	 */
	// int DAQmxGetWritePowerSupplyFaultChans(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Write_SpaceAvail ***<br>
	 * Original signature : <code>int32 DAQmxGetWriteSpaceAvail(TaskHandle, uInt32*)</code><br>
	 * <i>native declaration : line 7165</i>
	 */
	// int DAQmxGetWriteSpaceAvail(Pointer taskHandle, NativeLongByReference data);

	/**
	 * *** Set/Get functions for DAQmx_Write_TotalSampPerChanGenerated ***<br>
	 * Original signature : <code>int32 DAQmxGetWriteTotalSampPerChanGenerated(TaskHandle, uInt64*)</code><br>
	 * <i>native declaration : line 7167</i>
	 */
	// int DAQmxGetWriteTotalSampPerChanGenerated(Pointer taskHandle, LongBuffer data);
	/**
	 * *** Set/Get functions for DAQmx_Write_AccessoryInsertionOrRemovalDetected ***<br>
	 * Original signature : <code>int32 DAQmxGetWriteAccessoryInsertionOrRemovalDetected(TaskHandle, bool32*)</code><br>
	 * <i>native declaration : line 7169</i>
	 */
	// int DAQmxGetWriteAccessoryInsertionOrRemovalDetected(Pointer taskHandle, NativeLongByReference data);

	/**
	 * *** Set/Get functions for DAQmx_Write_DevsWithInsertedOrRemovedAccessories ***<br>
	 * Original signature : <code>int32 DAQmxGetWriteDevsWithInsertedOrRemovedAccessories(TaskHandle, char*, uInt32)</code><br>
	 * <i>native declaration : line 7171</i>
	 */
	// int DAQmxGetWriteDevsWithInsertedOrRemovedAccessories(Pointer taskHandle, ByteBuffer data, NativeLong bufferSize);
	/**
	 * *** Set/Get functions for DAQmx_Write_RawDataWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetWriteRawDataWidth(TaskHandle, uInt32*)</code><br>
	 * <i>native declaration : line 7173</i>
	 */
	// int DAQmxGetWriteRawDataWidth(Pointer taskHandle, NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_Write_NumChans ***<br>
	 * Original signature : <code>int32 DAQmxGetWriteNumChans(TaskHandle, uInt32*)</code><br>
	 * <i>native declaration : line 7175</i>
	 */
	// int DAQmxGetWriteNumChans(Pointer taskHandle, NativeLongByReference data);

	/**
	 * Uses value set WaitMode2<br>
	 * Original signature : <code>int32 DAQmxGetWriteWaitMode(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 7178</i>
	 */
	// int DAQmxGetWriteWaitMode(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetWriteWaitMode(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 7179</i>
	 */
	// int DAQmxSetWriteWaitMode(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetWriteWaitMode(TaskHandle)</code><br>
	 * <i>native declaration : line 7180</i>
	 */
	// int DAQmxResetWriteWaitMode(Pointer taskHandle);

	/**
	 * *** Set/Get functions for DAQmx_Write_SleepTime ***<br>
	 * Original signature : <code>int32 DAQmxGetWriteSleepTime(TaskHandle, float64*)</code><br>
	 * <i>native declaration : line 7182</i>
	 */
	// int DAQmxGetWriteSleepTime(Pointer taskHandle, DoubleBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetWriteSleepTime(TaskHandle, float64)</code><br>
	 * <i>native declaration : line 7183</i>
	 */
	// int DAQmxSetWriteSleepTime(Pointer taskHandle, double data);
	/**
	 * Original signature : <code>int32 DAQmxResetWriteSleepTime(TaskHandle)</code><br>
	 * <i>native declaration : line 7184</i>
	 */
	// int DAQmxResetWriteSleepTime(Pointer taskHandle);
	/**
	 * *** Set/Get functions for DAQmx_Write_DigitalLines_BytesPerChan ***<br>
	 * Original signature : <code>int32 DAQmxGetWriteDigitalLinesBytesPerChan(TaskHandle, uInt32*)</code><br>
	 * <i>native declaration : line 7186</i>
	 */
	// int DAQmxGetWriteDigitalLinesBytesPerChan(Pointer taskHandle, NativeLongByReference data);

	/**
	 * Uses value set AIMeasurementType<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanAISupportedMeasTypes(const char[], int32*, uInt32)</code><br>
	 * <i>native declaration : line 7191</i>
	 */
	// int DAQmxGetPhysicalChanAISupportedMeasTypes(byte physicalChannel[], IntBuffer data, NativeLong arraySizeInElements);
	/**
	 * Uses bits from enum TerminalConfigurationBits<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanAITermCfgs(const char[], int32*)</code><br>
	 * <i>native declaration : line 7194</i><br>
	 * @deprecated use the safer methods {@link #DAQmxGetPhysicalChanAITermCfgs(byte[], java.nio.IntBuffer)} and {@link #DAQmxGetPhysicalChanAITermCfgs(com.sun.jna.Pointer, com.sun.jna.ptr.IntByReference)} instead
	 */
	//Deprecated 
	// int DAQmxGetPhysicalChanAITermCfgs(Pointer physicalChannel, IntByReference data);
	/**
	 * Uses bits from enum TerminalConfigurationBits<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanAITermCfgs(const char[], int32*)</code><br>
	 * <i>native declaration : line 7194</i>
	 */
	// int DAQmxGetPhysicalChanAITermCfgs(byte physicalChannel[], IntBuffer data);

	/**
	 * *** Set/Get functions for DAQmx_PhysicalChan_AI_InputSrcs ***<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanAIInputSrcs(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 7196</i>
	 */
	// int DAQmxGetPhysicalChanAIInputSrcs(byte physicalChannel[], ByteBuffer data, NativeLong bufferSize);

	/**
	 * Uses value set AOOutputChannelType<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanAOSupportedOutputTypes(const char[], int32*, uInt32)</code><br>
	 * <i>native declaration : line 7199</i>
	 */
	// int DAQmxGetPhysicalChanAOSupportedOutputTypes(byte physicalChannel[], IntBuffer data, NativeLong arraySizeInElements);

	/**
	 * Uses value set AOPowerUpOutputBehavior<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanAOSupportedPowerUpOutputTypes(const char[], int32*, uInt32)</code><br>
	 * <i>native declaration : line 7202</i>
	 */
	// int DAQmxGetPhysicalChanAOSupportedPowerUpOutputTypes(byte physicalChannel[], IntBuffer data, NativeLong arraySizeInElements);

	/**
	 * Uses bits from enum TerminalConfigurationBits<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanAOTermCfgs(const char[], int32*)</code><br>
	 * <i>native declaration : line 7205</i>
	 */
	// int DAQmxGetPhysicalChanAOTermCfgs(byte physicalChannel[], IntBuffer data);

	/**
	 * *** Set/Get functions for DAQmx_PhysicalChan_AO_ManualControlEnable ***<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanAOManualControlEnable(const char[], bool32*)</code><br>
	 * <i>native declaration : line 7207</i>
	 */
	// int DAQmxGetPhysicalChanAOManualControlEnable(byte physicalChannel[], NativeLongByReference data);

	/**
	 * Original signature : <code>int32 DAQmxSetPhysicalChanAOManualControlEnable(const char[], bool32)</code><br>
	 * <i>native declaration : line 7208</i>
	 */
	// int DAQmxSetPhysicalChanAOManualControlEnable(byte physicalChannel[], NativeLong data);

	/**
	 * Original signature : <code>int32 DAQmxResetPhysicalChanAOManualControlEnable(const char[])</code><br>
	 * <i>native declaration : line 7209</i>
	 */
	// int DAQmxResetPhysicalChanAOManualControlEnable(byte physicalChannel[]);

	/**
	 * *** Set/Get functions for DAQmx_PhysicalChan_AO_ManualControl_ShortDetected ***<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanAOManualControlShortDetected(const char[], bool32*)</code><br>
	 * <i>native declaration : line 7211</i>
	 */
	// int DAQmxGetPhysicalChanAOManualControlShortDetected(byte physicalChannel[], NativeLongByReference data);

	/**
	 * *** Set/Get functions for DAQmx_PhysicalChan_AO_ManualControlAmplitude ***<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanAOManualControlAmplitude(const char[], float64*)</code><br>
	 * <i>native declaration : line 7213</i>
	 */
	// int DAQmxGetPhysicalChanAOManualControlAmplitude(byte physicalChannel[], DoubleBuffer data);

	/**
	 * *** Set/Get functions for DAQmx_PhysicalChan_AO_ManualControlFreq ***<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanAOManualControlFreq(const char[], float64*)</code><br>
	 * <i>native declaration : line 7215</i>
	 */
	// int DAQmxGetPhysicalChanAOManualControlFreq(byte physicalChannel[], DoubleBuffer data);

	/**
	 * *** Set/Get functions for DAQmx_AO_PowerAmp_ChannelEnable ***<br>
	 * Original signature : <code>int32 DAQmxGetAOPowerAmpChannelEnable(const char[], bool32*)</code><br>
	 * <i>native declaration : line 7217</i>
	 */
	// int DAQmxGetAOPowerAmpChannelEnable(byte physicalChannel[], NativeLongByReference data);

	/**
	 * Original signature : <code>int32 DAQmxSetAOPowerAmpChannelEnable(const char[], bool32)</code><br>
	 * <i>native declaration : line 7218</i>
	 */
	// int DAQmxSetAOPowerAmpChannelEnable(byte physicalChannel[], NativeLong data);

	/**
	 * Original signature : <code>int32 DAQmxResetAOPowerAmpChannelEnable(const char[])</code><br>
	 * <i>native declaration : line 7219</i>
	 */
	// int DAQmxResetAOPowerAmpChannelEnable(byte physicalChannel[]);

	/**
	 * *** Set/Get functions for DAQmx_AO_PowerAmp_ScalingCoeff ***<br>
	 * Original signature : <code>int32 DAQmxGetAOPowerAmpScalingCoeff(const char[], float64*, uInt32)</code><br>
	 * <i>native declaration : line 7221</i>
	 */
	// int DAQmxGetAOPowerAmpScalingCoeff(byte physicalChannel[], DoubleBuffer data, NativeLong arraySizeInElements);

	/**
	 * *** Set/Get functions for DAQmx_AO_PowerAmp_Overcurrent ***<br>
	 * Original signature : <code>int32 DAQmxGetAOPowerAmpOvercurrent(const char[], bool32*)</code><br>
	 * <i>native declaration : line 7223</i>
	 */
	// int DAQmxGetAOPowerAmpOvercurrent(byte physicalChannel[], NativeLongByReference data);

	/**
	 * *** Set/Get functions for DAQmx_AO_PowerAmp_Gain ***<br>
	 * Original signature : <code>int32 DAQmxGetAOPowerAmpGain(const char[], float64*)</code><br>
	 * <i>native declaration : line 7225</i>
	 */
	// int DAQmxGetAOPowerAmpGain(byte physicalChannel[], DoubleBuffer data);

	/**
	 * *** Set/Get functions for DAQmx_AO_PowerAmp_Offset ***<br>
	 * Original signature : <code>int32 DAQmxGetAOPowerAmpOffset(const char[], float64*)</code><br>
	 * <i>native declaration : line 7227</i>
	 */
	// int DAQmxGetAOPowerAmpOffset(byte physicalChannel[], DoubleBuffer data);

	/**
	 * *** Set/Get functions for DAQmx_PhysicalChan_DI_PortWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanDIPortWidth(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 7229</i>
	 */
	// int DAQmxGetPhysicalChanDIPortWidth(byte physicalChannel[], NativeLongByReference data);

	/**
	 * *** Set/Get functions for DAQmx_PhysicalChan_DI_SampClkSupported ***<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanDISampClkSupported(const char[], bool32*)</code><br>
	 * <i>native declaration : line 7231</i>
	 */
	// int DAQmxGetPhysicalChanDISampClkSupported(byte physicalChannel[], NativeLongByReference data);

	/**
	 * Uses value set AcquisitionType<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanDISampModes(const char[], int32*, uInt32)</code><br>
	 * <i>native declaration : line 7234</i>
	 */
	// int DAQmxGetPhysicalChanDISampModes(byte physicalChannel[], IntBuffer data, NativeLong arraySizeInElements);

	/**
	 * *** Set/Get functions for DAQmx_PhysicalChan_DI_ChangeDetectSupported ***<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanDIChangeDetectSupported(const char[], bool32*)</code><br>
	 * <i>native declaration : line 7236</i>
	 */
	// int DAQmxGetPhysicalChanDIChangeDetectSupported(byte physicalChannel[], NativeLongByReference data);
	/**
	 * *** Set/Get functions for DAQmx_PhysicalChan_DO_PortWidth ***<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanDOPortWidth(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 7238</i>
	 */
	// int DAQmxGetPhysicalChanDOPortWidth(byte physicalChannel[], NativeLongByReference data);

	/**
	 * *** Set/Get functions for DAQmx_PhysicalChan_DO_SampClkSupported ***<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanDOSampClkSupported(const char[], bool32*)</code><br>
	 * <i>native declaration : line 7240</i>
	 */
	// int DAQmxGetPhysicalChanDOSampClkSupported(byte physicalChannel[], NativeLongByReference data);

	/**
	 * Uses value set AcquisitionType<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanDOSampModes(const char[], int32*, uInt32)</code><br>
	 * <i>native declaration : line 7243</i>
	 */
	// int DAQmxGetPhysicalChanDOSampModes(byte physicalChannel[], IntBuffer data, NativeLong arraySizeInElements);

	/**
	 * Uses value set CIMeasurementType<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanCISupportedMeasTypes(const char[], int32*, uInt32)</code><br>
	 * <i>native declaration : line 7246</i>
	 */
	// int DAQmxGetPhysicalChanCISupportedMeasTypes(byte physicalChannel[], IntBuffer data, NativeLong arraySizeInElements);

	/**
	 * Uses value set COOutputType<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanCOSupportedOutputTypes(const char[], int32*, uInt32)</code><br>
	 * <i>native declaration : line 7249</i>
	 */
	// int DAQmxGetPhysicalChanCOSupportedOutputTypes(byte physicalChannel[], IntBuffer data, NativeLong arraySizeInElements);

	/**
	 * *** Set/Get functions for DAQmx_PhysicalChan_TEDS_MfgID ***<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanTEDSMfgID(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 7251</i>
	 */
	// int DAQmxGetPhysicalChanTEDSMfgID(byte physicalChannel[], NativeLongByReference data);

	/**
	 * *** Set/Get functions for DAQmx_PhysicalChan_TEDS_ModelNum ***<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanTEDSModelNum(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 7253</i>
	 */
	// int DAQmxGetPhysicalChanTEDSModelNum(byte physicalChannel[], NativeLongByReference data);

	/**
	 * *** Set/Get functions for DAQmx_PhysicalChan_TEDS_SerialNum ***<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanTEDSSerialNum(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 7255</i>
	 */
	// int DAQmxGetPhysicalChanTEDSSerialNum(byte physicalChannel[], NativeLongByReference data);

	/**
	 * *** Set/Get functions for DAQmx_PhysicalChan_TEDS_VersionNum ***<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanTEDSVersionNum(const char[], uInt32*)</code><br>
	 * <i>native declaration : line 7257</i>
	 */
	// int DAQmxGetPhysicalChanTEDSVersionNum(byte physicalChannel[], NativeLongByReference data);

	/**
	 * *** Set/Get functions for DAQmx_PhysicalChan_TEDS_VersionLetter ***<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanTEDSVersionLetter(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 7259</i>
	 */
	// int DAQmxGetPhysicalChanTEDSVersionLetter(byte physicalChannel[], ByteBuffer data, NativeLong bufferSize);

	/**
	 * *** Set/Get functions for DAQmx_PhysicalChan_TEDS_BitStream ***<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanTEDSBitStream(const char[], uInt8*, uInt32)</code><br>
	 * <i>native declaration : line 7261</i>
	 */
	// int DAQmxGetPhysicalChanTEDSBitStream(byte physicalChannel[], ByteBuffer data, NativeLong arraySizeInElements);

	/**
	 * *** Set/Get functions for DAQmx_PhysicalChan_TEDS_TemplateIDs ***<br>
	 * Original signature : <code>int32 DAQmxGetPhysicalChanTEDSTemplateIDs(const char[], uInt32*, uInt32)</code><br>
	 * <i>native declaration : line 7263</i>
	 */
	// int DAQmxGetPhysicalChanTEDSTemplateIDs(byte physicalChannel[], NativeLongByReference data, NativeLong arraySizeInElements);

	/**
	 * *** Set/Get functions for DAQmx_PersistedTask_Author ***<br>
	 * Original signature : <code>int32 DAQmxGetPersistedTaskAuthor(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 7267</i>
	 */
	// int DAQmxGetPersistedTaskAuthor(byte taskName[], ByteBuffer data, NativeLong bufferSize);

	/**
	 * *** Set/Get functions for DAQmx_PersistedTask_AllowInteractiveEditing ***<br>
	 * Original signature : <code>int32 DAQmxGetPersistedTaskAllowInteractiveEditing(const char[], bool32*)</code><br>
	 * <i>native declaration : line 7269</i>
	 */
	// int DAQmxGetPersistedTaskAllowInteractiveEditing(byte taskName[], NativeLongByReference data);

	/**
	 * *** Set/Get functions for DAQmx_PersistedTask_AllowInteractiveDeletion ***<br>
	 * Original signature : <code>int32 DAQmxGetPersistedTaskAllowInteractiveDeletion(const char[], bool32*)</code><br>
	 * <i>native declaration : line 7271</i>
	 */
	// int DAQmxGetPersistedTaskAllowInteractiveDeletion(byte taskName[], NativeLongByReference data);

	/**
	 * *** Set/Get functions for DAQmx_PersistedChan_Author ***<br>
	 * Original signature : <code>int32 DAQmxGetPersistedChanAuthor(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 7275</i>
	 */
	// int DAQmxGetPersistedChanAuthor(byte channel[], ByteBuffer data, NativeLong bufferSize);

	/**
	 * *** Set/Get functions for DAQmx_PersistedChan_AllowInteractiveEditing ***<br>
	 * Original signature : <code>int32 DAQmxGetPersistedChanAllowInteractiveEditing(const char[], bool32*)</code><br>
	 * <i>native declaration : line 7277</i>
	 */
	// int DAQmxGetPersistedChanAllowInteractiveEditing(byte channel[], NativeLongByReference data);

	/**
	 * *** Set/Get functions for DAQmx_PersistedChan_AllowInteractiveDeletion ***<br>
	 * Original signature : <code>int32 DAQmxGetPersistedChanAllowInteractiveDeletion(const char[], bool32*)</code><br>
	 * <i>native declaration : line 7279</i>
	 */
	// int DAQmxGetPersistedChanAllowInteractiveDeletion(byte channel[], NativeLongByReference data);

	/**
	 * *** Set/Get functions for DAQmx_PersistedScale_Author ***<br>
	 * Original signature : <code>int32 DAQmxGetPersistedScaleAuthor(const char[], char*, uInt32)</code><br>
	 * <i>native declaration : line 7283</i>
	 */
	// int DAQmxGetPersistedScaleAuthor(byte scaleName[], ByteBuffer data, NativeLong bufferSize);

	/**
	 * *** Set/Get functions for DAQmx_PersistedScale_AllowInteractiveEditing ***<br>
	 * Original signature : <code>int32 DAQmxGetPersistedScaleAllowInteractiveEditing(const char[], bool32*)</code><br>
	 * <i>native declaration : line 7285</i>
	 */
	// int DAQmxGetPersistedScaleAllowInteractiveEditing(byte scaleName[], NativeLongByReference data);

	/**
	 * *** Set/Get functions for DAQmx_PersistedScale_AllowInteractiveDeletion ***<br>
	 * Original signature : <code>int32 DAQmxGetPersistedScaleAllowInteractiveDeletion(const char[], bool32*)</code><br>
	 * <i>native declaration : line 7287</i>
	 */
	// int DAQmxGetPersistedScaleAllowInteractiveDeletion(byte scaleName[], NativeLongByReference data);

	/**
	 * Obsolete - always returns 0<br>
	 * Original signature : <code>int32 DAQmxGetSampClkTimingResponseMode(TaskHandle, int32*)</code><br>
	 * <i>native declaration : line 7292</i>
	 */
	// int DAQmxGetSampClkTimingResponseMode(Pointer taskHandle, IntBuffer data);
	/**
	 * Original signature : <code>int32 DAQmxSetSampClkTimingResponseMode(TaskHandle, int32)</code><br>
	 * <i>native declaration : line 7293</i>
	 */
	// int DAQmxSetSampClkTimingResponseMode(Pointer taskHandle, int data);
	/**
	 * Original signature : <code>int32 DAQmxResetSampClkTimingResponseMode(TaskHandle)</code><br>
	 * <i>native declaration : line 7294</i>
	 */
	// int DAQmxResetSampClkTimingResponseMode(Pointer taskHandle);
}
